

----STARTUP---- (23 October 2020 19:11:32) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


TestSuite subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRoverTests category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:15:53'!
TestSuite subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:16:26'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!
!MarsRoverTests class methodsFor: 'nil' stamp: 'EMI 10/23/2020 19:16:57'!
test01
! !
!MarsRoverTests class methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:19:17' prior: 50869426!
test01
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.! !
!MarsRoverTests class methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:23:22' prior: 50869430!
test01
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:24:00'!
test01
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests class #test01 stamp: 'EMI 10/23/2020 19:24:00'!
test01
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!

TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRoverTests category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:24:22'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:24:25'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:24:25'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'EMI 10/23/2020 19:24:57'!
at: aPoint withOrientation: aCharacter 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint withOrientation: aCharacter ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'EMI 10/23/2020 19:25:26' prior: 50869476!
at: aPoint withOrientation: aCardinal
	^self new initializeAt: aPoint withOrientation: aCardinal. ! !

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:25:59'!
Object subclass: #MarsRover
	instanceVariableNames: 'point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:25:59'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinal'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!
!MarsRover methodsFor: 'initalize' stamp: 'EMI 10/23/2020 19:25:59'!
initializeAt: aPoint withOrientation: aCardinal 
	self shouldBeImplemented.
	point := aPoint.
	cardinal := aCardinal.! !
!MarsRover methodsFor: 'initalize' stamp: 'EMI 10/23/2020 19:26:13' prior: 50869507!
initializeAt: aPoint withOrientation: aCardinal 
	point _ aPoint.
	cardinal _ aCardinal.! !

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:26:40'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinal position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:26:42'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinal position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!
!MarsRover methodsFor: 'initalize' stamp: 'EMI 10/23/2020 19:26:37' prior: 50869514!
initializeAt: aPoint withOrientation: aCardinal 
	position _ aPoint.
	orientation _ aCardinal.! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:27:12'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'EMI 10/23/2020 19:27:26'!
position
	self shouldBeImplemented.
	^position! !
!MarsRover methodsFor: 'accessing' stamp: 'EMI 10/23/2020 19:27:32' prior: 50869544!
position
	^position! !
!MarsRover methodsFor: 'accessing' stamp: 'EMI 10/23/2020 19:28:01'!
orientation
	self shouldBeImplemented.
	^orientation! !
!MarsRover methodsFor: 'accessing' stamp: 'EMI 10/23/2020 19:28:06' prior: 50869552!
orientation
	^orientation.! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:28:21'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:28:27'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 19:28:40'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:29:46'!
test02
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:30:34' prior: 50869578!
test02
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: ''.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:30:53' prior: 50869586!
test02
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: ''.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:30:59'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:30:59'!
ERROR!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:30:59'!
ERROR!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:32:54'!
receiveInstructions: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:33:18' prior: 50869611!
receiveInstructions: anInstructionsString
	^self.! !

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:33:32'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:33:34'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:33:34'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:35:19'!
test03
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'f'.
	self assert: (rover position = (0@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:35:27'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:35:27'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:35:27'!
FAILURE!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:35:27'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:37:06' prior: 50869616!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty ifTrue:[^self.].
	position _ 0@1.
	^self.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:37:31' prior: 50869647!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty ifFalse:[position _ 0@1.].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:37:44'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:37:44'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:37:44'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:38:11'!
test04
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'b'.
	self assert: (rover position = (2@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:38:19'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:38:19'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:38:19'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:38:19'!
FAILURE!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:38:19'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:39:33' prior: 50869654!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString = 'f' ifTrue: [position _ 0@1.] ifFalse: [position _ 2@1].
		].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:39:41'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:39:41'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:39:41'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:39:41'!
PASSED!

----SNAPSHOT----(23 October 2020 19:39:50) CuisUniversity-4383.image priorSource: 17207870!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:41:15'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:41:15'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:41:15'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:41:15'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:41:38'!
test05
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:41:44'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:41:44'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:41:44'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:41:44'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:41:44'!
FAILURE!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:41:44'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:44:13' prior: 50869689!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString = 'f' ifTrue: [position _ 0@1.].
		anInstructionsString = 'b' ifTrue: [position _ 2@1].
		anInstructionsString = 'l' ifTrue: [orientation _ $W].
	].! !

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:44:28'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:44:31'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:44:31'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:44:31'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:44:31'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:44:31'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:44:41' prior: 50869720!
test05
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'r'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $E).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:41:38' prior: 50869769!
test05
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:45:11'!
test06
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'r'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $E).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:45:19'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:45:19'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:45:19'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:45:20'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:45:20'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 19:45:20'!
FAILURE!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 19:45:20'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:45:55' prior: 50869743!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString = 'f' ifTrue: [position _ 0@1.].
		anInstructionsString = 'b' ifTrue: [position _ 2@1].
		anInstructionsString = 'l' ifTrue: [orientation _ $W].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:46:06'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:46:06'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:46:06'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:46:06'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:46:06'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 19:46:06'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:49:38'!
test07
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'v'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:51:04' prior: 50869840!
test07
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'fb'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 19:51:12'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:53:43' prior: 50869849!
test07
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (3@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:53:49'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:53:49'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:53:49'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:53:49'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:53:49'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 19:53:49'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 19:53:49'!
FAILURE!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 19:53:49'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 19:54:50' prior: 50869813!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString = 'f' ifTrue: [position _ 0@1.].
		anInstructionsString = 'ff' ifTrue: [position _ -1@1.].
		anInstructionsString = 'b' ifTrue: [position _ 2@1].
		anInstructionsString = 'l' ifTrue: [orientation _ $W].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 19:54:56'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 19:55:08' prior: 50869875!
test07
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 19:55:11'!
PASSED!

----End fileIn of /home/doraserver/CuisUniversity/Packages/TerseGuide.pck.st----!

a _ 1@1.!

ea _ a x.!

ea _ a x - 1.!

ea _ a x.!

ea _ a x - 1.!

a _ 1@1.
ea _ a x.
ea _ a x - 1.
a!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:03:31' prior: 50869903!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
		].
		anInstructionsString = 'b' ifTrue: [position _ 2@1].
		anInstructionsString = 'l' ifTrue: [orientation _ $W].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:03:41'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 20:04:00'!
test08
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'bb'.
	self assert: (rover position = (3@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:04:04'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:04:04'!
FAILURE!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:04:04'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:04:43' prior: 50872885!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
		].
		anInstructionsString = 'l' ifTrue: [orientation _ $W].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:04:52'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 20:05:19'!
test09
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:05:26'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:05:26'!
FAILURE!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:05:26'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:11:39' prior: 50872948!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue:[
				orientation = $N ifTrue:[^orientation _ $W].	
				orientation = $S ifTrue:[^orientation _ $E].	
				orientation = $W ifTrue:[^orientation _ $S].	
				orientation = $E ifTrue:[^orientation _ $N].	
			].
		].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:11:51'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:13:28' prior: 50873016!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue:[
				orientation = $N ifTrue:[orientation _ $W].	
				orientation = $S ifTrue:[orientation _ $E].	
				orientation = $W ifTrue:[orientation _ $S].	
				orientation = $E ifTrue:[orientation _ $N].	
			].
		].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:16:54' prior: 50873039!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
		].
		anInstructionsString = 'l' ifTrue: [orientation _ $W].
		anInstructionsString = 'll' ifTrue: [orientation _ $S].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:17:05'!
PASSED!

----SNAPSHOT----(23 October 2020 20:17:10) CuisUniversity-4383.image priorSource: 17217793!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation rotationsCounterClockwise'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 20:21:52'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation rotationsCounterClockwise'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!
!MarsRover methodsFor: 'initialize' stamp: 'EMI 10/23/2020 20:22:54' prior: 50869536!
initializeAt: aPoint withOrientation: aCardinal 
	position _ aPoint.
	orientation _ aCardinal.
	rotationsCounterClockwise _ Dictionary new.
	rotationsCounterClockwise at:$N put:$W.
	rotationsCounterClockwise at:$W put:$S.
	rotationsCounterClockwise at:$S put:$E.
	rotationsCounterClockwise at:$E put:$N.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:23:52' prior: 50873060!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
		].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:23:56'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 20:24:20'!
test10
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 20:24:42' prior: 50873167!
test10
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'rr'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:24:45'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/23/2020 20:24:45'!
FAILURE!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/23/2020 20:24:45'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:25:13' prior: 50873129!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
		].
		anInstructionsString = 'r' ifTrue: [orientation _ $E].
		anInstructionsString = 'rr' ifTrue: [orientation _ $S].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/23/2020 20:25:18'!
PASSED!

----SNAPSHOT----(23 October 2020 20:25:24) CuisUniversity-4383.image priorSource: 17326326!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation rotationsCounterClockwise rotationsClockwise'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!

!classDefinition: #MarsRover category: 'EjercicioMarsRover' stamp: 'EMI 10/23/2020 20:25:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation rotationsCounterClockwise rotationsClockwise'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'EjercicioMarsRover'!
!MarsRover methodsFor: 'initialize' stamp: 'EMI 10/23/2020 20:26:42' prior: 50873116!
initializeAt: aPoint withOrientation: aCardinal 
	position _ aPoint.
	orientation _ aCardinal.
	
	rotationsCounterClockwise _ Dictionary new.
	rotationsCounterClockwise at:$N put:$W.
	rotationsCounterClockwise at:$W put:$S.
	rotationsCounterClockwise at:$S put:$E.
	rotationsCounterClockwise at:$E put:$N.
	
	rotationsClockwise _ Dictionary new.
	rotationsClockwise at:$N put:$E.
	rotationsClockwise at:$E put:$S.
	rotationsClockwise at:$S put:$W.
	rotationsClockwise at:$W put:$N.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/23/2020 20:27:06' prior: 50873211!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/23/2020 20:27:16'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 20:29:58'!
test11
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'rr'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/23/2020 20:30:06' prior: 50873331!
test11
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'er'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/23/2020 20:30:09'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/23/2020 20:30:09'!
FAILURE!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/23/2020 20:30:09'!
FAILURE!

----SNAPSHOT----(23 October 2020 20:30:26) CuisUniversity-4383.image priorSource: 17331265!

----QUIT----(23 October 2020 20:32:27) CuisUniversity-4383.image priorSource: 17335252!

----STARTUP---- (24 October 2020 16:49:07) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:14:32'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:14:32'!
FAILURE!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:14:32'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:16:35' prior: 50873290!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !

----SNAPSHOT----(24 October 2020 17:16:52) CuisUniversity-4383.image priorSource: 17335345!

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:16:55'!
PASSED!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:21:11'!
xxx: anInstructionCharacter
	anInstructionCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
	anInstructionCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
	anInstructionCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
	anInstructionCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:25:08'!
yyy
	position _ ((position x + 1)@position y)
! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 17:26:08'!
test12
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $W.
	rover receiveInstructions: 'f'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:26:12'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:26:12'!
FAILURE!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:26:12'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:30:23' prior: 50873416!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [
				orientation = $W
				ifTrue:[
					position _ (position x@(position y - 1))
					] 
				ifFalse: [
					position _ ((position x -1)@position y)
					].
				].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:30:40'!
PASSED!

a _ 1@1.!

a rotatedBy: (90 degreesToRadians).!

a!

a rotatedBy: (90 degreesToRadians).!

a rotatedBy: (45 degreesToRadians).!

45 degreesToRadians!

a rotatedBy: (-90 degreesToRadians).!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:38:07' prior: 50873524!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [
				orientation = $W ifTrue:[position _ (position x@(position y - 1))] .
				orientation = $N ifTrue: [position _ ((position x -1)@position y)].
				].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:39:04' prior: 50873582!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [
				orientation = $W ifTrue:[position _ (position x@(position y - 1))] .
				orientation = $N ifTrue: [position _ ((position x -1)@position y)].
				orientation = $S ifTrue: [position _ ((position x + 1)@position y)].
				orientation = $E ifTrue: [position _ (position x@(position y +1))].
				].
			aCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:39:12'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 17:40:11' prior: 50873484!
test12
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:40:15'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 17:40:43'!
test13
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'rb'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $E).! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:40:49'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 17:40:49'!
FAILURE!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 17:40:49'!
FAILURE!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:41:44' prior: 50873604!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [
				orientation = $W ifTrue:[position _ (position x@(position y - 1))] .
				orientation = $N ifTrue: [position _ ((position x -1)@position y)].
				orientation = $S ifTrue: [position _ ((position x + 1)@position y)].
				orientation = $E ifTrue: [position _ (position x@(position y +1))].
				].
			aCharacter = $b ifTrue: [
				orientation = $W ifTrue:[position _ (position x@(position y + 1))] .
				orientation = $N ifTrue: [position _ ((position x +1)@position y)].
				orientation = $S ifTrue: [position _ ((position x - 1)@position y)].
				orientation = $E ifTrue: [position _ (position x@(position y - 1))].
				].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 17:41:54'!
PASSED!

----SNAPSHOT----(24 October 2020 17:42:59) CuisUniversity-4383.image priorSource: 17337078!

----SNAPSHOT----(24 October 2020 17:43:48) CuisUniversity-4383.image priorSource: 17348992!

!methodRemoval: MarsRover #xxx: stamp: 'EMI 10/24/2020 17:44:05'!
xxx: anInstructionCharacter
	anInstructionCharacter = $f ifTrue: [position _ ((position x -1)@position y)].
	anInstructionCharacter = $b ifTrue: [position _ ((position x +1)@position y)].
	anInstructionCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
	anInstructionCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].!

!methodRemoval: MarsRover #yyy stamp: 'EMI 10/24/2020 17:44:09'!
yyy
	position _ ((position x + 1)@position y)
!

----SNAPSHOT----(24 October 2020 17:44:13) CuisUniversity-4383.image priorSource: 17349085!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:50:01'!
xxx: anInstructionsCharacter
	| pasoSobreEje |
	pasoSobreEje _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[position _ (position x@(position y - pasoSobreEje ))] .
	orientation = $N ifTrue: [position _ ((position x - pasoSobreEje )@position y)].
	orientation = $S ifTrue: [position _ ((position x + pasoSobreEje )@position y)].
	orientation = $E ifTrue: [position _ (position x@(position y +pasoSobreEje ))].! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:51:43'!
oneStep: anInstructionsCharacter
	| pasoSobreEje |
	pasoSobreEje _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[position _ (position x@(position y - pasoSobreEje ))] .
	orientation = $N ifTrue: [position _ ((position x - pasoSobreEje )@position y)].
	orientation = $S ifTrue: [position _ ((position x + pasoSobreEje )@position y)].
	orientation = $E ifTrue: [position _ (position x@(position y +pasoSobreEje ))].! !

!methodRemoval: MarsRover #xxx: stamp: 'EMI 10/24/2020 17:51:43'!
xxx: anInstructionsCharacter
	| pasoSobreEje |
	pasoSobreEje _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[position _ (position x@(position y - pasoSobreEje ))] .
	orientation = $N ifTrue: [position _ ((position x - pasoSobreEje )@position y)].
	orientation = $S ifTrue: [position _ ((position x + pasoSobreEje )@position y)].
	orientation = $E ifTrue: [position _ (position x@(position y +pasoSobreEje ))].!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:54:49'!
oneStepFoward
	self oneStep: $f.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:54:59'!
oneStepBackwards
	self oneStep: $b.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 17:55:47' prior: 50873741!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [self oneStepFoward.].
			aCharacter = $b ifTrue: [self oneStepBackwards.].
			aCharacter = $l ifTrue: [orientation _ rotationsCounterClockwise at: orientation ].
			aCharacter = $r ifTrue: [orientation _ rotationsClockwise at: orientation ].
		].
	].! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 18:00:02'!
PASSED!
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 18:03:07'!
rotate: aRotationsDictionary
	orientation _ aRotationsDictionary at: orientation.
! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 18:03:32'!
rotateLeft
	self rotate: rotationsCounterClockwise.
! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 18:03:42'!
rotateRight
	self rotate: rotationsClockwise.
! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 18:04:29' prior: 50873891!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [self oneStepFoward.].
			aCharacter = $b ifTrue: [self oneStepBackwards.].
			aCharacter = $l ifTrue: [self rotateLeft.].
			aCharacter = $r ifTrue: [self rotateRight.].
		].
	].! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 18:05:03' prior: 50873954!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^self].
			aCharacter = $f ifTrue: [self oneStepFoward.].
			aCharacter = $b ifTrue: [self oneStepBackwards.].
			aCharacter = $l ifTrue: [self rotateLeft.].
			aCharacter = $r ifTrue: [self rotateRight.].
		].
	].! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/24/2020 18:11:01' prior: 50873850!
oneStep: anInstructionsCharacter
	| pasoSobreEje |
	pasoSobreEje _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[position _ (position x@(position y - pasoSobreEje ))] .
	orientation = $N ifTrue: [position _ ((position x - pasoSobreEje )@position y)].
	orientation = $S ifTrue: [position _ ((position x + pasoSobreEje )@position y)].
	orientation = $E ifTrue: [position _ (position x@(position y +pasoSobreEje ))].! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:14:53'!
test14
	self should: [MarsRover at: 1@1 withOrientation: $Z.] raise: Error.
	
! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:17:21' prior: 50874003!
test14
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
! !
!MarsRover class methodsFor: 'nil' stamp: 'EMI 10/24/2020 18:18:37'!
invalidOrientationErrorMessage
	^'Invalid orientation, should be #N, #S, #W or #E'.! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 18:18:49'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'EMI 10/24/2020 18:18:49'!
FAILURE!

!testRun: #MarsRoverTests #test14 stamp: 'EMI 10/24/2020 18:18:49'!
FAILURE!
!MarsRover methodsFor: 'initialize' stamp: 'EMI 10/24/2020 18:19:26' prior: 50873272!
initializeAt: aPoint withOrientation: aCardinal 
	position _ aPoint.

	orientation _ aCardinal.
	
	rotationsCounterClockwise _ Dictionary new.
	rotationsCounterClockwise at:$N put:$W.
	rotationsCounterClockwise at:$W put:$S.
	rotationsCounterClockwise at:$S put:$E.
	rotationsCounterClockwise at:$E put:$N.
	
	rotationsClockwise _ Dictionary new.
	rotationsClockwise at:$N put:$E.
	rotationsClockwise at:$E put:$S.
	rotationsClockwise at:$S put:$W.
	rotationsClockwise at:$W put:$N.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:19:37' prior: 50874018!
invalidOrientationErrorMessage
	^'Invalid orientation, should be $N, $S, $W or $E'.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:20:02' prior: 50874079!
invalidOrientationErrorMessage
	^'Invalid orientation, should be N, S, W or E'.! !
!MarsRover methodsFor: 'initialize' stamp: 'EMI 10/24/2020 18:22:30' prior: 50874060!
initializeAt: aPoint withOrientation: aCardinal 
	position _ aPoint.
	(#($N $W $S $E) includes: aCardinal) ifFalse: [^self error: self class invalidOrientationErrorMessage.].
	orientation _ aCardinal.
	
	rotationsCounterClockwise _ Dictionary new.
	rotationsCounterClockwise at:$N put:$W.
	rotationsCounterClockwise at:$W put:$S.
	rotationsCounterClockwise at:$S put:$E.
	rotationsCounterClockwise at:$E put:$N.
	
	rotationsClockwise _ Dictionary new.
	rotationsClockwise at:$N put:$E.
	rotationsClockwise at:$E put:$S.
	rotationsClockwise at:$S put:$W.
	rotationsClockwise at:$W put:$N.! !
!MarsRover methodsFor: 'initialize' stamp: 'EMI 10/24/2020 18:22:49' prior: 50874091!
initializeAt: aPoint withOrientation: aCardinal 
	position _ aPoint.
	(#($N $W $S $E) includes: aCardinal) ifFalse: [^Error signal: self class invalidOrientationErrorMessage.].
	orientation _ aCardinal.
	
	rotationsCounterClockwise _ Dictionary new.
	rotationsCounterClockwise at:$N put:$W.
	rotationsCounterClockwise at:$W put:$S.
	rotationsCounterClockwise at:$S put:$E.
	rotationsCounterClockwise at:$E put:$N.
	
	rotationsClockwise _ Dictionary new.
	rotationsClockwise at:$N put:$E.
	rotationsClockwise at:$E put:$S.
	rotationsClockwise at:$S put:$W.
	rotationsClockwise at:$W put:$N.! !

!testRun: #MarsRoverTests #test01 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test09 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test11 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test12 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'EMI 10/24/2020 18:23:26'!
PASSED!

----SNAPSHOT----(24 October 2020 18:28:37) CuisUniversity-4383.image priorSource: 17349735!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:31:02'!
test01MarsRoverCreatedCorrectPositionAndOrientation
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test01 stamp: 'EMI 10/24/2020 18:31:02'!
test01
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:33:56'!
test01MarsRoverGivenNoInstructionsDoesNotMoveNorRotate
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test01MarsRoverCreatedCorrectPositionAndOrientation stamp: 'EMI 10/24/2020 18:33:56'!
test01MarsRoverCreatedCorrectPositionAndOrientation
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:34:39'!
test02MarsRoverGivenEmptyInstructionsDoesNotMoveNorRotate
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: ''.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test02 stamp: 'EMI 10/24/2020 18:34:39'!
test02
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: ''.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:37:40'!
test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: ''.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test02MarsRoverGivenEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 18:37:40'!
test02MarsRoverGivenEmptyInstructionsDoesNotMoveNorRotate
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: ''.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:37:56'!
test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test01MarsRoverGivenNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 18:37:56'!
test01MarsRoverGivenNoInstructionsDoesNotMoveNorRotate
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:39:03'!
test03MarsRoverMovesOneStep
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'f'.
	self assert: (rover position = (0@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test03 stamp: 'EMI 10/24/2020 18:39:03'!
test03
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'f'.
	self assert: (rover position = (0@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:39:30'!
test05MarsRoverRotates90Degrees
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test05 stamp: 'EMI 10/24/2020 18:39:30'!
test05
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:40:02'!
test07MarsRoverMovesMoreThanOneStep
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test07 stamp: 'EMI 10/24/2020 18:40:02'!
test07
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:40:58'!
test09MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!methodRemoval: MarsRoverTests #test09 stamp: 'EMI 10/24/2020 18:40:58'!
test09
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:43:44'!
test11MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'er'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test11 stamp: 'EMI 10/24/2020 18:43:44'!
test11
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'er'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:47:14'!
test12MarsRoveRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test12 stamp: 'EMI 10/24/2020 18:47:14'!
test12
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:47:28'!
test12MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test12MarsRoveRotatesAndMovesOneStepOrMore stamp: 'EMI 10/24/2020 18:47:28'!
test12MarsRoveRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'EMI 10/24/2020 18:49:04'!
test14CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
! !

!methodRemoval: MarsRoverTests #test14 stamp: 'EMI 10/24/2020 18:49:04'!
test14
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
!

----SNAPSHOT----(24 October 2020 18:49:11) CuisUniversity-4383.image priorSource: 17360550!

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverRotates90Degrees stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test09MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test10 stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test11MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test12MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

!testRun: #MarsRoverTests #test14CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/24/2020 18:49:15'!
PASSED!

----SNAPSHOT----(24 October 2020 18:50:08) CuisUniversity-4383.image priorSource: 17368306!

----SNAPSHOT----(24 October 2020 18:51:54) CuisUniversity-4383.image priorSource: 17369809!
!MarsRover methodsFor: 'initialize' stamp: 'EMI 10/24/2020 18:54:29' prior: 50874113!
initializeAt: aPoint withOrientation: aCardinalCharacter 
	position _ aPoint.
	(#($N $W $S $E) includes: aCardinalCharacter) ifFalse: [^Error signal: self class invalidOrientationErrorMessage.].
	orientation _ aCardinalCharacter.
	
	rotationsCounterClockwise _ Dictionary new.
	rotationsCounterClockwise at:$N put:$W.
	rotationsCounterClockwise at:$W put:$S.
	rotationsCounterClockwise at:$S put:$E.
	rotationsCounterClockwise at:$E put:$N.
	
	rotationsClockwise _ Dictionary new.
	rotationsClockwise at:$N put:$E.
	rotationsClockwise at:$E put:$S.
	rotationsClockwise at:$S put:$W.
	rotationsClockwise at:$W put:$N.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'EMI 10/24/2020 18:54:49' prior: 50869486!
at: aPoint withOrientation: aCardinalCharacter
	^self new initializeAt: aPoint withOrientation: aCardinalCharacter. ! !

----SNAPSHOT----(24 October 2020 18:57:33) CuisUniversity-4383.image priorSource: 17369902!
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:00:02' prior: 50873949!
rotateRight
	self rotate: rotationsClockwise.
! !

----SNAPSHOT----(24 October 2020 19:00:25) CuisUniversity-4383.image priorSource: 17370967!

!methodRemoval: MarsRoverTests #test04 stamp: 'EMI 10/24/2020 19:00:39'!
test04
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'b'.
	self assert: (rover position = (2@1)).
	self assert: (rover orientation = $N).!

!methodRemoval: MarsRoverTests #test06 stamp: 'EMI 10/24/2020 19:00:43'!
test06
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'r'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $E).!

!methodRemoval: MarsRoverTests #test08 stamp: 'EMI 10/24/2020 19:00:51'!
test08
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'bb'.
	self assert: (rover position = (3@1)).
	self assert: (rover orientation = $N).!

!methodRemoval: MarsRoverTests #test10 stamp: 'EMI 10/24/2020 19:00:57'!
test10
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'rr'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!

!methodRemoval: MarsRoverTests #test13 stamp: 'EMI 10/24/2020 19:01:05'!
test13
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'rb'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $E).!

----SNAPSHOT----(24 October 2020 19:01:19) CuisUniversity-4383.image priorSource: 17371217!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/24/2020 19:01:47'!
test04MarsRoverRotates90Degrees
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test05MarsRoverRotates90Degrees stamp: 'EMI 10/24/2020 19:01:47'!
test05MarsRoverRotates90Degrees
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/24/2020 19:01:55'!
test05MarsRoverMovesMoreThanOneStep
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test07MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/24/2020 19:01:55'!
test07MarsRoverMovesMoreThanOneStep
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/24/2020 19:02:06'!
test06MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!methodRemoval: MarsRoverTests #test09MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/24/2020 19:02:06'!
test09MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/24/2020 19:02:16'!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'er'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test11MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/24/2020 19:02:16'!
test11MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'er'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/24/2020 19:02:25'!
test08MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test12MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/24/2020 19:02:25'!
test12MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/24/2020 19:02:39'!
test09CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
! !

!methodRemoval: MarsRoverTests #test14CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/24/2020 19:02:39'!
test14CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
!

----SNAPSHOT----(24 October 2020 19:02:50) CuisUniversity-4383.image priorSource: 17372583!
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:12:13'!
moveOnAxisX: offX andAxisY: offY
	position _ position + (offX@offY).
! !
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:12:41' prior: 50874668!
moveOnAxisX: aXAxisOffset andAxisY: offY
	position _ position + (aXAxisOffset@offY).
! !
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:13:13' prior: 50874674!
moveOnAxisX: aXAxisOffset andAxisY: aYAxisOffset
	position _ position + (aXAxisOffset@aYAxisOffset).
! !
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:17:12' prior: 50873986!
oneStep: anInstructionsCharacter
	| pasoSobreEje |
	pasoSobreEje _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[self moveOnAxisX: 0 andAxisY: pasoSobreEje negated] .
	orientation = $N ifTrue: [self moveOnAxisX: pasoSobreEje negated andAxisY: 0 ].
	orientation = $S ifTrue: [self moveOnAxisX: pasoSobreEje andAxisY: 0].
	orientation = $E ifTrue: [self moveOnAxisX: 0 andAxisY: pasoSobreEje].
! !

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/24/2020 19:17:22'!
PASSED!
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:18:04' prior: 50874687!
oneStep: anInstructionsCharacter
	| pasoSobreEje |
	pasoSobreEje _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[self moveOnAxisX: 0 andAxisY: pasoSobreEje negated].
	orientation = $N ifTrue: [self moveOnAxisX: pasoSobreEje negated andAxisY: 0 ].
	orientation = $S ifTrue: [self moveOnAxisX: pasoSobreEje andAxisY: 0].
	orientation = $E ifTrue: [self moveOnAxisX: 0 andAxisY: pasoSobreEje].
! !
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/24/2020 19:18:27' prior: 50874736!
oneStep: anInstructionsCharacter
	| stepOverAxis |
	stepOverAxis _ anInstructionsCharacter = $f ifTrue:[1] ifFalse:[-1].
	orientation = $W ifTrue:[self moveOnAxisX: 0 andAxisY: stepOverAxis negated].
	orientation = $N ifTrue: [self moveOnAxisX: stepOverAxis negated andAxisY: 0 ].
	orientation = $S ifTrue: [self moveOnAxisX: stepOverAxis andAxisY: 0].
	orientation = $E ifTrue: [self moveOnAxisX: 0 andAxisY: stepOverAxis].
! !

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/24/2020 19:22:11'!
PASSED!

----SNAPSHOT----(24 October 2020 19:23:21) CuisUniversity-4383.image priorSource: 17376452!

----QUIT----(24 October 2020 19:23:31) CuisUniversity-4383.image priorSource: 17380813!

----STARTUP---- (26 October 2020 08:52:34) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!MarsRover class methodsFor: 'error messages' stamp: 'EMI 10/26/2020 08:53:48'!
invalidInstructionErrorMessage
	^'Invalid instruction detected'.! !
!MarsRover methodsFor: 'instructions' stamp: 'EMI 10/26/2020 08:54:32' prior: 50873970!
receiveInstructions: anInstructionsString
	anInstructionsString isEmpty 
	ifFalse:[
		anInstructionsString do: [:aCharacter |
			(#($f $b $l $r) includes: aCharacter) ifFalse:[^Error signal: self class invalidInstructionErrorMessage ].
			aCharacter = $f ifTrue: [self oneStepFoward.].
			aCharacter = $b ifTrue: [self oneStepBackwards.].
			aCharacter = $l ifTrue: [self rotateLeft.].
			aCharacter = $r ifTrue: [self rotateRight.].
		].
	].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 08:56:00' prior: 50874604!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	
	self should: [rover receiveInstructions: 'er'.] 
	raise: Error 
	withExceptionDo: [
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $N)
				].		! !

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 08:56:03'!
ERROR!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 08:56:03'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 08:56:03'!
ERROR!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 08:56:22' prior: 50874832!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	
	self should: [rover receiveInstructions: 'er'.] 
	raise: Error 
	withExceptionDo: [:anError |
		
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $N)
				].		! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 08:57:24' prior: 50874880!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	
	self should: [rover receiveInstructions: 'er'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $N)
				].		! !

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 08:57:29'!
PASSED!

----SNAPSHOT----(26 October 2020 08:57:33) CuisUniversity-4383.image priorSource: 17380906!

----QUIT----(26 October 2020 08:57:36) CuisUniversity-4383.image priorSource: 17385254!

----STARTUP---- (26 October 2020 14:03:33) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 14:03:38'!
PASSED!

----SNAPSHOT----(26 October 2020 14:03:42) CuisUniversity-4383.image priorSource: 17385347!

----QUIT----(26 October 2020 14:03:53) CuisUniversity-4383.image priorSource: 17386568!

----STARTUP---- (26 October 2020 15:31:29) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 15:36:49' prior: 50874893!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $W)
				].		! !

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 15:36:52'!
FAILURE!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 15:36:52'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 15:36:52'!
FAILURE!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 15:37:08' prior: 50874990!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		! !

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

!testRun: #MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 15:37:12'!
PASSED!

----SNAPSHOT----(26 October 2020 15:37:18) CuisUniversity-4383.image priorSource: 17386661!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:09:15' prior: 50875041!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:24:11'!
test04MarsRoverMovesOneStepBackwards
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'b'.
	self assert: (rover position = (2@1)).
	self assert: (rover orientation = $N).! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:24:51'!
test05MarsRoverRotates90DegreesLeft
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test04MarsRoverRotates90Degrees stamp: 'EMI 10/26/2020 16:24:51'!
test04MarsRoverRotates90Degrees
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:25:04'!
test06MarsRoverRotates90DegreesRight
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'l'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $W).! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:25:25'!
test07MarsRoverMovesMoreThanOneStep
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).! !

!methodRemoval: MarsRoverTests #test05MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 16:25:25'!
test05MarsRoverMovesMoreThanOneStep
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'ff'.
	self assert: (rover position = (-1@1)).
	self assert: (rover orientation = $N).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:25:36' prior: 50875134!
test06MarsRoverRotates90DegreesRight
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'r'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $E).! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:25:51'!
test07MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!methodRemoval: MarsRoverTests #test06MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 16:25:51'!
test06MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:26:06'!
test08MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!methodRemoval: MarsRoverTests #test07MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 16:26:06'!
test07MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:26:17'!
test09MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		! !

!methodRemoval: MarsRoverTests #test07MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 16:26:17'!
test07MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:26:29'!
test10MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test08MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 16:26:29'!
test08MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:26:41'!
test11MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		! !

!methodRemoval: MarsRoverTests #test09MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 16:26:41'!
test09MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:27:51'!
test08MarsRoverMovesMoreThanOneStepBackwards
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'bb'.
	self assert: (rover position = (3@1)).
	self assert: (rover orientation = $N).! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:28:03'!
test09MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!methodRemoval: MarsRoverTests #test08MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 16:28:03'!
test08MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:28:12'!
test11CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
! !

!methodRemoval: MarsRoverTests #test09CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 16:28:12'!
test09CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:28:27'!
test12MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test10MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 16:28:27'!
test10MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:28:52'!
test10MarsRoverRotatesRightMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'rr'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:29:09'!
test09MarsRoverRotatesLeftMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).! !

!methodRemoval: MarsRoverTests #test09MarsRoverRotatesMoreThanOnce stamp: 'EMI 10/26/2020 16:29:09'!
test09MarsRoverRotatesMoreThanOnce
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'll'.
	self assert: (rover position = (1@1)).
	self assert: (rover orientation = $S).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:29:42'!
test11MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).! !

!methodRemoval: MarsRoverTests #test12MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 16:29:42'!
test12MarsRoverRotatesAndMovesOneStepOrMore
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	rover receiveInstructions: 'lf'.
	self assert: (rover position = (1@0)).
	self assert: (rover orientation = $W).!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:29:52'!
test12CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
! !

!methodRemoval: MarsRoverTests #test11CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 16:29:52'!
test11CannotCreateMarsRoverWithWrongOrientation
	self should: [MarsRover at: 1@1 withOrientation: $Z.] 
		raise: Error
		withExceptionDo: [:anError| self assert: anError messageText = MarsRover invalidOrientationErrorMessage ].
	
!
!MarsRoverTests methodsFor: 'tests' stamp: 'EMI 10/26/2020 16:29:59'!
test13MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		! !

!methodRemoval: MarsRoverTests #test11MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 16:29:59'!
test11MarsRoverStopsProcessingOnInvalidInstruction
	| rover |
	rover _ MarsRover at: 1@1 withOrientation: $N.
	
	self should: [rover receiveInstructions: 'ref'.] 
	raise: Error 
	withExceptionDo: [:anError |
					self assert: anError messageText = MarsRover invalidInstructionErrorMessage.
					self assert: (rover position = (1@1)).
					self assert: (rover orientation = $E)
				].		!

----SNAPSHOT----(26 October 2020 16:30:23) CuisUniversity-4383.image priorSource: 17389991!

!testRun: #MarsRoverTests #test01MarsRoverReceivingNoInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test02MarsRoverReceivingEmptyInstructionsDoesNotMoveNorRotate stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test03MarsRoverMovesOneStep stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test04MarsRoverMovesOneStepBackwards stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test05MarsRoverRotates90DegreesLeft stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test06MarsRoverRotates90DegreesRight stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test07MarsRoverMovesMoreThanOneStep stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverMovesMoreThanOneStepBackwards stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test09MarsRoverRotatesLeftMoreThanOnce stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test10MarsRoverRotatesRightMoreThanOnce stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test11MarsRoverRotatesAndMovesOneStepOrMore stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test12CannotCreateMarsRoverWithWrongOrientation stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!

!testRun: #MarsRoverTests #test13MarsRoverStopsProcessingOnInvalidInstruction stamp: 'EMI 10/26/2020 16:30:26'!
PASSED!
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/26/2020 16:31:32' prior: 50874680!
moveOnAxisX: anXAxisOffset andAxisY: aYAxisOffset
	position _ position + (anXAxisOffset@aYAxisOffset).
! !
!MarsRover methodsFor: 'instructions - private' stamp: 'EMI 10/26/2020 16:31:41' prior: 50875511!
moveOnAxisX: anXAxisOffset andAxisY: anYAxisOffset
	position _ position + (anXAxisOffset@anYAxisOffset).
! !

----SNAPSHOT----(26 October 2020 16:35:23) CuisUniversity-4383.image priorSource: 17401949!

----QUIT----(26 October 2020 16:35:37) CuisUniversity-4383.image priorSource: 17403948!