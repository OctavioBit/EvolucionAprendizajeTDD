----STARTUP---- (16 November 2020 17:15:02) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-TusLibros/CuisUniversity-4384.image!


TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #CartTest category: 'Tus Libros.com' stamp: 'DB 11/16/2020 18:54:59'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Cart category: 'Tus Libros.com' stamp: 'DB 11/16/2020 18:56:27'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!CartTest methodsFor: 'nil' stamp: 'DB 11/16/2020 18:56:16'!
test01CreateANewCartIsAnEmptyCart

	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 18:56:39'!
ERROR!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 18:56:39'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 18:56:48'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 18:56:54' prior: 50867798!
isEmpty
	^true.! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 18:56:56'!
PASSED!

!classDefinition: #Book category: 'Tus Libros.com' stamp: 'DB 11/16/2020 18:59:36'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 18:59:20'!
test02CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book.
	
	self assert: cart amountOfItems.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 18:59:47' prior: 50867815!
test02CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book.
	
	self assert: 1 equals: cart amountOfItems.! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 18:59:51'!
PASSED!

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 18:59:51'!
ERROR!

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 18:59:51'!
ERROR!

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 18:59:57'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:00:06'!
add: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:00:23' prior: 50867843!
add: aBook 
	! !

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:00:24'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:00:29'!
amountOfItems
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:00:32' prior: 50867854!
amountOfItems
	1! !

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:00:33'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:00:52' prior: 50867823!
test02CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book.
	
	self assert: 1 equals: (cart amountOfItems).! !

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:00:58'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:01:09' prior: 50867859!
amountOfItems
	^1! !

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:01:10'!
PASSED!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:01:12'!
PASSED!

!testRun: #CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:01:12'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:01:42'!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:02:32' prior: 50867891!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book amount: 2.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:02:57' prior: 50867900!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book amount: 1.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:03:15' prior: 50867910!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:03:25' prior: 50867866!
test02CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book amount: 5.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:03:41'!
test03CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book amount: 5.
	
	self assert: 1 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:03:41'!
test02CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book amount: 5.
	
	self assert: 1 equals: (cart amountOfItems).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:03:45' prior: 50867937!
test03CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:03:47'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:03:47'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:03:47'!
ERROR!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:03:47'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:03:57'!
add: aBook amount: aSmallInteger 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'Tus Libros.com' stamp: 'DB 11/16/2020 19:07:29'!
Object subclass: #Cart
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:07:22' prior: 50867975!
add: aBook amount: anAmount 

	1 to anAmount do:[
		
		items add: aBook.
	]! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:07:32' prior: 50867987!
add: aBook amount: anAmount 

	1 to anAmount do:[
		items add: aBook.
	]! !

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:07:35'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:07:55' prior: 50867993!
add: aBook amount: anAmount 

	1 to: anAmount do:[
		items add: aBook.
	]! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:07:58' prior: 50868002!
add: aBook amount: anAmount 

	1 to: anAmount do: [
		items add: aBook.
	]! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:08:03'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:08:03'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:08:03'!
ERROR!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:08:03'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:09:01' prior: 50868008!
add: aBook amount: anAmount 

	1 to: anAmount do: [
		items add: aBook.
	]! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:09:07' prior: 50868027!
add: aBook amount: anAmount 

	1 to: 5 do: [
		items add: aBook.
	]! !

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:09:09'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:10:16' prior: 50868033!
add: aBook amount: anAmount 

	1 to: anAmount do: [:a |
		items add: aBook.
	]! !

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:10:20'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:10:43' overrides: 16896425!
initialize
	items := OrderedCollection new.
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:11:02' prior: 50867802!
isEmpty
	^items isEmpty ! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:11:13' prior: 50867878!
amountOfItems
	^items size! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:11:55'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:11:55'!
FAILURE!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:11:55'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:11:55'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:12:25' prior: 50867920!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart book |
	cart := Cart new.
	
	book := Book new.
	cart add: book.
	
	self assert: 1 equals: (cart amountOfItems).! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:12:45' prior: 50867848!
add: aBook 
	self add: aBook amount: 1
	! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:12:49'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:12:49'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:12:49'!
PASSED!

Object subclass: #Book
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Book category: 'Tus Libros.com' stamp: 'DB 11/16/2020 19:16:32'!
Object subclass: #Book
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!Book methodsFor: 'nil' stamp: 'DB 11/16/2020 19:17:31'!
intializeWith: anISBN

	isbn := anISBN! !
!Book class methodsFor: 'nil' stamp: 'DB 11/16/2020 19:18:22'!
with: anISBN
	^Book new initializeWith: anISBN ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:19:09' prior: 50868078!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart book |
	cart := Cart new.
	
	book := Book with: '978-3-9820137-0-1'.
	cart add: book.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:19:13' prior: 50867954!
test03CreateACartWithOneItemHasOneItem

	| cart book |
	cart := Cart new.
	
	book := Book with: '978-3-9820137-0-1'.
	cart add: book amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:19:17'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:19:17'!
ERROR!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:19:17'!
ERROR!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:19:21'!
ERROR!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:19:26'!
ERROR!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:19:33'!
ERROR!
!Book methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:20:22'!
initializeWith: anISBN

	isbn := anISBN! !

!methodRemoval: Book #intializeWith: stamp: 'DB 11/16/2020 19:20:22'!
intializeWith: anISBN

	isbn := anISBN!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:20:33'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:20:33'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:20:33'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:23:37'!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart |
	cart := Cart new.
	
	self assert: (cart listItems isEmpty)! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:23:42'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:23:42'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:23:42'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/16/2020 19:23:42'!
ERROR!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/16/2020 19:23:42'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:23:49'!
listItems
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:24:02' prior: 50868203!
listItems
	^items! !

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/16/2020 19:24:06'!
PASSED!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:24:08'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:24:08'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:24:08'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/16/2020 19:24:08'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:26:05'!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart |
	cart := Cart new.
	
	self assert: (cart listItems isEmpty)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:26:22' prior: 50868180!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart book |
	cart := Cart new.
	
	book := Book with: '978-3-9820137-0-1'.
	cart add: book.
	
	self assert: (cart listItems isEmpty)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:26:48' prior: 50868236!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart book items |
	cart := Cart new.
	
	book := Book with: '978-3-9820137-0-1'.
	cart add: book.
	
	items := cart listItems.
	
	self assert: (cart listItems size)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:30:37' prior: 50868245!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart book items |
	cart := Cart new.
	
	book := Book with: '978-3-9820137-0-1'.
	cart add: book.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: '978-3-9820137-0-1|1' equals: (items at: 1) isbn,'|', (items at: 1) amount.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:30:59' prior: 50868255!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart book items |
	cart := Cart new.
	
	book := Book with: '978-3-9820137-0-1'.
	cart add: book.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: '978-3-9820137-0-1|1' equals: (items at: 1) isbn,'|', (items at: 1) amount.! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/16/2020 19:31:04'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/16/2020 19:31:04'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/16/2020 19:31:04'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/16/2020 19:31:04'!
ERROR!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/16/2020 19:31:04'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/16/2020 19:31:04'!
ERROR!

Object subclass: #Item
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Item category: 'Tus Libros.com' stamp: 'DB 11/16/2020 19:31:20'!
Object subclass: #Item
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

Object subclass: #Item
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Item category: 'Tus Libros.com' stamp: 'DB 11/16/2020 19:31:29'!
Object subclass: #Item
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:33:00' prior: 50868229!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart book1 book2 |
	cart := Cart new.
	
	book1 := Book with: '978-3-9820137-0-1'.
	cart add: book1 amount: 2.
	
	book2 := Book with: '978-3-9820137-0-2'.

	cart add: book2 amount: 3 .

	cart add: book1 amount: 5.
	
	self assert: (cart listItems isEmpty)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:34:22' prior: 50868323!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart book1 book2 |
	cart := Cart new.
	
	book1 := Book with: '978-3-9820137-0-1'.
	cart add: book1 amount: 2.
	
	book2 := Book with: '978-3-9820137-0-2'.

	cart add: book2 amount: 3 .

	cart add: book1 amount: 5.
	
	self assert: (cart listItems isEmpty)! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:34:37' prior: 50868051 overrides: 16896425!
initialize
	items := Dictionary new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:49:21' prior: 50868350 overrides: 16896425!
initialize
	items := Bag new.! !

!classRemoval: #Item stamp: 'DB 11/16/2020 19:51:48'!
Object subclass: #Item
	instanceVariableNames: 'isbn quantity'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

----SNAPSHOT----(16 November 2020 19:57:45) CuisUniversity-4384.image priorSource: 17155564!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:58:09' prior: 50868121!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart |
	cart := Cart new.
	cart add:  '978-3-9820137-0-1'.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:58:21' prior: 50868131!
test03CreateACartWithOneItemHasOneItem

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:58:33' prior: 50868268!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: '978-3-9820137-0-1|1' equals: (items at: 1) isbn,'|', (items at: 1) amount.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:59:12' prior: 50868336!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart book1 book2 |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	
	book2 := Book with: '978-3-9820137-0-2'.

	cart add: book2 amount: 3 .

	cart add: book1 amount: 5.
	
	self assert: (cart listItems isEmpty)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 19:59:59' prior: 50868398!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: (cart listItems isEmpty)! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 20:00:28' prior: 50868386!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items aBag |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: '978-3-9820137-0-1|1' equals: (items at: 1) isbn,'|', (items at: 1) amount.
	
	aBag := Bag new.
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/16/2020 20:01:01' prior: 50868421!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items aBag |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: '978-3-9820137-0-1|1' equals: (items at: 1) isbn,'|', (items at: 1) amount.
	
	aBag := Bag new.
	

	
	! !

----SNAPSHOT----(16 November 2020 20:01:07) CuisUniversity-4384.image priorSource: 17174849!

----QUIT----(16 November 2020 20:01:10) CuisUniversity-4384.image priorSource: 17177458!

----STARTUP---- (16 November 2020 20:52:05) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-TusLibros/CuisUniversity-4384.image!


----End fileIn of /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-Portfolio1/Portfolio-Solucion v5.st----!

!classRemoval: #Transfer stamp: 'DB 11/16/2020 21:07:08'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferNetReport stamp: 'DB 11/16/2020 21:07:08'!
Report subclass: #TransferNetReport
	instanceVariableNames: 'net'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #SummaryReport stamp: 'DB 11/16/2020 21:07:08'!
Report subclass: #SummaryReport
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Report stamp: 'DB 11/16/2020 21:07:09'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTreeReport stamp: 'DB 11/16/2020 21:07:09'!
Object subclass: #PortfolioTreeReport
	instanceVariableNames: 'portfolio report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioSpecialTreeReport stamp: 'DB 11/16/2020 21:07:09'!
Object subclass: #PortfolioSpecialTreeReport
	instanceVariableNames: 'portfolio report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'DB 11/16/2020 21:07:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferWithdraw stamp: 'DB 11/16/2020 21:07:10'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferDeposit stamp: 'DB 11/16/2020 21:07:10'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTransaction stamp: 'DB 11/16/2020 21:07:10'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'DB 11/16/2020 21:07:11'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'DB 11/16/2020 21:07:11'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'DB 11/16/2020 21:07:11'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'DB 11/16/2020 21:07:11'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'DB 11/16/2020 21:07:12'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTest stamp: 'DB 11/16/2020 21:07:12'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportTransferNetTest stamp: 'DB 11/16/2020 21:07:12'!
TestCase subclass: #ReportTransferNetTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportSummaryTest stamp: 'DB 11/16/2020 21:07:13'!
TestCase subclass: #ReportSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'DB 11/16/2020 21:07:13'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTreeReportTest stamp: 'DB 11/16/2020 21:07:13'!
TestCase subclass: #PortfolioTreeReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'DB 11/16/2020 21:07:14'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of /Users/dbenitez/uba/2c2020-IS1/IS1-Trabajos/19-Portfolio2/Portfolio-Solucion.st----!

!testRun: #TransferTest #test01TransferAffectBalance stamp: 'DB 11/16/2020 21:10:25'!
PASSED!

!testRun: #TransferTest #test02SenderAndReceiverCantBeTheSameAccount stamp: 'DB 11/16/2020 21:10:25'!
PASSED!

!testRun: #TransferTest #test03TransferAmountCantBeZeroOrNegative stamp: 'DB 11/16/2020 21:10:25'!
PASSED!

!testRun: #TransferTest #test04TransferTransactionesWereRegisteredInTheAccounts stamp: 'DB 11/16/2020 21:10:25'!
PASSED!

!testRun: #TransferTest #test05SenderAndReceiverHaveTheSameTransfer stamp: 'DB 11/16/2020 21:10:25'!
PASSED!

!testRun: #ReportTransferNetTest #test01TransferNetReportForEmptyAccountReturnsOnlyBalance stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportTransferNetTest #test02TransferNetReportForDepositReturnsZero stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportTransferNetTest #test03TransferNetReportForWithdrawReturnsZero stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportTransferNetTest #test04TransferNetReportForATransferReturnsNetBalance stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportTransferNetTest #test05TransferNetOfAPortfolioWithoutAccountsReturnsZero stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportTransferNetTest #test06TransferNetOfAPortfolioWithOneAccountReturnsTransferNetAccountValue stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportTransferNetTest #test07TransferNetOfAPortfolioWithMoreThanOneAccountReturnsTransferNetAccountValue stamp: 'DB 11/16/2020 21:10:31'!
PASSED!

!testRun: #ReportSummaryTest #test06SummaryReportForEmptyAccountReturnsOnlyBalance stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

!testRun: #ReportSummaryTest #test07SummaryReportForDepositReturnsBalanceAndDeposit stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

!testRun: #ReportSummaryTest #test08SummaryReportForWithdrawReturnsBalanceAndWithdraw stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

!testRun: #ReportSummaryTest #test09SummaryReportForTransferReturnsBalanceAndTransferTransaction stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

!testRun: #ReportSummaryTest #test10SummaryOfPortfolioWithoutAccountsHasOnlyBalance stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

!testRun: #ReportSummaryTest #test11SummaryOfPortfolioWithOneAccount stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

!testRun: #ReportSummaryTest #test12SummaryOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'DB 11/16/2020 21:10:36'!
PASSED!

----QUIT----(16 November 2020 21:20:40) CuisUniversity-4384.image priorSource: 17177552!

----STARTUP---- (17 November 2020 17:35:02) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-TusLibros/CuisUniversity-4384.image!


!classRemoval: #Book stamp: 'DB 11/17/2020 17:51:07'!
Object subclass: #Book
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 17:54:53' prior: 50868434!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: '978-3-9820137-0-1|1' equals: (items at: 1),'|', (items occurrencesOf:  '978-3-9820137-0-1') amount.
	
	

	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 17:55:05' prior: 50868410!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-1' amount: 5.
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 17:55:36' prior: 50868042!
add: aBook amount: anAmount 

	items add: aBook  withOccurrences: anAmount! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 17:55:39' prior: 50871973!
add: aBook amount: anAmount 

	items add: aBook withOccurrences: anAmount! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 17:55:42'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 17:55:42'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 17:55:42'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 17:55:42'!
ERROR!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 17:55:42'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 17:55:42'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 17:58:59' prior: 50871950!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.

	self assert: 1 equals: items size.
	
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals:  (items occurrencesOf:  '978-3-9820137-0-1')
	
	

	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 17:59:07' prior: 50872005!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.

	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals:  (items occurrencesOf:  '978-3-9820137-0-1')
	
	

	
	! !

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 17:59:08'!
PASSED!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 17:59:22'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 17:59:22'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 17:59:22'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 17:59:22'!
PASSED!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 17:59:22'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:02:51'!
test04

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

Object subclass: #Cart
	instanceVariableNames: 'items catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Cart category: 'Tus Libros.com' stamp: 'DB 11/17/2020 18:03:00'!
Object subclass: #Cart
	instanceVariableNames: 'items catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!Cart class methodsFor: 'nil' stamp: 'DB 11/17/2020 18:03:46'!
with: aCatalog

	^self new initializeWith: aCatalog! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:04:10'!
initializeWith: aCatalog
	catalog := aCatalog.
	items := Bag new.! !

!methodRemoval: Cart #initialize stamp: 'DB 11/17/2020 18:04:25'!
initialize
	items := Bag new.!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:06:06'!
test04AddBookMustBeAValidISBN

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test04 stamp: 'DB 11/17/2020 18:06:11'!
test04

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:06:20'!
test04AddingBookMustBeAValidISBN

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test04AddBookMustBeAValidISBN stamp: 'DB 11/17/2020 18:06:20'!
test04AddBookMustBeAValidISBN

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:07:27'!
test04CannotAddABookWithNonValidISBN

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test04AddingBookMustBeAValidISBN stamp: 'DB 11/17/2020 18:07:27'!
test04AddingBookMustBeAValidISBN

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:08:38' prior: 50872110!
test04CannotAddABookWithNonValidISBN

	| cart |
	cart := Cart new.
	
	self should: [cart add: '978-3-9820137-0-1' amount: 5.] raise: Error description: self 
	! !

----End fileIn of /Users/dbenitez/uba/2c2020-IS1/IS1-Trabajos/17-TerniLapilli/Terni Lapilli.st----!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:13:19' prior: 50872126!
test04CannotAddABookWithNonValidISBN

	| cart |
	cart := Cart new.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: 5.] 
		 raise: Error 
		 withMessageText: Cart ISBNDoesntBelongToCatalogErrorDescription.
	! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:14:12'!
ERROR!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:14:12'!
ERROR!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:14:12'!
ERROR!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:14:12'!
ERROR!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:14:12'!
ERROR!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:14:12'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:14:35' prior: 50867786!
test01CreateANewCartIsAnEmptyCart

	| cart |
	cart := Cart with: OrderedCollection new.
	
	self assert: cart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:14:47' prior: 50873444!
test01CreateANewCartIsAnEmptyCart

	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.! !

!methodRemoval: Cart class #with: stamp: 'DB 11/17/2020 18:16:41'!
with: aCatalog

	^self new initializeWith: aCatalog!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:17:04' overrides: 16896425!
initialize
	catalog := Bag new.
	items := Bag new.! !

!methodRemoval: Cart #initializeWith: stamp: 'DB 11/17/2020 18:17:09'!
initializeWith: aCatalog
	catalog := aCatalog.
	items := Bag new.!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:17:16'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:17:16'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:17:16'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:17:16'!
ERROR!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:17:16'!
PASSED!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:17:16'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:17:16'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:17:25'!
ISBNDoesntBelongToCatalogErrorDescription
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:17:47' prior: 50873493!
ISBNDoesntBelongToCatalogErrorDescription
	^'ISBN doesnt belong to catalog'! !

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:17:48'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:19:00' prior: 50871979!
add: aBook amount: anAmount 

	(catalog includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

	items add: aBook withOccurrences: anAmount! !

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:19:03'!
FAILURE!
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:19:27'!
signalISBNDoesntBelongToCatalog
	self error: self ISBNDoesntBelongToCatalogErrorDescription ! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:19:33'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:19:33'!
ERROR!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:19:33'!
ERROR!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:19:33'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:19:33'!
ERROR!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:19:33'!
ERROR!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:20:06'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:20:06'!
ERROR!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:20:06'!
ERROR!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:20:06'!
PASSED!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:20:06'!
ERROR!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:20:06'!
ERROR!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:20:08'!
ERROR!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:20:21'!
PASSED!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:21:25'!
addToCatalog: aBook 
	self add: aBook amount: 1
	! !

Object subclass: #TusLibrosCatalog
	instanceVariableNames: 'catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #TusLibrosCatalog category: 'Tus Libros.com' stamp: 'DB 11/17/2020 18:21:48'!
Object subclass: #TusLibrosCatalog
	instanceVariableNames: 'catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!TusLibrosCatalog methodsFor: 'nil' stamp: 'DB 11/17/2020 18:22:20' overrides: 16896425!
initialize

	catalog := Bag new.! !
!TusLibrosCatalog methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:23:03' prior: 50873589 overrides: 16896425!
initialize

	catalog := Bag new.
	catalog add: '978-3-9820137-0-1'.! !

Object subclass: #Cart
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Cart category: 'Tus Libros.com' stamp: 'DB 11/17/2020 18:23:39'!
Object subclass: #Cart
	instanceVariableNames: 'items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:24:05' prior: 50873508!
add: aBook amount: anAmount 

	(TusLibrosCatalog new includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

	items add: aBook withOccurrences: anAmount! !
!TusLibrosCatalog methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:24:30'!
includes: aBook

	^catalog includes: aBook.! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:25:00'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:25:00'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:25:00'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:25:00'!
FAILURE!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:25:00'!
PASSED!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:25:00'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:26:12'!
testxxx

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 0.
	
	self assert: 5 equals: (cart amountOfItems).! !

!testRun: #CartTest #testxxx stamp: 'DB 11/17/2020 18:26:16'!
FAILURE!

!testRun: #CartTest #testxxx stamp: 'DB 11/17/2020 18:26:16'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:27:20' prior: 50873644!
testxxx

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: -2.
	
	self assert: 5 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:27:50' prior: 50873656!
testxxx

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: -2.
	
	cart add: '978-3-9820137-0-1' amount: -5.
	
	self assert: 5 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:28:14' prior: 50873664!
testxxx

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: -2.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:29:27'!
test05AddDoesntAllowNegativeAmountToBeAdded

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: -2.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #testxxx stamp: 'DB 11/17/2020 18:29:27'!
testxxx

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: -2.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:29:37' prior: 50873681!
test05AddDoesntAllowNegativeAmountToBeAdded

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: -2.
	
	self assert: 5 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:30:32' prior: 50873699!
test05AddDoesntAllowNegativeAmountToBeAdded

	| cart |
	cart := Cart new.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountErrorDescription.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:30:44' prior: 50873708!
test05AddDoesntAllowNegativeAmountToBeAdded

	| cart |
	cart := Cart new.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription.! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:30:50'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:30:50'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:30:50'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:30:50'!
FAILURE!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:30:50'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/17/2020 18:30:50'!
ERROR!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:30:50'!
ERROR!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/17/2020 18:30:58'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:31:09'!
doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:31:31' prior: 50873756!
doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription
	^'doesnt allow negative or zero amount to be added'! !

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/17/2020 18:31:32'!
FAILURE!
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:32:01'!
signalDoesntAllowNegativeOrZeroAmountToBeAdded
	self error: self doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription ! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:32:42' prior: 50873610!
add: aBook amount: anAmount 


	(anAmount <= 0) ifTrue: [^self class signalDoesntAllowNegativeOrZeroAmountToBeAdded ].
	(TusLibrosCatalog new includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

	

	items add: aBook withOccurrences: anAmount! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:32:46'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:32:46'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:32:46'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:32:46'!
FAILURE!

!testRun: #CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:32:46'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/17/2020 18:32:46'!
PASSED!

!testRun: #CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:32:46'!
ERROR!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:33:06'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:33:34' prior: 50873414!
test04CannotAddABookWithNonValidISBN

	| cart |
	cart := Cart new.
	
	self  should: [cart add: '978-3-9820137-X-X' amount: 5.] 
		 raise: Error 
		 withMessageText: Cart ISBNDoesntBelongToCatalogErrorDescription.
	! !

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:33:37'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:33:51'!
test06ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.

	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals:  (items occurrencesOf:  '978-3-9820137-0-1')
	
	

	
	! !

!methodRemoval: CartTest #test04ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:33:51'!
test04ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.

	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals:  (items occurrencesOf:  '978-3-9820137-0-1')
	
	

	
	!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:34:00'!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-1' amount: 5.
	! !

!methodRemoval: CartTest #test05ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:34:00'!
test05ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-1' amount: 5.
	!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:34:37' prior: 50873830!
test06ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	items := cart listItems.

	self assert: items isEmpty 
	
	

	
	! !

!methodRemoval: CartTest #test06ListCartOfAnEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:34:40'!
test06ListCartOfAnEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	items := cart listItems.

	self assert: items isEmpty 
	
	

	
	!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:35:15'!
test06ListCartOfEmptyCartReturnsAnEmptyList

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-1' amount: 5.
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:35:47' prior: 50873892!
test06ListCartOfEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	items := cart listItems.
	
	self assert: items isEmpty.! !

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:35:52'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:36:13' prior: 50873856!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	
	! !
!TusLibrosCatalog methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:36:40' prior: 50873594 overrides: 16896425!
initialize

	catalog := Bag new.
	
	catalog add: '978-3-9820137-0-1'.
	catalog add: '978-3-9820137-0-2'. 
	catalog add: '978-3-9820137-0-3'.
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:37:27' prior: 50873913!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:38:13' prior: 50873932!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 3 equals: items size.
	self assert: '978-3-9820137-0-1' includes: items.
	self assert: '978-3-9820137-0-2' includes: items.
	self assert: '978-3-9820137-0-3' includes: items.
	
	
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:39:03' prior: 50873943!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 3 equals: items size.
	self assert: '978-3-9820137-0-1' includes: items.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: '978-3-9820137-0-2' includes: items.
	self assert: '978-3-9820137-0-3' includes: items.
	
	
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:39:22' prior: 50873960!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 3 equals: items size.
	self assert: '978-3-9820137-0-1' includes: items.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: '978-3-9820137-0-2' includes: items.
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: '978-3-9820137-0-3' includes: items.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:39:25'!
FAILURE!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:39:25'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:39:43' prior: 50873979!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: '978-3-9820137-0-1' includes: items.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: '978-3-9820137-0-2' includes: items.
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: '978-3-9820137-0-3' includes: items.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:39:52'!
FAILURE!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:39:52'!
FAILURE!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:40:01'!
FAILURE!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:40:19'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:41:22' prior: 50874010!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:41:25'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:41:25'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:41:25'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:41:25'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/17/2020 18:41:25'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:41:25'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:41:25'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:44:15'!
test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAddded

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!methodRemoval: CartTest #test07ListCartOfCartWithOneItemReturnsOnlyOneLine stamp: 'DB 11/17/2020 18:44:15'!
test07ListCartOfCartWithOneItemReturnsOnlyOneLine

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:44:24'!
test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!methodRemoval: CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAddded stamp: 'DB 11/17/2020 18:44:24'!
test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAddded

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/17/2020 18:45:15'!
test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded

	| cart items |
	cart := Cart new.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/17/2020 18:45:20'!
PASSED!

----SNAPSHOT----(17 November 2020 18:54:24) CuisUniversity-4384.image priorSource: 17289152!

----QUIT----(17 November 2020 18:54:28) CuisUniversity-4384.image priorSource: 17362621!

----STARTUP---- (18 November 2020 19:36:13) as /Users/dbenitez/uba/2c2020-IS1/Quiz/macos64-TusLibros/CuisUniversity-4384.image!

!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:36:29' prior: 50868208!
listItems
	^items copy! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:36:33'!
PASSED!

Object subclass: #Cart
	instanceVariableNames: 'items catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!classDefinition: #Cart category: 'Tus Libros.com' stamp: 'DB 11/18/2020 19:36:40'!
Object subclass: #Cart
	instanceVariableNames: 'items catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!
!Cart class methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:37:18'!
with: aCatalog
	^self new initializeWith: aCatalog ! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:37:36'!
initializeWith: aCatalog
	catalog := aCatalog.
	items := Bag new.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:38:21' prior: 50868368!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.

	cart := Cart with: aCatalog.
	
	cart add:  '978-3-9820137-0-1'.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:38:41' prior: 50874296!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add:  '978-3-9820137-0-1'.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:38:55' prior: 50874307!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add:  '978-3-9820137-0-1'.
	self assert: 1 equals: (cart amountOfItems).! !

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:38:58'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:39:10' prior: 50868377!
test03CreateACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:39:18'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:39:29'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:39:50' prior: 50873817!
test04CannotAddABookWithNonValidISBN

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	self  should: [cart add: '978-3-9820137-X-X' amount: 5.] 
		 raise: Error 
		 withMessageText: Cart ISBNDoesntBelongToCatalogErrorDescription.
	! !

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:39:56'!
PASSED!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:40:06'!
PASSED!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:40:06'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:40:23' prior: 50873719!
test05AddDoesntAllowNegativeAmountToBeAdded

	| aCatalog cart |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:40:28' prior: 50874397!
test05AddDoesntAllowNegativeAmountToBeAdded

	| aCatalog cart |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription.! !

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:40:31'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:40:40'!
PASSED!

!methodRemoval: Cart #addToCatalog: stamp: 'DB 11/18/2020 19:40:56'!
addToCatalog: aBook 
	self add: aBook amount: 1
	!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:41:06' prior: 50873779!
add: aBook amount: anAmount 


	(anAmount <= 0) ifTrue: [^self class signalDoesntAllowNegativeOrZeroAmountToBeAdded ].
	(catalog includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

	

	items add: aBook withOccurrences: anAmount! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:41:10' prior: 50874435!
add: aBook amount: anAmount 


	(anAmount <= 0) ifTrue: [^self class signalDoesntAllowNegativeOrZeroAmountToBeAdded ].
	(catalog includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

	items add: aBook withOccurrences: anAmount! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:41:13' prior: 50874446!
add: aBook amount: anAmount 

	(anAmount <= 0) ifTrue: [^self class signalDoesntAllowNegativeOrZeroAmountToBeAdded ].
	(catalog includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

	items add: aBook withOccurrences: anAmount! !

----End fileIn of /Users/dbenitez/uba/2c2020-IS1/2020-2c/18-Portfolio1/Portfolio-Solucion.st----!
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:43:54'!
assertCanAdd: aBook amount: anAmount

	(anAmount <= 0) ifTrue: [^self class signalDoesntAllowNegativeOrZeroAmountToBeAdded ].
	(catalog includes: aBook) ifFalse: [^self class signalISBNDoesntBelongToCatalog].

! !
!Cart methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:44:15' prior: 50874457!
add: aBook amount: anAmount 

	self assertCanAdd: aBook amount: anAmount.

	items add: aBook withOccurrences: anAmount! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/18/2020 19:44:19'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:44:19'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:44:19'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:44:19'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:44:19'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:44:19'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:44:19'!
ERROR!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:44:19'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:45:05' prior: 50874192!
test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:45:13' prior: 50875255!
test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:45:36' prior: 50874143!
test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	aCatalog add: '978-3-9820137-0-3'.
	cart := Cart with: aCatalog.
	
	
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'DB 11/18/2020 19:45:50' prior: 50875287!
test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	aCatalog add: '978-3-9820137-0-3'.
	cart := Cart with: aCatalog.
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:45:53'!
PASSED!

!classRemoval: #TusLibrosCatalog stamp: 'DB 11/18/2020 19:45:58'!
Object subclass: #TusLibrosCatalog
	instanceVariableNames: 'catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Tus Libros.com'!

!testRun: #CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:46:01'!
PASSED!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:46:01'!
PASSED!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:53:19'!
test01EmptyCartHasNoItems

	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.! !

!methodRemoval: CartTest #test01CreateANewCartIsAnEmptyCart stamp: 'DB 11/18/2020 19:53:19'!
test01CreateANewCartIsAnEmptyCart

	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:53:43' prior: 50875407!
test01EmptyCartHasNoItems

	| cart |
	cart := Cart new.
	
	self assert: cart empty .! !

!methodRemoval: Cart #isEmpty stamp: 'DB 11/18/2020 19:54:04'!
isEmpty
	^items isEmpty !
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:54:31' prior: 50875419!
test01EmptyCartHasNoItems

	| cart |
	cart := Cart new.
	
	self assert: 0 equals: cart amountOfItems.! !

!testRun: #CartTest #test01EmptyCartHasNoItems stamp: 'DB 11/18/2020 19:54:33'!
PASSED!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:54:54'!
test02CreateACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test03CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:54:54'!
test03CreateACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:55:01'!
test03CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add:  '978-3-9820137-0-1'.
	self assert: 1 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:55:01'!
test02CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add:  '978-3-9820137-0-1'.
	self assert: 1 equals: (cart amountOfItems).!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:55:18' prior: 50875437!
test02CreateACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 1.
	
	self assert: 1 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:55:43'!
test02ACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 1.
	
	self assert: 1 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test02CreateACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:55:43'!
test02CreateACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 1.
	
	self assert: 1 equals: (cart amountOfItems).!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:56:20' prior: 50875494!
test02ACartWithOneItemHasOneItem

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add:  '978-3-9820137-0-1'.
	self assert: 1 equals: (cart amountOfItems).
	! !
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:56:34' prior: 50875459!
test03CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:56:45'!
test03ACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).! !

!methodRemoval: CartTest #test03CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:56:45'!
test03CreateACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	
	self assert: 5 equals: (cart amountOfItems).!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:57:07' prior: 50875538!
test03ACartWithMoreThanOneItemHasTheCorrectAmountOfItems

	| cart aCatalog |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1' amount: 5.
	cart add: '978-3-9820137-0-2' amount: 3.
	
	self assert: 8 equals: (cart amountOfItems).! !

!testRun: #CartTest #test01EmptyCartHasNoItems stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test02ACartWithOneItemHasOneItem stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test03ACartWithMoreThanOneItemHasTheCorrectAmountOfItems stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test04CannotAddABookWithNonValidISBN stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:57:10'!
PASSED!

!testRun: #CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 19:57:10'!
PASSED!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 19:57:55'!
test05CannotAddABookWithNegativeOrZeroAmount

	| aCatalog cart |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription.! !

!methodRemoval: CartTest #test05AddDoesntAllowNegativeAmountToBeAdded stamp: 'DB 11/18/2020 19:57:55'!
test05AddDoesntAllowNegativeAmountToBeAdded

	| aCatalog cart |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription.!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 20:00:52' prior: 50875603!
test05CannotAddABookWithNegativeOrZeroAmount

	| aCatalog cart |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-2'.
	cart := Cart with: aCatalog.
	
	self  should: [cart add: '978-3-9820137-0-1' amount: -5.] 
		 raise: Error 
		 withMessageText: Cart doesntAllowNegativeOrZeroAmountToBeAddedErrorDescription.! !
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 20:01:45'!
test06ListItemsOfEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	items := cart listItems.
	
	self assert: items isEmpty.! !

!methodRemoval: CartTest #test06ListCartOfEmptyCartReturnsAnEmptyList stamp: 'DB 11/18/2020 20:01:45'!
test06ListCartOfEmptyCartReturnsAnEmptyList

	| cart items |
	cart := Cart new.
	
	items := cart listItems.
	
	self assert: items isEmpty.!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 20:01:58'!
test07ListItemsOfCartWithOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').! !

!methodRemoval: CartTest #test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 20:01:58'!
test07ListCartOfCartWithOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 20:02:10'!
test08ListItemsOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	aCatalog add: '978-3-9820137-0-3'.
	cart := Cart with: aCatalog.
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!methodRemoval: CartTest #test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 20:02:10'!
test08ListCartOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	aCatalog add: '978-3-9820137-0-3'.
	cart := Cart with: aCatalog.
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 20:02:25'!
test07ListItemsOfACartWithOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').! !

!methodRemoval: CartTest #test07ListItemsOfCartWithOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 20:02:25'!
test07ListItemsOfCartWithOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	cart := Cart with: aCatalog.
	
	cart add: '978-3-9820137-0-1'.
	
	items := cart listItems.
	
	self assert: 1 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 1 equals: (items occurrencesOf: '978-3-9820137-0-1').!
!CartTest methodsFor: 'cart-tests' stamp: 'DB 11/18/2020 20:02:33'!
test08ListItemsOfACartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	aCatalog add: '978-3-9820137-0-3'.
	cart := Cart with: aCatalog.
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	! !

!methodRemoval: CartTest #test08ListItemsOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded stamp: 'DB 11/18/2020 20:02:33'!
test08ListItemsOfCartWithMoreThanOneItemReturnsAListWithAllBooksAdded

	| cart aCatalog items |
	aCatalog := OrderedCollection new.
	aCatalog add: '978-3-9820137-0-1'.
	aCatalog add: '978-3-9820137-0-2'.
	aCatalog add: '978-3-9820137-0-3'.
	cart := Cart with: aCatalog.
	cart add: '978-3-9820137-0-1' amount: 2.
	cart add: '978-3-9820137-0-2' amount: 3.
	cart add: '978-3-9820137-0-3' amount: 5.
	
	items := cart listItems.
	
	self assert: 10 equals: items size.
	self assert: items includes: '978-3-9820137-0-1'.
	self assert: 2 equals: (items occurrencesOf: '978-3-9820137-0-1').
	self assert: items includes: '978-3-9820137-0-2' .
	self assert: 3 equals: (items occurrencesOf: '978-3-9820137-0-2').
	self assert: items includes: '978-3-9820137-0-3'.
	self assert: 5 equals: (items occurrencesOf: '978-3-9820137-0-3').
	
	
	
	!

----QUIT----(18 November 2020 20:06:36) CuisUniversity-4384.image priorSource: 17362715!