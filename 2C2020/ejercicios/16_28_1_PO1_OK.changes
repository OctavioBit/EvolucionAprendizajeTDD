

----End fileIn of /home/edy/Escritorio/IngSoft I/isw1-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:23:33'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 19:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 19:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 19:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 19:23:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:23:33'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:24:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:24:10'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 19:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 19:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 19:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 19:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:24:10'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:25:57'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:25:57'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 19:28:53' prior: 50893107!
balance

	^transactions sum: [ :aTransaction | (aTransaction class = Withdraw) ifTrue:[ (aTransaction value) negated ] ifFalse:[aTransaction value] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:28:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:28:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 19:29:03'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 19:34:05' prior: 50893194!
balance

	"^transactions sum: [ :aTransaction | (aTransaction class = Withdraw) ifTrue:[ (aTransaction value) negated ] ifFalse:[aTransaction value] ] ifEmpty: [ 0 ]"
	
	^transactions sum: [ :aTransaction | aTransaction xxx  ] ifEmpty: [ 0 ]
	
	! !
!Withdraw methodsFor: 'value' stamp: 'ERMC 11/2/2020 19:34:17'!
xxx

	^ value negated! !
!Deposit methodsFor: 'value' stamp: 'ERMC 11/2/2020 19:34:36'!
xxx

	^self value! !
!Deposit methodsFor: 'value' stamp: 'ERMC 11/2/2020 19:34:53' prior: 50893250!
xxx

	^value! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 19:35:14'!
PASSED!
!Withdraw methodsFor: 'value' stamp: 'ERMC 11/2/2020 19:35:35'!
addToBalance

	^ value negated! !

!methodRemoval: Withdraw #xxx stamp: 'ERMC 11/2/2020 19:35:38'!
xxx

	^ value negated!
!Deposit methodsFor: 'value' stamp: 'ERMC 11/2/2020 19:35:57'!
addToBalance

	^value! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:35:57' prior: 50893237!
balance

	"^transactions sum: [ :aTransaction | (aTransaction class = Withdraw) ifTrue:[ (aTransaction value) negated ] ifFalse:[aTransaction value] ] ifEmpty: [ 0 ]"
	
	^transactions sum: [ :aTransaction | aTransaction addToBalance  ] ifEmpty: [ 0 ]
	
	! !

!methodRemoval: Deposit #xxx stamp: 'ERMC 11/2/2020 19:35:57'!
xxx

	^value!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 19:36:05'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 19:36:13' prior: 50893294!
balance
	
	^transactions sum: [ :aTransaction | aTransaction addToBalance  ] ifEmpty: [ 0 ]
	
	! !

Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/2/2020 19:38:01'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/2/2020 19:38:18'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'nil' stamp: 'ERMC 11/2/2020 19:39:53'!
test01APorfolioHaveZeroAsBalanceWhenCreated 

	| porffolio |
	
	porffolio := Portfolio new.

	self assert: 0 equals: porffolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:40:11' prior: 50893364!
test01APorfolioHaveZeroAsBalanceWhenCreated 

	| porffolio |
	
	porffolio := Portfolio new.

	self assert: 0 equals: porffolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:40:19' prior: 50893372!
test01APorfolioHaveZeroAsBalanceWhenCreated 

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:40:25'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:40:39'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:40:46' prior: 50893391!
balance
	^ 0! !

!testRun: #PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:40:47'!
PASSED!

!testRun: #PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 19:40:47'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:46:03'!
test02APortfolioWithOneAccountHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	portfolio 

	self assert: 0 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:47:41' prior: 50893406!
test02APortfolioWithOneAccountHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
		
	portfolio addAccount : account
	

	self assert: 0 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:47:45'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:48:02'!
addAccount
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:50:00'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:50:10' prior: 50893415!
test02APortfolioWithOneAccountHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
		
	portfolio addAccount : account.
	

	self assert: 0 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:50:10'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:50:21' prior: 50893438!
test02APortfolioWithOneAccountHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
		
	portfolio addAccount: account.
	

	self assert: 0 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:50:26'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:50:32'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/2/2020 19:51:08'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:51:06' prior: 50893467!
addAccount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount ! !
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:51:12' prior: 50893480!
addAccount: aReceptiveAccount 
	
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:51:13'!
ERROR!

!methodRemoval: Portfolio #addAccount stamp: 'ERMC 11/2/2020 19:51:41'!
addAccount
	self shouldBeImplemented.!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:52:04' overrides: 16896425!
initialize
	
	accounts := OrderedCollection new. ! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:52:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:54:27'!
test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
	
		
	portfolio addAccount: account.
	
	self assert: 0 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:54:54' prior: 50893507!
test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.

		
	portfolio addAccount: account.
	
	self assert: 0 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 19:55:22' prior: 50893518!
test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.

	portfolio addAccount: account.
	
	self assert: 100 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:55:24'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:56:50' prior: 50893395!
balance
	
	^accounts sum: [ :anAccount | anAccount balance  ] ifEmpty: [ 0 ]
	! !
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/2/2020 19:56:51' prior: 50893548!
balance
	
	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]
	! !

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 19:56:59'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 20:02:02'!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
	
	portfolio := Portfolio new.
	
	aPortfolio := Portfolio new.
	
	portfolio addPortfolio: aPortfolio .
	
	
	self assert: 100 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 20:02:40' prior: 50893564!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
	
	portfolio := Portfolio new.
	
	aPortfolio := Portfolio new.
	
	
	portfolio addAccount: aPortfolio .
	
	
	self assert: 100 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/2/2020 20:04:52' prior: 50893576!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
	
	portfolio := Portfolio new.
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
	portfolio addAccount: aPortfolio .
	
	
	self assert: 100 equals: portfolio balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 20:36:42'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 20:41:39' prior: 50893335!
balance
	|totalBalance|
	
	totalBalance := 0.
	
	^transactions sum: [ :aTransaction | aTransaction addToBalance  ] ifEmpty: [ 0 ]
	
	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 20:42:48' prior: 50893628!
balance
	|totalBalance|
	
	totalBalance := 0.
	
	totalBalance := transactions sum: [ :aTransaction | aTransaction addToBalance: totalBalance  ].
	
	^ totalBalance. 
	
	! !
!Deposit methodsFor: 'value' stamp: 'ERMC 11/2/2020 20:43:47'!
addToBalance: aBalance

	^ aBalance  + value.! !

!methodRemoval: Deposit #addToBalance stamp: 'ERMC 11/2/2020 20:43:50'!
addToBalance

	^value!
!Withdraw methodsFor: 'value' stamp: 'ERMC 11/2/2020 20:44:09'!
addToBalance: aBalance

	^ aBalance - value. ! !

!methodRemoval: Withdraw #addToBalance stamp: 'ERMC 11/2/2020 20:44:11'!
addToBalance

	^ value negated!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:44:18'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:44:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:44:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 20:44:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 20:44:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 20:44:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 20:44:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:44:18'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:50:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:50:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 20:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 20:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 20:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 20:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:50:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:50:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:50:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 20:50:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 20:50:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 20:50:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 20:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:50:50'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:50:50'!
ERROR!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 20:56:23' prior: 50893636!
balance
	|totalBalance|
	
	totalBalance := 0.
	
	transactions sum: [ :aTransaction | aTransaction addToBalance: totalBalance  ].
	
	^ totalBalance. 
	
	! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:56:27'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:56:27'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 20:56:46' prior: 50893755!
balance
	|totalBalance|
	
	totalBalance := 0.
	
	totalBalance := transactions sum: [ :aTransaction | aTransaction addToBalance: totalBalance  ].
	
	^ totalBalance. 
	
	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/2/2020 20:57:41' prior: 50893771!
balance
	|totalBalance|
	
	totalBalance := 0.
	
	totalBalance := transactions sum: [ :aTransaction | aTransaction addToBalance: totalBalance  ] ifEmpty: [ 0 ].
	
	^ totalBalance. 
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 20:57:44'!
PASSED!

!testRun: #PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:58:45'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 20:58:45'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/2/2020 20:58:45'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/2/2020 20:58:45'!
FAILURE!

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/2/2020 20:58:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/2/2020 20:58:53'!
PASSED!

----QUIT----(2 November 2020 21:01:10) CuisUniversity-4384.image priorSource: 17907903!

----STARTUP---- (5 November 2020 15:55:41) as /home/edy/MI UNIDAD/CS_DC/IngSoft I/Smalltalk/CuisUniversity-4384.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 16:16:01' prior: 50893531!
test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio account |
		
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.

	portfolio := Portfolio with: account. 
	
	self assert: 100 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:16:06'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:16:25'!
with: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:19:41' prior: 50893886!
with: aReceptiveAccount 
	
	^ self new initializeWith: aReceptiveAccount .! !

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:19:43'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/5/2020 16:20:01'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:20:01'!
initializeWith: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:36:50' prior: 50893909!
initializeWith: aReceptiveAccount 

	receptiveAccount := aReceptiveAccount.! !

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:36:51'!
FAILURE!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/5/2020 16:38:33'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:38:40' prior: 50893916!
initializeWith: aReceptiveAccount 

	accounts := aReceptiveAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:41:20' prior: 50893498 overrides: 16896425!
initialize
	
	accounts := OrderedCollection new. ! !
!Portfolio methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:45:20' prior: 50893938!
initializeWith: aReceptiveAccount 
		
	accounts := aReceptiveAccount.! !

!testRun: #PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/5/2020 16:45:26'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:45:29'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:45:31'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:45:31'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'ERMC 11/5/2020 16:46:40' prior: 50893949!
initializeWith: aReceptiveAccount 
		
	self addAccount: aReceptiveAccount .! !

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:46:45'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 16:50:01' prior: 50893588!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
		
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: aPortfolio .
	
	
	self assert: 100 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 16:50:12' prior: 50893982!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
		
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: aPortfolio.
	
	
	self assert: 100 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 16:50:37' prior: 50893996!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
		
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: aPortfolio.
	
	
	self assert: 50 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 16:50:39'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 16:51:23' prior: 50894010!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount .

	portfolio := Portfolio with: aPortfolio.
	
	
	self assert: 50 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 16:51:24' prior: 50894029!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount.

	portfolio := Portfolio with: aPortfolio.
	
	
	self assert: 50 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 16:51:41'!
PASSED!

!testRun: #PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/5/2020 16:51:41'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:51:41'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 16:51:41'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 16:51:41'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 20:21:25'!
test01APortfolioHaveZeroAsBalanceWhenCreated 

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
! !

!methodRemoval: PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/5/2020 20:21:31'!
test01APorfolioHaveZeroAsBalanceWhenCreated 

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 20:45:04' prior: 50894044!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio aPortfolioA aPortfolioB |
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolioA := Portfolio with: anAccount.
	aPortfolioB := Portfolio with: aPortfolioA.
	
	portfolio := Portfolio with: aPortfolio.
	
	
	self assert: 50 equals: portfolio balance.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 20:45:22' prior: 50894095!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolioA aPortfolioB |
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolioA := Portfolio with: anAccount.
	aPortfolioB := Portfolio with: aPortfolioA.
	
	portfolio := Portfolio with: aPortfolioB.
	
	
	self assert: 50 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 20:45:26'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/5/2020 20:45:26'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 20:45:26'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 20:45:26'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 20:45:26'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 20:45:29'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/5/2020 20:45:29'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 20:45:29'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/5/2020 20:45:29'!
PASSED!

!testRun: #PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/5/2020 20:45:29'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 20:53:13'!
test05APortfolioKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 20:53:50' prior: 50894169!
test05APortfolioKnowsRegisteredTransactions 

	| portfolio anAccount aPortfolio |
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount.
	
	portfolio := Portfolio with: aPortfolio .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/5/2020 22:44:21' prior: 50894182!
test05APortfolioKnowsRegisteredTransactions 

	| portfolio anAccount aPortfolio |
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount.
	
	portfolio := Portfolio with: aPortfolio .
		
	"self assert: (Portfolio hasRegistered: deposit).
	self assert: (Portfolio hasRegistered: withdraw)."
! !

----STARTUP---- (6 November 2020 17:54:27) as /home/edy/MI UNIDAD/CS_DC/IngSoft I/Smalltalk/CuisUniversity-4384.image!

!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/6/2020 17:56:54' prior: 50893780!
balance
	|totalBalance|
"	
	totalBalance := 0."
	
	totalBalance := transactions sum: [ :aTransaction | aTransaction addToBalance: totalBalance  ] ifEmpty: [ 0 ].
	
	^ totalBalance. 
	
	! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/6/2020 17:57:00'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/6/2020 17:57:00'!
ERROR!
!ReceptiveAccount methodsFor: 'balance' stamp: 'ERMC 11/6/2020 17:57:13' prior: 50893870!
balance
	|totalBalance|
	
	totalBalance := 0.
	
	totalBalance := transactions sum: [ :aTransaction | aTransaction addToBalance: totalBalance  ] ifEmpty: [ 0 ].
	
	^ totalBalance. 
	
	! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/6/2020 17:57:16'!
PASSED!

!methodRemoval: PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 17:59:34'!
test02APortfolioWithOneAccountHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
		
	portfolio addAccount: account.
	

	self assert: 0 equals: portfolio balance.
!

----STARTUP---- (6 November 2020 18:03:09) as /home/edy/MI UNIDAD/CS_DC/IngSoft I/Smalltalk/CuisUniversity-4384.image!


!methodRemoval: PortfolioTest #test02APortfolioWithOneAccountHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:03:55'!
test02APortfolioWithOneAccountHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
		
	portfolio addAccount: account.
	

	self assert: 0 equals: portfolio balance.
!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/6/2020 18:10:33'!
test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio anAccount aPortfolio|
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	aPortfolio := Portfolio with: anAccount. 
	
	portfolio := Portfolio with: aPortfolio .
	
	self assert: 100 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:10:57'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ERMC 11/6/2020 18:11:14'!
with: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'initialization' stamp: 'ERMC 11/6/2020 18:11:32' prior: 50893899!
with: aReceptiveAccount 
	self new initializeWith: aReceptiveAccount .! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:11:35'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/6/2020 18:11:46'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialize' stamp: 'ERMC 11/6/2020 18:11:46'!
initializeWith: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!Portfolio methodsFor: 'initialize' stamp: 'ERMC 11/6/2020 18:12:12' prior: 50893921!
initializeWith: aReceptiveAccount 

	accounts := aReceptiveAccount.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/6/2020 18:13:07'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts receptiveAccount aReceptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialize' stamp: 'ERMC 11/6/2020 18:12:56' prior: 50893927!
initializeWith: anAccount 

	accounts := aReceptiveAccount.! !
!Portfolio methodsFor: 'initialize' stamp: 'ERMC 11/6/2020 18:14:13' prior: 50893941!
initializeWith: anAccount 
	
	accounts := OrderedCollection with: anAccount.! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:14:17'!
ERROR!
!Portfolio class methodsFor: 'initialization' stamp: 'ERMC 11/6/2020 18:15:28' prior: 50893904!
with: anAccount 

	^self new initializeWith: anAccount .! !

!testRun: #PortfolioTest #test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:15:39'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/6/2020 18:15:49'!
test01APortfolioHaveZeroAsBalanceWhenCreated 

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
! !

!methodRemoval: PortfolioTest #test01APorfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 18:15:49'!
test01APorfolioHaveZeroAsBalanceWhenCreated 

	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 18:16:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/6/2020 18:16:40'!
test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio anAccount aPortfolio|
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	aPortfolio := Portfolio with: anAccount. 
	
	portfolio := Portfolio with: aPortfolio .
	
	self assert: 100 equals: portfolio balance.
! !

!methodRemoval: PortfolioTest #test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:16:44'!
test02APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio anAccount aPortfolio|
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	aPortfolio := Portfolio with: anAccount. 
	
	portfolio := Portfolio with: aPortfolio .
	
	self assert: 100 equals: portfolio balance.
!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'ERMC 11/6/2020 18:23:26'!
test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount anAccount2 aPortfolioA aPortfolioB |
		
	anAccount := ReceptiveAccount new.
	anAccount2 := ReceptiveAccount new.
	
	Deposit register: 100 on: anAccount.
	Deposit register: 30 on: anAccount2.
	Withdraw register: 50 on: anAccount. 
	aPortfolioA := Portfolio with: anAccount.
	aPortfolioB := Portfolio with: aPortfolioA.
	
	portfolio := Portfolio with: aPortfolioB.
	portfolio add: anAccount2 . 
		
	self assert: 80 equals: portfolio balance.
! !

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:23:29'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:24:28'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:24:28'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:24:58'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:25:41'!
ERROR!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:25:41'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 18:27:16'!
add: anAccount

	accounts add: anAccount. ! !

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:27:36'!
PASSED!

!methodRemoval: PortfolioTest #test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:27:50'!
test03APortfolioWithOneAccountWithNonZeroBalanceHasTheBalanceOfTheAccount

	| portfolio account |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.

	portfolio addAccount: account.
	
	self assert: 100 equals: portfolio balance.
!

!methodRemoval: PortfolioTest #test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:28:38'!
test04APortfolioWithOnePortfolioWithNonZeroBalanceHasTheSumOfBalance

	| portfolio anAccount aPortfolio|
	
	portfolio := Portfolio new.
	
	aPortfolio := Portfolio new.
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
	portfolio addAccount: aPortfolio .
	
	
	self assert: 100 equals: portfolio balance.
!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:35:43'!
test04AnEmptyPortfolioDontKnowAnyTransaction

	
	| anAccount portfolio |
	portfolio := Portfolio new. 
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:37:01' prior: 50894093!
test04AnEmptyPortfolioDontKnowAnyTransaction

	| anAccount portfolio |
	portfolio := Portfolio new. 
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
	self deny: (portfolio hasRegister: anAccount)! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ERMC 11/6/2020 18:37:29'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:37:37' prior: 50894102!
test04AnEmptyPortfolioDontKnowAnyTransaction

	| anAccount portfolio |
	portfolio := Portfolio new. 
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	
	self deny: (portfolio hasRegistered: anAccount)! !

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 18:37:39'!
ERROR!
!Portfolio methodsFor: 'accesing' stamp: 'ERMC 11/6/2020 18:37:50'!
hasRegistered: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accesing' stamp: 'ERMC 11/6/2020 18:39:38' prior: 50894138!
hasRegistered: anAccount 
	
	^ false.! !

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 18:39:40'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 18:39:40'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:39:40'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:39:40'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 18:39:40'!
PASSED!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:43:04'!
test05PortfolioKnowsRegisteredTransactions 
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:46:46' prior: 50894167!
test05PortfolioKnowsRegisteredTransactions 

	| portfolio anAccount  aPortfolio  |
		
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount.
	

	
	portfolio := Portfolio with: aPortfolio.
		

! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:48:31' prior: 50894172!
test05PortfolioKnowsRegisteredTransactions 

	| portfolio anAccount  aPortfolio  aDeposit aWithdraw |
		
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount.
	
	portfolio := Portfolio with: aPortfolio.
	
	self assert: (portfolio hasRegistered: aDeposit).
	self assert: (portfolio hasRegistered: aWithdraw).
		
! !

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 18:48:37'!
FAILURE!
!Portfolio methodsFor: 'accesing' stamp: 'ERMC 11/6/2020 18:53:57' prior: 50894143!
hasRegistered: aTransaction 
	
	^ accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ] ! !

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 18:53:59'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 18:53:59'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:53:59'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:53:59'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 18:53:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 18:53:59'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ERMC 11/6/2020 18:54:27'!
PASSED!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 18:58:47'!
test06PortfolioWithManyAccountsKnowsRegisteredTransactions 

	| portfolio anAccount aSimpleAccount  aPortfolio  aDeposit aWithdraw  |
		
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	aPortfolio := Portfolio with: anAccount.
	
	aSimpleAccount := ReceptiveAccount new.
	Deposit register: 30 on: anAccount.
	
	portfolio := Portfolio with: aPortfolio.
	portfolio add: aSimpleAccount .
	
	self assert: (portfolio hasRegistered: aDeposit).
	self assert: (portfolio hasRegistered: aWithdraw).
		
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:03:40' prior: 50894281!
test06PortfolioWithManyAccountsKnowsRegisteredTransactions 

	| portfolio anAccount anAccount2 anAccount3  aPortfolio1 aPortfolio2  aDeposit aWithdraw  |
		
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	aPortfolio1 := Portfolio with: anAccount.
	
	anAccount2 := ReceptiveAccount new.
	Deposit register: 30 on: anAccount.
	
	anAccount3 := ReceptiveAccount new.
	Withdraw register: 60 on: anAccount3 .
	aPortfolio2 := Portfolio with: anAccount3.
	
	
	portfolio := Portfolio with: aPortfolio1.
	portfolio add: anAccount2.
	portfolio add: aPortfolio2.

	
	
	self assert: (portfolio hasRegistered: aDeposit).
	self assert: (portfolio hasRegistered: aWithdraw).
		
! !

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:03:42'!
PASSED!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:07:32' prior: 50894303!
test06PortfolioWithManyAccountsKnowsRegisteredTransactions 

	| portfolio anAccount anAccount2 anAccount3  aPortfolio1 aPortfolio2  aDeposit aWithdraw  |
		
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	aPortfolio1 := Portfolio with: anAccount.
	
	anAccount2 := ReceptiveAccount new.
	Deposit register: 30 on: anAccount.
	
	anAccount3 := ReceptiveAccount new.
	Withdraw register: 60 on: anAccount3 .
	aPortfolio2 := Portfolio with: anAccount3.
	
	portfolio := Portfolio with: aPortfolio1.
	portfolio add: anAccount2.
	portfolio add: aPortfolio2.

	self assert: (portfolio hasRegistered: aDeposit).
	self assert: (portfolio hasRegistered: aWithdraw).
		
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:15:17'!
test07AnEmptyPortfolioHasZeroTransaction

	|  portfolio |
	
	portfolio := Portfolio new. 
	
	self assert: 0 equals:  portfolio transactions size.
! !

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:15:18'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:15:27'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:15:52' prior: 50894394!
transactions
	
	^ []! !

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:15:54'!
FAILURE!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:16:10'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:16:29' prior: 50894398!
transactions
	
	^ OrderedCollection new. ! !

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:16:30'!
PASSED!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:19:06'!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio |
	
	portfolio := Portfolio new. 
	
	self assert: 0 equals:  portfolio transactions size.
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:19:57' prior: 50894444!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio aDeposit anAccount |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	
	portfolio := Portfolio with: anAccount. 
	
	self assert: 0 equals:  portfolio transactions size.
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:20:13' prior: 50894453!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio aDeposit aWithdraw anAccount |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: anAccount. 
	
	self assert: 0 equals:  portfolio transactions size.
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:20:30' prior: 50894465!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: anAccount. 
	
	self assert: 0 equals:  portfolio transactions size.
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:20:44' prior: 50894479!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount |
	
	anAccount := ReceptiveAccount new.
	Deposit register: 100 on: anAccount.
	Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: anAccount. 
	
	self assert: 2 equals:  portfolio transactions size.
! !
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:23:58' prior: 50894492!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount expectedResult aDeposit aWithdraw |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio := Portfolio with: anAccount. 
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:24:04'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:24:22'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:30:43' prior: 50894409!
transactions
	|transactions|
	transactions _ Set new.
	^ accounts do: [:anAccount | anAccount transactions asSet mergeWith: transactions  ] ! !
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:36:37' prior: 50894529!
transactions
	|transactions|
	transactions _ Set new.
	^ accounts do: [:anAccount | transactions union: anAccount transactions asSet  ] ! !

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:37:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:37:42'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:37:42'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:45:01' prior: 50894537!
transactions
	|transactions|
	transactions _ Set new.
	 accounts do: [:anAccount | transactions union: anAccount transactions asSet  ].
	
	^ transactions .! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:45:10'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:45:10'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:48:08' prior: 50894579!
transactions
	|transactions|
	transactions _ Set new.
	 accounts do: [:anAccount | transactions add: (anAccount transactions asSet ) ].
	
	^ transactions .! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:48:12'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:49:05' prior: 50894595!
transactions
	|transactions|
	transactions _ Set new.
	 accounts do: [:anAccount | transactions union: (anAccount transactions asSet ) ].
	
	^ transactions .! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:49:09'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:49:09'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:53:13' prior: 50894607!
transactions
	|transactions|
	transactions _ Set new.
	 accounts do: [:anAccount | anAccount transactions do: [:aTransaction | transactions add: aTransaction ]].
		
	^ transactions .! !
!Portfolio methodsFor: 'accessing' stamp: 'ERMC 11/6/2020 19:53:15' prior: 50894623!
transactions
	|transactions|
	
	transactions _ Set new.
	 accounts do: [:anAccount | anAccount transactions do: [:aTransaction | transactions add: aTransaction ]].
		
	^ transactions .! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:53:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:53:28'!
PASSED!
!PortfolioTest methodsFor: 'test - balance' stamp: 'ERMC 11/6/2020 19:56:35' prior: 50894505!
test08PortfolioWithOneAccountKnewTheAccountTransactions

	|  portfolio anAccount expectedResult aDeposit aWithdraw portfolio2 portfolio3 |
	
	anAccount := ReceptiveAccount new.
	aDeposit := Deposit register: 100 on: anAccount.
	aWithdraw := Withdraw register: 50 on: anAccount. 
	
	portfolio3 := Portfolio with: anAccount. 
	portfolio2 := Portfolio with: portfolio3. 
	portfolio := Portfolio with: portfolio2.  
	
	expectedResult := Set with: aDeposit with: aWithdraw. 
	
	self assert: expectedResult equals:  portfolio transactions.

	! !

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:56:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test01APortfolioHaveZeroAsBalanceWhenCreated stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test02APortfolioWithOnePortfolioWithNonZeroBalanceHasTheBalanceOfTheAccount stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test03APortfolioWithManyAccountWithNonZeroBalanceHasTheSumOfBalance stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test04AnEmptyPortfolioDontKnowAnyTransaction stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithManyAccountsKnowsRegisteredTransactions stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test07AnEmptyPortfolioHasZeroTransaction stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountKnewTheAccountTransactions stamp: 'ERMC 11/6/2020 19:58:44'!
PASSED!