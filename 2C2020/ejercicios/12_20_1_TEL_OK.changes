

Object subclass: #TerniLapilli
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'nt 10/31/2020 15:43:42'!
Object subclass: #TerniLapilli
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliTest category: 'TerniLapilli' stamp: 'nt 10/31/2020 15:44:19'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilliTest methodsFor: 'no messages' stamp: 'nt 10/31/2020 15:48:51'!
test01PieceInTheCenterPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.! !

----SNAPSHOT----(31 October 2020 16:04:54) CuisUniversity-4384.image priorSource: 17202829!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:05:21'!
test02PieceInTheCenterPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:07:28' prior: 50869359!
test01PieceInTheCenterPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putOAt:0@0! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:09:55' prior: 50869382!
test01PieceInTheCenterPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:10:36'!
test01InvalidStartPlayer
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]! !

!methodRemoval: TerniLapilliTest #test01PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:10:49'!
test01PieceInTheCenterPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]!
!TerniLapilli class methodsFor: 'no messages' stamp: 'nt 10/31/2020 16:14:21'!
invalidPlayerErrorDescription	
^'A player try to make a move in a wrong turn'.! !
!TerniLapilli methodsFor: 'no messages' stamp: 'nt 10/31/2020 16:15:54'!
putOAt:aPoint
	self shouldBeImplemented! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:16:20' prior: 50869431!
putOAt:aPoint
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:16:32'!
putXAt:aPoint
	! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 16:16:48'!
FAILURE!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:16:48'!
FAILURE!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:19:04' prior: 50869436!
putOAt:aPoint
	self error: TerniLapilli invalidPlayerErrorDescription! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 16:19:26'!
PASSED!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:19:45'!
ERROR!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:19:45'!
ERROR!
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 16:21:03'!
occupiedPositionErrorDescription
	self shouldBeImplemented.! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 16:22:58' prior: 50869464!
occupiedPositionErrorDescription
	^'La posici�n ya est� ocupada'! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 16:24:20'!
PASSED!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:24:20'!
FAILURE!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:24:20'!
FAILURE!

Object subclass: #TerniLapilli
	instanceVariableNames: 'board'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'nt 10/31/2020 16:29:56'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'board'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:31:50' overrides: 16896425!
initialize
	"comment stating purpose of message"

	| temporary variable names |
	board:= OrderedCollection new.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:32:13' prior: 50869496 overrides: 16896425!
initialize
	
	board:= OrderedCollection new.! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 16:32:37'!
PASSED!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:32:37'!
FAILURE!

!testRun: #TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:32:37'!
FAILURE!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:33:44'!
test02PutTokenAtOccupiedPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription]! !

!methodRemoval: TerniLapilliTest #test02PieceInTheCenterPosition stamp: 'nt 10/31/2020 16:33:59'!
test02PieceInTheCenterPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription]!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:40:39' prior: 50869440!
putXAt:aPoint
board add:(aPoint->'X')! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:41:56' prior: 50869504 overrides: 16896425!
initialize
	
	board:= Dictionary  new.! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 16:44:19'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 16:44:20'!
FAILURE!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 16:44:20'!
FAILURE!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:46:05' prior: 50869450!
putOAt:aPoint
board add:(aPoint->'O').
self error: TerniLapilli invalidPlayerErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:48:55'!
isOccupied:aPosition
^board includesKey:aPosition! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:58:39'!
validatePosition:aPosition
(self isOccupied:aPosition)  ifTrue:[self error: 'occupiedPositionErrorDescription' ]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 16:59:38' prior: 50869574!
validatePosition:aPosition
(self isOccupied:aPosition)  ifTrue:[self error: TerniLapilli occupiedPositionErrorDescription ]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:01:00' prior: 50869544!
putXAt:aPoint
self validatePosition:aPoint.
board add:(aPoint->'X')! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:01:41' prior: 50869563!
putOAt:aPoint
self validatePosition:aPoint.
board add:(aPoint->'O').
self error: TerniLapilli invalidPlayerErrorDescription! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 17:01:55'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 17:01:55'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:05:05'!
test03PutTokenAtOccupiedPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:06:52' prior: 50869402!
test01InvalidStartPlayer
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	self assert: (terniLapilli isPlayingX).
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:08:03'!
isPlayingX
	^true! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:08:24'!
isPlayingO
	^false! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerXTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'nt 10/31/2020 17:09:31'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerXTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'nt 10/31/2020 17:10:01' prior: 50869549 overrides: 16896425!
initialize
	
	board:= Dictionary  new.
	playerXTurn:= true.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:11:33'!
passTurn
	! !

----SNAPSHOT----(31 October 2020 17:12:21) CuisUniversity-4384.image priorSource: 17206875!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:13:47' prior: 50869660!
passTurn
playerXTurn:=playerXTurn not
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:15:14' prior: 50869634!
isPlayingX
	^playerXTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:15:51' prior: 50869638!
isPlayingO
	^playerXTurn not. ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:17:43' prior: 50869594!
putOAt:aPoint
self validatePosition:aPoint.
playerXTurn ifTrue:[].
board add:(aPoint->'O').
self error: TerniLapilli invalidPlayerErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:18:48' prior: 50869681!
putOAt:aPoint
self validatePosition:aPoint.
playerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription].
board add:(aPoint->'O').
! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:19:08' prior: 50869689!
putOAt:aPoint
self validatePosition:aPoint.
playerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription].
board add:(aPoint->'O').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:19:45' prior: 50869588!
putXAt:aPoint
self validatePosition:aPoint.
playerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription].
board add:(aPoint->'O').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:21:00'!
validateTurn

	^ playerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:21:00' prior: 50869706!
putXAt:aPoint
self validatePosition:aPoint.
self validateTurn.
board add:(aPoint->'O').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:22:51'!
validateTurn:isPlayerXTurn

	^ isPlayerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription]! !

!methodRemoval: TerniLapilli #validateTurn stamp: 'nt 10/31/2020 17:23:19'!
validateTurn

	^ playerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription]!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:24:16' prior: 50869721!
putXAt:aPoint
self validatePosition:aPoint.
self validateTurn:(playerXTurn not).
board add:(aPoint->'O').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:26:39' prior: 50869697!
putOAt:aPoint
self validatePosition:aPoint.
self validateTurn:(playerXTurn).
board add:(aPoint->'O').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:27:01' prior: 50869739!
putXAt:aPoint
self validatePosition:aPoint.
self validateTurn:(playerXTurn not).
board add:(aPoint->'X').
self passTurn! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:35:28'!
test03InvalidPositionOutsideBoardLimits
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.

	self should:[terniLapilli putXAt:3@3]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli positionOutsideBoardLimits]! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 17:37:09'!
positionOutsideBoardLimits
	
	'La posici�n est� fuera de los l�mites del teclado'! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 17:37:36' prior: 50869771!
positionOutsideBoardLimits
	
	'La posici�n est� fuera de los l�mites del tablero'! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 17:37:45' prior: 50869777!
positionOutsideBoardLimits
	
	^'La posici�n est� fuera de los l�mites del tablero'! !

!methodRemoval: TerniLapilliTest #test03PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 17:38:21'!
test03PutTokenAtOccupiedPosition
	"comment stating purpose of message"

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	self should:[terniLapilli putOAt:0@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription]!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:41:37' prior: 50869581!
validatePosition:aPosition
(self isOccupied:aPosition)  ifTrue:[self error: TerniLapilli occupiedPositionErrorDescription ].
(aPosition x between:0 and:2) and:(aPosition y between:0 and:2)! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:43:35' prior: 50869802!
validatePosition:aPosition
(self isOccupied:aPosition)  ifTrue:[self error: TerniLapilli occupiedPositionErrorDescription ].
((aPosition x between:0 and:2) and:(aPosition y between:0 and:2)) ifFalse: [self error: TerniLapilli occupiedPositionErrorDescription ]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:44:39' prior: 50869812!
validatePosition:aPosition
(self isOccupied:aPosition)  ifTrue:[self error: TerniLapilli occupiedPositionErrorDescription ].
((aPosition x between:0 and:2) and:(aPosition y between:0 and:2)) ifFalse: [self error: TerniLapilli positionOutsideBoardLimits]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 17:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 17:44:53'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 17:44:53'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:50:11'!
test04MaxTokenAmountPerPlayerIsThree
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.

	self should:[terniLapilli putXAt:3@3]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli positionOutsideBoardLimits]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:58:41'!
amountOfTokenPlayerXPuted

	^ board values occurrencesOf: 'x' ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 17:59:08'!
amountOfTokenPlayerOPuted

	^ board values occurrencesOf: 'O' ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:00:09'!
amountOfTokenPuteByPlayerO

	^ board values occurrencesOf: 'O' ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:01:05'!
amountOfTokenPutedByPlayerO

	^ board values occurrencesOf: 'O' ! !

!methodRemoval: TerniLapilli #amountOfTokenPlayerOPuted stamp: 'nt 10/31/2020 18:01:18'!
amountOfTokenPlayerOPuted

	^ board values occurrencesOf: 'O' !

!methodRemoval: TerniLapilli #amountOfTokenPlayerXPuted stamp: 'nt 10/31/2020 18:01:25'!
amountOfTokenPlayerXPuted

	^ board values occurrencesOf: 'x' !

!methodRemoval: TerniLapilli #amountOfTokenPuteByPlayerO stamp: 'nt 10/31/2020 18:01:36'!
amountOfTokenPuteByPlayerO

	^ board values occurrencesOf: 'O' !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:01:55'!
amountOfTokenPutedByPlayerX

	^ board values occurrencesOf: 'X' ! !

!classDefinition: 'TerniLapilli class' category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:06:39'!
TerniLapilli class
	instanceVariableNames: 'board'!

board values occurrencesOf: 'X'!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:08:15' prior: 50869845!
test04MaxTokenAmountPerPlayerIsThree
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	self putXAt:1@1.

	self should:[terniLapilli putXAt:3@3]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli positionOutsideBoardLimits]! !

----SNAPSHOT----(31 October 2020 18:15:47) CuisUniversity-4384.image priorSource: 17216397!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:17:21' prior: 50869903!
test04MaxTokenAmountPerPlayerIsThree
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:1@1.
	terniLapilli putOAt:1@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:0@2.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:1@0.
	
	self should:[terniLapilli putXAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli maxAumontOfTokenExedeed]! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 18:19:43'!
maxAmountOfTokenExedeed
^'La cantidad m�xima de fichas por jugador es 3'.! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:20:40' prior: 50869918!
test04MaxTokenAmountPerPlayerIsThree
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:1@1.
	terniLapilli putOAt:1@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:0@2.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:1@0.
	
	self should:[terniLapilli putXAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli maxAmountOfTokenExedeed]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:25:07' prior: 50869753!
putXAt:aPoint
self validatePosition:aPoint.
self validateTurn:(playerXTurn not).
self validateAmount:'X'.
board add:(aPoint->'X').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:26:14' prior: 50869746!
putOAt:aPoint
self validatePosition:aPoint.
self validateTurn:(playerXTurn).
self validateAmount:'O'.
board add:(aPoint->'O').
self passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:27:28'!
validateAmount: aPlayer
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:28:47'!
amountOfTokenPutedByPlayer:aPlayer

	^ board values occurrencesOf: aPlayer ! !

!methodRemoval: TerniLapilli #amountOfTokenPutedByPlayerO stamp: 'nt 10/31/2020 18:29:04'!
amountOfTokenPutedByPlayerO

	^ board values occurrencesOf: 'O' !

!methodRemoval: TerniLapilli #amountOfTokenPutedByPlayerX stamp: 'nt 10/31/2020 18:29:48'!
amountOfTokenPutedByPlayerX

	^ board values occurrencesOf: 'X' !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:34:02' prior: 50869971!
validateAmount: aPlayer

((self amountOfTokenPutedByPlayer:aPlayer) >3) ifTrue:[self error: TerniLapilli maxAmountOfTokenExedeed ]
	! !

----SNAPSHOT----(31 October 2020 18:34:09) CuisUniversity-4384.image priorSource: 17224430!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 18:34:51'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 18:34:51'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 18:34:51'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 18:34:51'!
FAILURE!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 18:34:51'!
FAILURE!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:36:45' prior: 50869991!
validateAmount: aPlayer

((self amountOfTokenPutedByPlayer:aPlayer) >2) ifTrue:[self error: TerniLapilli maxAmountOfTokenExedeed ]
	! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 18:37:06'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 18:37:06'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 18:37:06'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 18:37:06'!
PASSED!

Object subclass: #PlayerTurn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlayerTurn category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:39:42'!
Object subclass: #PlayerTurn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

PlayerTurn subclass: #PlayerXTurn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlayerXTurn category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:40:13'!
PlayerTurn subclass: #PlayerXTurn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

PlayerTurn subclass: #PlayerOTurn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlayerOTurn category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:40:20'!
PlayerTurn subclass: #PlayerOTurn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!PlayerTurn methodsFor: 'no messages' stamp: 'nt 10/31/2020 18:41:52'!
isPlayingX
	! !
!PlayerTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:42:07'!
isPlayingO
	! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:43:07' overrides: 50870074!
isPlayingO
	! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:43:07' overrides: 50870074!
isPlayingO
	! !

!methodRemoval: PlayerTurn #isPlayingO stamp: 'nt 10/31/2020 18:43:07'!
isPlayingO
	!
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:43:32' overrides: 50870071!
isPlayingX
	! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:43:32' overrides: 50870071!
isPlayingX
	! !

!methodRemoval: PlayerTurn #isPlayingX stamp: 'nt 10/31/2020 18:43:32'!
isPlayingX
	!
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:44:06' prior: 50870082!
isPlayingO
	^true.! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:44:24'!
messageSelectorAndArgumentNames
	^false.! !

!methodRemoval: PlayerOTurn #messageSelectorAndArgumentNames stamp: 'nt 10/31/2020 18:44:39'!
messageSelectorAndArgumentNames
	^false.!
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:44:59' prior: 50870093!
isPlayingX
	^false.! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:45:18' prior: 50870078!
isPlayingO
	^false.! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:45:41' prior: 50870089!
isPlayingX
	^true.! !
!PlayerTurn methodsFor: 'no messages' stamp: 'nt 10/31/2020 18:47:07'!
passTurn
	! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:47:30' overrides: 50870124!
passTurn
	! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:47:30' overrides: 50870124!
passTurn
	! !

!methodRemoval: PlayerTurn #passTurn stamp: 'nt 10/31/2020 18:47:30'!
passTurn
	!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:48:21'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerXTurn playerTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'nt 10/31/2020 18:48:18' prior: 50869655 overrides: 16896425!
initialize
	
	board:= Dictionary  new.
	playerTurn:= true.! !
!TerniLapilli methodsFor: 'initialization' stamp: 'nt 10/31/2020 18:48:52' prior: 50870147 overrides: 16896425!
initialize
	
	board:= Dictionary  new.
	playerTurn:= PlayerXTurn new.! !

Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:49:30'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerTurn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

Object subclass: #PlayerTurn
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #PlayerTurn category: 'TerniLapilli' stamp: 'nt 10/31/2020 18:50:21'!
Object subclass: #PlayerTurn
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!PlayerTurn class methodsFor: 'no messages' stamp: 'nt 10/31/2020 18:52:25'!
newWith:aGame
	self new initializeWith:aGame! !
!PlayerTurn methodsFor: 'no messages' stamp: 'nt 10/31/2020 18:54:09'!
initializeWith:aGame! !
!PlayerTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:55:13' prior: 50870186!
initializeWith:aGame

terniLapilliGame:= aGame ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:58:51'!
playerXTurnStart
playerTurn:=PlayerXTurn newWith:self.
	! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 18:59:17'!
playerOTurnStart
playerTurn:=PlayerOTurn newWith:self.
	! !

----SNAPSHOT----(31 October 2020 19:01:39) CuisUniversity-4384.image priorSource: 17227111!
!TerniLapilli methodsFor: 'initialization' stamp: 'nt 10/31/2020 19:01:44' prior: 50870153 overrides: 16896425!
initialize
	
	board:= Dictionary  new.
	self playerXTurnStart! !

----SNAPSHOT----(31 October 2020 19:01:52) CuisUniversity-4384.image priorSource: 17233723!

!methodRemoval: TerniLapilli #passTurn stamp: 'nt 10/31/2020 19:03:38'!
passTurn
playerXTurn:=playerXTurn not
	!
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:04:56' prior: 50870132!
passTurn
	terniLapilliGame playerXTurnStart ! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:06:00' prior: 50870128!
passTurn
	terniLapilliGame playerOTurnStart ! !

----SNAPSHOT----(31 October 2020 19:06:05) CuisUniversity-4384.image priorSource: 17234016!
!PlayerTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:07:09'!
putXAt:aPoint
	! !
!PlayerTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:07:16'!
putOAt:aPoint
	! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:07:24' overrides: 50870237!
putOAt:aPoint
	! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:07:24' overrides: 50870237!
putOAt:aPoint
	! !

!methodRemoval: PlayerTurn #putOAt: stamp: 'nt 10/31/2020 19:07:24'!
putOAt:aPoint
	!
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:07:56' overrides: 50870233!
putXAt:aPoint
	! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:07:56' overrides: 50870233!
putXAt:aPoint
	! !

!methodRemoval: PlayerTurn #putXAt: stamp: 'nt 10/31/2020 19:07:56'!
putXAt:aPoint
	!
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:09:54' prior: 50870256!
putXAt:aPoint
	self error: TerniLapilli invalidPlayerErrorDescription! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:10:53' prior: 50870241!
putOAt:aPoint
	self error: TerniLapilli invalidPlayerErrorDescription! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:14:37'!
put:aPlayerToken  At:aPoint
self validatePosition:aPoint.
self validateAmount:aPlayerToken.
board add:(aPoint->aPlayerToken).
playerTurn passTurn! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:16:17' prior: 50870245!
putOAt:aPoint
	terniLapilliGame put: 'O' At:aPoint! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:17:02' prior: 50870252!
putXAt:aPoint
	terniLapilliGame put: 'X' At:aPoint! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:19:15' prior: 50869963!
putOAt:aPoint
playerTurn putOAt:aPoint! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:19:55' prior: 50869955!
putXAt:aPoint
playerTurn putOAt:aPoint! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:20:06' prior: 50870297!
putXAt:aPoint
playerTurn putXAt:aPoint! !

----SNAPSHOT----(31 October 2020 19:20:23) CuisUniversity-4384.image priorSource: 17234543!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 19:20:34'!
ERROR!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 19:20:34'!
ERROR!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 19:20:34'!
FAILURE!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 19:20:34'!
ERROR!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 19:21:10'!
ERROR!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:22:33' prior: 50869676!
isPlayingO
	^playerTurn isPlayingO ! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:22:52' prior: 50869672!
isPlayingX
	^playerTurn isPlayingX! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 19:23:17'!
ERROR!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 19:23:17'!
ERROR!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 19:23:17'!
FAILURE!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 19:23:17'!
ERROR!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 19:23:42'!
ERROR!
!PlayerTurn class methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:25:47' prior: 50870182!
newWith:aGame
	^self new initializeWith:aGame! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 19:26:00'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 19:26:00'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 19:26:00'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 19:26:00'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:41:28'!
test05checkIfGameIsOverBecauseAPlayerWon
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:0@2.

	self should:[terniLapilli putOAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 10/31/2020 19:42:51'!
gameIsOver
^'El juego ya termin�'.! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 10/31/2020 19:43:24'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 10/31/2020 19:43:24'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 10/31/2020 19:43:24'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 10/31/2020 19:43:24'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 10/31/2020 19:43:24'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 10/31/2020 19:43:24'!
FAILURE!

!methodRemoval: TerniLapilli #validateTurn: stamp: 'nt 10/31/2020 19:44:32'!
validateTurn:isPlayerXTurn

	^ isPlayerXTurn ifTrue:[self error: TerniLapilli invalidPlayerErrorDescription]!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 19:51:02'!
isGameWon
! !

Object subclass: #MagicSquare
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #MagicSquare category: 'TerniLapilli' stamp: 'nt 10/31/2020 20:15:08'!
Object subclass: #MagicSquare
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

Object subclass: #MagicSquare
	instanceVariableNames: 'square'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #MagicSquare category: 'TerniLapilli' stamp: 'nt 10/31/2020 20:15:57'!
Object subclass: #MagicSquare
	instanceVariableNames: 'square'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!MagicSquare methodsFor: 'no messages' stamp: 'nt 10/31/2020 20:22:45' overrides: 16896425!
initialize
	square:=Dictionary new.
	square add:0@0->4.
	square add:1@0->9.
	square add:2@0->2.
	square add:0@1->3.
	square add:0@2->8.
	square add:1@1->5.
	square add:1@2->1.
	square add:2@1->7.
	square add:2@2->6.! !
!MagicSquare methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:29:07'!
checkGameOver:aCollectionOfPositions
	|sum|
	aCollectionOfPositions collect:[:aPosition|sum:=sum+(square at:aPosition)]! !
!MagicSquare methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:30:51' prior: 50870450!
checkGameOver:aCollectionOfPositions
	|sum|
	aCollectionOfPositions collect:[:aPosition|sum:=sum+(square at:aPosition)].
	^sum=15! !

----SNAPSHOT----(31 October 2020 20:31:22) CuisUniversity-4384.image priorSource: 17236969!

----SNAPSHOT----(31 October 2020 20:31:28) CuisUniversity-4384.image priorSource: 17242020!

Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerTurn magicSquare'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilli category: 'TerniLapilli' stamp: 'nt 10/31/2020 20:32:37'!
Object subclass: #TerniLapilli
	instanceVariableNames: 'board playerTurn magicSquare'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapilli methodsFor: 'initialization' stamp: 'nt 10/31/2020 20:34:03' prior: 50870209 overrides: 16896425!
initialize
	
	board:= Dictionary  new.
	self playerXTurnStart.
	magicSquare:=MagicSquare new.! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:34:53' prior: 50870414!
isGameWon
^magicSquare! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:36:29' prior: 50870491!
isGameWon
^magicSquare checkGameOver:self! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:42:17' prior: 50870495!
isGameWon
^magicSquare checkGameOver:(board keys select:[:aPlayer|(board at:aPlayer )='O'])! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:42:46'!
gameWonBy

	^ magicSquare checkGameOver:(board keys select:[:aPlayer|(board at:aPlayer )='O'])! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:42:46' prior: 50870500!
isGameWon
^self gameWonBy! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 10/31/2020 20:44:20'!
gameWonBy:aWinner

	^ magicSquare checkGameOver:(board keys select:[:aPlayer|(board at:aPlayer )=aWinner])! !

----SNAPSHOT----(31 October 2020 20:55:30) CuisUniversity-4384.image priorSource: 17242113!

----STARTUP---- (1 November 2020 15:29:11) as C:\Users\Claudia\Desktop\Prueba\windows64\CuisUniversity-4384.image!

!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 15:31:55'!
tokensOnBoardFromPlayer: aWinner

	^ board keys select:[:aPlayer|(board at:aPlayer )=aWinner]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 15:31:55' prior: 50870517!
gameWonBy:aWinner

	^ magicSquare checkGameOver:(self tokensOnBoardFromPlayer: aWinner)! !

!methodRemoval: TerniLapilli #gameWonBy stamp: 'nt 11/1/2020 15:32:37'!
gameWonBy

	^ magicSquare checkGameOver:(board keys select:[:aPlayer|(board at:aPlayer )='O'])!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 15:34:33' prior: 50870513!
isGameWon
^(self gameWonBy:'O') or:( self gameWonBy:'X')! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:36:05'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:36:05'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:36:05'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:36:05'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:36:05'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:36:05'!
FAILURE!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:37:13'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:37:13'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:37:13'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:37:31'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:37:31'!
FAILURE!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:37:59'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:37:59'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:37:59'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:37:59'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:37:59'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:37:59'!
FAILURE!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:38:53'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:38:53'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:38:53'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:38:53'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:38:53'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:38:53'!
FAILURE!

----QUIT----(1 November 2020 15:39:41) CuisUniversity-4384.image priorSource: 17243917!

----STARTUP---- (1 November 2020 15:39:58) as C:\Users\Claudia\Desktop\Prueba\windows64\CuisUniversity-4384.image!


!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:40:16'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:40:16'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:40:16'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:40:16'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:40:16'!
FAILURE!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:40:16'!
FAILURE!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 15:43:23' prior: 50870274!
put:aPlayerToken  At:aPoint
self validatePosition:aPoint.
self validateAmount:aPlayerToken.
self validateGameOver.
board add:(aPoint->aPlayerToken).
playerTurn passTurn! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 15:45:27'!
validateGameOver

(self isGameWon) ifTrue:[self error: TerniLapilli gameIsOver ]
	! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:45:41'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:45:41'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:45:41'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:45:41'!
ERROR!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:45:41'!
ERROR!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:47:41'!
ERROR!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:47:41'!
ERROR!
!MagicSquare methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 15:49:32' prior: 50870457!
checkGameOver:aCollectionOfPositions
	|sum|
	sum:=0.
	aCollectionOfPositions collect:[:aPosition|sum:=sum+(square at:aPosition)].
	^sum=15! !

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:49:49'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:50:23'!
ERROR!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:50:23'!
ERROR!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 15:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 15:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 15:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 15:52:12'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:52:12'!
ERROR!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 15:52:12'!
ERROR!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 16:00:03'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 16:00:03'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 16:00:03'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 16:00:03'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 16:00:03'!
ERROR!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 16:00:03'!
ERROR!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:12:17' prior: 50870530!
tokensOnBoardFromPlayer: aWinner

	^ board keys select:[:aPosition|(board at:aPosition )=aWinner]! !
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:13:35' prior: 50870763!
tokensOnBoardFromPlayer: aWinner

	^ (board keys select:[:aPosition|(board at:aPosition )=aWinner])! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 16:14:41'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 16:14:41'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 16:14:41'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 16:14:41'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 16:14:41'!
ERROR!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 16:14:41'!
ERROR!

TestCase subclass: #MagicSquareTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #MagicSquareTest category: 'TerniLapilli' stamp: 'nt 11/1/2020 16:25:26'!
TestCase subclass: #MagicSquareTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!MagicSquareTest methodsFor: 'no messages' stamp: 'nt 11/1/2020 16:28:45'!
test01
	|magicsquare|
	magicsquare:=MagicSquare new.
	magicsquare checkGameOver:#()! !
!MagicSquareTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:29:44' prior: 50870807!
test01
	|magicsquare|
	magicsquare:=MagicSquare new.
	magicsquare checkGameOver:#().
	self deny:(magicsquare checkGameOver:#())! !
!MagicSquareTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:30:08' prior: 50870813!
test01
	|magicsquare|
	magicsquare:=MagicSquare new.
	self deny:(magicsquare checkGameOver:#())! !

!testRun: #MagicSquareTest #test01 stamp: 'nt 11/1/2020 16:30:20'!
PASSED!
!MagicSquareTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:34:12' prior: 50870821!
test01
	|magicsquare|
	magicsquare:=MagicSquare new.
	self deny:(magicsquare checkGameOver:#(1@0 2@2))! !

!testRun: #MagicSquareTest #test01 stamp: 'nt 11/1/2020 16:34:18'!
ERROR!

!testRun: #MagicSquareTest #test01 stamp: 'nt 11/1/2020 16:34:18'!
ERROR!
!MagicSquareTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:42:09' prior: 50870830!
test01
	|magicsquare input|
	magicsquare:=MagicSquare new.
	input:=OrderedCollection new.
	input add:1@0.
	input add:2@2.
	
	self deny:(magicsquare checkGameOver:input)! !

!testRun: #MagicSquareTest #test01 stamp: 'nt 11/1/2020 16:42:14'!
FAILURE!

!testRun: #MagicSquareTest #test01 stamp: 'nt 11/1/2020 16:42:14'!
FAILURE!
!MagicSquare methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:46:45' prior: 50870705!
checkGameOver:aCollectionOfPositions
	|sum|
	(aCollectionOfPositions size ~=3 ) ifTrue:[^false].
	sum:=0.
	aCollectionOfPositions collect:[:aPosition|sum:=sum+(square at:aPosition)].
	^sum=15! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 16:47:27'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 16:47:27'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 16:47:27'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 16:47:27'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 16:47:27'!
PASSED!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 16:47:46'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 16:47:46'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 16:47:46'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 16:47:46'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 16:47:46'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:51:37'!
test06MakeAMoveWhenThereAre6TokenOnBoard
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:0@2.

	self should:[terniLapilli putOAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:54:24' prior: 50870898!
test06MakeAMoveWhenThereAre6TokenOnBoard
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@0.
	
	self should:[terniLapilli putOAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 16:55:11'!
test15MakeAMoveWhenThereAre6TokenOnBoard
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@0.
	
	self should:[terniLapilli putOAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:03:48'!
test06MakeAValidMovement

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@0.
	terniLapilli moveXFrom:0@0To:1@1.
	
	self assert:(terniLapilli isGameOver)! !

!methodRemoval: TerniLapilliTest #test06MakeAMoveWhenThereAre6TokenOnBoard stamp: 'nt 11/1/2020 17:04:16'!
test06MakeAMoveWhenThereAre6TokenOnBoard
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@0.
	
	self should:[terniLapilli putOAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:04:44' prior: 50870945!
test06MakeAValidMovement

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@0.
	terniLapilli moveXFrom:0@0To:1@1.
	
	self assert:(terniLapilli isGameWon)! !

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:04:57'!
ERROR!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:04:57'!
ERROR!
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:05:45'!
moveXFrom: aPoint To: aPoint2 
	self shouldBeImplemented.! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:07:41' prior: 50870992!
moveXFrom: aPoint To: aPoint2 
	playerTurn moveXFrom: aPoint To: aPoint2! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:08:33'!
moveOFrom: aPoint To: aPoint2 
	playerTurn moveOFrom: aPoint To: aPoint2! !
!PlayerTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:09:28'!
moveOFrom: aPoint To: aPoint2 ! !
!PlayerTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:09:42'!
moveXFrom: aPoint To: aPoint2 ! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:10:30' overrides: 50871007!
moveOFrom: aPoint To: aPoint2 ! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:10:30' overrides: 50871007!
moveOFrom: aPoint To: aPoint2 ! !

!methodRemoval: PlayerTurn #moveOFrom:To: stamp: 'nt 11/1/2020 17:10:30'!
moveOFrom: aPoint To: aPoint2 !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:10:39' overrides: 50871011!
moveXFrom: aPoint To: aPoint2 ! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:10:39' overrides: 50871011!
moveXFrom: aPoint To: aPoint2 ! !

!methodRemoval: PlayerTurn #moveXFrom:To: stamp: 'nt 11/1/2020 17:10:39'!
moveXFrom: aPoint To: aPoint2 !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:13:21' prior: 50871034!
moveXFrom: aPoint To: aPoint2 
self error: TerniLapilli invalidPlayerErrorDescription! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:13:33' prior: 50871016!
moveOFrom: aPoint To: aPoint2 
self error: TerniLapilli invalidPlayerErrorDescription! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:14:17' prior: 50871021!
moveOFrom: aPoint To: aPoint2 
	! !
!PlayerOTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:19:18' prior: 50871054!
moveOFrom: aPoint To: aPoint2 
	terniLapilliGame remove:'O'At:aPoint.
	terniLapilliGame put:'O'At:aPoint2! !
!PlayerXTurn methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:20:59' prior: 50871029!
moveXFrom: aPoint To: aPoint2 
terniLapilliGame remove:'X'At:aPoint.
terniLapilliGame put:'X'At:aPoint2! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:24:05'!
remove: aPlayer At:aPoint.
board removeKey:aPoint
	! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:26:39' prior: 50870974!
test06MakeAValidMovement

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
	terniLapilli moveXFrom:0@0To:1@1.
	
	self assert:(terniLapilli isGameWon)! !

!methodRemoval: TerniLapilliTest #test15MakeAMoveWhenThereAre6TokenOnBoard stamp: 'nt 11/1/2020 17:26:56'!
test15MakeAMoveWhenThereAre6TokenOnBoard
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@0.
	
	self should:[terniLapilli putOAt:2@0]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 17:27:03'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 17:27:03'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 17:27:03'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 17:27:03'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 17:27:03'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:27:03'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:33:03'!
test07MakeAMovementOutOfTurn

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
	terniLapilli moveOFrom:0@0To:1@1.
	
	self assert:(terniLapilli isGameWon)! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:34:39' prior: 50871125!
test07MakeAMovementOutOfTurn

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveOFrom:0@0To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 17:35:23'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 17:35:23'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 17:35:23'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 17:35:23'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 17:35:23'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:35:23'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 17:35:23'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:41:03'!
test08MakeAMovementBeforeFillingTheBoard

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
		
	self should:[terniLapilli moveOFrom:2@2To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription]! !

----SNAPSHOT----(1 November 2020 17:42:42) CuisUniversity-4384.image priorSource: 17247671!
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 11/1/2020 17:43:01'!
invalidBoardStateErrorDescription
^'Movimiento inv�lido.El tablero est� incompleto'! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 17:43:25'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 17:43:25'!
FAILURE!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 17:43:25'!
FAILURE!
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:45:50' prior: 50871072!
remove: aPlayer At:aPoint.
self validBoardState.
board removeKey:aPoint
	! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:46:04' prior: 50871230!
remove: aPlayer At:aPoint.
self validateBoardState.
board removeKey:aPoint
	! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:47:13' prior: 50871235!
remove: aPlayer At:aPoint.
self validateBoardState:aPlayer At:aPoint.
board removeKey:aPoint
	! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:49:41'!
validateBoardState:aPlayer At:aPoint.
(board size=6) ifFalse:[self error]
	! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 17:50:45' prior: 50871247!
validateBoardState:aPlayer At:aPoint.
(board size=6) ifFalse:[self error: TerniLapilli invalidBoardStateErrorDescription ]
	! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 17:52:47'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 17:52:47'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 17:52:47'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 17:52:47'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 17:52:47'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:52:48'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 17:52:48'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 17:52:48'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:55:41'!
test09APlayerTriesToMoveATokenFromAnotherPlayer

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveOFrom:0@0To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:56:26' prior: 50871138!
test07MakeAMovementOutOfTurn

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveOFrom:2@2To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 17:57:33' prior: 50871286!
test09APlayerTriesToMoveATokenFromAnotherPlayer

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveOFrom:0@0To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription ]! !
!TerniLapilli class methodsFor: 'Error' stamp: 'nt 11/1/2020 17:58:20' prior: 50871195!
invalidBoardStateErrorDescription
^'Movimiento inv�lido.'! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 17:59:39'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 17:59:39'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 17:59:39'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 17:59:39'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 17:59:39'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 17:59:40'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 17:59:40'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 17:59:40'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 17:59:40'!
FAILURE!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 17:59:40'!
FAILURE!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:03:38' prior: 50871253!
validateBoardState:aPlayer At:aPoint.
(board size=6) ifFalse:[self error: TerniLapilli invalidBoardStateErrorDescription ].
((board at:aPoint)=aPlayer) ifFalse:[self error: TerniLapilli invalidBoardStateErrorDescription]. 	! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:03:51'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:03:51'!
FAILURE!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:03:51'!
FAILURE!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:04:40'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:04:40'!
FAILURE!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:04:40'!
FAILURE!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:05:51' prior: 50871320!
test09APlayerTriesToMoveATokenFromAnotherPlayer

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveXFrom:2@2To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription ]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:06:04'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:06:04'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:07:17'!
test10APlayerTriesToMoveFromAnEmptyPosition

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveXFrom:2@2To:1@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription ]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:08:08' prior: 50871500!
test10APlayerTriesToMoveFromAnEmptyPosition

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:2@0.
		
	self should:[terniLapilli moveXFrom:1@1To:1@2.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription ]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:09:03'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:09:03'!
FAILURE!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:09:03'!
FAILURE!
!TerniLapilli methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:10:49' prior: 50871376!
validateBoardState:aPlayer At:aPoint.
(board size=6) ifFalse:[self error: TerniLapilli invalidBoardStateErrorDescription ].
((board at:aPoint ifAbsent:[self error: TerniLapilli invalidBoardStateErrorDescription])=aPlayer) ifFalse:[self error: TerniLapilli invalidBoardStateErrorDescription]. 	
! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:11:17'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:11:17'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:15:32'!
test11MakeAMovementToALongerDistance

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@0.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:0@2.
		
	self should:[terniLapilli moveXFrom:0@0To:2@2.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription ]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:15:59'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:15:59'!
FAILURE!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:15:59'!
FAILURE!
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 18:27:09'!
distanceEquals1From: aPoint To: aPoint2 
	^((aPoint - aPoint2) abs dotProduct: 1@1)=1! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 18:29:53' prior: 50871002!
moveOFrom: aPoint To: aPoint2 
(self distanceEquals1From: aPoint To: aPoint2) ifFalse:[self error: 	TerniLapilli invalidBoardStateErrorDescription ] .
playerTurn moveOFrom: aPoint To: aPoint2.! !
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 18:30:52' prior: 50870997!
moveXFrom: aPoint To: aPoint2 
(self distanceEquals1From: aPoint To: aPoint2) ifFalse:[self error: 	TerniLapilli invalidBoardStateErrorDescription ].
	playerTurn moveXFrom: aPoint To: aPoint2! !

----SNAPSHOT----(1 November 2020 18:31:00) CuisUniversity-4384.image priorSource: 17265331!
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 18:31:08' prior: 50871688!
moveXFrom: aPoint To: aPoint2 
(self distanceEquals1From: aPoint To: aPoint2) ifFalse:[self error: 	TerniLapilli invalidBoardStateErrorDescription ].
playerTurn moveXFrom: aPoint To: aPoint2! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:31:24'!
ERROR!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:31:24'!
FAILURE!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:31:24'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:31:24'!
PASSED!
!TerniLapilli methodsFor: 'Public' stamp: 'nt 11/1/2020 18:39:13' prior: 50871673!
distanceEquals1From: aPoint To: aPoint2 
	^(aPoint eightNeighbors includes:aPoint2)! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:39:24'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:39:24'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:43:57'!
test12MakeAMovementToAnOccupiedPosition
	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@0.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:0@2.
		
	self should:[terniLapilli moveXFrom:0@0To:2@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidBoardStateErrorDescription ]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:44:44' prior: 50871788!
test12MakeAMovementToAnOccupiedPosition
	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@0.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:0@2.
		
	self should:[terniLapilli moveXFrom:0@0To:2@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli invalidPlayerErrorDescription ]! !
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 18:46:06' prior: 50871805!
test12MakeAMovementToAnOccupiedPosition
	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@0.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:0@2.
		
	self should:[terniLapilli moveXFrom:0@0To:2@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription ]! !

----SNAPSHOT----(1 November 2020 18:49:56) CuisUniversity-4384.image priorSource: 17281474!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:50:22'!
PASSED!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 18:50:22'!
FAILURE!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 18:50:22'!
FAILURE!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:52:44'!
PASSED!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 18:52:45'!
FAILURE!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 18:52:45'!
FAILURE!

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 18:57:47'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 18:57:48'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 18:57:48'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 18:57:48'!
PASSED!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 18:57:48'!
FAILURE!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 18:57:48'!
FAILURE!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:00:40' prior: 50871822!
test12MakeAMovementToAnOccupiedPosition
	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@0.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:1@0.
	terniLapilli putXAt:2@1.
	terniLapilli putOAt:0@2.
		
	self should:[terniLapilli moveXFrom:0@0To:0@1.]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli occupiedPositionErrorDescription ]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 19:00:48'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 19:00:49'!
PASSED!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 19:00:49'!
PASSED!
!TerniLapilliTest methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:11:42'!
test13MakeAMovementeAfterTheGameIsOverBecauseAPlayerWon
	

	| terniLapilli|
	terniLapilli:= TerniLapilli new.
	terniLapilli putXAt:0@0.
	terniLapilli putOAt:2@2.
	terniLapilli putXAt:0@1.
	terniLapilli putOAt:2@0.
	terniLapilli putXAt:1@2.
	terniLapilli putOAt:2@1.

	self should:[terniLapilli moveXFrom: 1@2 To: 0@2]
	raise:Error
	withExceptionDo:[:anError| 
		self assert: anError  messageText=TerniLapilli gameIsOver]! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

!testRun: #TerniLapilliTest #test13MakeAMovementeAfterTheGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 19:11:53'!
PASSED!

----SNAPSHOT----(1 November 2020 19:18:38) CuisUniversity-4384.image priorSource: 17285995!

Object subclass: #DecoratorGameOver
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #DecoratorGameOver category: 'TerniLapilli' stamp: 'nt 11/1/2020 19:20:33'!
Object subclass: #DecoratorGameOver
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!DecoratorGameOver methodsFor: 'no messages' stamp: 'nt 11/1/2020 19:23:32'!
moveXFrom:aPoint To:aPoint2
	! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:23:40'!
moveOFrom:aPoint To:aPoint2
	! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:24:55'!
putOAt:aPoint 	! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:25:03'!
putXAt:aPoint 	! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:26:18'!
isPlayingO 	
 ! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:26:25'!
isPlayingX 	
 ! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:26:50'!
isGameWon 	
 ! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:27:24' prior: 50872127!
isGameWon 	
 ^true! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:27:45' prior: 50872119!
isPlayingO 	
 ^false! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:28:00' prior: 50872123!
isPlayingX 	
 ^false! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:28:45' prior: 50872107!
moveOFrom:aPoint To:aPoint2
	self error: TerniLapilli gameIsOver! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:29:04' prior: 50872103!
moveXFrom:aPoint To:aPoint2
	self error: TerniLapilli gameIsOver! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:29:14' prior: 50872111!
putOAt:aPoint 	
self error: TerniLapilli gameIsOver! !
!DecoratorGameOver methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:29:26' prior: 50872115!
putXAt:aPoint 	
self error: TerniLapilli gameIsOver! !

Object subclass: #DecoratorPutFace
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #DecoratorPutFace category: 'TerniLapilli' stamp: 'nt 11/1/2020 19:31:02'!
Object subclass: #DecoratorPutFace
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

DecoratorPutFace class
	instanceVariableNames: ''!

!classDefinition: 'DecoratorPutFace class' category: 'TerniLapilli' stamp: 'nt 11/1/2020 19:31:02'!
DecoratorPutFace class
	instanceVariableNames: ''!
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
isGameWon 	
 ^true! !
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
isPlayingO 	
 ^false! !
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
isPlayingX 	
 ^false! !
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
moveOFrom:aPoint To:aPoint2
	self error: TerniLapilli gameIsOver! !
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
moveXFrom:aPoint To:aPoint2
	self error: TerniLapilli gameIsOver! !
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
putOAt:aPoint 	
self error: TerniLapilli gameIsOver! !
!DecoratorPutFace methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:31:02'!
putXAt:aPoint 	
self error: TerniLapilli gameIsOver! !

!classRenamed: #DecoratorPutFace as: #DecoratorPutting stamp: 'nt 11/1/2020 19:31:38'!
Smalltalk renameClassNamed: #DecoratorPutFace as: #DecoratorPutting!
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:32:07' prior: 50872184!
isGameWon 	
 ^false! !
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:34:02' prior: 50872188!
isPlayingO 	
 terniLapilliGame isPlayingO! !
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:34:28' prior: 50872192!
isPlayingX
 terniLapilliGame isPlayingX! !
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:36:21' prior: 50872196!
moveOFrom:aPoint To:aPoint2
	self error: TerniLapilli  invalidBoardStateErrorDescription ! !
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:36:55' prior: 50872201!
moveXFrom:aPoint To:aPoint2
	self error: TerniLapilli  invalidBoardStateErrorDescription ! !
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:37:41' prior: 50872206!
putOAt:aPoint 	
terniLapilliGame putOAt:aPoint! !
!DecoratorPutting methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:10' prior: 50872211!
putXAt:aPoint 	
terniLapilliGame putXAt:aPoint! !

Object subclass: #DecoratorMoving
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #DecoratorMoving category: 'TerniLapilli' stamp: 'nt 11/1/2020 19:38:31'!
Object subclass: #DecoratorMoving
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

DecoratorMoving class
	instanceVariableNames: ''!

!classDefinition: 'DecoratorMoving class' category: 'TerniLapilli' stamp: 'nt 11/1/2020 19:38:31'!
DecoratorMoving class
	instanceVariableNames: ''!
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
isGameWon 	
 ^false! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
isPlayingO 	
 terniLapilliGame isPlayingO! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
isPlayingX
 terniLapilliGame isPlayingX! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
moveOFrom:aPoint To:aPoint2
	self error: TerniLapilli  invalidBoardStateErrorDescription ! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
moveXFrom:aPoint To:aPoint2
	self error: TerniLapilli  invalidBoardStateErrorDescription ! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
putOAt:aPoint 	
terniLapilliGame putOAt:aPoint! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:38:31'!
putXAt:aPoint 	
terniLapilliGame putXAt:aPoint! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:39:43' prior: 50872289!
moveOFrom:aPoint To:aPoint2
	terniLapilliGame moveOFrom:aPoint To:aPoint2 ! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:39:57' prior: 50872295!
moveXFrom:aPoint To:aPoint2
	terniLapilliGame moveXFrom:aPoint To:aPoint2 ! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:41:56' prior: 50872301!
putOAt:aPoint 	
self error: TerniLapilli maxAmountOfTokenExedeed ! !
!DecoratorMoving methodsFor: 'as yet unclassified' stamp: 'nt 11/1/2020 19:42:11' prior: 50872306!
putXAt:aPoint 	
self error: TerniLapilli maxAmountOfTokenExedeed! !

----SNAPSHOT----(1 November 2020 19:42:16) CuisUniversity-4384.image priorSource: 17293989!
!DecoratorGameOver methodsFor: 'initialization' stamp: 'nt 11/1/2020 19:44:17'!
initializeWith:aGame
	terniLapilliGame:=aGame! !
!DecoratorMoving methodsFor: 'initialization' stamp: 'nt 11/1/2020 19:45:51'!
initializeWith:aGame
terniLapilliGame:=aGame! !
!DecoratorPutting methodsFor: 'initialization' stamp: 'nt 11/1/2020 19:46:16'!
initializeWith:aGame
terniLapilliGame:=aGame! !

!testRun: #TerniLapilliTest #test01InvalidStartPlayer stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test02PutTokenAtOccupiedPosition stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test03InvalidPositionOutsideBoardLimits stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test04MaxTokenAmountPerPlayerIsThree stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test05checkIfGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test06MakeAValidMovement stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test07MakeAMovementOutOfTurn stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test08MakeAMovementBeforeFillingTheBoard stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test09APlayerTriesToMoveATokenFromAnotherPlayer stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test10APlayerTriesToMoveFromAnEmptyPosition stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test11MakeAMovementToALongerDistance stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test12MakeAMovementToAnOccupiedPosition stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!testRun: #TerniLapilliTest #test13MakeAMovementeAfterTheGameIsOverBecauseAPlayerWon stamp: 'nt 11/1/2020 19:56:45'!
PASSED!

!classRemoval: #DecoratorGameOver stamp: 'nt 11/1/2020 19:57:38'!
Object subclass: #DecoratorGameOver
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #DecoratorMoving stamp: 'nt 11/1/2020 19:58:10'!
Object subclass: #DecoratorMoving
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #DecoratorPutting stamp: 'nt 11/1/2020 19:58:21'!
Object subclass: #DecoratorPutting
	instanceVariableNames: 'terniLapilliGame'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----SNAPSHOT----(1 November 2020 19:58:30) CuisUniversity-4384.image priorSource: 17301859!