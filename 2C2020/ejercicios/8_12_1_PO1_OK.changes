

----End fileIn of /home/doraserver/CuisUniversity/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:17:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 19:17:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:17:03'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:24:42' prior: 50889508!
balance

	^transactions sum: [ :aTransaction | (aTransaction class = Deposit) ifTrue:[aTransaction value] ifFalse:[aTransaction value negated ] ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:24:52' prior: 50889551!
balance

	^transactions sum: [ :aTransaction | (aTransaction isKindOf: Deposit) ifTrue:[aTransaction value] ifFalse:[aTransaction value negated ] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 19:25:06'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:25:33' prior: 50889559!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] 
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:44:08' prior: 50889594!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] 
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:44:59' prior: 50889603!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] 
	] ifEmpty: [ 0 ]! !
!Withdraw methodsFor: 'value' stamp: 'EMI 11/2/2020 19:50:13'!
valueForBalance

	^ value negated.! !
!Deposit methodsFor: 'value' stamp: 'EMI 11/2/2020 19:50:22'!
valueForBalance

	^ value! !
!AccountTransaction methodsFor: 'value' stamp: 'EMI 11/2/2020 19:50:29'!
valueForBalance

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:51:20' prior: 50889612!
balance

	^transactions sum: [ :aTransaction | 
		aTransaction valueForBalance 
		"(aTransaction isKindOf: Deposit) 
		ifTrue:[aTransaction value] 
		ifFalse:[aTransaction value negated ] "
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:53:42' prior: 50889633!
balance

	^transactions sum: [ :aTransaction | 
		aTransaction valueForBalance 
	] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 19:53:53' prior: 50889643!
balance

	^transactions sum: [ :aTransaction | aTransaction valueForBalance	] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 19:54:08'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 19:55:15' prior: 50889369!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !

Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/2/2020 19:55:29'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'EMI 11/2/2020 19:55:39'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'nil' stamp: 'EMI 11/2/2020 19:56:58'!
test01NewPortfolioHasNoAccountsAndNoPortfolios! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'EMI 11/2/2020 20:00:01' prior: 50889716!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:00:18'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:00:18'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:00:51'!
numberOfAccounts
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:01:00' prior: 50889737!
numberOfAccounts
	^0.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:01:19'!
numberOfPortfolios
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:01:25' prior: 50889745!
numberOfPortfolios
	^0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:01:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:02:32'!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:03:10' prior: 50889757!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	portfolio add: ReceptiveAccount new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:03:20' prior: 50889766!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	portfolio addAccount: ReceptiveAccount new.
	
	self assert: portfolio numberOfAccounts equals: 0.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:03:30' prior: 50889776!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	portfolio addAccount: ReceptiveAccount new.
	
	self assert: portfolio numberOfAccounts equals: 1.
	self assert: portfolio numberOfPortfolios equals: 0.! !
!AccountTransaction methodsFor: 'value' stamp: 'EMI 11/2/2020 20:30:57'!
calculateBalance

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #valueForBalance stamp: 'EMI 11/2/2020 20:30:57'!
valueForBalance

	self subclassResponsibility !
!AccountTransaction methodsFor: 'value' stamp: 'EMI 11/2/2020 20:31:23'!
calculateBalance: aBalance

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #calculateBalance stamp: 'EMI 11/2/2020 20:31:23'!
calculateBalance

	self subclassResponsibility !

!methodRemoval: Deposit #valueForBalance stamp: 'EMI 11/2/2020 20:31:38'!
valueForBalance

	^ value!
!Deposit methodsFor: 'value' stamp: 'EMI 11/2/2020 20:32:03' overrides: 50889805!
calculateBalance: aBalance
	^aBalance + value.! !
!Withdraw methodsFor: 'nil' stamp: 'EMI 11/2/2020 20:32:14' overrides: 50889805!
calculateBalance: aBalance
	^aBalance - value.! !

!methodRemoval: Withdraw #valueForBalance stamp: 'EMI 11/2/2020 20:32:23'!
valueForBalance

	^ value negated.!
!ReceptiveAccount methodsFor: 'balance' stamp: 'EMI 11/2/2020 20:33:55' prior: 50889649!
balance
	| balance |
	balance _ 0.
	transactions do: [ :aTransaction | balance _ aTransaction calculateBalance: balance	].
	^balance! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 20:34:10'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:34:28' prior: 50889721!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio balance equals: 0.! !

!methodRemoval: Portfolio #numberOfAccounts stamp: 'EMI 11/2/2020 20:34:39'!
numberOfAccounts
	^0.!

!methodRemoval: Portfolio #numberOfPortfolios stamp: 'EMI 11/2/2020 20:34:43'!
numberOfPortfolios
	^0.!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:34:52'!
balance
	^0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:36:22' prior: 50889786!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/2/2020 20:36:50'!
addAccount
	^true.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/2/2020 20:37:19'!
addAccount: anAccount
	^true.! !

!methodRemoval: Portfolio #addAccount stamp: 'EMI 11/2/2020 20:37:19'!
addAccount
	^true.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/2/2020 20:37:25' prior: 50889893!
addAccount: anReceptiveAccount
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:37:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddNewAccount stamp: 'EMI 11/2/2020 20:37:37'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:38:21'!
test03PortfolioAddEmptyPortfolio
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:38:38' prior: 50889911!
test03PortfolioAddEmptyPortfolio
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addPortfolio: Portfolio new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:38:51'!
test02PortfolioAddEmptyAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !

!methodRemoval: PortfolioTest #test02PortfolioAddNewAccount stamp: 'EMI 11/2/2020 20:38:51'!
test02PortfolioAddNewAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:38:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:38:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:38:57'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:38:57'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 20:39:26'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 20:39:34' prior: 50889958!
addPortfolio: aPortfolio 
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:39:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:39:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:39:38'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:41:30' prior: 50889928!
test02PortfolioAddEmptyAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addAccount: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:45:16'!
test04PortfolioHasNoRegisteredTransactions
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio addPortfolio: Portfolio new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:55:16' prior: 50889985!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:55:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:55:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:55:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 20:55:26'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 20:55:26'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:55:39'!
hasRegistered: aClass 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 20:56:15' prior: 50890023!
hasRegistered: aTransaction
	^false.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 20:56:23'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 20:59:42'!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:00:03'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:00:03'!
FAILURE!

| account |
	
	account := ReceptiveAccount new.!

| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 21:03:09' prior: 50889308!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.
	self halt.
	self assert: 0 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'EMI 11/2/2020 21:03:12'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 21:03:47' prior: 50890071!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.
	self assert: 0 equals: account balance.
! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/2/2020 21:04:06' overrides: 16896425!
initialize! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/2/2020 21:04:16'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/2/2020 21:04:53' prior: 50890110 overrides: 16896425!
initialize
	accounts _ OrderedCollection new.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 21:05:28' prior: 50889900!
addAccount: anReceptiveAccount
	accounts add: anReceptiveAccount.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/2/2020 21:05:36' prior: 50890131!
addAccount: aReceptiveAccount
	accounts add: aReceptiveAccount.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:06:32' prior: 50889877!
balance
	^accounts sum: [:anAccount | anAccount balance].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:07:48' prior: 50890028!
hasRegistered: aTransaction
	^accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ].! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:08:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:08:20'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:08:25'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:08:41' prior: 50890141!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty:[0].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:11:16' prior: 50890146!
hasRegistered: aTransaction
	^accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ] ifNone:[^false].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/2/2020 21:12:09' prior: 50890178!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ] ifNone:[^false].
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:12:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:18'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:18'!
FAILURE!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:12:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:36'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:36'!
FAILURE!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:12:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:52'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:12:52'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/2/2020 21:16:07' prior: 50890045!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/2/2020 21:16:16'!
PASSED!

----SNAPSHOT----(2 November 2020 21:16:37) CuisUniversity-4383.image priorSource: 17842575!

----QUIT----(2 November 2020 21:58:31) CuisUniversity-4383.image priorSource: 17876284!

----STARTUP---- (6 November 2020 18:05:17) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:12:01' prior: 50889994!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:12:35' prior: 50890294!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: Deposit).
	self deny: (portfolio hasRegistered: Withdraw).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:13:09' prior: 50890307!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account).
	self deny: (portfolio hasRegistered: (Deposit for: 100)).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:13:46' prior: 50890253!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:14:22' prior: 50890334!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:14:26'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:17:56' prior: 50890320!
test04PortfolioHasNoRegisteredTransactions
	| portfolio account|
	portfolio _ Portfolio new.
	"account _ ReceptiveAccount new.
	
	self assert: (portfolio addAccount: account)."
	self deny: (portfolio hasRegistered: (Deposit for: 100)).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:18:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:18:11' prior: 50890380!
test04PortfolioHasNoRegisteredTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self deny: (portfolio hasRegistered: (Deposit for: 100)).
	self deny: (portfolio hasRegistered: (Withdraw for: 100)).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:20:51'!
test05PortfolioHasOneAccountWithOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !

!methodRemoval: PortfolioTest #test05PortfolioHasOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:20:51'!
test05PortfolioHasOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:22:54'!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:24:19' prior: 50890449!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assert: (portfolio addAccount: account1).
	self assert: (portfolio addAccount: account2).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:24:38'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:27:41'!
test07EmptyPortfolioHasNoTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:27:58'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:27:58'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:27:58'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:28:10'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:28:29' prior: 50890541!
transactions
	^OrderedCollection new.! !

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:28:31'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:28:34'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:29:18'!
test08PortfolioWithOneEmptyAccountHasNoTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:30:04'!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.! !

!methodRemoval: PortfolioTest #test08PortfolioWithOneEmptyAccountHasNoTransactions stamp: 'EMI 11/6/2020 18:30:05'!
test08PortfolioWithOneEmptyAccountHasNoTransactions
	| portfolio |
	portfolio _ Portfolio new.

	self assert: portfolio transactions isEmpty.
	self assert: portfolio balance equals: 0.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:32:00' prior: 50890585!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio size equals: 1.
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:32:08' prior: 50890603!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio size equals: 1.
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:32:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:32:41'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:32:41'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:33:09' prior: 50890616!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:33:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:33:11'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:33:11'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:34:24' prior: 50890660!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:34:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:34:34'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:34:34'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:35:47' prior: 50890545!
transactions
	^OrderedCollection with: accounts first .! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:36:44' prior: 50890752!
transactions
	^accounts first transactions.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:38:22'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:38:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:38:22'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:39:43'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:39:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:39:43'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:39:54'!
ERROR!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:40:55' prior: 50890757!
transactions
	^accounts isEmpty 
	ifTrue:[accounts] 
	ifFalse:[accounts first transactions].! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:41:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:41:03'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:41:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:41:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:41:41'!
test09PortfolioWithMoreThanOneAccountMoreThanOneTransactions
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:42:03'!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !

!methodRemoval: PortfolioTest #test09PortfolioWithMoreThanOneAccountMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:42:03'!
test09PortfolioWithMoreThanOneAccountMoreThanOneTransactions
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio addAccount: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:42:13' prior: 50890877!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 deposit |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	
	self assert: (portfolio addAccount: account1).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:43:24' prior: 50890910!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assert: (portfolio addAccount: account1).
	self assert: (portfolio addAccount: account2).
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:43:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:43:39'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:43:39'!
FAILURE!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:46:08' prior: 50890828!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | res add: anAccount transactions ].
	^res! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:47:17' prior: 50890985!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | anAccount transactions do: [:aTransaction | res add: aTransaction] ].
	^res! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:47:24'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 18:48:39' prior: 50890992!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | res addAll: anAccount transactions  ].
	^res! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:48:54'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:52:51'!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assert: (portfolio addAccount: account1).
	self assert: (portfolio addAccount: account2).
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:55:24' prior: 50891071!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	 
! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 18:55:53'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 18:58:49' prior: 50891093!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 18:59:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 18:59:24'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 18:59:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 18:59:58' prior: 50889963!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:00:28' prior: 50890173!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty:[0].! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio_child'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:00:40'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio_child'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 19:00:54' prior: 50891174!
addPortfolio: aPortfolio 
	portfolio_child _ aPortfolio .
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:02:19' prior: 50891179!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty:[0] + (portfolio_child ifNil: [0] ifNotNil: [portfolio_child balance]).! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/6/2020 19:02:33' prior: 50890126 overrides: 16896425!
initialize
	accounts _ OrderedCollection new.
	portfolio_child _ nil.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 19:04:35'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:04:45'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:05:05'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:05:28' prior: 50891202!
balance
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty:[0]) + (portfolio_child ifNil: [0] ifNotNil: [portfolio_child balance]).! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:05:30'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 19:05:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:06:25'!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !

!methodRemoval: PortfolioTest #test10PortfolioHasOnePortfolioWithAnAccount stamp: 'EMI 11/6/2020 19:06:25'!
test10PortfolioHasOnePortfolioWithAnAccount
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:06:50'!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:07:14' prior: 50891337!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:07:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:07:31'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:07:31'!
FAILURE!

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:07:50'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 19:08:01' prior: 50891197!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio .
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:08:42' prior: 50891258!
balance
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty:[0]) + (portfolios sum: [:aPortfolio | aPortfolio balance]).! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:08:57' prior: 50891437!
balance
	^(accounts sum: [:anAccount | anAccount balance] ifEmpty:[0]) + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]).! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:02'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/6/2020 19:09:40' prior: 50891210 overrides: 16896425!
initialize
	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:09:43'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:12:04' prior: 50891354!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 200 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 200.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:12:20' prior: 50891539!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 200.
	self assert: portfolio balance equals: 200.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:12:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:12:23'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:12:23'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:12:58' prior: 50891564!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:13:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:26:56' prior: 50891304!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account d|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	d _ Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.
	self assert: (portfolio hasRegistered: d).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: d).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:27:44' prior: 50891701!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:28:02'!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child account|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:28:48' prior: 50891740!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child account transaction |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:29:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:29:02'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:29:02'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:32:26' prior: 50890185!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction ] 
	ifNone:[
			portfolios detect: [:aPortfolio | aPortfolio hasRegistered: aTransaction ] ifNone: [^false].
			^true.
		].
	^true.! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 19:34:55' prior: 50891032!
transactions
	| res |
	res _ OrderedCollection new.
	accounts do: [:anAccount | res addAll: anAccount transactions  ].
	portfolios do: [:aPorfolio | res addAll: aPorfolio transactions ].
	^res.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:35:05'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:37:18'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:38:22' prior: 50891891!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolio_child addAccount: account).
	self assert: (portfolio_child2 addAccount: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:38:25'!
PASSED!

Object subclass: #Assets
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Assets category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:49:46'!
Object subclass: #Assets
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Asset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:49:59'!
Object subclass: #Asset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Assets stamp: 'EMI 11/6/2020 19:50:08'!
Object subclass: #Assets
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Asset subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:50:15'!
Asset subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:50:21'!
Asset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Asset methodsFor: 'nil' stamp: 'EMI 11/6/2020 19:51:09'!
balance
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/6/2020 19:51:27'!
hasRegistered: aTransaction
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/6/2020 19:51:39'!
transactions
	^self subclassResponsibility.! !

Asset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'EMI 11/6/2020 19:53:43'!
Asset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 19:54:04'!
add: anAsset
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:54:47' prior: 50891444 overrides: 50892053!
balance
	^(assets sum: [:anAsset | anAsset balance] ifEmpty:[0]).! !

----SNAPSHOT----(6 November 2020 19:54:50) CuisUniversity-4383.image priorSource: 17876377!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 19:55:28' prior: 50891827 overrides: 50892057!
hasRegistered: aTransaction
	assets detect: [:anAsset | anAsset hasRegistered: aTransaction ] ifNone: [^false].
	^true.! !
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/6/2020 19:55:54' prior: 50891837 overrides: 50892062!
transactions
	| res |
	res _ OrderedCollection new.
	assets do: [:anAsset | res addAll: anAsset transactions  ].
	^res.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:26' prior: 50889977!
test02PortfolioAddEmptyAccount
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio add: ReceptiveAccount new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:34' prior: 50889920!
test03PortfolioAddEmptyPortfolio
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: (portfolio add: Portfolio new).
	self assert: portfolio balance equals: 0.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:43' prior: 50890421!
test05PortfolioHasOneAccountWithOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assert: (portfolio add: account).
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:56:51' prior: 50890463!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assert: (portfolio add: account1).
	self assert: (portfolio add: account2).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:02' prior: 50890705!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assert: (portfolio add: account).
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:18' prior: 50890926!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assert: (portfolio add: account1).
	self assert: (portfolio add: account2).
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:46' prior: 50891723!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child account|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio add: portfolio_child).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:57:59' prior: 50891634!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio addPortfolio: portfolio_child).
	self assert: (portfolio addPortfolio: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:58:08' prior: 50892212!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolio_child  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio add: portfolio_child2).
	self assert: portfolio_child balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:58:21' prior: 50891757!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child account transaction |
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 19:58:37' prior: 50891918!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolio_child  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: Portfolio #addAccount: stamp: 'EMI 11/6/2020 19:58:46'!
addAccount: aReceptiveAccount
	accounts add: aReceptiveAccount.
	^true.!

!methodRemoval: Portfolio #addPortfolio: stamp: 'EMI 11/6/2020 19:58:50'!
addPortfolio: aPortfolio 
	portfolios add: aPortfolio .
	^true.!

----SNAPSHOT----(6 November 2020 19:58:56) CuisUniversity-4383.image priorSource: 17933988!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:00'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:59:05'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/6/2020 19:59:34' prior: 50891493 overrides: 16896425!
initialize
	assets _ OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 19:59:38'!
PASSED!

----SNAPSHOT----(6 November 2020 20:01:15) CuisUniversity-4383.image priorSource: 17941566!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:02:35'!
test14PortfolioCannotAddSameAccountTwice
	| portfolio portfolio_child  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolio_child _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolio_child add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolio_child).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:02:58' prior: 50892437!
test14PortfolioCannotAddSameAccountTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:04:35' prior: 50892468!
test14PortfolioCannotAddSameAccountTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:04:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:04:39'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:04:39'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:05:19' prior: 50892078!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:05:24'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:06:57'!
test14PortfolioCannotAddSameAssetTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameAccountTwice stamp: 'EMI 11/6/2020 20:06:57'!
test14PortfolioCannotAddSameAccountTwice
	| portfolio account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:09:22' prior: 50892599!
test14PortfolioCannotAddSameAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameAssetTwice stamp: 'EMI 11/6/2020 20:09:26'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:09:59'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameAssetTwice stamp: 'EMI 11/6/2020 20:09:59'!
test14PortfolioCannotAddSameAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:10:31'!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self deny: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio2).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:10:59' prior: 50892712!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	self deny: (portfolio add: portfolio2).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:11:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:11:29'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:11:29'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:18:14' prior: 50892541!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	"| port1 | <-- a1
	| port2 | <-- a1
	port1 <-- port2"
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:24:11' prior: 50892799!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(anAsset isKindOf: Portfolio) ifTrue: [
		assets detect: [:anAsset2 | ] ifNone:[assets add: anAsset. ^true.].
		^false
	].
	
	^true.! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/6/2020 20:24:56'!
hasAsset: anAsset
	^assets includes: anAsset.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:25:57' prior: 50892807!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(anAsset isKindOf: Portfolio) ifTrue: [
		assets detect: [:anAsset2 | anAsset hasAsset: anAsset2] ifNone:[assets add: anAsset. ^true.].
		^false
	].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:26:23'!
PASSED!
!Asset methodsFor: 'nil' stamp: 'EMI 11/6/2020 20:27:10'!
hasAsset: anAsset
	^self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/6/2020 20:27:30' overrides: 50892888!
hasAsset: anAsset
	^false.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:28:38' prior: 50892821!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(assets detect: [:anAsset2 | anAsset hasAsset: anAsset2] isEmpty not) ifTrue: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:28:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:28:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:28:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:28:47'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:29:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:29:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:29:05'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:07'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:24'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:29:56' prior: 50892897!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	((assets detect: [:anAsset2 | anAsset hasAsset: anAsset2]) isEmpty not) ifTrue: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:29:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:29:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:29:58'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 20:31:47' prior: 50893024!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(assets allSatisfy: [:anAsset2 | (anAsset hasAsset: anAsset2) not]) ifFalse: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:32:12'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:33:18'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:37:28'!
test16PortfolioCannotAddChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	self deny: (portfolio add: portfolio2).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:38:09' prior: 50893211!
test16PortfolioCannotAddChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:38:20'!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !

!methodRemoval: PortfolioTest #test16PortfolioCannotAddChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:38:20'!
test16PortfolioCannotAddChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assert: (portfolio add: account).
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/6/2020 20:40:05' prior: 50893240!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:40:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:40:08'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:40:08'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:42:55' prior: 50892816 overrides: 50892888!
hasAsset: anAsset
	^(assets includes: anAsset) or: [
		
	].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:45:48' prior: 50893356 overrides: 50892888!
hasAsset: anAsset
	^(assets includes: anAsset) or: [
		(assets allSatisfy: [:aChildAsset | (aChildAsset hasAsset: anAsset) not]) ifFalse: [^false].
		^true.
	].! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:50:07' prior: 50893362 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ assets detect: [:aChildAsset | aChildAsset hasAsset: anAsset] isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

----SNAPSHOT----(6 November 2020 20:52:05) CuisUniversity-4383.image priorSource: 17945082!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:52:10'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:23'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:52:42' prior: 50893371 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ (assets detect: [:aChildAsset | aChildAsset hasAsset: anAsset]) isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:52:45'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:52:47'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/6/2020 20:56:13' prior: 50893451 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ (assets select: [:aChildAsset | aChildAsset hasAsset: anAsset]) isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 20:56:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:56:24'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 20:56:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 21:00:25' prior: 50893089!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	((assets select: [:aChildAsset | anAsset hasAsset: aChildAsset]) isEmpty not) ifFalse: [^false].
	assets add: anAsset.
	^true.! !

----SNAPSHOT----(6 November 2020 21:01:51) CuisUniversity-4383.image priorSource: 17975414!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 21:01:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 21:01:54'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:01:58'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:02:47'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/6/2020 21:03:28' prior: 50893605!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	((assets select: [:aChildAsset | anAsset hasAsset: aChildAsset]) isEmpty) ifFalse: [^false].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/6/2020 21:03:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 21:03:32'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/6/2020 21:03:32'!
FAILURE!

----SNAPSHOT----(6 November 2020 21:10:01) CuisUniversity-4383.image priorSource: 17982812!

----SNAPSHOT----(6 November 2020 21:10:11) CuisUniversity-4383.image priorSource: 17987412!

----QUIT----(6 November 2020 21:10:38) CuisUniversity-4383.image priorSource: 17987505!

----STARTUP---- (7 November 2020 15:02:13) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 15:37:23' prior: 50893684!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	(assets first hasAsset: anAsset) ifTrue: [^false].
	(anAsset hasAsset: assets first) ifTrue: [^false].
	
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 15:39:55' prior: 50893528 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos estaEnElRestoDelArbol |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	estaEnElRestoDelArbol _ (assets select: [:aChildAsset | (aChildAsset hasAsset: anAsset) or: [anAsset hasAsset: aChildAsset]]) isEmpty not.
	^estaEnMisHijosDirectos or: [estaEnElRestoDelArbol].
	! !

----SNAPSHOT----(7 November 2020 15:42:53) CuisUniversity-4383.image priorSource: 17987598!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 15:43:07' prior: 50893780 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	^estaEnMisHijosDirectos or: [(assets select: [:aChildAsset | (aChildAsset hasAsset: anAsset) or: [anAsset hasAsset: aChildAsset]]) isEmpty not.].
	! !

----SNAPSHOT----(7 November 2020 15:43:34) CuisUniversity-4383.image priorSource: 17988542!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 15:43:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 15:43:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 15:43:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:43:38'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:43:42'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 15:44:36' prior: 50893770!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	anAsset isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 15:44:40' prior: 50893874!
add: anAsset
	(assets includes: anAsset) ifTrue:[^false].
	assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:44:46'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 15:46:20'!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 15:48:21' prior: 50893955!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolio2 portfolio3 portfolio4 portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	portfolio4 _ Portfolio new.
	self assert: (portfolio4 add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolio2).
	self assert: (portfolio add: portfolio3).
	self assert: (portfolio2 add: portfolio4).
	self deny: (portfolio3 add: portfolio5).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 15:48:25'!
FAILURE!

----SNAPSHOT----(7 November 2020 15:48:34) CuisUniversity-4383.image priorSource: 17989017!
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 15:51:57'!
parent
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 15:54:32'!
addAsSubassetOf: aParentAsset
	^self subclassResponsibility.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 15:54:48'!
parentAsset
	^self subclassResponsibility.! !

!methodRemoval: Asset #parent stamp: 'EMI 11/7/2020 15:54:48'!
parent
	^self subclassResponsibility.!

Object subclass: #Asset
	instanceVariableNames: 'parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'EMI 11/7/2020 15:57:29'!
Object subclass: #Asset
	instanceVariableNames: 'parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:57:58' overrides: 50894068!
addAsSubassetOf: aParentAsset
	parent _ aParentAsset.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:58:06' overrides: 50894068!
addAsSubassetOf: aParentAsset
	parent _ aParentAsset.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:58:26' overrides: 50894073!
parentAsset
	^parent.! !
!Portfolio methodsFor: 'nil' stamp: 'EMI 11/7/2020 15:58:43' overrides: 50894073!
parentAsset
	^parent! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/7/2020 16:00:40' prior: 50892381 overrides: 16896425!
initialize
	assets _ OrderedCollection new.
	parent _ nil.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/7/2020 16:00:49' prior: 50889494 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	parent _ nil.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:03:08' prior: 50893884!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parent.
	assets isEmpty not ifTrue: [
		(root isNil not) whileTrue: [root _ root parent].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:03:34' prior: 50894122!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parent.
	assets isEmpty not ifTrue: [
		(root isNil not) whileTrue: [root _ root parent].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:04:00) CuisUniversity-4383.image priorSource: 17997133!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:04:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:04:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:03'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:04:07'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:04:34' prior: 50894136!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parentAsset .
	assets isEmpty not ifTrue: [
		(root isNil not) whileTrue: [root _ root parentAsset ].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:04:38) CuisUniversity-4383.image priorSource: 18000006!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:04:41'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:04:45'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:06:16'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:06:58' prior: 50894222!
add: anAsset
	| root |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parentAsset .
	assets isEmpty not ifTrue: [
		[root isNil not] whileTrue: [root _ root parentAsset ].
		(root hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:07:03) CuisUniversity-4383.image priorSource: 18002770!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:07:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:07:07'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:07:09'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:08:59' prior: 50894313!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ self parentAsset .
	assets isEmpty not ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:09:09) CuisUniversity-4383.image priorSource: 18005682!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:09:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:09:12'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:09:14'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:10:15' prior: 50894400!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	assets isEmpty not ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:10:57' prior: 50894488!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	assets isEmpty not ifTrue: [
		(parent isNil not) ifTrue: [
			[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
			(rootParent hasAsset: anAsset) ifTrue:[^false.].
		].
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:11:22' prior: 50894505!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	assets isEmpty not ifTrue: [
		
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:11:27' prior: 50894523!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:11:49) CuisUniversity-4383.image priorSource: 18008502!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:11:52'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:14:18' prior: 50894541!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	"assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	]."
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:14:20'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:15:09' prior: 50894627!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	assets isEmpty not ifTrue: [
		(assets first hasAsset: anAsset) ifTrue: [^false].
		(anAsset hasAsset: assets first) ifTrue: [^false].
	].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:18:07'!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolio portfolio2 portfolio3 portfolio4 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolio2).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:18:31' prior: 50894730!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioBase portfolio2 portfolio3 portfolio4 account|
	portfolioBase _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolioBase add: portfolio2).
	self deny: (portfolioBase add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:18:52' prior: 50894746!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolio2 portfolio3 portfolio4 account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolio2 _ Portfolio new.
	self assert: (portfolio2 add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolioRoot add: portfolio2).
	self deny: (portfolioRoot add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:19:19' prior: 50894763!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolio3 portfolio4 account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:19:33' prior: 50894780!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolio4 account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioChildWithoutAccount _ Portfolio new.
	self assert: (portfolioChildWithoutAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioChildWithoutAccount).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:19:52' prior: 50894799!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioChildWithoutAccount _ Portfolio new.
	self assert: (portfolioChildWithoutAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioChildWithoutAccount).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:20:54' prior: 50894820!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

----SNAPSHOT----(7 November 2020 16:21:17) CuisUniversity-4383.image priorSource: 18013059!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:21:30'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:22:26' prior: 50894842!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:22:28'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:22:53' prior: 50894939!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
FAILURE!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:22:56'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:23:34' prior: 50894712!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:23:40) CuisUniversity-4383.image priorSource: 18022916!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:23:45'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:28:49'!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAdd portfolioWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:29:15' prior: 50895220!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !

----SNAPSHOT----(7 November 2020 16:29:21) CuisUniversity-4383.image priorSource: 18031906!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
FAILURE!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:29:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:32:53' prior: 50895133!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	(anAsset parentAsset hasAsset: self) ifTrue: [^false.].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:32:58) CuisUniversity-4383.image priorSource: 18036003!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:33:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:33:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:33:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:33:03'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:33:08'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:33:57' prior: 50895358!
add: anAsset
	| root rootParent |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		(rootParent hasAsset: anAsset) ifTrue:[^false.].
	].
	(anAsset parentAsset isNil) ifFalse: [
		(anAsset parentAsset hasAsset: self) ifTrue: [^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:34:09) CuisUniversity-4383.image priorSource: 18039163!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:34:13'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:36:38'!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:41:51' prior: 50895549!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:42:23' prior: 50895578!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:43:24' prior: 50895595!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:46:14' prior: 50895615!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTreeWithAccount account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildWithAccount _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildWithAccount).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTreeWithAccount _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTreeWithAccount ).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:46:23' prior: 50895641!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildWithAccount _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildWithAccount).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:47:26' prior: 50895683!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildWithAccount portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildWithAccount _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildWithAccount).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildWithAccount add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:47:49' prior: 50895724!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildWithoutAccount 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildWithoutAccount _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildWithoutAccount ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 16:47:58' prior: 50895768!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !

----SNAPSHOT----(7 November 2020 16:48:40) CuisUniversity-4383.image priorSource: 18042280!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
FAILURE!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 16:48:44'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 16:56:19' prior: 50895454!
add: anAsset
	| root rootParent rootOther rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ parent.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	rootOther _ anAsset parentAsset .
	rootParentOther _ anAsset parentAsset .
	(rootParentOther isNil not) ifTrue: [
		[rootOther isNil not] whileTrue: [rootParentOther _ rootOther. rootOther _ rootOther parentAsset.].
	].
	(rootParent isNil or:[rootParentOther isNil]) ifFalse: [
		(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
		(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 16:56:24) CuisUniversity-4383.image priorSource: 18054466!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
FAILURE!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
FAILURE!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 16:56:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 16:56:33'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:02:12' prior: 50895940!
add: anAsset
	| root rootParent rootOther rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	rootOther _ anAsset parentAsset .
	rootParentOther _ anAsset.
	(rootParentOther isNil not) ifTrue: [
		[rootOther isNil not] whileTrue: [rootParentOther _ rootOther. rootOther _ rootOther parentAsset.].
	].
	(rootParent isNil or:[rootParentOther isNil]) ifFalse: [
		(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
		(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:02:57' prior: 50896053!
add: anAsset
	| root rootParent rootOther rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	rootOther _ anAsset parentAsset .
	rootParentOther _ anAsset.
	(rootParentOther isNil not) ifTrue: [
		[rootOther isNil not] whileTrue: [rootParentOther _ rootOther. rootOther _ rootOther parentAsset.].
	].
	(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
	(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:03:01) CuisUniversity-4383.image priorSource: 18058109!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:03:06'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:06:47'!
xxx
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		
	].
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:08:58' prior: 50896185!
xxx
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:10:30'!
assetTreeRoot
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.! !

!methodRemoval: Portfolio #xxx stamp: 'EMI 11/7/2020 17:10:30'!
xxx
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:11:22' prior: 50896079!
add: anAsset
	| rootParent rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	rootParent _ self assetTreeRoot.
	rootParentOther _ anAsset assetTreeRoot.
	(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
	(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	(self hasAsset: anAsset) ifTrue:[^false].
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Asset methodsFor: 'nil' stamp: 'EMI 11/7/2020 17:12:36'!
assetTreeRoot
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.! !

!methodRemoval: Portfolio #assetTreeRoot stamp: 'EMI 11/7/2020 17:12:52'!
assetTreeRoot
	| root rootParent |
	root _ parent.
	rootParent _ self.
	(parent isNil not) ifTrue: [
		[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
	].
	^rootParent.!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:13:04'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:13:28' prior: 50896219!
add: anAsset
	| rootParent rootParentOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParent _ self assetTreeRoot.
	rootParentOther _ anAsset assetTreeRoot.
	
	(rootParent hasAsset: rootParentOther) ifTrue:[^false.].
	(rootParentOther hasAsset: rootParent) ifTrue:[^false.].
	
	(self hasAsset: anAsset) ifTrue:[^false].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:26:07'!
test21
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:27:27' prior: 50896345!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:27:45'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:29:13' prior: 50896385!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parent equals: portfolio.
	self assert: account parent equals: portfolio2.
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:18'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:18'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:18'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:29:37' prior: 50896476!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset equals: portfolio.
	self assert: account parentAsset equals: portfolio2.
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:29:40'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:40'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:29:40'!
FAILURE!

Object subclass: #Asset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Asset category: 'Portfolio-Ejercicio' stamp: 'EMI 11/7/2020 17:30:13'!
Object subclass: #Asset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:30:31' prior: 50894092 overrides: 50894068!
addAsSubassetOf: aParentAsset
	parents add: aParentAsset.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:30:57' prior: 50894068!
addAsSubassetOf: aParentAsset
	parents add: aParentAsset.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:31:09' prior: 50894073!
parentAsset
	^parents! !

!methodRemoval: Portfolio #parentAsset stamp: 'EMI 11/7/2020 17:31:17'!
parentAsset
	^parent!

!methodRemoval: Portfolio #addAsSubassetOf: stamp: 'EMI 11/7/2020 17:31:22'!
addAsSubassetOf: aParentAsset
	parents add: aParentAsset.!

!methodRemoval: ReceptiveAccount #addAsSubassetOf: stamp: 'EMI 11/7/2020 17:31:29'!
addAsSubassetOf: aParentAsset
	parent _ aParentAsset.!

!methodRemoval: ReceptiveAccount #parentAsset stamp: 'EMI 11/7/2020 17:31:33'!
parentAsset
	^parent.!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'EMI 11/7/2020 17:31:48' prior: 50894117 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	parents _ OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'EMI 11/7/2020 17:31:59' prior: 50894111 overrides: 16896425!
initialize
	assets _ OrderedCollection new.
	parents _ OrderedCollection new.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:34:24' prior: 50896233!
assetTreeRoot
	| root rootParent rootParents|
	rootParents _ parents collect: [:aParent |
		root _ aParent.
		rootParent _ self.
		(aParent isNil not) ifTrue: [
			[root isNil not] whileTrue: [rootParent _ root. root _ root parentAsset.].
		].
		rootParent.
	].
	^rootParents.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:38:42' prior: 50896330!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot) add: self.
	rootParentsOther _ (anAsset assetTreeRoot) add: anAsset.
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	(self hasAsset: anAsset) ifTrue:[^false].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:39:08' prior: 50896738!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot) add: self.
	rootParentsOther _ (anAsset assetTreeRoot) add: anAsset.
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:39:16) CuisUniversity-4383.image priorSource: 18062478!

----SNAPSHOT----(7 November 2020 17:39:45) CuisUniversity-4383.image priorSource: 18083941!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:39:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:39:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:39:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:39:48'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:39:52'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:40:25' prior: 50896757!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot).
	rootParents add: self.
	rootParentsOther _ (anAsset assetTreeRoot).
	rootParentsOther add: anAsset.
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:40:38) CuisUniversity-4383.image priorSource: 18084034!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:40:41'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:40:44'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:41:12'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:42:01'!
ERROR!
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:49:19' prior: 50896726!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [^self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoot.
	].

	^rootParents.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 17:50:54' prior: 50896978!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoot.
	].

	^rootParents.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 17:51:11' prior: 50896864!
add: anAsset
	| rootParents rootParentsOther |
	(assets includes: anAsset) ifTrue:[^false].
	
	rootParents _ (self assetTreeRoot).
	rootParentsOther _ (anAsset assetTreeRoot).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

----SNAPSHOT----(7 November 2020 17:51:26) CuisUniversity-4383.image priorSource: 18087398!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:51:40'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:51:40'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:51:40'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:52:20' prior: 50896573!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset includes: portfolio.
	self assert: account parentAsset includes: portfolio2.
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:52:23'!
PASSED!
!Portfolio methodsFor: 'accessing' stamp: 'EMI 11/7/2020 17:57:47' prior: 50892100 overrides: 50892062!
transactions
	| res |
	res _ OrderedCollection new.
	assets do: [:anAsset | res addAll: anAsset transactions  ].
	^res.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 17:58:50'!
test21TwoPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset includes: portfolio.
	self assert: account parentAsset includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test21 stamp: 'EMI 11/7/2020 17:58:51'!
test21
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAsset includes: portfolio.
	self assert: account parentAsset includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:05:41'!
test22UniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!

!testRun: #PortfolioTest #test22UniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:05:49'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:06:13'!
test22CannotUniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test22UniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:06:13'!
test22UniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:08:55' prior: 50889864!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAsset isEmpty.! !

----SNAPSHOT----(7 November 2020 18:09:09) CuisUniversity-4383.image priorSource: 18091598!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:09:14'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:10:58' prior: 50892107!
test02PortfolioAddEmptyAccount
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAsset isEmpty.
	self assert: account parentAsset size equals: 1.
	self assert: account parentAsset includes: portfolio.! !

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:11:15'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:12:10' prior: 50892116!
test03PortfolioAddEmptyPortfolio
	| portfolio portfolioChild |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild ).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAsset isEmpty.
	self assert: portfolioChild parentAsset size equals: 1.
	self assert: portfolioChild parentAsset includes: portfolio.! !

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:12:15'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:13:25' prior: 50892138!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assert: (portfolio add: account1).
	self assert: (portfolio add: account2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:14:49' prior: 50892195!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild account|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: portfolioChild balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:15:14' prior: 50892238!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild  portfolio_child2 account account2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio add: portfolio_child2).
	self assert: portfolioChild balance equals: 100.
	self assert: portfolio_child2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:15:22' prior: 50897614!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild  portfolioChild2 account account2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChild add: account).
	self assert: (portfolioChild2 add: account2).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio add: portfolioChild2).
	self assert: portfolioChild balance equals: 100.
	self assert: portfolioChild2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:15:54' prior: 50897639!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChildLeft  portfolioChild2 account account2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChild2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolioChild2 add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChild2).
	self assert: portfolioChildLeft balance equals: 100.
	self assert: portfolioChild2 balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:16:03' prior: 50897664!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChildLeft  portfolioChildRight account account2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: portfolioChildLeft balance equals: 100.
	self assert: portfolioChildRight balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:16:44' prior: 50892264!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:17:28' prior: 50892284!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:17:34' prior: 50897737!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolio_child2 account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolio_child2 _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolio_child2 add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolio_child2).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:17:51' prior: 50897769!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:18:03' prior: 50897802!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:18:13'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:21:27' prior: 50893275!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioLeft portfolio3 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioLeft _ Portfolio new.
	self assert: (portfolioLeft add: account).
	
	portfolio3 _ Portfolio new.
	self assert: (portfolio3 add: account).
	
	self assert: (portfolio add: portfolioLeft).
	self deny: (portfolio add: portfolio3).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:21:35' prior: 50897954!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioLeft portfolioRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioLeft _ Portfolio new.
	self assert: (portfolioLeft add: account).
	
	portfolioRight _ Portfolio new.
	self assert: (portfolioRight add: account).
	
	self assert: (portfolio add: portfolioLeft).
	self deny: (portfolio add: portfolioRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:21:50' prior: 50897970!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assert: (portfolioChildLeft add: account).
	
	portfolioRight _ Portfolio new.
	self assert: (portfolioRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:22:00' prior: 50897987!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assert: (portfolioChildLeft add: account).
	
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:23:26' prior: 50893971!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolio3 portfolio4 portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolio3 _ Portfolio new.
	
	portfolio4 _ Portfolio new.
	self assert: (portfolio4 add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolio3).
	self assert: (portfolioChildLeft add: portfolio4).
	self deny: (portfolio3 add: portfolio5).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:23:51' prior: 50898022!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolio4 portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolio4 _ Portfolio new.
	self assert: (portfolio4 add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolio4).
	self deny: (portfolioChildRight add: portfolio5).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:24:03' prior: 50898044!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolio5 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolio5 _ Portfolio new.
	self assert: (portfolio5 add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolio5).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:24:21' prior: 50898067!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:24:29'!
PASSED!

----SNAPSHOT----(7 November 2020 18:24:56) CuisUniversity-4383.image priorSource: 18102934!

----SNAPSHOT----(7 November 2020 18:27:41) CuisUniversity-4383.image priorSource: 18129706!
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/7/2020 18:33:39' prior: 50896997!
add: anAsset
	| rootParents rootParentsOther |
	rootParents _ (self assetTreeRoot).
	rootParentsOther _ (anAsset assetTreeRoot).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:33:43'!
PASSED!
!Asset methodsFor: 'tree operations' stamp: 'EMI 11/7/2020 18:38:38'!
assetTreeRoots
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoot.
	].

	^rootParents.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 18:38:38' prior: 50896987!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoots.
	].

	^rootParents.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 18:38:38' prior: 50898210!
add: anAsset
	| rootParents rootParentsOther |
	rootParents _ (self assetTreeRoots).
	rootParentsOther _ (anAsset assetTreeRoots).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^false.].
			(aParentOther hasAsset: aParent) ifTrue:[^false.].
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!Asset methodsFor: 'as yet unclassified' stamp: 'EMI 11/7/2020 18:38:38' prior: 50898310!
assetTreeRoots
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoots.
	].

	^rootParents.! !

!methodRemoval: Asset #assetTreeRoot stamp: 'EMI 11/7/2020 18:38:38'!
assetTreeRoot
	| rootParents|
	rootParents _ OrderedCollection new.
	
	parents isEmpty ifTrue: [rootParents add: self].
	parents do: [:aParent | 
		rootParents addAll: aParent assetTreeRoots.
	].

	^rootParents.!
!Asset methodsFor: 'tree operations' stamp: 'EMI 11/7/2020 18:38:57'!
parentAssets
	^parents! !

!methodRemoval: Asset #parentAsset stamp: 'EMI 11/7/2020 18:38:57'!
parentAsset
	^parents!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:39:19' prior: 50897201!
test21TwoPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

----SNAPSHOT----(7 November 2020 18:39:21) CuisUniversity-4383.image priorSource: 18129799!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:39:36'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:39:36'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:39:36'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:39:36'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:39:42' prior: 50897359!
test01NewPortfolioHasNoAccountsAndNoPortfolios
	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:39:52' prior: 50897456!
test02PortfolioAddEmptyAccount
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: account parentAssets size equals: 1.
	self assert: account parentAssets includes: portfolio.! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/7/2020 18:40:04' prior: 50897473!
test03PortfolioAddEmptyPortfolio
	| portfolio portfolioChild |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild ).
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: portfolioChild parentAssets size equals: 1.
	self assert: portfolioChild parentAssets includes: portfolio.! !

----SNAPSHOT----(7 November 2020 18:40:09) CuisUniversity-4383.image priorSource: 18135472!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:40:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:40:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:40:11'!
PASSED!

----SNAPSHOT----(7 November 2020 18:41:03) CuisUniversity-4383.image priorSource: 18139522!
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 18:47:30'!
hasAssetIntersectionWith: anAsset
	| estaEnMisHijosDirectos |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	^estaEnMisHijosDirectos or: [(assets select: [:aChildAsset | (aChildAsset hasAsset: anAsset) or: [anAsset hasAsset: aChildAsset]]) isEmpty not.].
	! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 18:48:13' prior: 50898602!
hasAssetIntersectionWith: anAsset
	^(self hasAsset: anAsset) or: [anAsset hasAsset: self].
	! !
!Portfolio methodsFor: 'testing' stamp: 'EMI 11/7/2020 18:48:32' prior: 50893797 overrides: 50892888!
hasAsset: anAsset
	| estaEnMisHijosDirectos |
	estaEnMisHijosDirectos _ assets includes: anAsset.
	^estaEnMisHijosDirectos or: [(assets select: [:aChildAsset | aChildAsset hasAssetIntersectionWith: anAsset]) isEmpty not.].
	! !

----SNAPSHOT----(7 November 2020 18:50:20) CuisUniversity-4383.image priorSource: 18142356!

----SNAPSHOT----(7 November 2020 18:51:11) CuisUniversity-4383.image priorSource: 18143331!

----QUIT----(7 November 2020 18:51:15) CuisUniversity-4383.image priorSource: 18143424!

----STARTUP---- (7 November 2020 18:55:00) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!


!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:56:29'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:56:33'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:57:36'!
ERROR!
!Asset methodsFor: 'nil' stamp: 'EMI 11/7/2020 18:58:04'!
hasAssetIntersectionWith: anAsset
	^(self hasAsset: anAsset) or: [anAsset hasAsset: self].! !

!methodRemoval: Portfolio #hasAssetIntersectionWith: stamp: 'EMI 11/7/2020 18:58:13'!
hasAssetIntersectionWith: anAsset
	^(self hasAsset: anAsset) or: [anAsset hasAsset: self].
	!

----SNAPSHOT----(7 November 2020 18:58:16) CuisUniversity-4383.image priorSource: 18143517!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:19'!
PASSED!

----SNAPSHOT----(7 November 2020 18:58:22) CuisUniversity-4383.image priorSource: 18147026!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/7/2020 18:58:33'!
PASSED!

----QUIT----(7 November 2020 18:58:40) CuisUniversity-4383.image priorSource: 18149860!

----STARTUP---- (8 November 2020 16:58:09) as /home/doraserver/CuisUniversity/CuisUniversity-4383.image!

!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:16:50'!
test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:17:36' prior: 50898928!
test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

----SNAPSHOT----(8 November 2020 17:17:41) CuisUniversity-4383.image priorSource: 18152694!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:17:44'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:19:22'!
test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!methodRemoval: PortfolioTest #test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:19:22'!
test18PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:22:19'!
test21TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test21TwoPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:22:19'!
test21TwoPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:22:34'!
test22CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test22CannotUniteTwoPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:22:34'!
test22CannotUniteTwoPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:31:05'!
test23TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

----SNAPSHOT----(8 November 2020 17:31:09) CuisUniversity-4383.image priorSource: 18154447!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test21TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test22CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!

!testRun: #PortfolioTest #test23TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:31:11'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:32:41'!
test24CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:33:51'!
test16bis2TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test21TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:33:51'!
test21TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:05'!
test16bis3CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test22CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:34:05'!
test22CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:20'!
test16bis4TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test23TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:34:20'!
test23TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:33'!
test16bis5CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test24CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:34:33'!
test24CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests' stamp: 'EMI 11/8/2020 17:34:47'!
test16bis1PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!methodRemoval: PortfolioTest #test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:34:47'!
test16bisPortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:38:51'!
test23PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:38:51'!
test17PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:00'!
test24bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:39:00'!
test17bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:10'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test24bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:39:10'!
test24bisPortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:19'!
test25PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !

!methodRemoval: PortfolioTest #test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:39:19'!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:39:28'!
test26PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !

!methodRemoval: PortfolioTest #test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:39:28'!
test20PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:13'!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !

!methodRemoval: PortfolioTest #test16bis1PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:40:13'!
test16bis1PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assert: (portfolioToAddWithSameAccount add: account).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:24'!
test18TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test16bis2TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:40:24'!
test16bis2TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:42'!
test19CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test16bis3CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:40:42'!
test16bis3CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assert: (portfolio add: account).
	self assert: (portfolio2 add: account).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:40:51'!
test20TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test16bis4TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:40:51'!
test16bis4TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:01'!
test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
! !

!methodRemoval: PortfolioTest #test16bis5CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:41:01'!
test16bis5CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio2 add: portfolioChild).
	self assert: (portfolioRoot add: portfolio).
	self deny: (portfolioRoot add: portfolio2).
	


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:32'!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test23PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:41:32'!
test23PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assert: (portfolioGrandChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:39'!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !

!methodRemoval: PortfolioTest #test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:41:39'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assert: (portfolioChildLeft add: account).
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:46'!
test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
! !

!methodRemoval: PortfolioTest #test25PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:41:46'!
test25PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assert: (portfolioChildWithAccount add: account).
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assert: (portfolioWithSameAccount add: account).
	self assert: (portfolioWithSameAccount add: portfolioToAdd).
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAdd).


	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:41:54'!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !

!methodRemoval: PortfolioTest #test26PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:41:54'!
test26PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assert: (portfolioRoot add: account).
	self assert: (portfolioRootAnotherTree add: account).
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
!

----SNAPSHOT----(8 November 2020 17:41:57) CuisUniversity-4383.image priorSource: 18161475!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:45:32'!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:46:29' prior: 50900213!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft portfolioGrandChildRight account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioChild add: account).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:47:55' prior: 50900234!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioGrandChild add: account).
	self assert: (portfolioChild add: portfolioGrandChild).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:48:32' prior: 50900259!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assert: (portfolioGrandChild add: account).
	self assert: (portfolioChild add: portfolioGrandChild).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:50:19'!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:50:19'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:52:54' prior: 50900308!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioGrandChildLeft add: account1).
	self assert: (portfolioGrandChildRight add: account2).
	self assert: (portfolioChild add: portfolioGrandChildLeft ).
	self assert: (portfolioChild add: portfolioGrandChildRight ).
	self assert: (portfolio add: portfolioChild).
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

----SNAPSHOT----(8 November 2020 17:53:04) CuisUniversity-4383.image priorSource: 18193886!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:53:08'!
PASSED!
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 17:54:24'!
assertAdd: anAsset To: anotherAsset
	self assert: (anotherAsset add: anAsset).! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 17:54:59'!
denyAdd: anAsset To: anotherAsset
	self deny: (anotherAsset add: anAsset).! !
!PortfolioTest methodsFor: 'test initialization' stamp: 'EMI 11/8/2020 17:55:24' prior: 50898482!
test02PortfolioAddEmptyAccount
	| portfolio account|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: account parentAssets size equals: 1.
	self assert: account parentAssets includes: portfolio.! !

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:26'!
PASSED!
!PortfolioTest methodsFor: 'test initialization' stamp: 'EMI 11/8/2020 17:55:49' prior: 50898496!
test03PortfolioAddEmptyPortfolio
	| portfolio portfolioChild |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assert: portfolio balance equals: 0.
	self assert: portfolio parentAssets isEmpty.
	self assert: portfolioChild parentAssets size equals: 1.
	self assert: portfolioChild parentAssets includes: portfolio.! !

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:55:50'!
PASSED!
!PortfolioTest methodsFor: 'tests has registered' stamp: 'EMI 11/8/2020 17:56:42' prior: 50892124!
test05PortfolioHasOneAccountWithOneRegisteredTransaction
	| portfolio account transaction|
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account.
	
	self assertAdd: account To: portfolio.
	self assert: (portfolio hasRegistered: transaction).
	self assert: portfolio balance equals: 100.! !

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:56:44'!
PASSED!
!PortfolioTest methodsFor: 'tests has registered' stamp: 'EMI 11/8/2020 17:57:10' prior: 50897577!
test06PortfolioMoreThanOneAccountWithRegisteredTransactions
	| portfolio account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	account1 _ ReceptiveAccount new.
	account2 _ ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 50 on: account2.
	
	self assertAdd: account1 To: portfolio.
	self assertAdd: account2 To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: portfolio balance equals: 150.! !
!PortfolioTest methodsFor: 'tests transactions' stamp: 'EMI 11/8/2020 17:57:31' prior: 50892158!
test08PortfolioWithOneAccountHasOneTransaction
	| portfolio account deposit |
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account.
	
	self assertAdd: account To: portfolio.
	self assert: portfolio transactions size equals: 1.
	self assert: (portfolio transactions includes: deposit).
	self assert: portfolio balance equals: 100.! !
!PortfolioTest methodsFor: 'tests transactions' stamp: 'EMI 11/8/2020 17:57:54' prior: 50892173!
test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions
	| portfolio account1 account2 deposit withdraw |
	portfolio _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	deposit _ Deposit register: 100 on: account1.
	withdraw _ Withdraw register: 50 on: account2.
	
	self assertAdd: account1 To: portfolio.
	self assertAdd: account2 To: portfolio.
	self assert: portfolio transactions size equals: 2.
	self assert: (portfolio transactions includes: deposit).
	self assert: (portfolio transactions includes: withdraw ).
	self assert: portfolio balance equals: 50.! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 17:59:05' prior: 50897598!
test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChild account|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioChild. 
	self assertAdd: portfolioChild To: portfolio.
	self assert: portfolioChild balance equals: 100.
	self assert: portfolio balance equals: 100.

	 
! !

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 17:59:05'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:00:30' prior: 50897690!
test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit
	| portfolio portfolioChildLeft  portfolioChildRight account account2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account2.
	
	self assertAdd: account To: portfolioChildLeft. 
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: portfolioChildLeft balance equals: 100.
	self assert: portfolioChildRight balance equals: 100.
	self assert: portfolio balance equals: 200.
	 
! !

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:00:31'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:01:12' prior: 50897717!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:01:14'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:01:33' prior: 50901214!
test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: portfolio balance equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:02:18' prior: 50900283!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioGrandChild.
	self assertAdd: portfolioGrandChild To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:02:19'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:03:54' prior: 50900376!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:03:55'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:05:01' prior: 50892685!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:05:02'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:06:33' prior: 50892726!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assertAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	self assertAdd: account To: portfolio2.
	
	self denyAdd: portfolio2 To: portfolio.


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:07:02' prior: 50898004!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:07:40' prior: 50901779!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assert: (portfolio add: portfolioChildLeft).
	self deny: (portfolio add: portfolioChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:08:22' prior: 50901797!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self denyAdd: portfolioChildRight To: portfolio.



	 
! !

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:08:22'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:09:03' prior: 50899782!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assert: (portfolioRoot add: portfolioChildWithoutAccount).
	self assert: (portfolioRoot add: portfolioChildWithAccount).
	self deny: (portfolioRoot add: portfolioToAddWithSameAccount).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:09:55' prior: 50901940!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAddWithSameAccount To: portfolioRoot.



	 
! !

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:09:57'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:10:29' prior: 50899834!
test18TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:11:27' prior: 50899864!
test19CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assertAdd: portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.


	 
! !

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:11:29'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:11:58' prior: 50899897!
test20TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:13:09' prior: 50899930!
test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assertAdd:  portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.
	


	 
! !

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:13:10'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:14:05' prior: 50899965!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:15:30' prior: 50902378!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.


	 
! !

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:15:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:15:32'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:15:56' prior: 50900020!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioGrandChildRight add: account).
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:16:49' prior: 50902539!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self deny: (portfolioChildRight add: portfolioGrandChildRight).


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:17:38' prior: 50902562!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:19:41' prior: 50900066!
test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioWithSameAccount.
	self assertAdd: portfolioToAdd To: portfolioWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAdd To: portfolioRoot.


	 
! !

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:19:42'!
PASSED!
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:20:31' prior: 50900124!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assert: (portfolioRoot add: portfolioChildLeft).
	self assert: (portfolioRoot add: portfolioChildRight).
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:21:02' prior: 50902744!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assert: (portfolioChildLeft add: portfolioGrandChildLeft ).
	self assert: (portfolioChildRight add: portfolioGrandChildRight).
	
	portfolioChildAnotherTree _ Portfolio new.
	self assert: (portfolioRootAnotherTree add: portfolioChildAnotherTree).
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assert: (portfolioChildAnotherTree add: portfolioGrandChildAnotherTree ).
	
	self deny: (portfolioGrandChildRight add: portfolioGrandChildAnotherTree).
	


	 
! !
!PortfolioTest methodsFor: 'tests tree structure' stamp: 'EMI 11/8/2020 18:22:49' prior: 50902787!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft .
	self assertAdd: portfolioGrandChildRight To: portfolioChildRight.
	
	portfolioChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioChildAnotherTree To: portfolioRootAnotherTree.
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioGrandChildAnotherTree To: portfolioChildAnotherTree.
	
	self denyAdd: portfolioGrandChildAnotherTree To: portfolioGrandChildRight 


	 
! !

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:22:51'!
PASSED!
!Asset class methodsFor: 'errorMessages' stamp: 'EMI 11/8/2020 18:25:41'!
cannotAddAssetErrorMessage
	^'Cannot add asset already present in assets tree'.! !
!Portfolio methodsFor: 'adding' stamp: 'EMI 11/8/2020 18:27:49' prior: 50898330!
add: anAsset
	| rootParents rootParentsOther |
	rootParents _ (self assetTreeRoots).
	rootParentsOther _ (anAsset assetTreeRoots).
	
	rootParents do: [:aParent |
		rootParentsOther do: [:aParentOther |
			(aParent hasAsset: aParentOther) ifTrue:[^Error signal: self class cannotAddAssetErrorMessage.].
			(aParentOther hasAsset: aParent) ifTrue:[^Error signal: self class cannotAddAssetErrorMessage.]
		].
	].
	
	assets add: anAsset.
	anAsset addAsSubassetOf: self.
	^true.! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:30:40' prior: 50900521!
assertAdd: anAsset To: anotherAsset
	self should: [anotherAsset add: anAsset ]
	raise: Error
	withExceptionDo:[:anError | self assert: anError messageText equals: Asset cannotAddAssetErrorMessage].! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:32:04' prior: 50903004!
assertAdd: anAsset To: anotherAsset
	! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:32:08' prior: 50900526!
denyAdd: anAsset To: anotherAsset
	self should: [anotherAsset add: anAsset ]
	raise: Error
	withExceptionDo:[:anError | self assert: anError messageText equals: Asset cannotAddAssetErrorMessage].! !
!PortfolioTest methodsFor: 'private' stamp: 'EMI 11/8/2020 18:32:41' prior: 50903013!
assertAdd: anAsset To: anotherAsset
	self assert: (anotherAsset add: anAsset).
	! !

----SNAPSHOT----(8 November 2020 18:32:46) CuisUniversity-4383.image priorSource: 18200455!

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:32:52'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:34:00'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:34:42' prior: 50903138!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assert: (portfolioChildLeft add: account1).
	self assert: (portfolioChildRight add: account2).
	self assert: (portfolio add: portfolioChildLeft).
	self assert: (portfolio add: portfolioChildRight).
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
! !
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:35:49' prior: 50903178!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assertAdd: account1 To: portfolioChildLeft.
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
! !

!testRun: #PortfolioTest #test01NewPortfolioHasNoAccountsAndNoPortfolios stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioAddEmptyAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioAddEmptyPortfolio stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioHasNoRegisteredTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOneAccountWithOneRegisteredTransaction stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioMoreThanOneAccountWithRegisteredTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneAccountHasOneTransaction stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithMoreThanOneAccountHasMoreThanOneTransactions stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioHasOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADeposit stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:35:53'!
PASSED!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:36:34'!
test16PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:36:34'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:36:52'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test16PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:36:52'!
test16PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:05'!
test27PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft .
	self assertAdd: portfolioGrandChildRight To: portfolioChildRight.
	
	portfolioChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioChildAnotherTree To: portfolioRootAnotherTree.
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioGrandChildAnotherTree To: portfolioChildAnotherTree.
	
	self denyAdd: portfolioGrandChildAnotherTree To: portfolioGrandChildRight 


	 
! !

!methodRemoval: PortfolioTest #test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount stamp: 'EMI 11/8/2020 18:37:05'!
test25PortfolioWith2GrandChildrenPortfoliosCannotAddAThirdWithAGrandParentWithSameAccount
	| portfolioRoot portfolioChildLeft portfolioChildRight 
	portfolioGrandChildRight portfolioGrandChildLeft 
	portfolioRootAnotherTree portfolioChildAnotherTree portfolioGrandChildAnotherTree account|
	
	portfolioRoot _ Portfolio new.
	portfolioRootAnotherTree  _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolioRoot.
	self assertAdd: account To: portfolioRootAnotherTree.
	
	portfolioChildLeft  _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	self assertAdd: portfolioChildLeft To: portfolioRoot.
	self assertAdd: portfolioChildRight To: portfolioRoot.
	
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft .
	self assertAdd: portfolioGrandChildRight To: portfolioChildRight.
	
	portfolioChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioChildAnotherTree To: portfolioRootAnotherTree.
	
	portfolioGrandChildAnotherTree _ Portfolio new.
	self assertAdd: portfolioGrandChildAnotherTree To: portfolioChildAnotherTree.
	
	self denyAdd: portfolioGrandChildAnotherTree To: portfolioGrandChildRight 


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:16'!
test26PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioWithSameAccount.
	self assertAdd: portfolioToAdd To: portfolioWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAdd To: portfolioRoot.


	 
! !

!methodRemoval: PortfolioTest #test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount stamp: 'EMI 11/8/2020 18:37:16'!
test24PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithAParentWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount 
	portfolioToAdd portfolioWithSameAccount account|
	
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioWithSameAccount.
	self assertAdd: portfolioToAdd To: portfolioWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAdd To: portfolioRoot.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:25'!
test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !

!methodRemoval: PortfolioTest #test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:37:25'!
test23PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:36'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !

!methodRemoval: PortfolioTest #test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:37:36'!
test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:45'!
test25PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
! !

!methodRemoval: PortfolioTest #test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild stamp: 'EMI 11/8/2020 18:37:45'!
test24PortfolioCannotAddGrandChildPortfolioWithSameAccountAsChild
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.

	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:37:53'!
test24PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.


	 
! !

!methodRemoval: PortfolioTest #test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:37:53'!
test22PortfolioCannotAddBothGrandChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight portfolioGrandChildLeft portfolioGrandChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	
	portfolioGrandChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildLeft.
	
	portfolioGrandChildRight _ Portfolio new.
	self assertAdd: account To: portfolioGrandChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assertAdd: portfolioGrandChildLeft To: portfolioChildLeft.
	self denyAdd: portfolioGrandChildRight To: portfolioChildRight.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:00'!
test23CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assertAdd:  portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.
	


	 
! !

!methodRemoval: PortfolioTest #test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio stamp: 'EMI 11/8/2020 18:38:00'!
test21CannotUniteTwoDisjointPortfoliosWithSameChildPortfolio
	| portfolio portfolio2 portfolioRoot portfolioChild |
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assertAdd:  portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.
	


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:09'!
test22TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test20TwoDisjointPortfoliosCanHaveSameChildPortfolio stamp: 'EMI 11/8/2020 18:38:09'!
test20TwoDisjointPortfoliosCanHaveSameChildPortfolio
	| portfolio portfolio2 portfolioChild|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioChild _ Portfolio new.
	
	self assertAdd: portfolioChild To: portfolio.
	self assertAdd: portfolioChild To: portfolio2.
	self assert: portfolioChild parentAssets includes: portfolio.
	self assert: portfolioChild parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:24'!
test21CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assertAdd: portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.


	 
! !

!methodRemoval: PortfolioTest #test19CannotUniteTwoDisjointPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:38:24'!
test19CannotUniteTwoDisjointPortfoliosWithSameAccount
	| portfolio portfolio2 portfolioRoot account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolioRoot _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assertAdd: portfolio To: portfolioRoot.
	self denyAdd: portfolio2 To: portfolioRoot.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:37'!
test20TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
! !

!methodRemoval: PortfolioTest #test18TwoDisjointPortfoliosCanUseSameAccount stamp: 'EMI 11/8/2020 18:38:37'!
test18TwoDisjointPortfoliosCanUseSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	portfolio2 _ Portfolio new.
	account _ ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self assertAdd: account To: portfolio2.
	self assert: account parentAssets includes: portfolio.
	self assert: account parentAssets includes: portfolio2.
	


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:38:55'!
test19PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAddWithSameAccount To: portfolioRoot.



	 
! !

!methodRemoval: PortfolioTest #test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount stamp: 'EMI 11/8/2020 18:38:55'!
test17PortfolioWith2ChildrenPortfoliosCannotAddAThirdWithSameAccount
	| portfolioRoot portfolioChildWithAccount portfolioChildWithoutAccount portfolioToAddWithSameAccount account|
	portfolioRoot _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildWithoutAccount _ Portfolio new.
	
	portfolioChildWithAccount _ Portfolio new.
	self assertAdd: account To: portfolioChildWithAccount.
	
	portfolioToAddWithSameAccount _ Portfolio new.
	self assertAdd: account To: portfolioToAddWithSameAccount.
	
	self assertAdd: portfolioChildWithoutAccount To: portfolioRoot.
	self assertAdd: portfolioChildWithAccount To: portfolioRoot.
	self denyAdd: portfolioToAddWithSameAccount To: portfolioRoot.



	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:09'!
test18PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self denyAdd: portfolioChildRight To: portfolio.



	 
! !

!methodRemoval: PortfolioTest #test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount stamp: 'EMI 11/8/2020 18:39:09'!
test16PortfolioCannotAddBothChildrenPortfoliosWithSameAccount
	| portfolio portfolioChildLeft portfolioChildRight account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	portfolioChildLeft _ Portfolio new.
	self assertAdd: account To: portfolioChildLeft.
	
	portfolioChildRight _ Portfolio new.
	self assertAdd: account To: portfolioChildRight.
	
	self assertAdd: portfolioChildLeft To: portfolio.
	self denyAdd: portfolioChildRight To: portfolio.



	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:17'!
test17PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assertAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	self assertAdd: account To: portfolio2.
	
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test15PortfolioCannotAddChildPortfolioWithSameAccount stamp: 'EMI 11/8/2020 18:39:17'!
test15PortfolioCannotAddChildPortfolioWithSameAccount
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	self assertAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	self assertAdd: account To: portfolio2.
	
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:23'!
test16PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
! !

!methodRemoval: PortfolioTest #test14PortfolioCannotAddSameEmptyAssetTwice stamp: 'EMI 11/8/2020 18:39:24'!
test14PortfolioCannotAddSameEmptyAssetTwice
	| portfolio portfolio2 account|
	portfolio _ Portfolio new.
	account _  ReceptiveAccount new.
	
	self assertAdd: account To: portfolio.
	self denyAdd: account To: portfolio.
	
	portfolio2 _ Portfolio new.
	
	self assertAdd: portfolio2 To: portfolio.
	self denyAdd: portfolio2 To: portfolio.


	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:32'!
test15bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: PortfolioTest #test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:32'!
test13bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:38'!
test15PortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
! !

!methodRemoval: PortfolioTest #test15bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:38'!
test15bisPortfolioHasMoreThanOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChildLeft  portfolioGrandChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChildLeft _ Portfolio new.
	portfolioGrandChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	.
	self assertAdd: account1 To: portfolioGrandChildLeft.
	self assertAdd: account2 To: portfolioGrandChildRight.
	self assertAdd: portfolioGrandChildLeft To: portfolioChild.
	self assertAdd: portfolioGrandChildRight To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 200.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:48'!
test14PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assertAdd: account1 To: portfolioChildLeft.
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
! !

!methodRemoval: PortfolioTest #test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:48'!
test13PortfolioHasMoreThanOneChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChildLeft  portfolioChildRight account1 account2 transaction1 transaction2|
	portfolio _ Portfolio new.
	portfolioChildLeft _ Portfolio new.
	portfolioChildRight _ Portfolio new.
	account1 _  ReceptiveAccount new.
	account2 _  ReceptiveAccount new.
	transaction1 _ Deposit register: 100 on: account1.
	transaction2 _ Deposit register: 100 on: account2.
	
	self assertAdd: account1 To: portfolioChildLeft.
	self assertAdd: account2 To: portfolioChildRight.
	self assertAdd: portfolioChildLeft To: portfolio.
	self assertAdd: portfolioChildRight To: portfolio.
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio transactions size) equals: 2.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	 
	 
!
!PortfolioTest methodsFor: 'tests - tree structure' stamp: 'EMI 11/8/2020 18:39:56'!
test13PortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioGrandChild.
	self assertAdd: portfolioGrandChild To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
! !

!methodRemoval: PortfolioTest #test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered stamp: 'EMI 11/8/2020 18:39:56'!
test12bisPortfolioHasOneGrandChildPortfolioWithAnAccountAndADepositRegistered
	| portfolio portfolioChild portfolioGrandChild account transaction |
	portfolio _ Portfolio new.
	portfolioChild _ Portfolio new.
	portfolioGrandChild _ Portfolio new.
	account _  ReceptiveAccount new.
	transaction _ Deposit register: 100 on: account. 
	
	self assertAdd: account To: portfolioGrandChild.
	self assertAdd: portfolioGrandChild To: portfolioChild.
	self assertAdd: portfolioChild To: portfolio.
	self assert: (portfolio balance ) equals: 100.
	self assert: (portfolio hasRegistered: transaction).
	self assert: (portfolio transactions size) equals: 1.
	self assert: (portfolio transactions includes: transaction).

	 
!

----SNAPSHOT----(8 November 2020 18:40:09) CuisUniversity-4383.image priorSource: 18284179!
!ReceptiveAccount methodsFor: 'nil' stamp: 'EMI 11/8/2020 18:41:22'!
add: anAsset
	^self.! !
!Asset methodsFor: 'nil' stamp: 'EMI 11/8/2020 18:41:54'!
add: anAsset
	^self subclassResponsibility.! !

----SNAPSHOT----(8 November 2020 18:43:18) CuisUniversity-4383.image priorSource: 18324735!

----SNAPSHOT----(8 November 2020 18:47:40) CuisUniversity-4383.image priorSource: 18325070!

----QUIT----(8 November 2020 18:47:48) CuisUniversity-4383.image priorSource: 18325163!