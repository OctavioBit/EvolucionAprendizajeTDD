

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/23/2020 19:36:46'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'NNH 10/23/2020 19:43:20'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'NNH 10/23/2020 19:43:09'!
test01

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover perform: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: 'Norte'.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 19:43:33' prior: 50867786!
test01

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover perform: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: 'North'.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:43:54'!
ERROR!
!MarsRover class methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:44:14'!
at: aPoint heading: aString 
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:46:22' prior: 50867807!
at: aLocation heading: aCardinalDirection

	^self new initializeAt: aLocation heading: aCardinalDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:46:29'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'NNH 10/23/2020 19:46:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'location'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'NNH 10/23/2020 19:46:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'location cardinalDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'xxxxxxxx' stamp: 'NNH 10/23/2020 19:46:41'!
initializeAt: aLocation heading: aCardinalDirection 
	self shouldBeImplemented.
	location := aLocation.
	cardinalDirection := aCardinalDirection.! !
!MarsRover methodsFor: 'xxxxxxxx' stamp: 'NNH 10/23/2020 19:46:53' prior: 50867835!
initializeAt: aLocation heading: aCardinalDirection 

	location := aLocation.
	cardinalDirection := aCardinalDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:46:59'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 19:47:39' prior: 50867796!
test01

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: 'North'.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:47:46'!
ERROR!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:47:57'!
execute: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:48:18' prior: 50867864!
execute: aListOfCommands 
	! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:48:22'!
ERROR!
!MarsRover methodsFor: 'xxxxxxx' stamp: 'NNH 10/23/2020 19:48:33'!
position
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'xxxxxxx' stamp: 'NNH 10/23/2020 19:48:52' prior: 50867875!
position
	^ location.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:48:57'!
ERROR!
!MarsRover methodsFor: 'fsfsdfs' stamp: 'NNH 10/23/2020 19:49:11'!
direction
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'fsfsdfs' stamp: 'NNH 10/23/2020 19:49:25' prior: 50867885!
direction
	^cardinalDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:49:27'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:49:27'!
PASSED!
!MarsRoverTest methodsFor: 'nil' stamp: 'NNH 10/23/2020 19:51:33'!
test02

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:51:39'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:54:05' prior: 50867869!
execute: aListOfCommands 

	aListOfCommands first = $f ifTrue: [location := location + 0@1].
	! !

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:54:13'!
ERROR!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:55:11' prior: 50867907!
execute: aListOfCommands 

	aListOfCommands first = $f ifTrue: [location := 0@1+ location].
	! !

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:55:16'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:55:16'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:55:16'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:55:16'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:55:50'!
ERROR!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:56:49' prior: 50867915!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		]
	
	! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:56:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:56:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:56:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:57:01'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:57:01'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 19:57:53'!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 19:58:17' prior: 50867952!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1


! !

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 19:58:19'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 19:58:47' prior: 50867933!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		]
	
	! !

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 19:59:16'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 19:59:16'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 19:59:16'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 19:59:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 19:59:31' prior: 50867960!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:01:26' prior: 50867990!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'l'.
	self assert: marsRover position equals: -1@0
	self assert: marsRover direction equals: 'West'.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:01:45' prior: 50867998!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:01:52' prior: 50868008!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:01:54'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:01:54'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:01:54'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:01:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:02:33'!
test04

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'Norte'.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: 'West'.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:02:40' prior: 50867897!
test02

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:02:46' prior: 50868016!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:02:53' prior: 50868033!
test04

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: 'West'.


! !

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:03:00'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 20:03:58' prior: 50867970!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [cardinalDirection := 'West'].
		]
	
	! !

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:04:00'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:04:00'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:04:00'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:04:00'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:04:00'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:04:43'!
test05

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'West'.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: 'South'.


! !

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:04:49'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 20:06:44' prior: 50868067!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [
			cardinalDirection = 'North' ifTrue: [cardinalDirection := 'West'].
			cardinalDirection = 'West' ifTrue: [cardinalDirection := 'South']		.
			].
		]
	
	! !

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:06:53'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:06:53'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:06:53'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:06:53'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:06:53'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:06:53'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:06:53'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 20:08:05' prior: 50868101!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [
			cardinalDirection = 'North' ifTrue: [cardinalDirection := 'West'] ifFalse: [cardinalDirection := 'South'].
			].
		]
	
	! !

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:08:08'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:08:11'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:08:11'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:08:11'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:08:11'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:08:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:09:09'!
test06

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'South'.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: 'East'.


! !

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/23/2020 20:09:11'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 20:11:05' prior: 50868133!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [
			cardinalDirection = 'North' ifTrue: [cardinalDirection := 'West'] ifFalse: [
				cardinalDirection = 'West' ifTrue: [cardinalDirection := 'South'] ifFalse: [
					cardinalDirection := 'East'.
					].
				].
			].
		]
	
	! !

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/23/2020 20:11:08'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/23/2020 20:11:21'!
test07

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'East'.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: 'North'.


! !

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/23/2020 20:11:25'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 20:12:42' prior: 50868172!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [
			cardinalDirection = 'North' ifTrue: [cardinalDirection := 'West'] ifFalse: [
				cardinalDirection = 'West' ifTrue: [cardinalDirection := 'South'] ifFalse: [
					cardinalDirection = 'South' ifTrue: [cardinalDirection := 'East'] ifFalse: [
						cardinalDirection := 'North'.
						]
					].
				].
			].
		]
	
	! !

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/23/2020 20:12:47'!
PASSED!

Object subclass: #MarsRoverStatus
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatus category: 'MarsRover' stamp: 'NNH 10/23/2020 20:14:54'!
Object subclass: #MarsRoverStatus
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverStatus subclass: #MarsRoverStatusHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatusHeadingNorth category: 'MarsRover' stamp: 'NNH 10/23/2020 20:15:40'!
MarsRoverStatus subclass: #MarsRoverStatusHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverStatus subclass: #MarsRoverStatusHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatusHeadingWest category: 'MarsRover' stamp: 'NNH 10/23/2020 20:15:44'!
MarsRoverStatus subclass: #MarsRoverStatusHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverStatus subclass: #MarsRoverStatusHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatusHeadingEast category: 'MarsRover' stamp: 'NNH 10/23/2020 20:15:47'!
MarsRoverStatus subclass: #MarsRoverStatusHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverStatus subclass: #MarsRoverStatusHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatusHeadingSouth category: 'MarsRover' stamp: 'NNH 10/23/2020 20:15:50'!
MarsRoverStatus subclass: #MarsRoverStatusHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/23/2020 20:21:43' prior: 50868216!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [
			cardinalDirection = 'North' ifTrue: [cardinalDirection := 'West'] ifFalse: [
				cardinalDirection = 'West' ifTrue: [cardinalDirection := 'South'] ifFalse: [
					cardinalDirection = 'South' ifTrue: [cardinalDirection := 'East'] ifFalse: [
						cardinalDirection := 'North'.
						]
					].
				].
			].
		]
	
	! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/23/2020 20:21:52'!
PASSED!

----QUIT----(23 October 2020 20:22:24) CuisUniversity-4384.image priorSource: 17155564!

----STARTUP---- (24 October 2020 10:38:34) as /home/nahuel/Documents/cuisuniversity/CuisUniversity-4384.image!


!classDefinition: #MarsRover category: 'MarsRover' stamp: 'NNH 10/24/2020 10:41:37'!
Object subclass: #MarsRover
	instanceVariableNames: 'location cardinalDirection status'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 10:41:30' prior: 50868317!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [
			status := status turnLeft.
			cardinalDirection = 'North' ifTrue: [cardinalDirection := 'West'] ifFalse: [
				cardinalDirection = 'West' ifTrue: [cardinalDirection := 'South'] ifFalse: [
					cardinalDirection = 'South' ifTrue: [cardinalDirection := 'East'] ifFalse: [
						cardinalDirection := 'North'.
						]
					].
				].
			].
		]
	
	! !
!MarsRoverStatus methodsFor: 'nil' stamp: 'NNH 10/24/2020 10:42:18'!
turnLeft
	self subclassResponsibility.! !
!MarsRoverStatusHeadingNorth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:42:28' overrides: 50868389!
turnLeft
	self subclassResponsibility.! !
!MarsRoverStatusHeadingWest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:42:28' overrides: 50868389!
turnLeft
	self subclassResponsibility.! !
!MarsRoverStatusHeadingEast methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:42:28' overrides: 50868389!
turnLeft
	self subclassResponsibility.! !
!MarsRoverStatusHeadingSouth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:42:28' overrides: 50868389!
turnLeft
	self subclassResponsibility.! !

!methodRemoval: MarsRoverStatus #turnLeft stamp: 'NNH 10/24/2020 10:42:28'!
turnLeft
	self subclassResponsibility.!
!MarsRoverStatus methodsFor: 'nil' stamp: 'NNH 10/24/2020 10:42:45'!
turnLeft
	self subclassResponsibility.! !
!MarsRoverStatusHeadingEast methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:43:37' prior: 50868404 overrides: 50868417!
turnLeft
	MarsRoverStatusHeadingNorth new.! !
!MarsRoverStatusHeadingEast methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:43:51' prior: 50868423 overrides: 50868417!
turnLeft
	^MarsRoverStatusHeadingNorth new.! !
!MarsRoverStatusHeadingNorth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:44:02' prior: 50868394 overrides: 50868417!
turnLeft
	^MarsRoverStatusHeadingWest new.! !
!MarsRoverStatusHeadingSouth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:44:10' prior: 50868409 overrides: 50868417!
turnLeft
	^MarsRoverStatusHeadingEast new.! !
!MarsRoverStatusHeadingWest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:44:19' prior: 50868399 overrides: 50868417!
turnLeft
	^MarsRoverStatusHeadingSouth new.! !
!MarsRoverStatus class methodsFor: 'nil' stamp: 'NNH 10/24/2020 10:46:04'!
heading: aCardinalDirection
	aCardinalDirection = ''! !
!MarsRoverStatus class methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:47:26' prior: 50868451!
heading: aCardinalDirection
	aCardinalDirection = 'North' ifTrue: [^MarsRoverStatusHeadingNorth new.].! !
!MarsRoverStatus class methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:48:13' prior: 50868457!
heading: aCardinalDirection
	aCardinalDirection = 'North' ifTrue: [^MarsRoverStatusHeadingNorth new.].
	aCardinalDirection = 'West' ifTrue: [^MarsRoverStatusHeadingWest new.].
	aCardinalDirection = 'South' ifTrue: [^MarsRoverStatusHeadingSouth new.].
	aCardinalDirection = 'East' ifTrue: [^MarsRoverStatusHeadingEast new.].! !
!MarsRoverStatus class methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:49:30' prior: 50868464!
heading: aCardinalDirection
	aCardinalDirection = 'North' ifTrue: [^MarsRoverStatusHeadingNorth new.].
	aCardinalDirection = 'West' ifTrue: [^MarsRoverStatusHeadingWest new.].
	aCardinalDirection = 'South' ifTrue: [^MarsRoverStatusHeadingSouth new.].
	aCardinalDirection = 'East' ifTrue: [^MarsRoverStatusHeadingEast new.].! !
!MarsRover methodsFor: 'xxxxxxxx' stamp: 'NNH 10/24/2020 10:50:23' prior: 50867843!
initializeAt: aLocation heading: aCardinalDirection 

	location := aLocation.
	status := MarsRoverStatus heading: aCardinalDirection.! !
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 10:51:00' prior: 50868368!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [status := status turnLeft.].
	]! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/24/2020 10:51:09'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/24/2020 10:51:09'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/24/2020 10:51:09'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 10:51:09'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 10:51:09'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 10:51:09'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 10:51:09'!
FAILURE!
!MarsRoverStatus methodsFor: 'nil' stamp: 'NNH 10/24/2020 10:52:38'!
direction
	self subclassResponsibility.! !
!MarsRoverStatusHeadingNorth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:52:44' overrides: 50868526!
direction
	self subclassResponsibility.! !
!MarsRoverStatusHeadingWest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:52:44' overrides: 50868526!
direction
	self subclassResponsibility.! !
!MarsRoverStatusHeadingEast methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:52:44' overrides: 50868526!
direction
	self subclassResponsibility.! !
!MarsRoverStatusHeadingSouth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:52:44' overrides: 50868526!
direction
	self subclassResponsibility.! !

!methodRemoval: MarsRoverStatus #direction stamp: 'NNH 10/24/2020 10:52:44'!
direction
	self subclassResponsibility.!
!MarsRoverStatusHeadingEast methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:52:56' prior: 50868541!
direction
	^'East'.! !
!MarsRoverStatusHeadingNorth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:53:05' prior: 50868531!
direction
	^'North'.! !
!MarsRoverStatusHeadingSouth methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:53:14' prior: 50868546!
direction
	^'South'.! !
!MarsRoverStatusHeadingWest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:53:23' prior: 50868536!
direction
	^'West'.! !
!MarsRover methodsFor: 'fsfsdfs' stamp: 'NNH 10/24/2020 10:53:49' prior: 50867889!
direction
	^cardinalDirection direction.! !
!MarsRover methodsFor: 'fsfsdfs' stamp: 'NNH 10/24/2020 10:53:54' prior: 50868574!
direction
	^status direction.! !

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 10:53:59'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:54:31'!
test08

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: 'East'.


! !

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 10:54:40'!
FAILURE!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 10:54:40'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 10:56:15' prior: 50868498!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [location := 0@1+ location].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [status := status turnLeft.].
		aListOfCommands first = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 10:56:22'!
ERROR!
!MarsRoverStatusHeadingNorth methodsFor: 'dfsdfsdf' stamp: 'NNH 10/24/2020 10:56:46'!
turnRight
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingNorth methodsFor: 'dfsdfsdf' stamp: 'NNH 10/24/2020 10:57:14' prior: 50868628!
turnRight
	^MarsRoverStatusHeadingEast new.! !

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 10:57:20'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 10:57:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:57:41'!
test09

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'East'.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: 'South'.


! !

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 10:57:54'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 10:57:54'!
ERROR!
!MarsRoverStatusHeadingEast methodsFor: 'dsadasdas' stamp: 'NNH 10/24/2020 10:58:03'!
turnRight
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingEast methodsFor: 'dsadasdas' stamp: 'NNH 10/24/2020 10:58:21' prior: 50868655!
turnRight
	^MarsRoverStatusHeadingSouth new.! !

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 10:58:24'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 10:58:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:58:41'!
test10

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'South'.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: 'West'.


! !

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 10:58:44'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 10:58:44'!
ERROR!
!MarsRoverStatusHeadingSouth methodsFor: 'sdaqdasdasd' stamp: 'NNH 10/24/2020 10:58:55'!
turnRight
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingSouth methodsFor: 'sdaqdasdasd' stamp: 'NNH 10/24/2020 10:59:10' prior: 50868682!
turnRight
	^MarsRoverStatusHeadingWest new.! !

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 10:59:16'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 10:59:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:59:24'!
test11

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'South'.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: 'West}'.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 10:59:34' prior: 50868696!
test11

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'West'.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: 'North'.


! !

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 10:59:41'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 10:59:41'!
ERROR!
!MarsRoverStatusHeadingWest methodsFor: 'dasdasd' stamp: 'NNH 10/24/2020 10:59:58'!
turnRight
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingWest methodsFor: 'dasdasd' stamp: 'NNH 10/24/2020 11:00:16' prior: 50868717!
turnRight
	^MarsRoverStatusHeadingNorth new.! !

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:00:18'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:00:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:01:56'!
test01EmptyListOfCommandsShouldNotMoveMarsRover

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: 'North'.! !

!methodRemoval: MarsRoverTest #test01 stamp: 'NNH 10/24/2020 11:02:07'!
test01

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: 'North'.
	marsRover execute: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: 'North'.!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 11:03:36'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 11:03:37'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 11:03:39'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west south'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 11:03:40'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west south east'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'NNH 10/24/2020 11:03:33' overrides: 16927572!
setUp
	north := 'North'.
	west := 'West'.
	south := 'South'.
	east := 'East'.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:03:52' prior: 50868757!
test01EmptyListOfCommandsShouldNotMoveMarsRover

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: 'North'.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:03:57' prior: 50868811!
test01EmptyListOfCommandsShouldNotMoveMarsRover

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: ''.
	self assert: marsRover position equals: 0@0.
	self assert:  marsRover direction equals: north.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:04:28' prior: 50868041!
test02

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:04:35' prior: 50868049!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:04:43' prior: 50868057!
test04

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: 'West'.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:04:59' prior: 50868091!
test05

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: south.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:05:10' prior: 50868162!
test06

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: east .


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:05:23' prior: 50868206!
test07

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: north.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:05:35' prior: 50868599!
test08

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: east.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:05:45' prior: 50868642!
test09

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: south.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:05:51' prior: 50868669!
test10

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: 'West'.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:06:10' prior: 50868897!
test10

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: west.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:06:23' prior: 50868704!
test11

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: north.


! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:06:27'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:07:38'!
test02MoveForwardShouldIncreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !

!methodRemoval: MarsRoverTest #test02 stamp: 'NNH 10/24/2020 11:07:50'!
test02

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:08:20'!
test03MoveBackwardsShouldDecreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !

!methodRemoval: MarsRoverTest #test03 stamp: 'NNH 10/24/2020 11:08:24'!
test03

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:08:37'!
test02MoveForwardShouldIncreaseOneMarsRoverCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !

!methodRemoval: MarsRoverTest #test02MoveForwardShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:08:40'!
test02MoveForwardShouldIncreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:08:44'!
test03MoveBackwardsShouldDecreaseOneMarsRoverCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !

!methodRemoval: MarsRoverTest #test03MoveBackwardsShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:08:49'!
test03MoveBackwardsShouldDecreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:10:01'!
test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !

!methodRemoval: MarsRoverTest #test02MoveForwardShouldIncreaseOneMarsRoverCoordinate stamp: 'NNH 10/24/2020 11:10:01'!
test02MoveForwardShouldIncreaseOneMarsRoverCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:10:34'!
test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !

!methodRemoval: MarsRoverTest #test03MoveBackwardsShouldDecreaseOneMarsRoverCoordinate stamp: 'NNH 10/24/2020 11:10:34'!
test03MoveBackwardsShouldDecreaseOneMarsRoverCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:11:23'!
test12

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'f'.
	self assert: marsRover position equals: -1@0

! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:11:28'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:11:28'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:11:47'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:11:47'!
FAILURE!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 11:13:29' prior: 50868612!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [status := status moveForward].
		aListOfCommands first = $b ifTrue: [location := 0@-1+ location].
		aListOfCommands first = $l ifTrue: [status := status turnLeft.].
		aListOfCommands first = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:13:41'!
ERROR!
!MarsRoverStatusHeadingWest methodsFor: 'hjdfjksdfjk' stamp: 'NNH 10/24/2020 11:14:17'!
moveForward
	self shouldBeImplemented.! !

!classDefinition: #MarsRoverStatusHeadingWest category: 'MarsRover' stamp: 'NNH 10/24/2020 11:18:24'!
MarsRoverStatus subclass: #MarsRoverStatusHeadingWest
	instanceVariableNames: 'location'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverStatusHeadingWest methodsFor: 'hjdfjksdfjk' stamp: 'NNH 10/24/2020 11:18:22' prior: 50869089!
moveForward
	location := -1@0 + location.! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:18:35'!
ERROR!
!MarsRover methodsFor: 'xxxxxxxx' stamp: 'NNH 10/24/2020 11:19:55' prior: 50868491!
initializeAt: aLocation heading: aCardinalDirection 

	status := MarsRoverStatus at: aLocation heading: aCardinalDirection.! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:19:59'!
ERROR!
!MarsRoverStatus class methodsFor: 'fgdfnjksdfnfjk' stamp: 'NNH 10/24/2020 11:20:13'!
at: aPoint heading: aString 
	self shouldBeImplemented.! !
!MarsRoverStatus class methodsFor: 'fgdfnjksdfnfjk' stamp: 'NNH 10/24/2020 11:21:43' prior: 50869118!
at: aLocation heading: aCardinalDirection 
	aCardinalDirection = 'North' ifTrue: [^MarsRoverStatusHeadingNorth at: aLocation.].
	aCardinalDirection = 'West' ifTrue: [^MarsRoverStatusHeadingWest at: aLocation.].
	aCardinalDirection = 'South' ifTrue: [^MarsRoverStatusHeadingSouth at: aLocation.].
	aCardinalDirection = 'East' ifTrue: [^MarsRoverStatusHeadingEast at: aLocation.].! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:21:49'!
ERROR!
!MarsRoverStatus class methodsFor: 'accessing' stamp: 'NNH 10/24/2020 11:23:33' overrides: 16880774!
at: aPoint 
	self shouldBeImplemented.! !
!MarsRoverStatus class methodsFor: 'accessing' stamp: 'NNH 10/24/2020 11:24:34' prior: 50869142 overrides: 16880774!
at: aLocation 
	^self new initializeAt: aLocation.! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:24:39'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:25:22'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:25:22'!
ERROR!

!classDefinition: #MarsRoverStatusHeadingWest category: 'MarsRover' stamp: 'NNH 10/24/2020 11:26:05'!
MarsRoverStatus subclass: #MarsRoverStatusHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatus category: 'MarsRover' stamp: 'NNH 10/24/2020 11:26:05'!
Object subclass: #MarsRoverStatus
	instanceVariableNames: 'location'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:26:15'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:26:15'!
ERROR!
!MarsRoverStatus methodsFor: 'fdsfsdfsdf' stamp: 'NNH 10/24/2020 11:26:23'!
initializeAt: aLocation 
	self shouldBeImplemented.
	location := aLocation.! !
!MarsRoverStatus methodsFor: 'fdsfsdfsdf' stamp: 'NNH 10/24/2020 11:26:31' prior: 50869178!
initializeAt: aLocation 
	location := aLocation.! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:26:40'!
FAILURE!
!MarsRover methodsFor: 'xxxxxxx' stamp: 'NNH 10/24/2020 11:28:03' prior: 50867879!
position
	^ status location.! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:28:20'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:28:20'!
ERROR!
!MarsRoverStatus methodsFor: 'sdfsfsdf' stamp: 'NNH 10/24/2020 11:28:33'!
location
	self shouldBeImplemented.
	^location! !
!MarsRoverStatus methodsFor: 'sdfsfsdf' stamp: 'NNH 10/24/2020 11:28:37' prior: 50869199!
location
	^location! !

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:28:56'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:29:04'!
ERROR!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:29:04'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:29:04'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:29:21'!
ERROR!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:29:21'!
ERROR!
!MarsRoverStatusHeadingNorth methodsFor: 'fsdfsdfs' stamp: 'NNH 10/24/2020 11:29:37'!
moveForward
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingNorth methodsFor: 'fsdfsdfs' stamp: 'NNH 10/24/2020 11:30:05' prior: 50869252!
moveForward
	location := 0@1 + location.! !

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:30:11'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:30:23'!
ERROR!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:30:23'!
ERROR!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:31:19'!
ERROR!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:31:19'!
ERROR!
!MarsRover methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 11:32:05' prior: 50869073!
execute: aListOfCommands 

	aListOfCommands isEmpty ifFalse: [
		aListOfCommands first = $f ifTrue: [status moveForward.].
		aListOfCommands first = $b ifTrue: [status moveBackwards.].
		aListOfCommands first = $l ifTrue: [status := status turnLeft.].
		aListOfCommands first = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:32:11'!
ERROR!
!MarsRoverStatus methodsFor: 'sdfsdfsdf' stamp: 'NNH 10/24/2020 11:32:20'!
moveBackwards
	self shouldBeImplemented.! !
!MarsRoverStatus methodsFor: 'sdfsdfsdf' stamp: 'NNH 10/24/2020 11:32:57' prior: 50869299!
moveBackwards
	location := 0@-1 + location. ! !

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:33:00'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:33:06'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:33:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:33:47'!
test13

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@-1

! !

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:33:53'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:33:53'!
ERROR!
!MarsRoverStatusHeadingSouth methodsFor: 'fgdgfd' stamp: 'NNH 10/24/2020 11:34:07'!
moveForward
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingSouth methodsFor: 'fgdgfd' stamp: 'NNH 10/24/2020 11:34:34' prior: 50869362!
moveForward
	^location := 0@-1 + location! !

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:34:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:35:04'!
test14

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 1@0.

! !

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:35:09'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:35:09'!
ERROR!
!MarsRoverStatusHeadingEast methodsFor: 'fsdfsdfsdf' stamp: 'NNH 10/24/2020 11:35:17'!
moveForward
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingEast methodsFor: 'fsdfsdfsdf' stamp: 'NNH 10/24/2020 11:35:30' prior: 50869386!
moveForward
	location := 1@0 + location.! !

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:35:31'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:35:37'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:35:52' prior: 50869374!
test14

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:36:14' prior: 50869436!
test14

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:36:28'!
test15

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 1@0.

! !

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:36:32'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:36:32'!
FAILURE!
!MarsRoverStatus methodsFor: 'sdfsdfsdf' stamp: 'NNH 10/24/2020 11:37:13' prior: 50869304!
moveBackwards
	location := 0@1 + location. ! !

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:37:17'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:37:28'!
PASSED!
!MarsRoverStatus methodsFor: 'sdfsdfsdf' stamp: 'NNH 10/24/2020 11:37:47' prior: 50869465!
moveBackwards
	location := 1@0 + location. ! !

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:37:48'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:37:52'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:37:52'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:37:52'!
FAILURE!
!MarsRoverStatus methodsFor: 'sdfsdfsdf' stamp: 'NNH 10/24/2020 11:38:23' prior: 50869475!
moveBackwards
	location := 0@1 + location. ! !

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:38:26'!
FAILURE!
!MarsRoverStatus methodsFor: 'sdfsdfsdf' stamp: 'NNH 10/24/2020 11:38:58' prior: 50869527!
moveBackwards
	self subclassResponsibility.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:39:35'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:39:35'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:39:35'!
ERROR!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:39:39'!
ERROR!
!MarsRoverStatusHeadingNorth methodsFor: 'dsfsdfsf' stamp: 'NNH 10/24/2020 11:39:51' overrides: 50869536!
moveBackwards
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingNorth methodsFor: 'dsfsdfsf' stamp: 'NNH 10/24/2020 11:40:08' prior: 50869586 overrides: 50869536!
moveBackwards
	location := 0@-1 + location.! !

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:40:10'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:40:14'!
ERROR!
!MarsRoverStatusHeadingWest methodsFor: 'sdssdfsd' stamp: 'NNH 10/24/2020 11:40:22' overrides: 50869536!
moveBackwards
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingWest methodsFor: 'sdssdfsd' stamp: 'NNH 10/24/2020 11:40:43' prior: 50869604 overrides: 50869536!
moveBackwards
	location := 1@0 + location.! !

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:40:47'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:41:13'!
test16

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@1.

! !

!testRun: #MarsRoverTest #test16 stamp: 'NNH 10/24/2020 11:41:17'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'NNH 10/24/2020 11:41:17'!
ERROR!
!MarsRoverStatusHeadingSouth methodsFor: 'fsdfsdfsdf' stamp: 'NNH 10/24/2020 11:41:24' overrides: 50869536!
moveBackwards
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingSouth methodsFor: 'fsdfsdfsdf' stamp: 'NNH 10/24/2020 11:41:44' prior: 50869630 overrides: 50869536!
moveBackwards
	location := 0@1 + location.! !

!testRun: #MarsRoverTest #test16 stamp: 'NNH 10/24/2020 11:41:45'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:41:59'!
test17

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'b'.
	self assert: marsRover position equals: -1@0.

! !

!testRun: #MarsRoverTest #test17 stamp: 'NNH 10/24/2020 11:42:02'!
ERROR!

!testRun: #MarsRoverTest #test17 stamp: 'NNH 10/24/2020 11:42:02'!
ERROR!
!MarsRoverStatusHeadingEast methodsFor: 'dfsdfsdf' stamp: 'NNH 10/24/2020 11:42:08' overrides: 50869536!
moveBackwards
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingEast methodsFor: 'dfsdfsdf' stamp: 'NNH 10/24/2020 11:42:18' prior: 50869656 overrides: 50869536!
moveBackwards
	location := -1@0 + location.! !

!testRun: #MarsRoverTest #test17 stamp: 'NNH 10/24/2020 11:42:20'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'NNH 10/24/2020 11:42:23'!
PASSED!
!MarsRoverStatus methodsFor: 'nil' stamp: 'NNH 10/24/2020 11:42:57'!
moveForward

	self subclassResponsibility.! !
!MarsRoverStatus methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:43:07'!
turnRight
	self subclassResponsibility.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:43:31' prior: 50868849!
test04

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: west.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:44:15'!
test04TurningLeftFromNorthShouldHeadWest

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: west.


! !

!methodRemoval: MarsRoverTest #test04 stamp: 'NNH 10/24/2020 11:44:15'!
test04

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: west.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:44:32'!
test05TurningLeftFromWestShouldHeadSouth

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: south.


! !

!methodRemoval: MarsRoverTest #test05 stamp: 'NNH 10/24/2020 11:44:32'!
test05

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: south.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:44:47'!
test06TurningLeftFromSouthShouldHeadEast

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: east .


! !

!methodRemoval: MarsRoverTest #test06 stamp: 'NNH 10/24/2020 11:44:47'!
test06

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: east .


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:45:01'!
test07TurningLeftFromEastShouldHeadNorth

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: north.


! !

!methodRemoval: MarsRoverTest #test07 stamp: 'NNH 10/24/2020 11:45:01'!
test07

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'l'.
	self assert: marsRover direction equals: north.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:45:21'!
test08TurningRightFromNorthShouldHeadEast

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: east.


! !

!methodRemoval: MarsRoverTest #test08 stamp: 'NNH 10/24/2020 11:45:21'!
test08

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: east.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:45:35'!
test09TurningRightFromEastShouldHeadSouth

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: south.


! !

!methodRemoval: MarsRoverTest #test09 stamp: 'NNH 10/24/2020 11:45:35'!
test09

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: south.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:45:54'!
test10TurningRightFromSouthShouldHeadWest

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: west.


! !

!methodRemoval: MarsRoverTest #test10 stamp: 'NNH 10/24/2020 11:45:54'!
test10

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: west.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:46:08'!
test11TurningRightFromWestShouldHeadNorth

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: north.


! !

!methodRemoval: MarsRoverTest #test11 stamp: 'NNH 10/24/2020 11:46:08'!
test11

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'r'.
	self assert: marsRover direction equals: north.


!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:47:47'!
test12MovingForwardWestShouldDecreaseOneXCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'f'.
	self assert: marsRover position equals: -1@0

! !

!methodRemoval: MarsRoverTest #test12 stamp: 'NNH 10/24/2020 11:47:47'!
test12

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'f'.
	self assert: marsRover position equals: -1@0

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:48:20'!
test13MovingForwardSouthShouldDecreaseOneYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@-1

! !

!methodRemoval: MarsRoverTest #test13 stamp: 'NNH 10/24/2020 11:48:20'!
test13

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@-1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:48:57'!
test14MovingForwardEastShouldIncreaseOneXCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 1@0.

! !

!methodRemoval: MarsRoverTest #test14 stamp: 'NNH 10/24/2020 11:48:57'!
test14

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 1@0.

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:49:24'!
test15MovinfBackwardsWestShouldIncreaseOneXCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 1@0.

! !

!methodRemoval: MarsRoverTest #test15 stamp: 'NNH 10/24/2020 11:49:24'!
test15

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 1@0.

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:49:34'!
test15MovingBackwardsWestShouldIncreaseOneXCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 1@0.

! !

!methodRemoval: MarsRoverTest #test15MovinfBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 11:49:34'!
test15MovinfBackwardsWestShouldIncreaseOneXCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: west.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 1@0.

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:49:55'!
test16MovingBackwardsSouthShouldIncreaseOneYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@1.

! !

!methodRemoval: MarsRoverTest #test16 stamp: 'NNH 10/24/2020 11:49:55'!
test16

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: south.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@1.

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:50:27'!
test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'b'.
	self assert: marsRover position equals: -1@0.

! !

!methodRemoval: MarsRoverTest #test17 stamp: 'NNH 10/24/2020 11:50:27'!
test17

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: east.
	marsRover execute: 'b'.
	self assert: marsRover position equals: -1@0.

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:50:43'!
test02MovingForwardNorthShouldIncreaseOneYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

! !

!methodRemoval: MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:50:43'!
test02MovingForwardNorthShouldIncreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'f'.
	self assert: marsRover position equals: 0@1

!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 11:50:52'!
test03MovingBackwardsNorthShouldDecreaseOneYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

! !

!methodRemoval: MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate stamp: 'NNH 10/24/2020 11:50:52'!
test03MovingBackwardsNorthShouldDecreaseOneMarsRoverYCoordinate

	| marsRover |
	marsRover := MarsRover at: 0@0 heading: north.
	marsRover execute: 'b'.
	self assert: marsRover position equals: 0@-1

!
!MarsRoverStatus methodsFor: 'testing' stamp: 'NNH 10/24/2020 11:54:39'!
direction
	self subclassResponsibility.! !

!methodRemoval: MarsRoverStatus class #heading: stamp: 'NNH 10/24/2020 11:55:15'!
heading: aCardinalDirection
	aCardinalDirection = 'North' ifTrue: [^MarsRoverStatusHeadingNorth new.].
	aCardinalDirection = 'West' ifTrue: [^MarsRoverStatusHeadingWest new.].
	aCardinalDirection = 'South' ifTrue: [^MarsRoverStatusHeadingSouth new.].
	aCardinalDirection = 'East' ifTrue: [^MarsRoverStatusHeadingEast new.].!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:00:58' prior: 50868805 overrides: 16927572!
setUp
	| marsRoverNorth |
	north := 'North'.
	west := 'West'.
	south := 'South'.
	east := 'East'.
	
	marsRoverNorth := MarsRover at: 0@0 heading: north. ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:01:48' prior: 50870031 overrides: 16927572!
setUp

	| marsRoverNortffh |
	north := 'North'.
	west := 'West'.
	south := 'South'.
	east := 'East'.
	
	marsRoverNortffh := MarsRover at: 0@0 heading: north. ! !

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 12:02:01'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west south east marsRoverNorth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:02:00' prior: 50870040 overrides: 16927572!
setUp

	
	north := 'North'.
	west := 'West'.
	south := 'South'.
	east := 'East'.
	
	marsRoverNorth := MarsRover at: 0@0 heading: north. ! !

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 12:02:40'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west south east marsRoverNorth marsRoverWest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 12:02:41'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west south east marsRoverNorth marsRoverWest marsRoverSouth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'NNH 10/24/2020 12:02:42'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'north west south east marsRoverNorth marsRoverWest marsRoverSouth marsRoverEast'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:02:39' prior: 50870057 overrides: 16927572!
setUp

	
	north := 'North'.
	west := 'West'.
	south := 'South'.
	east := 'East'.
	
	marsRoverNorth := MarsRover at: 0@0 heading: north. 
	marsRoverWest := MarsRover at: 0@0 heading: west. 
	marsRoverSouth := MarsRover at: 0@0 heading: south . 
	marsRoverEast := MarsRover at: 0@0 heading: east . ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:03:27' prior: 50869975!
test02MovingForwardNorthShouldIncreaseOneYCoordinate

	marsRoverNorth execute: 'f'.
	self assert: marsRoverNorth position equals: 0@1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:03:49' prior: 50869994!
test03MovingBackwardsNorthShouldDecreaseOneYCoordinate

	marsRoverNorth execute: 'b'.
	self assert: marsRoverNorth position equals: 0@-1

! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:03:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:04:09' prior: 50869732!
test04TurningLeftFromNorthShouldHeadWest

	marsRoverNorth execute: 'l'.
	self assert: marsRoverNorth direction equals: west.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:04:22' prior: 50869748!
test05TurningLeftFromWestShouldHeadSouth

	marsRoverWest execute: 'l'.
	self assert: marsRoverWest direction equals: south.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:04:35' prior: 50869764!
test06TurningLeftFromSouthShouldHeadEast

	marsRoverSouth execute: 'l'.
	self assert: marsRoverSouth direction equals: east .


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:04:47' prior: 50869780!
test07TurningLeftFromEastShouldHeadNorth

	marsRoverEast execute: 'l'.
	self assert: marsRoverEast direction equals: north.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:05:06' prior: 50869796!
test08TurningRightFromNorthShouldHeadEast

	marsRoverNorth execute: 'r'.
	self assert: marsRoverNorth direction equals: east.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:05:27' prior: 50869812!
test09TurningRightFromEastShouldHeadSouth

	marsRoverEast execute: 'r'.
	self assert: marsRoverEast direction equals: south.


! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:05:31'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:05:46' prior: 50869828!
test10TurningRightFromSouthShouldHeadWest

	marsRoverSouth execute: 'r'.
	self assert: marsRoverSouth direction equals: west.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:05:57' prior: 50869844!
test11TurningRightFromWestShouldHeadNorth

	marsRoverWest execute: 'r'.
	self assert: marsRoverWest direction equals: north.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:06:09' prior: 50869860!
test12MovingForwardWestShouldDecreaseOneXCoordinate

	marsRoverWest execute: 'f'.
	self assert: marsRoverWest position equals: -1@0

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:06:21' prior: 50869876!
test13MovingForwardSouthShouldDecreaseOneYCoordinate

	marsRoverSouth execute: 'f'.
	self assert: marsRoverSouth position equals: 0@-1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:06:33' prior: 50869892!
test14MovingForwardEastShouldIncreaseOneXCoordinate

	marsRoverEast execute: 'f'.
	self assert: marsRoverEast position equals: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:06:45' prior: 50869924!
test15MovingBackwardsWestShouldIncreaseOneXCoordinate

	marsRoverWest execute: 'b'.
	self assert: marsRoverWest position equals: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:06:55' prior: 50869943!
test16MovingBackwardsSouthShouldIncreaseOneYCoordinate

	marsRoverSouth execute: 'b'.
	self assert: marsRoverSouth position equals: 0@1.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:07:12' prior: 50869959!
test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate

	marsRoverEast execute: 'b'.
	self assert: marsRoverEast position equals: -1@0.

! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:07:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:07:44' prior: 50870092 overrides: 16927572!
setUp

	
	north := 'North'.
	west := 'West'.
	south := 'South'.
	east := 'East'.
	
	marsRoverNorth := MarsRover at: 0@0 heading: north. 
	marsRoverWest := MarsRover at: 0@0 heading: west. 
	marsRoverSouth := MarsRover at: 0@0 heading: south . 
	marsRoverEast := MarsRover at: 0@0 heading: east. ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:10:03'!
should: aMarsRover executing: aListOfCommands beAt: aPosition

	aMarsRover execute: aListOfCommands .
	self assert: aMarsRover position equals: aPosition.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:10:29'!
should: aMarsRover executing: aListOfCommands beHeading: aCardinalDirection

	aMarsRover execute: aListOfCommands .
	self assert: aMarsRover direction equals: aCardinalDirection.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:12:06' prior: 50868822!
test01EmptyListOfCommandsShouldNotMoveMarsRover

	self should: marsRoverNorth executing: '' beAt: 0@0.
	self should: marsRoverNorth executing: '' 	beHeading: north. ! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:12:10'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:12:32' prior: 50870105!
test02MovingForwardNorthShouldIncreaseOneYCoordinate

	self should: marsRoverNorth executing: 'f' beAt: 0@1.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:12:48' prior: 50870113!
test03MovingBackwardsNorthShouldDecreaseOneYCoordinate

	self should: marsRoverNorth executing: 'b' beAt: 0@-1.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:13:18' prior: 50870183!
test04TurningLeftFromNorthShouldHeadWest

	self should: marsRoverNorth executing: 'l' beHeading: west.


! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:13:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:13:47' prior: 50870191!
test05TurningLeftFromWestShouldHeadSouth

	self should: marsRoverWest executing: 'l' beHeading: south.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:14:06' prior: 50870199!
test06TurningLeftFromSouthShouldHeadEast

	self should: marsRoverSouth executing: 'l' beHeading: east.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:14:17' prior: 50870207!
test07TurningLeftFromEastShouldHeadNorth

	self should: marsRoverEast executing: 'l' beHeading: north.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:14:41' prior: 50870215!
test08TurningRightFromNorthShouldHeadEast

	self should: marsRoverNorth executing: 'r' beHeading: east.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:14:57' prior: 50870223!
test09TurningRightFromEastShouldHeadSouth

	self should: marsRoverNorth executing: 'r' beHeading: east.
	self assert: marsRoverEast direction equals: south.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:15:08' prior: 50870293!
test10TurningRightFromSouthShouldHeadWest

	self should: marsRoverNorth executing: 'r' beHeading: east.
	self assert: marsRoverSouth direction equals: west.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:15:12' prior: 50870301!
test11TurningRightFromWestShouldHeadNorth

	self should: marsRoverNorth executing: 'r' beHeading: east.
	self assert: marsRoverWest direction equals: north.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:15:27' prior: 50870631!
test09TurningRightFromEastShouldHeadSouth

	self should: marsRoverEast executing: 'r' beHeading: south.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:15:38' prior: 50870640!
test10TurningRightFromSouthShouldHeadWest

	self should: marsRoverSouth executing: 'r' beHeading: west.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:15:47' prior: 50870649!
test11TurningRightFromWestShouldHeadNorth

	self should: marsRoverWest executing: 'r' beHeading: north.

! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:15:52'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:16:03' prior: 50870309!
test12MovingForwardWestShouldDecreaseOneXCoordinate

	self should: marsRoverNorth executing: 'f' beAt: 0@1.
	self assert: marsRoverWest position equals: -1@0

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:16:06' prior: 50870317!
test13MovingForwardSouthShouldDecreaseOneYCoordinate

	self should: marsRoverNorth executing: 'f' beAt: 0@1.
	self assert: marsRoverSouth position equals: 0@-1

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:16:14' prior: 50870325!
test14MovingForwardEastShouldIncreaseOneXCoordinate

	self should: marsRoverNorth executing: 'f' beAt: 0@1.
	self assert: marsRoverEast position equals: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:16:32' prior: 50870741!
test12MovingForwardWestShouldDecreaseOneXCoordinate

	self should: marsRoverWest executing: 'f' beAt: -1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:16:41' prior: 50870750!
test13MovingForwardSouthShouldDecreaseOneYCoordinate

	self should: marsRoverSouth executing: 'f' beAt: 0@-1.
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:16:52' prior: 50870759!
test14MovingForwardEastShouldIncreaseOneXCoordinate

	self should: marsRoverEast executing: 'f' beAt: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:17:02' prior: 50870333!
test15MovingBackwardsWestShouldIncreaseOneXCoordinate

	self should: marsRoverNorth executing: 'b' beAt: 0@-1.
	self assert: marsRoverWest position equals: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:17:05' prior: 50870341!
test16MovingBackwardsSouthShouldIncreaseOneYCoordinate

	self should: marsRoverNorth executing: 'b' beAt: 0@-1.
	self assert: marsRoverSouth position equals: 0@1.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:17:12' prior: 50870349!
test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate

	self should: marsRoverNorth executing: 'b' beAt: 0@-1.
	self assert: marsRoverEast position equals: -1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:17:26' prior: 50870789!
test15MovingBackwardsWestShouldIncreaseOneXCoordinate

	self should: marsRoverWest executing: 'b' beAt: 1@0.

! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:17:35' prior: 50870798!
test16MovingBackwardsSouthShouldIncreaseOneYCoordinate

	self should: marsRoverSouth executing: 'b' beAt: 0@1.
! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:17:50' prior: 50870807!
test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate

	self should: marsRoverEast executing: 'b' beAt: -1@0.
! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:17:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:19:34'!
test18

	self should: marsRoverNorth executing: 'ff' beAt: 0@2. 
! !

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:19:38'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:19:38'!
FAILURE!

aListOfCommands!
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:21:13' prior: 50869282!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommand |
		aCommand = $f ifTrue: [status moveForward.].
		aCommand = $b ifTrue: [status moveBackwards.].
		aCommand = $l ifTrue: [status := status turnLeft.].
		aCommand = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:21:18'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:21:38'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:21:41'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:21:45'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:22:17' prior: 50870432!
should: aMarsRover executing: aListOfCommands beAt: aPosition

	aMarsRover execute: aListOfCommands .
	self assert: aPosition equals: aMarsRover position.


! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:22:41' prior: 50870440!
should: aMarsRover executing: aListOfCommands beHeading: aCardinalDirection

	aMarsRover execute: aListOfCommands .
	self assert: aCardinalDirection equals: aMarsRover direction.


! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:22:46'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:24:26'!
test19

	self should: marsRoverNorth executing: 'lxl' beHeading: west.
! !

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:24:31'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:24:31'!
FAILURE!
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:28:24' prior: 50870910!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommand |
		({$f. $b. $l. $r} includes: aCommand) ifFalse: [^self.].
		aCommand = $f ifTrue: [status moveForward.].
		aCommand = $b ifTrue: [status moveBackwards.].
		aCommand = $l ifTrue: [status := status turnLeft.].
		aCommand = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:28:33'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:29:01'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:32:01'!
test20

	marsRoverNorth execute: 'lx'.
	marsRoverNorth execute: 'lx'.
	self assert: west equals: marsRoverNorth direction.! !

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:32:12'!
FAILURE!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:32:12'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'NNH 10/24/2020 12:34:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'location cardinalDirection status outOfOrder'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:34:35' prior: 50871087!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommand |
		({$f. $b. $l. $r} includes: aCommand) ifFalse: [outOfOrder := true.].
		outOfOrder ifTrue: [^self.].
		aCommand = $f ifTrue: [status moveForward.].
		aCommand = $b ifTrue: [status moveBackwards.].
		aCommand = $l ifTrue: [status := status turnLeft.].
		aCommand = $r ifTrue: [status := status turnRight.].
		
	]! !

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:34:53'!
ERROR!
!MarsRover methodsFor: 'initializing' stamp: 'NNH 10/24/2020 12:35:37' prior: 50869109!
initializeAt: aLocation heading: aCardinalDirection 

	status := MarsRoverStatus at: aLocation heading: aCardinalDirection.
	outOfOrder := false.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:35:42'!
PASSED!

MarsRoverStatus subclass: #MarsRoverStatusOutOfOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverStatusOutOfOrder category: 'MarsRover' stamp: 'NNH 10/24/2020 12:36:05'!
MarsRoverStatus subclass: #MarsRoverStatusOutOfOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:37:31' prior: 50871125!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommand |
		({$f. $b. $l. $r} includes: aCommand) ifFalse: [status := MarsRoverStatusOutOfOrder new.].
		aCommand = $f ifTrue: [status moveForward.].
		aCommand = $b ifTrue: [status moveBackwards.].
		aCommand = $l ifTrue: [status := status turnLeft.].
		aCommand = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:37:36'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:37:36'!
ERROR!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:37:36'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:37:46'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:37:46'!
ERROR!
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:38:01' overrides: 50868417!
turnLeft
	self shouldBeImplemented.! !
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:38:09' prior: 50871321 overrides: 50868417!
turnLeft
! !

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:38:36'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:38:36'!
ERROR!
!MarsRoverStatusOutOfOrder methodsFor: 'accessing' stamp: 'NNH 10/24/2020 12:38:55' overrides: 50870013!
direction
	self shouldBeImplemented.! !

!classDefinition: #MarsRoverStatusOutOfOrder category: 'MarsRover' stamp: 'NNH 10/24/2020 12:40:02'!
MarsRoverStatus subclass: #MarsRoverStatusOutOfOrder
	instanceVariableNames: 'direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverStatusOutOfOrder methodsFor: 'accessing' stamp: 'NNH 10/24/2020 12:39:29' prior: 50871336 overrides: 50870013!
direction
	^direction.! !

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:40:22'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:40:36'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:40:36'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:40:53'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:40:53'!
FAILURE!
!MarsRoverStatusOutOfOrder class methodsFor: 'no messages' stamp: 'NNH 10/24/2020 12:45:59' overrides: 50869124!
at: aPosition heading: aCardinalDirection

	self new initializeAt: aPosition heading: aCardinalDirection.! !
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:47:07'!
initializeAt: aPosition heading: aCardinalDirection
	location := aPosition.
	direction := aCardinalDirection.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:47:53' prior: 50871232!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommand |
		({$f. $b. $l. $r} includes: aCommand) ifFalse: [status := MarsRoverStatusOutOfOrder at: self position heading: self direction.].
		aCommand = $f ifTrue: [status moveForward.].
		aCommand = $b ifTrue: [status moveBackwards.].
		aCommand = $l ifTrue: [status := status turnLeft.].
		aCommand = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:48:54'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:48:55'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:48:55'!
ERROR!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:48:55'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:48:59'!
ERROR!
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:49:37' prior: 50871327 overrides: 50868417!
turnLeft
	^self.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:49:56'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:49:56'!
ERROR!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:49:56'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:50:04'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:50:04'!
ERROR!
!MarsRoverStatusOutOfOrder class methodsFor: 'instance creation' stamp: 'NNH 10/24/2020 12:50:32' prior: 50871367 overrides: 50869124!
at: aPosition heading: aCardinalDirection

	^self new initializeAt: aPosition heading: aCardinalDirection.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:50:35'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:50:36'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:50:36'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:50:36'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:50:36'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:50:36'!
PASSED!
!MarsRoverStatus methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:51:19'!
markOutOfOrder
	self subclassResponsibility.! !
!MarsRoverStatus methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:01' prior: 50871624!
markOutOfOrder
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingNorth methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:08' overrides: 50871629!
markOutOfOrder
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingEast methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:08' overrides: 50871629!
markOutOfOrder
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingSouth methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:08' overrides: 50871629!
markOutOfOrder
	self shouldBeImplemented.! !
!MarsRoverStatusHeadingWest methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:08' overrides: 50871629!
markOutOfOrder
	self shouldBeImplemented.! !
!MarsRoverStatusOutOfOrder methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:08' overrides: 50871629!
markOutOfOrder
	self shouldBeImplemented.! !

!methodRemoval: MarsRoverStatus #markOutOfOrder stamp: 'NNH 10/24/2020 12:52:08'!
markOutOfOrder
	self shouldBeImplemented.!
!MarsRoverStatus methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:52:36'!
markOutOfOrder
	self subclassResponsibility.! !
!MarsRoverStatusHeadingEast methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:53:54' prior: 50871639 overrides: 50871662!
markOutOfOrder
	^ MarsRoverStatusOutOfOrder at: location heading: self direction.! !
!MarsRoverStatus methodsFor: 'xxxxxx' stamp: 'NNH 10/24/2020 12:54:08' prior: 50871662!
markOutOfOrder
	^ MarsRoverStatusOutOfOrder at: location heading: self direction.! !

!methodRemoval: MarsRoverStatusHeadingEast #markOutOfOrder stamp: 'NNH 10/24/2020 12:54:08'!
markOutOfOrder
	^ MarsRoverStatusOutOfOrder at: location heading: self direction.!

!methodRemoval: MarsRoverStatusHeadingNorth #markOutOfOrder stamp: 'NNH 10/24/2020 12:54:29'!
markOutOfOrder
	self shouldBeImplemented.!

!methodRemoval: MarsRoverStatusHeadingSouth #markOutOfOrder stamp: 'NNH 10/24/2020 12:54:34'!
markOutOfOrder
	self shouldBeImplemented.!

!methodRemoval: MarsRoverStatusHeadingWest #markOutOfOrder stamp: 'NNH 10/24/2020 12:54:40'!
markOutOfOrder
	self shouldBeImplemented.!

!methodRemoval: MarsRoverStatusOutOfOrder #markOutOfOrder stamp: 'NNH 10/24/2020 12:54:44'!
markOutOfOrder
	self shouldBeImplemented.!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:55:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:55:54'!
test21

	marsRoverNorth execute: 'xrlbf'.
	self assert: west equals: marsRoverNorth direction.! !

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:55:58'!
ERROR!

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:55:58'!
ERROR!
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:56:11' overrides: 50869719!
turnRight
	self shouldBeImplemented.! !
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:56:18' prior: 50871783 overrides: 50869719!
turnRight
	^self.! !

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:56:20'!
ERROR!
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:56:31' overrides: 50869536!
moveBackwards
	self shouldBeImplemented.! !
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:56:46' prior: 50871796 overrides: 50869536!
moveBackwards
	^self.! !

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:56:49'!
ERROR!
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:57:00' overrides: 50869714!
moveForward
	self shouldBeImplemented.! !
!MarsRoverStatusOutOfOrder methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 12:57:03' prior: 50871809 overrides: 50869714!
moveForward
	^self.! !

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:57:05'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:57:17' prior: 50871771!
test21

	marsRoverNorth execute: 'xrlbf'.
	self assert: north equals: marsRoverNorth direction.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:57:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:57:57'!
test18ExecutingMoreThanOneCommandShouldExecuteThem

	self should: marsRoverNorth executing: 'ff' beAt: 0@2. 
! !

!methodRemoval: MarsRoverTest #test18 stamp: 'NNH 10/24/2020 12:58:01'!
test18

	self should: marsRoverNorth executing: 'ff' beAt: 0@2. 
!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:59:09'!
test19MarseRoverShouldNotMoveAfterInvalidCommand

	self should: marsRoverNorth executing: 'lxl' beHeading: west.
! !

!methodRemoval: MarsRoverTest #test19 stamp: 'NNH 10/24/2020 12:59:09'!
test19

	self should: marsRoverNorth executing: 'lxl' beHeading: west.
!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test19MarseRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'NNH 10/24/2020 12:59:25'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 12:59:34'!
test19MarsRoverShouldNotMoveAfterInvalidCommand

	self should: marsRoverNorth executing: 'lxl' beHeading: west.
! !

!methodRemoval: MarsRoverTest #test19MarseRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 12:59:34'!
test19MarseRoverShouldNotMoveAfterInvalidCommand

	self should: marsRoverNorth executing: 'lxl' beHeading: west.
!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:00:53'!
test20MarsRoverShouldNotMoveExecutingAListOfCommandsAfterInvalidCommand

	marsRoverNorth execute: 'lx'.
	marsRoverNorth execute: 'lx'.
	self assert: west equals: marsRoverNorth direction.! !

!methodRemoval: MarsRoverTest #test20 stamp: 'NNH 10/24/2020 13:00:53'!
test20

	marsRoverNorth execute: 'lx'.
	marsRoverNorth execute: 'lx'.
	self assert: west equals: marsRoverNorth direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:01:22'!
test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	marsRoverNorth execute: 'lx'.
	marsRoverNorth execute: 'lx'.
	self assert: west equals: marsRoverNorth direction.! !

!methodRemoval: MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:01:22'!
test20MarsRoverShouldNotMoveExecutingAListOfCommandsAfterInvalidCommand

	marsRoverNorth execute: 'lx'.
	marsRoverNorth execute: 'lx'.
	self assert: west equals: marsRoverNorth direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:01:58'!
test21AfterInvalidCommandAllDirectionsDoNothing

	marsRoverNorth execute: 'xrlbf'.
	self assert: north equals: marsRoverNorth direction.! !

!methodRemoval: MarsRoverTest #test21 stamp: 'NNH 10/24/2020 13:01:58'!
test21

	marsRoverNorth execute: 'xrlbf'.
	self assert: north equals: marsRoverNorth direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:02:25' prior: 50872025!
test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	marsRoverNorth execute: 'x'.
	marsRoverNorth execute: 'l'.
	self assert: west equals: marsRoverNorth direction.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:02:28'!
FAILURE!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'NNH 10/24/2020 13:02:28'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:02:28'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:02:49' prior: 50872057!
test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	marsRoverNorth execute: 'x'.
	marsRoverNorth execute: 'l'.
	self assert: north equals: marsRoverNorth direction.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'NNH 10/24/2020 13:02:52'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:04:55' prior: 50872044!
test21AfterInvalidCommandAllDirectionsDoNothing

	marsRoverNorth execute: 'xflbr'.
	self assert: 0@0 equals: marsRoverNorth position.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'NNH 10/24/2020 13:04:57'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:05:58' prior: 50872236!
test21AfterInvalidCommandAllDirectionsDoNothing

	self should: marsRoverNorth executing: 'xflbr' beAt: 0@0. 
! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'NNH 10/24/2020 13:06:00'!
PASSED!
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:07:50' prior: 50871381!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommand |
		({$f. $b. $l. $r} includes: aCommand) ifFalse: [status := status markOutOfOrder.].
		aCommand = $f ifTrue: [status moveForward.].
		aCommand = $b ifTrue: [status moveBackwards.].
		aCommand = $l ifTrue: [status := status turnLeft.].
		aCommand = $r ifTrue: [status := status turnRight.].
	]! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'NNH 10/24/2020 13:07:56'!
PASSED!

Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCommand category: 'MarsRover' stamp: 'NNH 10/24/2020 13:11:46'!
Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCommand subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCommand subclass: #MarsRoverCommandForward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCommandForward category: 'MarsRover' stamp: 'NNH 10/24/2020 13:12:34'!
MarsRoverCommand subclass: #MarsRoverCommandForward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCommand subclass: #MarsRoverCommandBackward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCommandBackward category: 'MarsRover' stamp: 'NNH 10/24/2020 13:12:38'!
MarsRoverCommand subclass: #MarsRoverCommandBackward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCommand subclass: #MarsRoverCommandLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCommandLeft category: 'MarsRover' stamp: 'NNH 10/24/2020 13:12:50'!
MarsRoverCommand subclass: #MarsRoverCommandLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCommand subclass: #MarsRoverCommandRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCommandRight category: 'MarsRover' stamp: 'NNH 10/24/2020 13:12:53'!
MarsRoverCommand subclass: #MarsRoverCommandRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

MarsRoverCommand subclass: #MarsRoverCommandInvalidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverCommandInvalidCommand category: 'MarsRover' stamp: 'NNH 10/24/2020 13:15:49'!
MarsRoverCommand subclass: #MarsRoverCommandInvalidCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverCommand class methodsFor: 'nil' stamp: 'NNH 10/24/2020 13:19:58'!
with: aCharacterIdentifyingCommand for: aMarsRover
	aCharacterIdentifyingCommand = $f ifTrue: [^MarsRoverCommandForward for: aMarsRover.].
	aCharacterIdentifyingCommand = $b ifTrue: [^MarsRoverCommandBackward for: aMarsRover.].
	aCharacterIdentifyingCommand = $l ifTrue: [^MarsRoverCommandLeft for: aMarsRover.].
	aCharacterIdentifyingCommand = $r ifTrue: [^MarsRoverCommandRight for: aMarsRover.].! !
!MarsRoverCommand class methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:20:20' prior: 50872576!
with: aCharacterIdentifyingCommand for: aMarsRover
	aCharacterIdentifyingCommand = $f ifTrue: [^MarsRoverCommandForward for: aMarsRover.].
	aCharacterIdentifyingCommand = $b ifTrue: [^MarsRoverCommandBackward for: aMarsRover.].
	aCharacterIdentifyingCommand = $l ifTrue: [^MarsRoverCommandLeft for: aMarsRover.].
	aCharacterIdentifyingCommand = $r ifTrue: [^MarsRoverCommandRight for: aMarsRover.].
	^ MarsRoverCommandInvalidCommand for: aMarsRover.! !
!MarsRoverCommand class methodsFor: 'nil' stamp: 'NNH 10/24/2020 13:21:01'!
for: aMarsRover

	^self new initializeFor: aMarsRover.! !

!classDefinition: #MarsRoverCommand category: 'MarsRover' stamp: 'NNH 10/24/2020 13:21:48'!
Object subclass: #MarsRoverCommand
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverCommand methodsFor: 'no messages' stamp: 'NNH 10/24/2020 13:21:46'!
initializeFor: aMarsRover

	marsRover := aMarsRover ! !
!MarsRoverCommand methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:22:30'!
execute
	self subclassResponsibility.! !
!MarsRoverCommandForward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:22:39' overrides: 50872626!
execute
	self subclassResponsibility.! !
!MarsRoverCommandBackward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:22:39' overrides: 50872626!
execute
	self subclassResponsibility.! !
!MarsRoverCommandLeft methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:22:39' overrides: 50872626!
execute
	self subclassResponsibility.! !
!MarsRoverCommandRight methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:22:39' overrides: 50872626!
execute
	self subclassResponsibility.! !
!MarsRoverCommandInvalidCommand methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:22:39' overrides: 50872626!
execute
	self subclassResponsibility.! !

!methodRemoval: MarsRoverCommand #execute stamp: 'NNH 10/24/2020 13:22:39'!
execute
	self subclassResponsibility.!
!MarsRoverCommand methodsFor: 'nil' stamp: 'NNH 10/24/2020 13:22:58'!
execute
	self subclassResponsibility.! !
!MarsRoverCommandBackward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:23:26' prior: 50872636 overrides: 50872660!
execute
	^ marsRover moveForward.! !
!MarsRoverCommandBackward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:23:36' prior: 50872666 overrides: 50872660!
execute
	^ marsRover moveBackwards.! !
!MarsRoverCommandBackward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:23:44' prior: 50872672 overrides: 50872660!
execute
	^ marsRover moveBackwards.! !
!MarsRoverCommandForward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:24:01' prior: 50872631 overrides: 50872660!
execute
	marsRover moveForward.! !
!MarsRoverCommandBackward methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:24:08' prior: 50872678 overrides: 50872660!
execute
	marsRover moveBackwards.! !
!MarsRoverCommandInvalidCommand methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:24:21' prior: 50872652 overrides: 50872660!
execute
	marsRover markOutOfOrder.! !
!MarsRoverCommandLeft methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:24:34' prior: 50872641 overrides: 50872660!
execute
	marsRover turnLeft.! !
!MarsRoverCommandRight methodsFor: 'as yet unclassified' stamp: 'NNH 10/24/2020 13:24:46' prior: 50872646 overrides: 50872660!
execute
	marsRover turnRight.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:27:19'!
moveForward 
	status moveForward.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:27:38'!
moveBackwards
	status moveBackwards.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:28:02'!
turnLeft
	status := status turnLeft.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:28:10'!
turnRight
	status := status turnRight.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:28:28'!
markOutOfOrder
	status := status markOutOfOrder.! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:29:40' prior: 50872406!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommandAsCharacter | | command | command := MarsRoverCommand with: aCommandAsCharacter for: self. command execute.]! !
!MarsRover methodsFor: 'moving operations' stamp: 'NNH 10/24/2020 13:29:52' prior: 50872732!
execute: aListOfCommands 

	aListOfCommands do: [ :aCommandAsCharacter | | command | command := MarsRoverCommand with: aCommandAsCharacter for: self. command execute.].! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'NNH 10/24/2020 13:29:57'!
PASSED!

----SNAPSHOT----(24 October 2020 13:31:57) CuisUniversity-4384.image priorSource: 17174493!

----QUIT----(24 October 2020 13:32:03) CuisUniversity-4384.image priorSource: 17317630!

----STARTUP---- (24 October 2020 13:41:53) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagen virgen/CuisUniversity-4384.image!


----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagen virgen/MarsRover.st----!

----STARTUP---- (24 October 2020 19:42:22) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagen virgen/CuisUniversity-4384.image!


----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/isw1-2c2020-ejercicios/16-MarsRover/MarsRover.st----!
!MarsRover methodsFor: 'initializing' stamp: 'AM 10/24/2020 19:42:59' prior: 50871998!
initializeAt: aLocation heading: aCardinalDirection 

	status := MarsRoverStatus at: aLocation + 0@1 heading: aCardinalDirection.
	outOfOrder := false.! !
!MarsRover methodsFor: 'initializing' stamp: 'AM 10/24/2020 19:43:07' prior: 50872514!
initializeAt: aLocation heading: aCardinalDirection 

	status := MarsRoverStatus at: aLocation + (0@1) heading: aCardinalDirection.
	outOfOrder := false.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!

!testRun: #MarsRoverTest #test22MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/24/2020 19:43:11'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/24/2020 19:43:11'!
FAILURE!
!MarsRover methodsFor: 'initializing' stamp: 'AM 10/24/2020 19:43:35' prior: 50872522!
initializeAt: aLocation heading: aCardinalDirection 

	status := MarsRoverStatus at: aLocation heading: 'Hello'.
	outOfOrder := false.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'AM 10/24/2020 19:43:38'!
ERROR!

!testRun: #MarsRoverTest #test22MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/24/2020 19:43:38'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/24/2020 19:43:38'!
ERROR!
!MarsRover methodsFor: 'initializing' stamp: 'AM 10/24/2020 19:43:43' prior: 50872615!
initializeAt: aLocation heading: aCardinalDirection 

	status := MarsRoverStatus at: aLocation heading: aCardinalDirection.
	outOfOrder := false.! !
!MarsRoverStatus methodsFor: 'status operations' stamp: 'AM 10/24/2020 19:44:24' prior: 50872234!
markOutOfOrder
	^ MarsRoverStatusOutOfOrder at: location + (0@1)heading: self direction.! !

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'AM 10/24/2020 19:44:36'!
FAILURE!

!testRun: #MarsRoverTest #test22MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/24/2020 19:44:36'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'AM 10/24/2020 19:44:36'!
FAILURE!
!MarsRoverStatus methodsFor: 'status operations' stamp: 'AM 10/24/2020 19:44:41' prior: 50872714!
markOutOfOrder
	^ MarsRoverStatusOutOfOrder at: location heading: self direction.! !
!MarsRover methodsFor: 'testing' stamp: 'AM 10/24/2020 19:52:00'!
location
	^ status location.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'AM 10/24/2020 19:52:00' prior: 50871891!
should: aMarsRover executing: aListOfCommands beAt: aPosition

	aMarsRover execute: aListOfCommands .
	self assert: aPosition equals: aMarsRover location.


! !

!methodRemoval: MarsRover #position stamp: 'AM 10/24/2020 19:52:00'!
position
	^ status location.!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test21AfterInvalidCommandAllDirectionsDoNothing stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test22MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/24/2020 19:52:07'!
PASSED!

----STARTUP---- (25 October 2020 22:25:38) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagen virgen/CuisUniversity-4384.image!


----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/isw1-2c2020-ejercicios/16-MarsRover/MarsRover.st----!
!MarsRoverTest methodsFor: 'testing invalid commands' stamp: 'AM 10/25/2020 22:28:37'!
test19MarsRoverShouldSignalErrorWhenExecutingInvalidCommand

	self should: [marsRoverNorth execute: 'lxl']
	raise: Error 
	withMessageText: MarsRover canNotHandleInvalidCommandErrorDescription.
	
! !

!methodRemoval: MarsRoverTest #test19MarsRoverShouldNotMoveAfterInvalidCommand stamp: 'AM 10/25/2020 22:28:37'!
test19MarsRoverShouldNotMoveAfterInvalidCommand

	self should: [marsRoverNorth execute: 'lxl']
	raise: Error 
	withMessageText: MarsRover canNotHandleInvalidCommandErrorDescription.
	
!
!MarsRoverTest methodsFor: 'testing invalid commands' stamp: 'AM 10/25/2020 22:29:56'!
test20MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	self should: [marsRoverNorth execute: 'x'] raise: Error.
	
	marsRoverNorth execute: 'l'.
	self assert: west equals: marsRoverNorth direction.! !

!methodRemoval: MarsRoverTest #test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/25/2020 22:29:56'!
test20MarsRoverShouldNotMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	self should: [marsRoverNorth execute: 'x'] raise: Error.
	
	marsRoverNorth execute: 'l'.
	self assert: west equals: marsRoverNorth direction.!
!MarsRoverTest methodsFor: 'testing multiple commands' stamp: 'AM 10/25/2020 22:30:49'!
test24MarsRoverShouldMoveInMoreThanOneDirection

	self should: marsRoverNorth executing: 'ffrffrff' beAt: 2@0. 
! !

!methodRemoval: MarsRoverTest #test23MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/25/2020 22:30:49'!
test23MarsRoverShouldMoveInMoreThanOneDirection

	self should: marsRoverNorth executing: 'ffrffrff' beAt: 2@0. 
!
!MarsRoverTest methodsFor: 'testing signals' stamp: 'AM 10/25/2020 22:30:57'!
test23MarsRoverShouldNotHeadToNonCardinalDirection

	self should: [MarsRover at: 0@0 heading: 'Hello'] 
	raise: Error
	withMessageText: MarsRover canNotBeHeadingToNonCardinalDirectionErrorDescription.
! !

!methodRemoval: MarsRoverTest #test22MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/25/2020 22:30:57'!
test22MarsRoverShouldNotHeadToNonCardinalDirection

	self should: [MarsRover at: 0@0 heading: 'Hello'] 
	raise: Error
	withMessageText: MarsRover canNotBeHeadingToNonCardinalDirectionErrorDescription.
!
!MarsRoverTest methodsFor: 'testing signals' stamp: 'AM 10/25/2020 22:31:07'!
test20MarsRoverShouldSignalErrorWhenExecutingInvalidCommand

	self should: [marsRoverNorth execute: 'lxl']
	raise: Error 
	withMessageText: MarsRover canNotHandleInvalidCommandErrorDescription.
	
! !

!methodRemoval: MarsRoverTest #test19MarsRoverShouldSignalErrorWhenExecutingInvalidCommand stamp: 'AM 10/25/2020 22:31:07'!
test19MarsRoverShouldSignalErrorWhenExecutingInvalidCommand

	self should: [marsRoverNorth execute: 'lxl']
	raise: Error 
	withMessageText: MarsRover canNotHandleInvalidCommandErrorDescription.
	
!
!MarsRoverTest methodsFor: 'testing no commands' stamp: 'AM 10/25/2020 22:31:23'!
test02EmptyListOfCommandsShouldNotMoveMarsRover

	self should: marsRoverNorth executing: '' beAt: 0@0.
	self should: marsRoverNorth executing: '' 	beHeading: north. ! !

!methodRemoval: MarsRoverTest #test01EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/25/2020 22:31:23'!
test01EmptyListOfCommandsShouldNotMoveMarsRover

	self should: marsRoverNorth executing: '' beAt: 0@0.
	self should: marsRoverNorth executing: '' 	beHeading: north. !
!MarsRoverTest methodsFor: 'testing no commands' stamp: 'AM 10/25/2020 22:31:32' prior: 50872571!
test02EmptyListOfCommandsShouldNotMoveMarsRover

	self should: marsRoverNorth executing: '' beAt: 0@0.! !
!MarsRoverTest methodsFor: 'testing no commands' stamp: 'AM 10/25/2020 22:31:46'!
test01EmptyListOfCommandsShouldNotChangeDirection

	self should: marsRoverNorth executing: '' beAt: 0@0.! !
!MarsRoverTest methodsFor: 'testing no commands' stamp: 'AM 10/25/2020 22:31:23' prior: 50872589!
test02EmptyListOfCommandsShouldNotMoveMarsRover

	self should: marsRoverNorth executing: '' beAt: 0@0.
	self should: marsRoverNorth executing: '' 	beHeading: north. ! !
!MarsRoverTest methodsFor: 'testing no commands' stamp: 'AM 10/25/2020 22:32:21' prior: 50872602!
test02EmptyListOfCommandsShouldNotMoveMarsRover

	self should: marsRoverNorth executing: '' beAt: 0@0.! !
!MarsRoverTest methodsFor: 'testing no commands' stamp: 'AM 10/25/2020 22:32:27' prior: 50872595!
test01EmptyListOfCommandsShouldNotChangeDirection

	self should: marsRoverNorth executing: '' 	beHeading: north. ! !
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:32:36'!
test05TurningLeftFromNorthShouldHeadWest

	self should: marsRoverNorth executing: 'l' beHeading: west.


! !

!methodRemoval: MarsRoverTest #test04TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/25/2020 22:32:36'!
test04TurningLeftFromNorthShouldHeadWest

	self should: marsRoverNorth executing: 'l' beHeading: west.


!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:32:47'!
test12TurningRightFromWestShouldHeadNorth

	self should: marsRoverWest executing: 'r' beHeading: north.

! !

!methodRemoval: MarsRoverTest #test11TurningRightFromWestShouldHeadNorth stamp: 'AM 10/25/2020 22:32:47'!
test11TurningRightFromWestShouldHeadNorth

	self should: marsRoverWest executing: 'r' beHeading: north.

!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:32:58'!
test12TurningRightFromSouthShouldHeadWest

	self should: marsRoverSouth executing: 'r' beHeading: west.

! !

!methodRemoval: MarsRoverTest #test10TurningRightFromSouthShouldHeadWest stamp: 'AM 10/25/2020 22:32:58'!
test10TurningRightFromSouthShouldHeadWest

	self should: marsRoverSouth executing: 'r' beHeading: west.

!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:33:03'!
test11TurningRightFromSouthShouldHeadWest

	self should: marsRoverSouth executing: 'r' beHeading: west.

! !

!methodRemoval: MarsRoverTest #test12TurningRightFromSouthShouldHeadWest stamp: 'AM 10/25/2020 22:33:03'!
test12TurningRightFromSouthShouldHeadWest

	self should: marsRoverSouth executing: 'r' beHeading: west.

!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:33:08'!
test10TurningRightFromEastShouldHeadSouth

	self should: marsRoverEast executing: 'r' beHeading: south.


! !

!methodRemoval: MarsRoverTest #test09TurningRightFromEastShouldHeadSouth stamp: 'AM 10/25/2020 22:33:08'!
test09TurningRightFromEastShouldHeadSouth

	self should: marsRoverEast executing: 'r' beHeading: south.


!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:33:12'!
test09TurningRightFromNorthShouldHeadEast

	self should: marsRoverNorth executing: 'r' beHeading: east.


! !

!methodRemoval: MarsRoverTest #test08TurningRightFromNorthShouldHeadEast stamp: 'AM 10/25/2020 22:33:12'!
test08TurningRightFromNorthShouldHeadEast

	self should: marsRoverNorth executing: 'r' beHeading: east.


!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:33:16'!
test08TurningLeftFromEastShouldHeadNorth

	self should: marsRoverEast executing: 'l' beHeading: north.


! !

!methodRemoval: MarsRoverTest #test07TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/25/2020 22:33:16'!
test07TurningLeftFromEastShouldHeadNorth

	self should: marsRoverEast executing: 'l' beHeading: north.


!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:33:23'!
test07TurningLeftFromSouthShouldHeadEast

	self should: marsRoverSouth executing: 'l' beHeading: east.


! !

!methodRemoval: MarsRoverTest #test06TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/25/2020 22:33:23'!
test06TurningLeftFromSouthShouldHeadEast

	self should: marsRoverSouth executing: 'l' beHeading: east.


!
!MarsRoverTest methodsFor: 'testing direction' stamp: 'AM 10/25/2020 22:33:28'!
test06TurningLeftFromWestShouldHeadSouth

	self should: marsRoverWest executing: 'l' beHeading: south.


! !

!methodRemoval: MarsRoverTest #test05TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/25/2020 22:33:28'!
test05TurningLeftFromWestShouldHeadSouth

	self should: marsRoverWest executing: 'l' beHeading: south.


!
!MarsRoverTest methodsFor: 'testing multiple commands' stamp: 'AM 10/25/2020 22:33:40'!
test19ExecutingMoreThanOneCommandShouldExecuteThem

	self should: marsRoverNorth executing: 'ff' beAt: 0@2. 
! !

!methodRemoval: MarsRoverTest #test18ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/25/2020 22:33:40'!
test18ExecutingMoreThanOneCommandShouldExecuteThem

	self should: marsRoverNorth executing: 'ff' beAt: 0@2. 
!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:33:48'!
test18MovingBackwarsdsEastShouldDecreaseOneXCoordinate

	self should: marsRoverEast executing: 'b' beAt: -1@0.
! !

!methodRemoval: MarsRoverTest #test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:33:48'!
test17MovingBackwarsdsEastShouldDecreaseOneXCoordinate

	self should: marsRoverEast executing: 'b' beAt: -1@0.
!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:33:53'!
test17MovingBackwardsSouthShouldIncreaseOneYCoordinate

	self should: marsRoverSouth executing: 'b' beAt: 0@1.
! !

!methodRemoval: MarsRoverTest #test16MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:33:53'!
test16MovingBackwardsSouthShouldIncreaseOneYCoordinate

	self should: marsRoverSouth executing: 'b' beAt: 0@1.
!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:33:57'!
test16MovingBackwardsWestShouldIncreaseOneXCoordinate

	self should: marsRoverWest executing: 'b' beAt: 1@0.

! !

!methodRemoval: MarsRoverTest #test15MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:33:57'!
test15MovingBackwardsWestShouldIncreaseOneXCoordinate

	self should: marsRoverWest executing: 'b' beAt: 1@0.

!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:34:01'!
test15MovingForwardEastShouldIncreaseOneXCoordinate

	self should: marsRoverEast executing: 'f' beAt: 1@0.

! !

!methodRemoval: MarsRoverTest #test14MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:34:01'!
test14MovingForwardEastShouldIncreaseOneXCoordinate

	self should: marsRoverEast executing: 'f' beAt: 1@0.

!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:34:05'!
test14MovingForwardSouthShouldDecreaseOneYCoordinate

	self should: marsRoverSouth executing: 'f' beAt: 0@-1.
! !

!methodRemoval: MarsRoverTest #test13MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:34:05'!
test13MovingForwardSouthShouldDecreaseOneYCoordinate

	self should: marsRoverSouth executing: 'f' beAt: 0@-1.
!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:34:08'!
test13MovingForwardWestShouldDecreaseOneXCoordinate

	self should: marsRoverWest executing: 'f' beAt: -1@0.

! !

!methodRemoval: MarsRoverTest #test12MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:34:08'!
test12MovingForwardWestShouldDecreaseOneXCoordinate

	self should: marsRoverWest executing: 'f' beAt: -1@0.

!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:34:13'!
test04MovingBackwardsNorthShouldDecreaseOneYCoordinate

	self should: marsRoverNorth executing: 'b' beAt: 0@-1.

! !

!methodRemoval: MarsRoverTest #test03MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:34:13'!
test03MovingBackwardsNorthShouldDecreaseOneYCoordinate

	self should: marsRoverNorth executing: 'b' beAt: 0@-1.

!
!MarsRoverTest methodsFor: 'testing movement' stamp: 'AM 10/25/2020 22:34:17'!
test03MovingForwardNorthShouldIncreaseOneYCoordinate

	self should: marsRoverNorth executing: 'f' beAt: 0@1.

! !

!methodRemoval: MarsRoverTest #test02MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:34:17'!
test02MovingForwardNorthShouldIncreaseOneYCoordinate

	self should: marsRoverNorth executing: 'f' beAt: 0@1.

!
!MarsRoverTest methodsFor: 'testing invalid commands' stamp: 'AM 10/25/2020 22:34:24'!
test22AfterInvalidCommandMarsRoverDoesNotMove

	self should: [marsRoverNorth execute: 'xflbr'] raise: Error.
	
	self assert: marsRoverNorth location equals: 0@0.
! !

!methodRemoval: MarsRoverTest #test21AfterInvalidCommandMarsRoverDoesNotMove stamp: 'AM 10/25/2020 22:34:24'!
test21AfterInvalidCommandMarsRoverDoesNotMove

	self should: [marsRoverNorth execute: 'xflbr'] raise: Error.
	
	self assert: marsRoverNorth location equals: 0@0.
!
!MarsRoverTest methodsFor: 'testing invalid commands' stamp: 'AM 10/25/2020 22:34:28'!
test21MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	self should: [marsRoverNorth execute: 'x'] raise: Error.
	
	marsRoverNorth execute: 'l'.
	self assert: west equals: marsRoverNorth direction.! !

!methodRemoval: MarsRoverTest #test20MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/25/2020 22:34:28'!
test20MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand

	self should: [marsRoverNorth execute: 'x'] raise: Error.
	
	marsRoverNorth execute: 'l'.
	self assert: west equals: marsRoverNorth direction.!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotChangeDirection stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test03MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test04MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test08TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromNorthShouldHeadEast stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromEastShouldHeadSouth stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromSouthShouldHeadWest stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightFromWestShouldHeadNorth stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test15MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test18MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test19ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldSignalErrorWhenExecutingInvalidCommand stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test22AfterInvalidCommandMarsRoverDoesNotMove stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/25/2020 22:44:09'!
PASSED!

!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotChangeDirection stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test03MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test04MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test08TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromNorthShouldHeadEast stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromEastShouldHeadSouth stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromSouthShouldHeadWest stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightFromWestShouldHeadNorth stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test15MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test18MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test19ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldSignalErrorWhenExecutingInvalidCommand stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test22AfterInvalidCommandMarsRoverDoesNotMove stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/25/2020 22:49:23'!
PASSED!

----QUIT----(25 October 2020 22:49:54) CuisUniversity-4384.image priorSource: 17283955!

----STARTUP---- (25 October 2020 22:50:30) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagen virgen/CuisUniversity-4384.image!


!testRun: #MarsRoverTest #test01EmptyListOfCommandsShouldNotChangeDirection stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test02EmptyListOfCommandsShouldNotMoveMarsRover stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test03MovingForwardNorthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test04MovingBackwardsNorthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test05TurningLeftFromNorthShouldHeadWest stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test06TurningLeftFromWestShouldHeadSouth stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test07TurningLeftFromSouthShouldHeadEast stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test08TurningLeftFromEastShouldHeadNorth stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test09TurningRightFromNorthShouldHeadEast stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test10TurningRightFromEastShouldHeadSouth stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test11TurningRightFromSouthShouldHeadWest stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test12TurningRightFromWestShouldHeadNorth stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test13MovingForwardWestShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test14MovingForwardSouthShouldDecreaseOneYCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test15MovingForwardEastShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test16MovingBackwardsWestShouldIncreaseOneXCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test17MovingBackwardsSouthShouldIncreaseOneYCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test18MovingBackwarsdsEastShouldDecreaseOneXCoordinate stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test19ExecutingMoreThanOneCommandShouldExecuteThem stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test20MarsRoverShouldSignalErrorWhenExecutingInvalidCommand stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test21MarsRoverShouldMoveExecutingAnotherListOfCommandsAfterInvalidCommand stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test22AfterInvalidCommandMarsRoverDoesNotMove stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test23MarsRoverShouldNotHeadToNonCardinalDirection stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

!testRun: #MarsRoverTest #test24MarsRoverShouldMoveInMoreThanOneDirection stamp: 'AM 10/25/2020 22:50:37'!
PASSED!

----QUIT----(25 October 2020 22:50:40) CuisUniversity-4384.image priorSource: 17325809!