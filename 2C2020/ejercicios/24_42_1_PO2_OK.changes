

----STARTUP---- (11 November 2020 18:18:23) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!


----End fileIn of /home/jadmin/Downloads/2020-2c-master/18-Portfolio1/Portfolio-Solucion.st----!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'JEA 11/11/2020 18:19:18'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'JEA 11/11/2020 18:22:33'!
Object subclass: #Transfer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/11/2020 18:22:26'!
test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Transfer for: 100 from: originAccount to: recipientAccount.
	
	self assert: -100 equals: originAccount balance.
	self assert: 100 equals: recipientAccount balance.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:22:35'!
ERROR!
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/11/2020 18:23:23' prior: 50871452!
test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: -100 equals: originAccount balance.
	self assert: 100 equals: recipientAccount balance.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:23:26'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:24:30'!
register: aValue from: originAccount to: recipientAccount

	Withdraw register: aValue on: originAccount.
	Deposit register: aValue on: recipientAccount.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:24:32'!
PASSED!

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/11/2020 18:38:45'!
Object subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/11/2020 18:38:50'!
Object subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/11/2020 18:38:35'!
test02TransfersPartsAreRegisteredInBothAccounts
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: (originAccount hasRegistered: TransferWithdraw for: 100).
	self assert: (originAccount hasRegistered: TransferDeposit for: 100).! !

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:38:52'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:43:16' prior: 50871488!
register: aValue from: originAccount to: recipientAccount

	TransferWithdraw register: aValue on: originAccount.
	TransferDeposit register: aValue on: recipientAccount.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:43:31'!
ERROR!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:43:31'!
ERROR!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:43:33'!
ERROR!
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:45:12'!
register: aValue on: anAccount
	| transferWithdraw |
	
	transferWithdraw := self for: aValue.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:46:10'!
for: aValue
	! !

Object subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/11/2020 18:46:16'!
Object subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:46:35' prior: 50871561!
for: aValue
	
	^self initializeFor: aValue.! !
!TransferDeposit methodsFor: 'initialization' stamp: 'JEA 11/11/2020 18:46:51'!
initializeFor: aValue

	value := value.! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:47:01' prior: 50871577!
for: aValue
	
	^self basicNew initializeFor: aValue.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:47:04'!
ERROR!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:47:04'!
ERROR!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:47:05'!
ERROR!
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:47:23'!
for: aValue
	
	^self basicNew initializeFor: aValue.! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'JEA 11/11/2020 18:47:31'!
register: aValue on: anAccount
	| transferWithdraw |
	
	transferWithdraw := self for: aValue.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.! !

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/11/2020 18:47:43'!
Object subclass: #TransferWithdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!TransferWithdraw methodsFor: 'initialization' stamp: 'JEA 11/11/2020 18:47:40'!
initializeFor: aValue

	value := value.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:47:48'!
ERROR!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:47:48'!
ERROR!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:47:49'!
ERROR!
!TransferDeposit methodsFor: 'balance' stamp: 'JEA 11/11/2020 18:48:08'!
affectBalance: aBalance

	^aBalance + value ! !
!TransferDeposit methodsFor: 'balance' stamp: 'JEA 11/11/2020 18:48:14' prior: 50871639!
affectBalance: aBalance

	^aBalance + value.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'JEA 11/11/2020 18:48:24'!
affectBalance: aBalance

	^aBalance - value.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:48:26'!
ERROR!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:48:26'!
ERROR!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:48:27'!
ERROR!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:48:43'!
ERROR!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:48:43'!
ERROR!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:48:44'!
ERROR!

value!

value!
!TransferDeposit methodsFor: 'initialization' stamp: 'JEA 11/11/2020 18:49:27' prior: 50871581!
initializeFor: aValue

	value := aValue.! !
!TransferWithdraw methodsFor: 'initialization' stamp: 'JEA 11/11/2020 18:49:34' prior: 50871623!
initializeFor: aValue

	value := aValue.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:49:36'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:49:36'!
ERROR!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:49:36'!
ERROR!
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/11/2020 18:49:50' prior: 50871514!
test02TransfersPartsAreRegisteredInBothAccounts
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: (originAccount hasRegistered: (TransferWithdraw for: 100)).
	self assert: (originAccount hasRegistered: (TransferDeposit for: 100)).! !

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:49:51'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/11/2020 18:50:12' prior: 50871698!
test02TransfersPartsAreRegisteredInBothAccounts
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: (originAccount hasRegistered: (TransferWithdraw for: 100)).
	self assert: (recipientAccount hasRegistered: (TransferDeposit for: 100)).! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/11/2020 18:50:14'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:50:14'!
FAILURE!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/11/2020 18:50:14'!
FAILURE!

----QUIT----(11 November 2020 18:51:51) CuisUniversity-4384.image priorSource: 17249806!

----STARTUP---- (11 November 2020 23:04:00) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!

!TransferTest methodsFor: 'tests' stamp: 'JEA 11/11/2020 23:09:27' prior: 50871717!
test02TransfersPartsAreRegisteredInBothAccounts
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: (originAccount hasRegistered: (TransferWithdraw for: 100)).
	self assert: (recipientAccount hasRegistered: (TransferDeposit for: 100)).! !
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 00:09:39' prior: 50871752!
test02TransfersPartsAreRegisteredInBothAccounts
	| originAccount recipientAccount transfer |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	transfer := Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: (originAccount hasRegistered: transfer withdrawTransaction).
	self assert: (recipientAccount hasRegistered: transfer depositTransaction).! !

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:09:41'!
ERROR!
!Transfer class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:11:23' prior: 50871533!
register: aValue from: originAccount to: recipientAccount

	^self basicNew initializeRegistering: aValue from: originAccount to: recipientAccount.! !
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:11:56'!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	TransferWithdraw register: aValue on: originAccount.
	TransferDeposit register: aValue on: recipientAccount.! !

Object subclass: #Transfer
	instanceVariableNames: 'depositTransaction withdrawTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Transfer category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:12:07'!
Object subclass: #Transfer
	instanceVariableNames: 'depositTransaction withdrawTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:12:25' prior: 50871794!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	withdrawTransaction := TransferWithdraw register: aValue on: originAccount.
	depositTransaction := TransferDeposit register: aValue on: recipientAccount.! !

Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Transfer category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:12:31'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!Transfer methodsFor: 'testing' stamp: 'JEA 11/12/2020 00:13:09'!
withdrawTransaction

	^withdrawTransaction.! !
!Transfer methodsFor: 'testing' stamp: 'JEA 11/12/2020 00:13:18'!
depositTransaction

	^depositTransaction.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:13:20'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:13:20'!
PASSED!

AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:00'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:06'!
AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Deposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:57'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Withdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:57'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:57'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:57'!
AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #AccountTransaction category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:14:57'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountTransaction methodsFor: 'value' stamp: 'JEA 11/12/2020 00:15:19' prior: 50871330 overrides: 16881508!
value

	^ value! !

!methodRemoval: Deposit #value stamp: 'JEA 11/12/2020 00:15:19'!
value

	^ value!
!AccountTransaction methodsFor: 'value' stamp: 'JEA 11/12/2020 00:15:26' prior: 50871921 overrides: 16881508!
value

	^value.! !
!AccountTransaction methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:15:37'!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: Deposit #initializeFor: stamp: 'JEA 11/12/2020 00:15:37'!
initializeFor: aValue

	value := aValue !

!methodRemoval: TransferDeposit #initializeFor: stamp: 'JEA 11/12/2020 00:15:47'!
initializeFor: aValue

	value := aValue.!

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'JEA 11/12/2020 00:15:52'!
initializeFor: aValue

	value := aValue.!

!methodRemoval: Withdraw #initializeFor: stamp: 'JEA 11/12/2020 00:15:55'!
initializeFor: aValue

	value := aValue !

!methodRemoval: Withdraw #value stamp: 'JEA 11/12/2020 00:15:58'!
value

	^ value!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:16:03'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:16:03'!
PASSED!

----SNAPSHOT----(12 November 2020 00:16:21) CuisUniversity-4384.image priorSource: 17282965!
!TransferTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 00:20:38'!
test03TransferPartsKnowAssociatedTransferOperation
	| transfer |
	
	transfer := Transfer register: 100 from: ReceptiveAccount new to: ReceptiveAccount new.
	
	self assert: transfer equals: transfer withdrawTransaction transferOperation.
	self assert: transfer equals: transfer depositTransaction transferOperation.! !

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:20:44'!
ERROR!
!TransferWithdraw methodsFor: 'transfer' stamp: 'JEA 11/12/2020 00:21:03'!
transferOperation! !

AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:21:12'!
AccountTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:21:15'!
AccountTransaction subclass: #TransferDeposit
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!TransferWithdraw methodsFor: 'transfer' stamp: 'JEA 11/12/2020 00:21:25' prior: 50871980!
transferOperation

	^transferOperation.! !
!TransferDeposit methodsFor: 'transfer' stamp: 'JEA 11/12/2020 00:21:34'!
transferOperation

	^transferOperation.! !
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:33:00' prior: 50871816!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	withdrawTransaction := TransferWithdraw register: aValue on: originAccount withTransfer: self.
	depositTransaction := TransferDeposit register: aValue on: recipientAccount withTransfer: self.! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:33:41'!
register: aValue on: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self for: aValue withTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.! !

!methodRemoval: TransferDeposit class #register:on: stamp: 'JEA 11/12/2020 00:33:45'!
register: aValue on: anAccount
	| transferWithdraw |
	
	transferWithdraw := self for: aValue.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.!
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:34:18'!
for: aValue withTransfer: aTransfer
	
	^self basicNew initializeFor: aValue withTransfer: aTransfer.! !

!methodRemoval: TransferDeposit class #for: stamp: 'JEA 11/12/2020 00:34:23'!
for: aValue
	
	^self basicNew initializeFor: aValue.!
!TransferDeposit methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:35:00'!
initializeFor: aValue withTransfer: aTransfer

	value := aValue.
	transferOperation := aTransfer.! !
!TransferWithdraw methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:35:09'!
initializeFor: aValue withTransfer: aTransfer

	value := aValue.
	transferOperation := aTransfer.! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:35:16'!
for: aValue withTransfer: aTransfer
	
	^self basicNew initializeFor: aValue withTransfer: aTransfer.! !

!methodRemoval: TransferWithdraw class #for: stamp: 'JEA 11/12/2020 00:35:18'!
for: aValue
	
	^self basicNew initializeFor: aValue.!
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:35:27'!
register: aValue on: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self for: aValue withTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.! !

!methodRemoval: TransferWithdraw class #register:on: stamp: 'JEA 11/12/2020 00:35:29'!
register: aValue on: anAccount
	| transferWithdraw |
	
	transferWithdraw := self for: aValue.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:35:31'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:35:31'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:35:31'!
PASSED!
!Deposit class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:35:41' overrides: 50871348!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !
!Withdraw class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:35:41' overrides: 50871348!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !
!TransferWithdraw class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:35:41' overrides: 50871348!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !
!TransferDeposit class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 00:35:41' overrides: 50871348!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: AccountTransaction class #register:on: stamp: 'JEA 11/12/2020 00:35:41'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!
!Deposit methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:36:06' overrides: 50871932!
initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:36:06' overrides: 50871932!
initializeFor: aValue

	value := aValue ! !
!TransferWithdraw methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:36:06' overrides: 50871932!
initializeFor: aValue

	value := aValue ! !
!TransferDeposit methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:36:06' overrides: 50871932!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: AccountTransaction #initializeFor: stamp: 'JEA 11/12/2020 00:36:06'!
initializeFor: aValue

	value := aValue !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:36:22'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:36:22'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:36:22'!
PASSED!

----SNAPSHOT----(12 November 2020 00:36:25) CuisUniversity-4384.image priorSource: 17289949!

----QUIT----(12 November 2020 00:36:36) CuisUniversity-4384.image priorSource: 17297050!

----STARTUP---- (12 November 2020 00:38:39) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!

!TransferTest methodsFor: 'tests - invalid transfers' stamp: 'JEA 11/12/2020 00:42:55'!
test04CantTransferAmountsEqualOrLowerThanZero
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	self should: [Transfer register: 0 from: originAccount to: recipientAccount.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer invalidTransferValueMessage.
			self assert: originAccount transactions empty.
			self assert: recipientAccount transactions empty.
		].! !

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:43:01'!
FAILURE!
!TransferTest methodsFor: 'tests - balance' stamp: 'JEA 11/12/2020 00:44:16' prior: 50871470!
test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient
	| originAccount recipientAccount transfer |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	transfer := Transfer register: 100 from: originAccount to: recipientAccount.
	
	self assert: 100 equals: transfer value.
	self assert: transfer value * -1 equals: originAccount balance.
	self assert: transfer value equals: recipientAccount balance.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:44:22'!
FAILURE!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:44:22'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:44:22'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:44:22'!
FAILURE!

!classDefinition: #Transfer category: 'Portfolio2' stamp: 'JEA 11/12/2020 00:44:37'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!Transfer methodsFor: 'testing' stamp: 'JEA 11/12/2020 00:44:36' overrides: 16881508!
value

	^value.! !
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:44:52' prior: 50872019!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	withdrawTransaction := TransferWithdraw register: aValue on: originAccount withTransfer: self.
	depositTransaction := TransferDeposit register: aValue on: recipientAccount withTransfer: self.
	value := aValue.! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:44:54'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:44:54'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:44:54'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:44:54'!
FAILURE!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:44:54'!
FAILURE!
!Transfer class methodsFor: 'error messages' stamp: 'JEA 11/12/2020 00:46:05'!
invalidTransferValueMessage

	^'Cannot transfer a value equal or less than zero.'.! !
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:47:08' prior: 50872261!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	self ensureThatCanTransfer: aValue.

	withdrawTransaction := TransferWithdraw register: aValue on: originAccount withTransfer: self.
	depositTransaction := TransferDeposit register: aValue on: recipientAccount withTransfer: self.
	value := aValue.! !
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:48:38' prior: 50872298!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	self ensureThatCanTransfer: aValue.

	withdrawTransaction := TransferWithdraw register: aValue on: originAccount withTransfer: self.
	depositTransaction := TransferDeposit register: aValue on: recipientAccount withTransfer: self.
	value := aValue.! !
!Transfer methodsFor: 'testing' stamp: 'JEA 11/12/2020 00:48:51'!
ensureThatCanTransfer: aValue

	aValue <= 0 ifTrue: [ self error: self class invalidTransferValueMessage. ].! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:48:56'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:48:56'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:48:56'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:48:56'!
ERROR!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:48:56'!
ERROR!
!TransferTest methodsFor: 'tests - invalid transfers' stamp: 'JEA 11/12/2020 00:49:06' prior: 50872195!
test04CantTransferAmountsEqualOrLowerThanZero
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	self should: [Transfer register: 0 from: originAccount to: recipientAccount.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer invalidTransferValueMessage.
			self assert: originAccount transactions isEmpty.
			self assert: recipientAccount transactions isEmpty.
		].! !

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:49:07'!
PASSED!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:49:09'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:49:09'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:49:09'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:49:09'!
PASSED!
!TransferTest methodsFor: 'tests - invalid transfers' stamp: 'JEA 11/12/2020 00:51:50'!
test05AccountCantTransferToItself
	| account |
	
	account := ReceptiveAccount new.
	
	self should: [Transfer register: 0 from: account to: account.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer cantTransferToSelfMessage.
			self assert: 0 equals: account balance.
		].! !

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 00:51:51'!
ERROR!
!TransferTest methodsFor: 'tests - invalid transfers' stamp: 'JEA 11/12/2020 00:52:06' prior: 50872402!
test05AccountCantTransferToItself
	| account |
	
	account := ReceptiveAccount new.
	
	self should: [Transfer register: 100 from: account to: account.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer cantTransferToSelfMessage.
			self assert: 0 equals: account balance.
		].! !

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 00:52:10'!
FAILURE!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 00:52:10'!
FAILURE!
!Transfer class methodsFor: 'error messages' stamp: 'JEA 11/12/2020 00:52:41'!
cantTransferToSelf

	^'Cannot transfer from an account to itself.'.! !
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/12/2020 00:53:07' prior: 50872311!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	self ensureThatCanTransfer: aValue from: originAccount to: recipientAccount.

	withdrawTransaction := TransferWithdraw register: aValue on: originAccount withTransfer: self.
	depositTransaction := TransferDeposit register: aValue on: recipientAccount withTransfer: self.
	value := aValue.! !
!Transfer methodsFor: 'testing' stamp: 'JEA 11/12/2020 00:54:14'!
ensureThatCanTransfer: aValue from: originAccount to: recipientAccount

	self ensureThatCanTransfer: aValue.
	recipientAccount == originAccount ifTrue: [ self error: self class cantTransferToSelfMessage. ].! !
!Transfer class methodsFor: 'error messages' stamp: 'JEA 11/12/2020 00:54:25'!
cantTransferToSelfMessage

	^'Cannot transfer from an account to itself.'.! !

!methodRemoval: Transfer class #cantTransferToSelf stamp: 'JEA 11/12/2020 00:54:25'!
cantTransferToSelf

	^'Cannot transfer from an account to itself.'.!
!Transfer methodsFor: 'validations' stamp: 'JEA 11/12/2020 00:55:18' prior: 50872457!
ensureThatCanTransfer: aValue from: originAccount to: recipientAccount

	aValue <= 0 ifTrue: [ self error: self class invalidTransferValueMessage. ].
	recipientAccount == originAccount ifTrue: [ self error: self class cantTransferToSelfMessage. ].! !

!methodRemoval: Transfer #ensureThatCanTransfer: stamp: 'JEA 11/12/2020 00:55:19'!
ensureThatCanTransfer: aValue

	aValue <= 0 ifTrue: [ self error: self class invalidTransferValueMessage. ].!
!Transfer methodsFor: 'validations' stamp: 'JEA 11/12/2020 00:55:22' prior: 50872477!
ensureThatCanTransfer: aValue from: originAccount to: recipientAccount

	aValue <= 0 ifTrue: [ self error: self class invalidTransferValueMessage. ].

	recipientAccount == originAccount ifTrue: [ self error: self class cantTransferToSelfMessage. ].! !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 00:55:29'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 00:55:29'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 00:55:29'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 00:55:29'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 00:55:29'!
PASSED!

!methodRemoval: TransferDeposit class #register:on: stamp: 'JEA 11/12/2020 01:02:51'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!

!methodRemoval: TransferWithdraw class #register:on: stamp: 'JEA 11/12/2020 01:02:54'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 01:02:56'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 01:02:56'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 01:02:56'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 01:02:56'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 01:02:56'!
PASSED!

----SNAPSHOT----(12 November 2020 01:02:59) CuisUniversity-4384.image priorSource: 17297144!

AccountTransaction subclass: #RegularTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #RegularTransaction category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:03:27'!
AccountTransaction subclass: #RegularTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

RegularTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Deposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:03:39'!
RegularTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

RegularTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Withdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:03:43'!
RegularTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!RegularTransaction class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 01:04:03'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Withdraw class #for: stamp: 'JEA 11/12/2020 01:04:03'!
for: aValue

	^ self new initializeFor: aValue !
!RegularTransaction class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 01:04:17'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: Withdraw class #register:on: stamp: 'JEA 11/12/2020 01:04:17'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!
!RegularTransaction methodsFor: 'initialization' stamp: 'JEA 11/12/2020 01:04:39'!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: Withdraw #initializeFor: stamp: 'JEA 11/12/2020 01:04:39'!
initializeFor: aValue

	value := aValue !

!methodRemoval: Deposit #initializeFor: stamp: 'JEA 11/12/2020 01:04:45'!
initializeFor: aValue

	value := aValue !

!methodRemoval: Deposit class #for: stamp: 'JEA 11/12/2020 01:04:56'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: Deposit class #register:on: stamp: 'JEA 11/12/2020 01:04:56'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/12/2020 01:05:03'!
PASSED!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 01:05:05'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 01:05:05'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 01:05:05'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 01:05:05'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 01:05:05'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/12/2020 01:05:07'!
PASSED!

AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferTransaction category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:05:35'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:05:41'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:05:44'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!TransferTransaction class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 01:05:58'!
for: aValue withTransfer: aTransfer
	
	^self basicNew initializeFor: aValue withTransfer: aTransfer.! !

!methodRemoval: TransferWithdraw class #for:withTransfer: stamp: 'JEA 11/12/2020 01:05:58'!
for: aValue withTransfer: aTransfer
	
	^self basicNew initializeFor: aValue withTransfer: aTransfer.!
!TransferTransaction class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 01:06:05'!
register: aValue on: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self for: aValue withTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.! !

!methodRemoval: TransferWithdraw class #register:on:withTransfer: stamp: 'JEA 11/12/2020 01:06:05'!
register: aValue on: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self for: aValue withTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.!

!methodRemoval: TransferDeposit class #for:withTransfer: stamp: 'JEA 11/12/2020 01:06:09'!
for: aValue withTransfer: aTransfer
	
	^self basicNew initializeFor: aValue withTransfer: aTransfer.!

!methodRemoval: TransferDeposit class #register:on:withTransfer: stamp: 'JEA 11/12/2020 01:06:09'!
register: aValue on: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self for: aValue withTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 01:06:14'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 01:06:14'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 01:06:14'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 01:06:14'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 01:06:14'!
PASSED!

!classDefinition: #TransferDeposit category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:06:27'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferWithdraw category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:06:27'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #TransferTransaction category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:06:27'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!methodRemoval: TransferDeposit #initializeFor: stamp: 'JEA 11/12/2020 01:06:53'!
initializeFor: aValue

	value := aValue !

!methodRemoval: TransferWithdraw #initializeFor: stamp: 'JEA 11/12/2020 01:06:58'!
initializeFor: aValue

	value := aValue !

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 01:07:00'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 01:07:00'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 01:07:00'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 01:07:00'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 01:07:00'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/12/2020 01:07:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/12/2020 01:07:03'!
PASSED!
!TransferTransaction methodsFor: 'initialization' stamp: 'JEA 11/12/2020 01:07:16'!
initializeFor: aValue withTransfer: aTransfer

	value := aValue.
	transferOperation := aTransfer.! !

!methodRemoval: TransferWithdraw #initializeFor:withTransfer: stamp: 'JEA 11/12/2020 01:07:16'!
initializeFor: aValue withTransfer: aTransfer

	value := aValue.
	transferOperation := aTransfer.!

!methodRemoval: TransferDeposit #initializeFor:withTransfer: stamp: 'JEA 11/12/2020 01:07:22'!
initializeFor: aValue withTransfer: aTransfer

	value := aValue.
	transferOperation := aTransfer.!
!TransferTransaction methodsFor: 'transfer' stamp: 'JEA 11/12/2020 01:07:30'!
transferOperation

	^transferOperation.! !

!methodRemoval: TransferDeposit #transferOperation stamp: 'JEA 11/12/2020 01:07:30'!
transferOperation

	^transferOperation.!

!methodRemoval: TransferWithdraw #transferOperation stamp: 'JEA 11/12/2020 01:07:37'!
transferOperation

	^transferOperation.!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/12/2020 01:07:41'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/12/2020 01:07:41'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/12/2020 01:07:41'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/12/2020 01:07:41'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/12/2020 01:07:41'!
PASSED!

----SNAPSHOT----(12 November 2020 01:07:47) CuisUniversity-4384.image priorSource: 17308932!

----SNAPSHOT----(12 November 2020 01:11:17) CuisUniversity-4384.image priorSource: 17324080!
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 01:28:58'!
accountSummary

	! !

!methodRemoval: Account #accountSummary stamp: 'JEA 11/12/2020 01:34:56'!
accountSummary

	!

TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #AccountSummaryTest category: 'Portfolio2' stamp: 'JEA 11/12/2020 01:35:16'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 01:37:54'!
test01NewAccountShouldOnlySummarizeBalanceZero

	self assert: (OrderedCollection with: 'Balance = 0.') equals: ReceptiveAccount new accountSummary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 01:37:55'!
ERROR!
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 01:38:26'!
accountSummary

	^OrderedCollection with: 'Balance = 0.'.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 01:38:32'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 01:42:21'!
test01AccountSummarizesDepositAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Balance = 100.') equals: account accountSummary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 01:42:25'!
test02AccountSummarizesDepositAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Balance = 100.') equals: account accountSummary.! !

!methodRemoval: AccountSummaryTest #test01AccountSummarizesDepositAndUpdatedBalance stamp: 'JEA 11/12/2020 01:42:25'!
test01AccountSummarizesDepositAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Balance = 100.') equals: account accountSummary.!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositAndUpdatedBalance stamp: 'JEA 11/12/2020 01:42:26'!
FAILURE!

----QUIT----(12 November 2020 01:42:46) CuisUniversity-4384.image priorSource: 17324174!

----STARTUP---- (12 November 2020 14:18:53) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!

!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:24:54'!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Balance = 100.') equals: account accountSummary.! !

!methodRemoval: AccountSummaryTest #test02AccountSummarizesDepositAndUpdatedBalance stamp: 'JEA 11/12/2020 14:24:54'!
test02AccountSummarizesDepositAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Balance = 100.') equals: account accountSummary.!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:25:26' prior: 50873116!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 50 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Deposited 50.' with: 'Balance = 100.') 
		equals: account accountSummary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:25:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:25:36'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:25:36'!
FAILURE!
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:29:01' prior: 50873063!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	
	^OrderedCollection with: 'Balance = 0.'.! !
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:31:31' prior: 50873163!
accountSummary
	| summary |
	
	summary := OrderedCollection new.! !
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:32:00' prior: 50873170!
accountSummary

	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:37:13' overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:43:04' prior: 50873180 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction ]. ]! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:43:20' prior: 50873186 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString ]. ]! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:43:24' prior: 50873196 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString. ]. ]! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:43:31'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:43:31'!
FAILURE!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:43:33'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:43:45' prior: 50873207 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString. ]. ].
	
	^summary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:43:47'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:43:47'!
FAILURE!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:43:49'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:43:54'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:44:10' prior: 50873229 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposited ', aTransaction value asString. ]. ].
	
	^summary.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:44:20' prior: 50873255 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposited ', aTransaction value asString, '.'. ]. ].
	
	^summary.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:44:54' prior: 50873266 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposited ', aTransaction value asString, '.'. ]. ].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/12/2020 14:44:56'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:44:59'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:44:59'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:44:59'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:45:21' prior: 50873139!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 50 on: account.

	self assert: (OrderedCollection with: 'Deposited 100.' with: 'Deposited 50.' with: 'Balance = 150.') 
		equals: account accountSummary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 14:45:22'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:45:22'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:50:28'!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Deposited 50.' with: 'Balance = 150.') .! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:50:37' prior: 50873327!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 50 on: account.

	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: account accountSummary.! !

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 14:50:38'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:50:47' prior: 50873277 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString, '.'. ]. ].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/12/2020 14:50:48'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:50:56' prior: 50873347!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Deposited 50.' with: 'Balance = 150.').! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:52:35' prior: 50873420!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Balance = -100.')
		equals: originAccount accountSummary.
	
	self assert: (OrderedCollection with: 'Withdrawal for 50.' with: 'Transfer deposit for 100.' with: 'Balance = -100.')
		equals: originAccount accountSummary.! !

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 14:52:37'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 14:52:44' prior: 50873436!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Balance = -100.')
		equals: originAccount accountSummary.
	
	self assert: (OrderedCollection with: 'Withdrawal for 50.' with: 'Transfer deposit for 100.' with: 'Balance = 100.')
		equals: originAccount accountSummary.! !

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 14:52:45'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 14:55:56' prior: 50873381 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ summary add: 'Withdraw for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ summary add: 'Withdraw for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ summary add: 'Withdraw for ', aTransaction value asString, '.'. ].
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:02:43' prior: 50873489 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ summary add: 'Withdraw for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ summary add: 'Transfer deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ summary add: 'Transfer withdraw for ', aTransaction value asString, '.'. ].
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:02:45'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:02:45'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:02:45'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:02:45'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:03:05' prior: 50873513 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ summary add: 'Withdrawal for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ summary add: 'Transfer deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ summary add: 'Transfer withdrawal for ', aTransaction value asString, '.'. ].
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/12/2020 15:03:06'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:03:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:03:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:03:09'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:03:09'!
FAILURE!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 15:03:45' prior: 50873462!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Balance = -100.')
		equals: originAccount accountSummary.
	
	self assert: (OrderedCollection with: 'Withdrawal for 50.' with: 'Transfer deposit for 100.' with: 'Balance = 100.')
		equals: recipientAccount accountSummary.! !

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:03:46'!
FAILURE!

expected!

actual!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 15:04:25' prior: 50873621!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Balance = -100.')
		equals: originAccount accountSummary.
	
	self assert: (OrderedCollection with: 'Withdrawal for 50.' with: 'Transfer deposit for 100.' with: 'Balance = 50.')
		equals: recipientAccount accountSummary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:04:27'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:04:27'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:04:27'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:09:01' prior: 50873554 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [ summary add: 'Deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ summary add: 'Withdrawal for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ summary add: 'Transfer deposit for ', aTransaction value asString, '.'. ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ summary add: 'Transfer withdrawal for ', aTransaction value asString, '.'. ].
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:12:59' prior: 50873682 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		| transactionString |
		(aTransaction isKindOf: Deposit) ifTrue: [ transactionString := 'Deposit' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ transactionString := 'Withdrawal' ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ transactionString := 'TransferDeposit' ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ transactionString := 'TransferWithdrawal' ].
		summary add: transactionString, ' for ', aTransaction value asString, '.'.
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:13:03'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:13:03'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:13:03'!
FAILURE!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:13:03'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:13:22' prior: 50873707 overrides: 50873175!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		| transactionString |
		(aTransaction isKindOf: Deposit) ifTrue: [ transactionString := 'Deposit' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ transactionString := 'Withdrawal' ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ transactionString := 'Transfer deposit' ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ transactionString := 'Transfer withdrawal' ].
		summary add: transactionString, ' for ', aTransaction value asString, '.'.
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/12/2020 15:13:24'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:13:26'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:13:26'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:13:26'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 15:27:43'!
test04PortfolioSummarizesAllItsAccounts
	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 15:29:16' prior: 50873808!
test04PortfolioSummarizesAllItsAccounts
	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	Portfolio with: account1 with: account2.
	
	! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 15:34:15' prior: 50873818!
test04PortfolioSummarizesAllItsAccounts
	| account1 account2 portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	portfolio := Portfolio with: account1 with: account2.
	
	self assert: (OrderedCollection new) 
		equals: portfolio accountSummary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 15:36:00' prior: 50873829!
test04PortfolioSummarizesAllItsAccounts
	| account1 account2 portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	portfolio := Portfolio with: account1 with: account2.
	
	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: portfolio accountSummary.! !

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 15:36:03'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:36:15' overrides: 50873175!
accountSummary

	! !

----SNAPSHOT----(12 November 2020 15:50:26) CuisUniversity-4384.image priorSource: 17326625!
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:58:23' prior: 50873863 overrides: 50873175!
accountSummary
	| summary |

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance, '.'.! !
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:58:44' prior: 50873870 overrides: 50873175!
accountSummary
	| summary |
	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance, '.'.! !
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:58:46' prior: 50873881 overrides: 50873175!
accountSummary
	| summary |

	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance, '.'.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:58:53'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:58:53'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:58:53'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 15:58:53'!
ERROR!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 15:58:53'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:59:05' prior: 50873893 overrides: 50873175!
accountSummary
	| summary |

	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance asString, '.'.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:59:07'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:59:07'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:59:07'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 15:59:07'!
FAILURE!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 15:59:07'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 15:59:21' prior: 50873924 overrides: 50873175!
accountSummary
	| summary |

	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance asString, '.'.
	
	^summary.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/12/2020 15:59:26'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 15:59:28'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 15:59:28'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 15:59:28'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 15:59:28'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 16:04:31'!
test04PortfolioSummarizesAllItsAccountsAndPortfolios
	| account1 account2 subPortfolio portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	subPortfolio := Portfolio with: account1.
	portfolio := Portfolio with: subPortfolio with: account2.
	
	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: portfolio accountSummary.! !

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 16:04:34'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 16:04:34'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 16:04:34'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 16:04:34'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 16:04:34'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 16:04:34'!
PASSED!

!methodRemoval: AccountSummaryTest #test04PortfolioSummarizesAllItsAccounts stamp: 'JEA 11/12/2020 16:04:40'!
test04PortfolioSummarizesAllItsAccounts
	| account1 account2 portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	portfolio := Portfolio with: account1 with: account2.
	
	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: portfolio accountSummary.!

----SNAPSHOT----(12 November 2020 16:04:50) CuisUniversity-4384.image priorSource: 17350900!

----QUIT----(12 November 2020 16:04:57) CuisUniversity-4384.image priorSource: 17358319!

----STARTUP---- (12 November 2020 20:02:49) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!


----SNAPSHOT----(12 November 2020 21:13:29) CuisUniversity-4384.image priorSource: 17358413!

Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #AccountSummary category: 'Portfolio2' stamp: 'JEA 11/12/2020 21:21:12'!
Object subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountSummary class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 21:27:44'!
for: anAccount

	^self basicNew initializeFor: anAccount.! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 21:28:30'!
initializeFor: anAccount

! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 21:28:31' prior: 50874128!
initializeFor: anAccount

	! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 21:32:02'!
summarize: anAccount

	! !

!methodRemoval: AccountSummary #initializeFor: stamp: 'JEA 11/12/2020 21:32:05'!
initializeFor: anAccount

	!
!AccountSummary class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 21:32:16' prior: 50874123!
for: anAccount

	^self basicNew summarize: anAccount.! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 21:32:57' prior: 50874136!
summarize: anAccount

	anAccount accountSummary.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 21:33:20' prior: 50873052!
test01NewAccountShouldOnlySummarizeBalanceZero

	self assert: (OrderedCollection with: 'Balance = 0.') equals: (AccountSummary for: ReceptiveAccount new).! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 21:33:21'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:21'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:21'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 21:33:21'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 21:33:21'!
FAILURE!
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 21:33:31' prior: 50874149!
summarize: anAccount

	^anAccount accountSummary.! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 21:33:32'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:32'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:32'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 21:33:32'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 21:33:45' prior: 50873363!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 50 on: account.

	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: (AccountSummary for: account).! !

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:50'!
PASSED!

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 21:33:50'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:50'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 21:33:50'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 21:33:50'!
PASSED!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 21:34:07' prior: 50873648!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Balance = -100.')
		equals: (AccountSummary for: originAccount ).
	
	self assert: (OrderedCollection with: 'Withdrawal for 50.' with: 'Transfer deposit for 100.' with: 'Balance = 50.')
		equals: (AccountSummary for: recipientAccount ).! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 21:34:18' prior: 50874040!
test04PortfolioSummarizesAllItsAccountsAndPortfolios
	| account1 account2 subPortfolio portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	subPortfolio := Portfolio with: account1.
	portfolio := Portfolio with: subPortfolio with: account2.
	
	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: (AccountSummary for: portfolio).! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 21:34:20'!
PASSED!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 21:34:20'!
PASSED!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 21:34:20'!
PASSED!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 21:34:20'!
PASSED!
!AccountSummary methodsFor: 'summaries' stamp: 'JEA 11/12/2020 21:38:19'!
portfolioSummary: accounts
	| summary |

	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance asString, '.'.
	
	^summary.! !
!AccountSummary methodsFor: 'summaries' stamp: 'JEA 11/12/2020 21:38:49'!
receptiveAccountSummary: transactions
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		| transactionString |
		(aTransaction isKindOf: Deposit) ifTrue: [ transactionString := 'Deposit' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ transactionString := 'Withdrawal' ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ transactionString := 'Transfer deposit' ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ transactionString := 'Transfer withdrawal' ].
		summary add: transactionString, ' for ', aTransaction value asString, '.'.
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 21:40:44' prior: 50874182!
summarize: anAccount

	^anAccount summarizeAccountIn: self.! !
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:41:31'!
summarizeAccountIn: anAccountSummary

	self subclassResponsibility.! !
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:41:42' overrides: 50874332!
summarizeAccountIn: anAccountSummary

	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:41:42' overrides: 50874332!
summarizeAccountIn: anAccountSummary

	self subclassResponsibility.! !

!methodRemoval: Account #summarizeAccountIn: stamp: 'JEA 11/12/2020 21:41:42'!
summarizeAccountIn: anAccountSummary

	self subclassResponsibility.!
!Account methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:41:43'!
summarizeAccountIn: anAccountSummary

	self subclassResponsibility.! !
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:42:13' prior: 50874337 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	anAccountSummary ! !
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:42:49' prior: 50874358 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	anAccountSummary portfolioSummary: accounts.! !
!Portfolio methodsFor: 'reports' stamp: 'JEA 11/12/2020 21:57:36' prior: 50874364 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	accounts do: [ :anAccount | anAccount summarizeAccountIn: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'JEA 11/12/2020 22:01:12' prior: 50874343 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	transactions do: [ :aTransaction | aTransaction summarizeAccountIn: anAccountSummary. ].! !

!testRun: #AccountSummaryTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/12/2020 22:01:28'!
FAILURE!

!testRun: #AccountSummaryTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/12/2020 22:01:28'!
ERROR!

!testRun: #AccountSummaryTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/12/2020 22:01:28'!
ERROR!

!testRun: #AccountSummaryTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/12/2020 22:01:28'!
ERROR!

!methodRemoval: Account #accountSummary stamp: 'JEA 11/12/2020 22:01:42'!
accountSummary

	self subclassResponsibility.!

!methodRemoval: Portfolio #accountSummary stamp: 'JEA 11/12/2020 22:01:49'!
accountSummary
	| summary |

	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance asString, '.'.
	
	^summary.!

!methodRemoval: ReceptiveAccount #accountSummary stamp: 'JEA 11/12/2020 22:01:53'!
accountSummary
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		| transactionString |
		(aTransaction isKindOf: Deposit) ifTrue: [ transactionString := 'Deposit' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ transactionString := 'Withdrawal' ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ transactionString := 'Transfer deposit' ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ transactionString := 'Transfer withdrawal' ].
		summary add: transactionString, ' for ', aTransaction value asString, '.'.
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.!

!classDefinition: #AccountSummary category: 'Portfolio2' stamp: 'JEA 11/12/2020 22:02:52'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 22:02:50'!
initializeFor: anAccount

	account := anAccount.! !
!AccountSummary class methodsFor: 'instance creation' stamp: 'JEA 11/12/2020 22:03:04' prior: 50874144!
for: anAccount

	^self basicNew initializeFor: anAccount.! !
!AccountSummary methodsFor: 'summaries' stamp: 'JEA 11/12/2020 22:03:51'!
summarize

	^account summarizeAccountIn: self.! !

!methodRemoval: AccountSummary #summarize: stamp: 'JEA 11/12/2020 22:03:53'!
summarize: anAccount

	^anAccount summarizeAccountIn: self.!
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 22:04:01' prior: 50874154!
test01NewAccountShouldOnlySummarizeBalanceZero

	self assert: (OrderedCollection with: 'Balance = 0.') equals: (AccountSummary for: ReceptiveAccount new) summarize.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 22:04:05' prior: 50874203!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 50 on: account.

	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: (AccountSummary for: account)  summarize.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 22:04:07' prior: 50874474!
test02AccountSummarizesDepositsAndUpdatedBalance
	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 50 on: account.

	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: (AccountSummary for: account) summarize.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 22:04:21' prior: 50874236!
test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	Withdraw register: 50 on: recipientAccount.
	Transfer register: 100 from: originAccount to: recipientAccount.

	self assert: (OrderedCollection with: 'Transfer withdrawal for 100.' with: 'Balance = -100.')
		equals: (AccountSummary for: originAccount ) summarize.
	
	self assert: (OrderedCollection with: 'Withdrawal for 50.' with: 'Transfer deposit for 100.' with: 'Balance = 50.')
		equals: (AccountSummary for: recipientAccount ) summarize.! !
!AccountSummaryTest methodsFor: 'tests' stamp: 'JEA 11/12/2020 22:04:24' prior: 50874258!
test04PortfolioSummarizesAllItsAccountsAndPortfolios
	| account1 account2 subPortfolio portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.

	subPortfolio := Portfolio with: account1.
	portfolio := Portfolio with: subPortfolio with: account2.
	
	self assert: (OrderedCollection with: 'Deposit for 100.' with: 'Deposit for 50.' with: 'Balance = 150.') 
		equals: (AccountSummary for: portfolio) summarize.! !
!Portfolio methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:08:37' prior: 50874370 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	^accounts do: [ :anAccount | anAccount summarizeAccountIn: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:08:42' prior: 50874378 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	^transactions do: [ :aTransaction | aTransaction summarizeAccountIn: anAccountSummary. ].! !
!Portfolio methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:10:25'!
logInSummary: anAccountSummary

	^accounts do: [ :anAccount | anAccount summarizeAccountIn: anAccountSummary ].! !
!Account methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:10:25'!
logInSummary: anAccountSummary

	self subclassResponsibility.! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:10:25' overrides: 50874566!
logInSummary: anAccountSummary

	^transactions do: [ :aTransaction | aTransaction summarizeAccountIn: anAccountSummary. ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JEA 11/12/2020 22:10:25' prior: 50874545 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInSummary: anAccountSummary ].! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'JEA 11/12/2020 22:10:25' prior: 50874456!
summarize

	^account logInSummary: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JEA 11/12/2020 22:10:25' prior: 50874553 overrides: 50874352!
summarizeAccountIn: anAccountSummary

	^transactions do: [ :aTransaction | aTransaction logInSummary: anAccountSummary. ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JEA 11/12/2020 22:10:25' prior: 50874560 overrides: 50874566!
logInSummary: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInSummary: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JEA 11/12/2020 22:10:25' prior: 50874572 overrides: 50874566!
logInSummary: anAccountSummary

	^transactions do: [ :aTransaction | aTransaction logInSummary: anAccountSummary. ].! !

!methodRemoval: Portfolio #summarizeAccountIn: stamp: 'JEA 11/12/2020 22:10:25'!
summarizeAccountIn: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInSummary: anAccountSummary ].!

!methodRemoval: Account #summarizeAccountIn: stamp: 'JEA 11/12/2020 22:10:25'!
summarizeAccountIn: anAccountSummary

	self subclassResponsibility.!

!methodRemoval: ReceptiveAccount #summarizeAccountIn: stamp: 'JEA 11/12/2020 22:10:25'!
summarizeAccountIn: anAccountSummary

	^transactions do: [ :aTransaction | aTransaction logInSummary: anAccountSummary. ].!
!AccountTransaction methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:11:20'!
logInSummary: anAccountSummary! !
!AccountTransaction methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:11:32' prior: 50874633!
logInSummary: anAccountSummary

	self subclassResponsibility.! !

----SNAPSHOT----(12 November 2020 22:12:02) CuisUniversity-4384.image priorSource: 17358662!
!Deposit methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:17:59' overrides: 50874638!
logInSummary: anAccountSummary.

	anAccountSummary logDeposit: self.! !
!Withdraw methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:18:14' overrides: 50874638!
logInSummary: anAccountSummary.

	anAccountSummary logWithdraw: self.! !
!TransferDeposit methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:21:37' overrides: 50874638!
logInSummary: anAccountSummary.

	anAccountSummary logTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports - private' stamp: 'JEA 11/12/2020 22:21:47' overrides: 50874638!
logInSummary: anAccountSummary.

	anAccountSummary logTransferWithdraw: self.! !

!methodRemoval: AccountSummary #initializeFor: stamp: 'JEA 11/12/2020 22:22:04'!
initializeFor: anAccount

	account := anAccount.!
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/12/2020 22:22:20'!
initializeFor: anAccount

	account := anAccount.! !

!methodRemoval: AccountSummary #receptiveAccountSummary: stamp: 'JEA 11/12/2020 22:22:59'!
receptiveAccountSummary: transactions
	| summary |
	
	summary := OrderedCollection new.
	transactions do: [ :aTransaction | 
		| transactionString |
		(aTransaction isKindOf: Deposit) ifTrue: [ transactionString := 'Deposit' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [ transactionString := 'Withdrawal' ].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [ transactionString := 'Transfer deposit' ].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [ transactionString := 'Transfer withdrawal' ].
		summary add: transactionString, ' for ', aTransaction value asString, '.'.
	].
	
	summary add: 'Balance = ', self balance asString, '.'.
	^summary.!

!methodRemoval: AccountSummary #portfolioSummary: stamp: 'JEA 11/12/2020 22:23:00'!
portfolioSummary: accounts
	| summary |

	summary := OrderedCollection new.

	accounts do: [ :anAccount | 
		| subSummary |
		subSummary := anAccount accountSummary.
		subSummary removeLast.
		summary addAll: subSummary.
	].

	summary add: 'Balance = ', self balance asString, '.'.
	
	^summary.!
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/12/2020 22:23:24'!
logDeposit: aDeposit! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/12/2020 22:23:44'!
logWithdraw: aWithdraw! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/12/2020 22:23:55'!
logTransferDeposit: aTransferDeposit! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/12/2020 22:24:03'!
logTransferWithDraw: aTransferWithdraw! !

----SNAPSHOT----(12 November 2020 22:24:14) CuisUniversity-4384.image priorSource: 17375744!

----SNAPSHOT----(12 November 2020 23:12:19) CuisUniversity-4384.image priorSource: 17378473!

----QUIT----(12 November 2020 23:12:24) CuisUniversity-4384.image priorSource: 17378567!

----STARTUP---- (15 November 2020 23:32:22) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!


!classRemoval: #Transfer stamp: 'JEA 11/15/2020 23:32:46'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferWithdraw stamp: 'JEA 11/15/2020 23:32:46'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferDeposit stamp: 'JEA 11/15/2020 23:32:46'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferTransaction stamp: 'JEA 11/15/2020 23:32:46'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Withdraw stamp: 'JEA 11/15/2020 23:32:47'!
RegularTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Deposit stamp: 'JEA 11/15/2020 23:32:47'!
RegularTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #RegularTransaction stamp: 'JEA 11/15/2020 23:32:47'!
AccountTransaction subclass: #RegularTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountTransaction stamp: 'JEA 11/15/2020 23:32:47'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountSummary stamp: 'JEA 11/15/2020 23:32:48'!
Object subclass: #AccountSummary
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReceptiveAccount stamp: 'JEA 11/15/2020 23:32:48'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Portfolio stamp: 'JEA 11/15/2020 23:32:48'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Account stamp: 'JEA 11/15/2020 23:32:49'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferTest stamp: 'JEA 11/15/2020 23:32:49'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReceptiveAccountTest stamp: 'JEA 11/15/2020 23:32:49'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #PortfolioTest stamp: 'JEA 11/15/2020 23:32:49'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountSummaryTest stamp: 'JEA 11/15/2020 23:32:50'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios/19-Portfolio2/Portfolio2.st----!

----QUIT----(16 November 2020 00:10:16) CuisUniversity-4384.image priorSource: 17378661!

----STARTUP---- (16 November 2020 11:40:40) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!

!TransferTransaction class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 11:53:28'!
registerOn: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self basicNew initializeWithTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.! !
!TransferTransaction class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 11:53:40' prior: 50876086!
registerOn: anAccount withTransfer: aTransfer
	| transferPart |
	
	transferPart := self basicNew initializeWithTransfer: aTransfer.
	anAccount register: transferPart.
	
	^transferPart.! !

!methodRemoval: TransferTransaction class #register:on:withTransfer: stamp: 'JEA 11/16/2020 11:54:34'!
register: aValue on: anAccount withTransfer: aTransfer
	| transferWithdraw |
	
	transferWithdraw := self for: aValue withTransfer: aTransfer.
	anAccount register: transferWithdraw.
	
	^transferWithdraw.!

!methodRemoval: TransferTransaction class #for:withTransfer: stamp: 'JEA 11/16/2020 11:54:43'!
for: aValue withTransfer: aTransfer
	
	^self basicNew initializeFor: aValue withTransfer: aTransfer.!
!Transfer methodsFor: 'initialization' stamp: 'JEA 11/16/2020 11:54:59' prior: 50876034!
initializeRegistering: aValue from: originAccount to: recipientAccount.

	self ensureThatCanTransfer: aValue from: originAccount to: recipientAccount.

	withdrawTransaction := TransferWithdraw registerOn: originAccount withTransfer: self.
	depositTransaction := TransferDeposit registerOn: recipientAccount withTransfer: self.
	value := aValue.! !
!TransferTransaction methodsFor: 'initialization' stamp: 'JEA 11/16/2020 11:55:25'!
initializeWithTransfer: aTransfer

	transferOperation := aTransfer.! !
!TransferDeposit methodsFor: 'balance' stamp: 'JEA 11/16/2020 11:55:43' prior: 50875845 overrides: 50875691!
affectBalance: aBalance

	^aBalance + self value.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'JEA 11/16/2020 11:55:58' prior: 50875862 overrides: 50875691!
affectBalance: aBalance

	^aBalance - self value.! !

!methodRemoval: TransferTransaction #initializeFor:withTransfer: stamp: 'JEA 11/16/2020 11:56:04'!
initializeFor: aValue withTransfer: aTransfer

	value := aValue.
	transferOperation := aTransfer.!
!TransferTransaction methodsFor: 'testing' stamp: 'JEA 11/16/2020 11:56:34' overrides: 50875682!
value

	^self transferOperation value.! !
!RegularTransaction methodsFor: 'testing' stamp: 'JEA 11/16/2020 11:57:09' overrides: 50875682!
value

	^value.! !

!methodRemoval: AccountTransaction #value stamp: 'JEA 11/16/2020 11:57:21'!
value

	^value.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/16/2020 11:58:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/16/2020 11:58:50'!
PASSED!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/16/2020 11:58:53'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/16/2020 11:58:53'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/16/2020 11:58:53'!
PASSED!

!testRun: #TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/16/2020 11:58:53'!
PASSED!

!testRun: #TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/16/2020 11:58:53'!
PASSED!

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 11:58:55'!
PASSED!

----SNAPSHOT----(16 November 2020 11:59:07) CuisUniversity-4384.image priorSource: 17421651!
!TransferTest methodsFor: 'tests - invalid transfers' stamp: 'JEA 11/16/2020 12:03:30'!
test04CannotTransferAmountsEqualOrLowerThanZero
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	self should: [Transfer register: 0 from: originAccount to: recipientAccount.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer invalidTransferValueMessage.
			self assert: originAccount transactions isEmpty.
			self assert: recipientAccount transactions isEmpty.
		].! !

!methodRemoval: TransferTest #test04CantTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/16/2020 12:03:30'!
test04CantTransferAmountsEqualOrLowerThanZero
	| originAccount recipientAccount |
	
	originAccount := ReceptiveAccount new.
	recipientAccount := ReceptiveAccount new.
	
	self should: [Transfer register: 0 from: originAccount to: recipientAccount.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer invalidTransferValueMessage.
			self assert: originAccount transactions isEmpty.
			self assert: recipientAccount transactions isEmpty.
		].!
!TransferTest methodsFor: 'tests - invalid transfers' stamp: 'JEA 11/16/2020 12:03:39'!
test05AccountCannotTransferToItself
	| account |
	
	account := ReceptiveAccount new.
	
	self should: [Transfer register: 100 from: account to: account.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer cantTransferToSelfMessage.
			self assert: 0 equals: account balance.
		].! !

!methodRemoval: TransferTest #test05AccountCantTransferToItself stamp: 'JEA 11/16/2020 12:03:39'!
test05AccountCantTransferToItself
	| account |
	
	account := ReceptiveAccount new.
	
	self should: [Transfer register: 100 from: account to: account.]
		raise: Error
		withExceptionDo: [ :anException | 
			anException messageText = Transfer cantTransferToSelfMessage.
			self assert: 0 equals: account balance.
		].!
!ReportsTest methodsFor: 'tests - net transfer' stamp: 'JEA 11/16/2020 12:19:15' prior: 50875293!
test02NetTransferOfAccountsWithOneTransfer
	| depositerAccount receiverAccount |
	depositerAccount := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Deposit register: 100 on: depositerAccount.
	Transfer register: 100 from: depositerAccount to: receiverAccount.
	Transfer register: 50 from: receiverAccount to: depositerAccount.
	
	self assert: 50 equals: (NetTransfer for: receiverAccount) summarize.
	self assert: -50 equals: (NetTransfer for: depositerAccount) summarize.! !

!testRun: #ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:19:16'!
PASSED!
!ReportsTest methodsFor: 'tests - net transfer' stamp: 'JEA 11/16/2020 12:19:57' prior: 50876365!
test02NetTransferOfAccountsWithOneTransfer
	| account1 receiverAccount |
	account1 := ReceptiveAccount new.
	receiverAccount := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Transfer register: 100 from: account1 to: receiverAccount.
	Transfer register: 50 from: receiverAccount to: account1.
	
	self assert: 50 equals: (NetTransfer for: receiverAccount) summarize.
	self assert: -50 equals: (NetTransfer for: account1) summarize.! !
!ReportsTest methodsFor: 'tests - net transfer' stamp: 'JEA 11/16/2020 12:20:01' prior: 50876413!
test02NetTransferOfAccountsWithOneTransfer
	| account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Transfer register: 100 from: account1 to: account2.
	Transfer register: 50 from: account2 to: account1.
	
	self assert: 50 equals: (NetTransfer for: account2) summarize.
	self assert: -50 equals: (NetTransfer for: account1) summarize.! !
!ReportsTest methodsFor: 'tests - net transfer' stamp: 'JEA 11/16/2020 12:20:32'!
test02NetTransferOfAccountsTakesTransfersOnly
	| account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Transfer register: 100 from: account1 to: account2.
	Transfer register: 50 from: account2 to: account1.
	
	self assert: 50 equals: (NetTransfer for: account2) summarize.
	self assert: -50 equals: (NetTransfer for: account1) summarize.! !

!methodRemoval: ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 12:20:37'!
test02NetTransferOfAccountsWithOneTransfer
	| account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Transfer register: 100 from: account1 to: account2.
	Transfer register: 50 from: account2 to: account1.
	
	self assert: 50 equals: (NetTransfer for: account2) summarize.
	self assert: -50 equals: (NetTransfer for: account1) summarize.!

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:20:40'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:20:41'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:20:41'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:20:41'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:20:41'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:20:41'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:20:41'!
PASSED!
!ReportsTest methodsFor: 'tests - net transfer' stamp: 'JEA 11/16/2020 12:22:37' prior: 50875310!
test03NetTransferOfPortfolioTakesAllAccountTransfers
	| account1 account2 subPortfolio portfolio |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.

	Transfer register: 100 from: account1 to: account2.
	Transfer register: 50 from: ReceptiveAccount new to: account1.

	subPortfolio := Portfolio with: account1.
	portfolio := Portfolio with: subPortfolio with: account2.
	
	self assert: 	50 equals: (NetTransfer for: portfolio) summarize.! !

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:22:39'!
PASSED!

----SNAPSHOT----(16 November 2020 12:22:44) CuisUniversity-4384.image priorSource: 17428701!

!classRenamed: #Reports as: #Report stamp: 'JEA 11/16/2020 12:24:04'!
Smalltalk renameClassNamed: #Reports as: #Report!

!classRenamed: #ReportsTest as: #ReportTest stamp: 'JEA 11/16/2020 12:24:10'!
Smalltalk renameClassNamed: #ReportsTest as: #ReportTest!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:24:13'!
PASSED!
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:24:32' prior: 50875887!
logDeposit: aDeposit

	self subclassResponsibility.! !
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:24:36' prior: 50875891!
logTransferDeposit

	self subclassResponsibility.! !
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:24:38' prior: 50875895!
logTransferWithdraw

	self subclassResponsibility.! !
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:24:42' prior: 50875899!
logWithdraw

	self subclassResponsibility.! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:24:59' prior: 50875945!
logTransferDeposit: aTransferDeposit

	summary add: ('Entrada por transferencia de ', aTransferDeposit value asString,'.').! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:03' prior: 50875952!
logTransferWithdraw: aTransferWithdraw 

	summary add: ('Salida por transferencia de ', aTransferWithdraw value asString, '.').! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:06' prior: 50875959!
logWithdraw: aWithdraw

	summary add: ('ExtracciÔøΩn por ', aWithdraw value asString, '.').! !
!NetTransfer methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:14' prior: 50875979!
logTransferDeposit: aTransferDeposit

	netValue := netValue + aTransferDeposit value.! !
!NetTransfer methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:17' prior: 50875984!
logTransferWithdraw: aTransferWithdraw

	netValue := netValue - aTransferWithdraw value.! !
!NetTransfer methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:21' prior: 50875989!
logWithdraw: aWithdraw! !
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:34'!
logTransferDeposit: aTransferDeposit

	self subclassResponsibility.! !

!methodRemoval: Report #logTransferDeposit stamp: 'JEA 11/16/2020 12:25:36'!
logTransferDeposit

	self subclassResponsibility.!
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:43'!
logTransferWithdraw: aTransferWithdraw

	self subclassResponsibility.! !

!methodRemoval: Report #logTransferWithdraw stamp: 'JEA 11/16/2020 12:25:45'!
logTransferWithdraw

	self subclassResponsibility.!
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:25:50'!
logWithdraw: aWithdraw

	self subclassResponsibility.! !

!methodRemoval: Report #logWithdraw stamp: 'JEA 11/16/2020 12:25:51'!
logWithdraw

	self subclassResponsibility.!

----SNAPSHOT----(16 November 2020 12:25:55) CuisUniversity-4384.image priorSource: 17436703!
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:27:12' prior: 50875940 overrides: 50876584!
logDeposit: aDeposit

	summary add: ('DepÔøΩsito por ', aDeposit value asString, '.').! !
!Report methodsFor: 'summaries' stamp: 'JEA 11/16/2020 12:27:30' prior: 50875903!
summarize

	self subclassResponsibility.! !
!Report methodsFor: 'initialization' stamp: 'JEA 11/16/2020 12:27:40' prior: 50875883!
initializeFor: anAccount

	self subclassResponsibility.! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/16/2020 12:28:01' overrides: 50876680!
initializeFor: anAccount

	account := anAccount.! !
!NetTransfer methodsFor: 'initialization' stamp: 'JEA 11/16/2020 12:28:12' overrides: 50876680!
initializeFor: anAccount

	account := anAccount! !
!NetTransfer methodsFor: 'initialization' stamp: 'JEA 11/16/2020 12:28:13' prior: 50876690 overrides: 50876680!
initializeFor: anAccount

	account := anAccount.! !

----SNAPSHOT----(16 November 2020 12:28:15) CuisUniversity-4384.image priorSource: 17440459!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:28:16'!
PASSED!
!NetTransfer methodsFor: 'summaries' stamp: 'JEA 11/16/2020 12:28:30' prior: 50875993 overrides: 50876675!
summarize

	account logInSummary: self.
	^netValue.! !
!NetTransfer methodsFor: 'initialization' stamp: 'JEA 11/16/2020 12:28:44' prior: 50876696 overrides: 50876680!
initializeFor: anAccount

	netValue := 0.
	account := anAccount.! !
!AccountSummary methodsFor: 'summaries' stamp: 'JEA 11/16/2020 12:28:59' prior: 50875932 overrides: 50876675!
summarize

	account logInSummary: self.
	summary add: ('Balance = ', account balance asString, '.').
	^summary.! !
!AccountSummary methodsFor: 'initialization' stamp: 'JEA 11/16/2020 12:29:04' prior: 50876685 overrides: 50876680!
initializeFor: anAccount

	summary := OrderedCollection new.
	account := anAccount.! !

----SNAPSHOT----(16 November 2020 12:29:06) CuisUniversity-4384.image priorSource: 17441587!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:29:07'!
PASSED!
!NetTransfer methodsFor: 'summaries' stamp: 'JEA 11/16/2020 12:30:43' prior: 50876730 overrides: 50876675!
summarize

	account logInSummary: self.

	^netValue.! !
!AccountSummary methodsFor: 'summaries' stamp: 'JEA 11/16/2020 12:31:06' prior: 50876742 overrides: 50876675!
summarize

	account logInSummary: self.
	summary add: ('Balance = ', account balance asString, '.').

	^summary.! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:31:44' prior: 50876604 overrides: 50876639!
logTransferDeposit: aTransferDeposit

	summary add: ('Entrada por transferencia de ', aTransferDeposit value asString, '.').! !
!AccountSummary methodsFor: 'logs - private' stamp: 'JEA 11/16/2020 12:36:45'!
transactionValueAsStringWithDot: anAccountTransaction

	^anAccountTransaction value asString, '.'.! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:37:13' prior: 50876669 overrides: 50876584!
logDeposit: aDeposit

	summary add: ('DepÔøΩsito por ', self transactionValueAsStringWithDot: aDeposit).! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:37:21' prior: 50876798 overrides: 50876639!
logTransferDeposit: aTransferDeposit

	summary add: ('Entrada por transferencia de ', self transactionValueAsStringWithDot: aTransferDeposit).! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:37:29' prior: 50876611 overrides: 50876648!
logTransferWithdraw: aTransferWithdraw 

	summary add: ('Salida por transferencia de ', self transactionValueAsStringWithDot: aTransferWithdraw).! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:37:35' prior: 50876618 overrides: 50876657!
logWithdraw: aWithdraw

	summary add: ('ExtracciÔøΩn por ', self transactionValueAsStringWithDot: aWithdraw).! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/16/2020 12:37:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JEA 11/16/2020 12:37:41'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:37:44'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:37:44'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:37:44'!
ERROR!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:37:44'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:37:44'!
ERROR!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:37:44'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:37:44'!
ERROR!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:37:57'!
ERROR!
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:38:40' prior: 50876812 overrides: 50876584!
logDeposit: aDeposit

	summary add: 'DepÔøΩsito por ', (self transactionValueAsStringWithDot: aDeposit).! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:38:46' prior: 50876819 overrides: 50876639!
logTransferDeposit: aTransferDeposit

	summary add: 'Entrada por transferencia de ', (self transactionValueAsStringWithDot: aTransferDeposit).! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:38:52' prior: 50876827 overrides: 50876648!
logTransferWithdraw: aTransferWithdraw 

	summary add: 'Salida por transferencia de ', (self transactionValueAsStringWithDot: aTransferWithdraw).! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 12:38:56' prior: 50876835 overrides: 50876657!
logWithdraw: aWithdraw

	summary add: 'ExtracciÔøΩn por ', (self transactionValueAsStringWithDot: aWithdraw).! !

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 12:38:58'!
PASSED!

!testRun: #TransferTest #test01TransferIncreasesBalanceinOriginAndDecreasesItInRecipient stamp: 'JEA 11/16/2020 12:38:59'!
PASSED!

!testRun: #TransferTest #test02TransfersPartsAreRegisteredInBothAccounts stamp: 'JEA 11/16/2020 12:38:59'!
PASSED!

!testRun: #TransferTest #test03TransferPartsKnowAssociatedTransferOperation stamp: 'JEA 11/16/2020 12:38:59'!
PASSED!

!testRun: #TransferTest #test04CannotTransferAmountsEqualOrLowerThanZero stamp: 'JEA 11/16/2020 12:38:59'!
PASSED!

!testRun: #TransferTest #test05AccountCannotTransferToItself stamp: 'JEA 11/16/2020 12:38:59'!
PASSED!

----SNAPSHOT----(16 November 2020 12:39:03) CuisUniversity-4384.image priorSource: 17443350!

----SNAPSHOT----(16 November 2020 12:39:15) CuisUniversity-4384.image priorSource: 17452099!

----QUIT----(16 November 2020 13:00:09) CuisUniversity-4384.image priorSource: 17452193!

----STARTUP---- (16 November 2020 14:18:11) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!


!classRemoval: #Transfer stamp: 'JEA 11/16/2020 14:21:08'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #NetTransfer stamp: 'JEA 11/16/2020 14:21:08'!
Report subclass: #NetTransfer
	instanceVariableNames: 'netValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountSummary stamp: 'JEA 11/16/2020 14:21:08'!
Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Report stamp: 'JEA 11/16/2020 14:21:09'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferWithdraw stamp: 'JEA 11/16/2020 14:21:09'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferDeposit stamp: 'JEA 11/16/2020 14:21:09'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferTransaction stamp: 'JEA 11/16/2020 14:21:09'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Withdraw stamp: 'JEA 11/16/2020 14:21:10'!
RegularTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Deposit stamp: 'JEA 11/16/2020 14:21:10'!
RegularTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #RegularTransaction stamp: 'JEA 11/16/2020 14:21:10'!
AccountTransaction subclass: #RegularTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountTransaction stamp: 'JEA 11/16/2020 14:21:10'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReceptiveAccount stamp: 'JEA 11/16/2020 14:21:11'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Portfolio stamp: 'JEA 11/16/2020 14:21:11'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Account stamp: 'JEA 11/16/2020 14:21:11'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferTest stamp: 'JEA 11/16/2020 14:21:11'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReportTest stamp: 'JEA 11/16/2020 14:21:12'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReceptiveAccountTest stamp: 'JEA 11/16/2020 14:21:12'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #PortfolioTest stamp: 'JEA 11/16/2020 14:21:12'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios/19-Portfolio2/Portfolio2-Bonus.st----!
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:31:08'!
test01EmptyPortfolioStructureHasPortfoliosName
	
	self assert: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize 
	      equals: (OrderedCollection with: 'Portfolio vacÔøΩo').! !

!methodRemoval: ReportsTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:31:08'!
test01EmptyPortfolioStructure
	
	self assert: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize 
	      equals: (OrderedCollection with: 'Portfolio vacÔøΩo').!
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:31:20'!
test02ReceptiveAccountStructureHasAccountsName
	
	self assert: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize 
	      equals: (OrderedCollection with: 'Cuenta vacÔøΩa').! !

!methodRemoval: ReportsTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:31:20'!
test02ReceptiveAccountStructure
	
	self assert: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize 
	      equals: (OrderedCollection with: 'Cuenta vacÔøΩa').!
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:31:32'!
test02ReceptiveAccountStructure
	
	self assert: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize 
	      equals: (OrderedCollection with: 'Cuenta vacÔøΩa').! !

!methodRemoval: ReportsTest #test02ReceptiveAccountStructureHasAccountsName stamp: 'JEA 11/16/2020 14:31:32'!
test02ReceptiveAccountStructureHasAccountsName
	
	self assert: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize 
	      equals: (OrderedCollection with: 'Cuenta vacÔøΩa').!
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:31:38'!
test01EmptyPortfolioStructure
	
	self assert: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize 
	      equals: (OrderedCollection with: 'Portfolio vacÔøΩo').! !

!methodRemoval: ReportsTest #test01EmptyPortfolioStructureHasPortfoliosName stamp: 'JEA 11/16/2020 14:31:38'!
test01EmptyPortfolioStructureHasPortfoliosName
	
	self assert: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize 
	      equals: (OrderedCollection with: 'Portfolio vacÔøΩo').!
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:32:37' prior: 50878808!
test01EmptyPortfolioStructure
	
	self assert: (OrderedCollection with: 'Portfolio vacÔøΩo') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize.! !
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:32:54' prior: 50878789!
test02ReceptiveAccountStructure
	
	self assert: (OrderedCollection with: 'Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize.! !
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:33:13' prior: 50877659!
test03PortfolioWithReceptiveAccountStructure
	| account |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
		
	self assert: (OrderedCollection with: 'Portfolio test 3' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 3' with: account)) summarize.! !
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:33:26' prior: 50877672!
test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'Portfolio vacÔøΩo'.
		
	self assert: (OrderedCollection with: 'Portfolio test 4' with: '    Portfolio vacÔøΩo' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 4' with: portfolio with: account)) summarize.! !
!ReportsTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:33:42' prior: 50877688!
test05PortfolioWithPortfolioWithAccounts
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'SubPortfolio' with: account.
		
	self assert: (OrderedCollection with: 'Portfolio test 5' with: '    SubPortfolio' with: '        Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 5' with: portfolio)) summarize.! !

!testRun: #ReportsTest #test01EmptyAccountStructure stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test02AccountWithTransactionsStructure stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test03PortfolioWithAccountsWithTransactionsStructure stamp: 'JEA 11/16/2020 14:33:43'!
FAILURE!

!testRun: #ReportsTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:33:43'!
PASSED!

!testRun: #ReportsTest #test03PortfolioWithAccountsWithTransactionsStructure stamp: 'JEA 11/16/2020 14:33:43'!
FAILURE!
!ReportsTest methodsFor: 'tests - account transaction structure' stamp: 'JEA 11/16/2020 14:34:08' prior: 50877714!
test02AccountWithTransactionsStructure
	| account |
	account := ReceptiveAccount named: 'Cuenta test 2'.

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account. 
	self assert: (OrderedCollection with: 'Cuenta test 2' with: '    DepÔøΩsito por 100' with: '    ExtracciÔøΩn por 50' with: '    Balance = 50')
	      equals: (AccountTransactionStructure for: account) summarize! !
!ReportsTest methodsFor: 'tests - account transaction structure' stamp: 'JEA 11/16/2020 14:36:44' prior: 50877730!
test03PortfolioWithAccountsWithTransactionsStructure
	"| portfolio account1 account2 result |
	account1 := ReceptiveAccount named: 'Cuenta 1'.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1. 
	
	account2 := ReceptiveAccount named: 'Cuenta 2'.
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.
	portfolio := Portfolio named: 'Portfolio test 3' with: account1 with: account2. 
	result := OrderedCollection with: 'Portfolio test 3'.
	result addAll: (OrderedCollection with: '    Cuenta 1' with: '        DepÔøΩsito por 100' with: '        ExtracciÔøΩn por 50' with: '        Balance = 50').
	result addAll: (OrderedCollection with: '    Cuenta 2' with: '        DepÔøΩsito por 100' with: '        ExtracciÔøΩn por 50' with: '        Balance = 50').	
	self assert: result
	      equals: (AccountTransactionStructure for: portfolio) summarize"! !

!testRun: #ReportsTest #test01EmptyAccountStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test02AccountWithTransactionsStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test03PortfolioWithAccountsWithTransactionsStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:36:50'!
PASSED!

----QUIT----(16 November 2020 14:38:19) CuisUniversity-4384.image priorSource: 17452287!

----STARTUP---- (16 November 2020 14:41:34) as /home/jadmin/Documents/Ingenier√≠a de Software 1/Cuis University/Cuis University 2/CuisUniversity-4384.image!


!testRun: #ReportsTest #test01EmptyAccountStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test02AccountWithTransactionsStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test02NetTransferOfAccountsWithOneTransfer stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test03PortfolioWithAccountsWithTransactionsStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!testRun: #ReportsTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:41:37'!
PASSED!

!classRemoval: #Transfer stamp: 'JEA 11/16/2020 14:41:43'!
Object subclass: #Transfer
	instanceVariableNames: 'withdrawTransaction depositTransaction value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #NetTransfer stamp: 'JEA 11/16/2020 14:41:44'!
Reports subclass: #NetTransfer
	instanceVariableNames: 'netValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountTransactionStructure stamp: 'JEA 11/16/2020 14:41:44'!
Reports subclass: #AccountTransactionStructure
	instanceVariableNames: 'structure depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountSummary stamp: 'JEA 11/16/2020 14:41:44'!
Reports subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountStructure stamp: 'JEA 11/16/2020 14:41:45'!
Reports subclass: #AccountStructure
	instanceVariableNames: 'structure depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Reports stamp: 'JEA 11/16/2020 14:41:45'!
Object subclass: #Reports
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferWithdraw stamp: 'JEA 11/16/2020 14:41:45'!
TransferTransaction subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferDeposit stamp: 'JEA 11/16/2020 14:41:45'!
TransferTransaction subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferTransaction stamp: 'JEA 11/16/2020 14:41:46'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transferOperation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Withdraw stamp: 'JEA 11/16/2020 14:41:46'!
RegularTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Deposit stamp: 'JEA 11/16/2020 14:41:46'!
RegularTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #RegularTransaction stamp: 'JEA 11/16/2020 14:41:46'!
AccountTransaction subclass: #RegularTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #AccountTransaction stamp: 'JEA 11/16/2020 14:41:47'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReceptiveAccount stamp: 'JEA 11/16/2020 14:41:47'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Portfolio stamp: 'JEA 11/16/2020 14:41:47'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #Account stamp: 'JEA 11/16/2020 14:41:47'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #TransferTest stamp: 'JEA 11/16/2020 14:41:48'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReportsTest stamp: 'JEA 11/16/2020 14:41:48'!
TestCase subclass: #ReportsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #ReceptiveAccountTest stamp: 'JEA 11/16/2020 14:41:48'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classRemoval: #PortfolioTest stamp: 'JEA 11/16/2020 14:41:49'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

----End fileIn of /home/jadmin/Documents/GIT/IS1 Ejercicios/19-Portfolio2/Portfolio2.st----!
!Portfolio methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50'!
logInReport: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInSummary: anAccountSummary ].! !
!Account methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50'!
logInReport: anAccountSummary

	self subclassResponsibility.! !
!Deposit methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50'!
logInReport: anAccountSummary.

	anAccountSummary logDeposit: self.! !
!Withdraw methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50'!
logInReport: anAccountSummary.

	anAccountSummary logWithdraw: self.! !
!AccountTransaction methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50'!
logInReport: anAccountSummary

	self subclassResponsibility.! !
!TransferDeposit methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50' overrides: 50880509!
logInReport: anAccountSummary.

	anAccountSummary logTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50' overrides: 50880509!
logInReport: anAccountSummary.

	anAccountSummary logTransferWithdraw: self.! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 14:42:50' overrides: 50880494!
logInReport: anAccountSummary
	
	^transactions do: [ :aTransaction | aTransaction logInSummary: anAccountSummary. ].
	! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'JEA 11/16/2020 14:42:50' prior: 50880319 overrides: 50880290!
summarize

	account logInReport: self.
	summary add: ('Balance = ', account balance asString, '.').

	^summary.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JEA 11/16/2020 14:42:50' prior: 50879896 overrides: 50879840!
logInSummary: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInReport: anAccountSummary ].! !
!NetTransfer methodsFor: 'as yet unclassified' stamp: 'JEA 11/16/2020 14:42:50' prior: 50880404 overrides: 50880290!
summarize

	account logInReport: self.

	^netValue.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JEA 11/16/2020 14:42:50' prior: 50880046 overrides: 50879840!
logInSummary: anAccountSummary
	
	^transactions do: [ :aTransaction | aTransaction logInReport: anAccountSummary. ].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JEA 11/16/2020 14:42:50' prior: 50880488 overrides: 50880494!
logInReport: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInReport: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JEA 11/16/2020 14:42:50' prior: 50880527 overrides: 50880494!
logInReport: anAccountSummary
	
	^transactions do: [ :aTransaction | aTransaction logInReport: anAccountSummary. ].
	! !

!methodRemoval: Portfolio #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary

	^accounts do: [ :anAccount | anAccount logInReport: anAccountSummary ].!

!methodRemoval: Account #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary

	self subclassResponsibility.!

!methodRemoval: Deposit #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary.

	anAccountSummary logDeposit: self.!

!methodRemoval: Withdraw #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary.

	anAccountSummary logWithdraw: self.!

!methodRemoval: AccountTransaction #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary

	self subclassResponsibility.!

!methodRemoval: TransferDeposit #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary.

	anAccountSummary logTransferDeposit: self.!

!methodRemoval: TransferWithdraw #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary.

	anAccountSummary logTransferWithdraw: self.!

!methodRemoval: ReceptiveAccount #logInSummary: stamp: 'JEA 11/16/2020 14:42:50'!
logInSummary: anAccountSummary
	
	^transactions do: [ :aTransaction | aTransaction logInReport: anAccountSummary. ].
	!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:42:53'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'JEA 11/16/2020 14:43:32' prior: 50879938 overrides: 50879818!
isComposedBy: anAccount

	^ self = anAccount or: 
		[ accounts anySatisfy: 
			[ :composedAccount | (composedAccount isComposedBy: anAccount) 
				or: [ anAccount isComposedBy: composedAccount ] 
			] 
		]! !
!Portfolio methodsFor: 'testing' stamp: 'JEA 11/16/2020 14:43:39' prior: 50879924!
anyRootParentIsComposedBy: accountToAdd

	^self rootParents anySatisfy: [ :aParent | aParent isComposedBy: accountToAdd ]! !
!Portfolio methodsFor: 'composition' stamp: 'JEA 11/16/2020 14:43:45' prior: 50879920 overrides: 50879835!
addedTo: aPortfolio 
	
	parents add: aPortfolio.! !

----SNAPSHOT----(16 November 2020 14:47:18) CuisUniversity-4384.image priorSource: 17516675!

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 14:50:39'!
Report subclass: #AccountStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:50:31'!
test01EmptyPortfolioStructure
	
	self assert: (OrderedCollection with: 'Portfolio vacÔøΩo') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize.! !

Report subclass: #AccountStructure
	instanceVariableNames: 'structure depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 14:50:48'!
Report subclass: #AccountStructure
	instanceVariableNames: 'structure depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:51:03'!
test02ReceptiveAccountStructure
	
	self assert: (OrderedCollection with: 'Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize.! !
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:51:08'!
test03PortfolioWithReceptiveAccountStructure
	| account |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
		
	self assert: (OrderedCollection with: 'Portfolio test 3' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 3' with: account)) summarize.! !
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:51:13'!
test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'Portfolio vacÔøΩo'.
		
	self assert: (OrderedCollection with: 'Portfolio test 4' with: '    Portfolio vacÔøΩo' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 4' with: portfolio with: account)) summarize.! !
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 14:51:17'!
test05PortfolioWithPortfolioWithAccounts
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'SubPortfolio' with: account.
		
	self assert: (OrderedCollection with: 'Portfolio test 5' with: '    SubPortfolio' with: '        Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 5' with: portfolio)) summarize.! !
!AccountStructure methodsFor: 'summaries' stamp: 'JEA 11/16/2020 14:51:50' overrides: 50880290!
summarize

	structure := OrderedCollection new.
	depth := OrderedCollection new.
	account logInAccounts: self.
	^structure! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 14:52:05'!
indentation

	| indent depthOfIndent |
	(depth size = 0) ifTrue: [depthOfIndent := 0] ifFalse: [depthOfIndent := depth size].
	indent := ''.
	[depthOfIndent  = 0] whileFalse: [indent := (indent, '    ').
							   depthOfIndent := depthOfIndent - 1.].
						
	^indent.! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 14:52:10'!
logAccount: anAccount
	structure add: (self indentation, anAccount name).
	(depth size ~= 0) ifTrue: [ self decreaseLastAndRemoveIfZero: depth]
					! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 14:52:16'!
logPortfolio: aPortfolio
	structure add: (self indentation, aPortfolio name).
	(aPortfolio accountsSize ~= 0) ifTrue: [depth add: aPortfolio accountsSize].! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:52:23'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:52:23'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:52:23'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:52:23'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:52:23'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:52:23'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:52:26'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 14:53:13'!
named: aString
	
	^self new initializeWithName: aString.! !
!Portfolio class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 14:53:31'!
named: aString with: anAccount
	
	^(self new initializeWithName: aString	) add: anAccount;		yourself! !
!Portfolio class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 14:53:49' prior: 50880837!
named: aString with: anAccount
	
	^(self new initializeWithName: aString	) 
		add: anAccount;		
		yourself! !
!Portfolio class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 14:54:09'!
named: aString with: anAccount with: anotherAccount

	^(self new initializeWithName: aString) 
		add: anAccount;
		add: anotherAccount;		
		yourself! !

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #Account category: 'Portfolio2' stamp: 'JEA 11/16/2020 14:54:40'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!Account methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:55:00'!
initializeWithName: aString 
	
	name := aString.! !
!Account methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:55:14' overrides: 16896425!
initialize
	
	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/16/2020 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/16/2020 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/16/2020 14:55:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/16/2020 14:55:24'!
ERROR!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/16/2020 14:55:30'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:56:09' prior: 50880005 overrides: 50880874!
initialize

	transactions := OrderedCollection new.! !
!Account methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:57:35' prior: 50880869!
initializeWithName: aString 
	
	self initialize.
	name := aString.! !
!Portfolio methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:57:56' prior: 50879884 overrides: 50880874!
initialize

	name := 'Portfolio'.
	accounts := OrderedCollection new.
	parents := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:58:11' prior: 50880941 overrides: 50880874!
initialize

	name := 'Cuenta'.
	transactions := OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:58:19' prior: 50880960 overrides: 50880874!
initialize

	name := 'Cuenta corriente'.
	transactions := OrderedCollection new.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:58:25'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:25'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:25'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:58:25'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:25'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:58:25'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'JEA 11/16/2020 14:58:38'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:58:41'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:41'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:41'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:58:41'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:41'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:58:41'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:58:42'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:58:58'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:58'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:58'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:58:58'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:58:58'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:58:58'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:59:00'!
ERROR!
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 14:59:50' overrides: 50880268!
initializeFor: anAccount

	
	account := anAccount.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 14:59:59'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:59:59'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:59:59'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 14:59:59'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 14:59:59'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 14:59:59'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:00:00'!
ERROR!
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 15:00:13' prior: 50881162 overrides: 50880268!
initializeFor: anAccount

	account := anAccount.! !
!AccountStructure methodsFor: 'summaries' stamp: 'JEA 11/16/2020 15:00:22' prior: 50880754 overrides: 50880290!
summarize

	account logInAccounts: self.
	^structure! !
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 15:00:27' prior: 50881213 overrides: 50880268!
initializeFor: anAccount

	structure := OrderedCollection new.
	depth := OrderedCollection new.
	account := anAccount.! !
!AccountStructure methodsFor: 'summaries' stamp: 'JEA 11/16/2020 15:02:26' prior: 50881219 overrides: 50880290!
summarize

	account logInReport: self.
	^structure! !

!methodRemoval: ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:11:12'!
test01EmptyPortfolioStructure
	
	self assert: (OrderedCollection with: 'Portfolio vacÔøΩo') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize.!

!methodRemoval: ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:11:12'!
test02ReceptiveAccountStructure
	
	self assert: (OrderedCollection with: 'Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize.!

!methodRemoval: ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:11:12'!
test03PortfolioWithReceptiveAccountStructure
	| account |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
		
	self assert: (OrderedCollection with: 'Portfolio test 3' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 3' with: account)) summarize.!

!methodRemoval: ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:11:12'!
test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'Portfolio vacÔøΩo'.
		
	self assert: (OrderedCollection with: 'Portfolio test 4' with: '    Portfolio vacÔøΩo' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 4' with: portfolio with: account)) summarize.!

!methodRemoval: ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 15:11:12'!
test05PortfolioWithPortfolioWithAccounts
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'SubPortfolio' with: account.
		
	self assert: (OrderedCollection with: 'Portfolio test 5' with: '    SubPortfolio' with: '        Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 5' with: portfolio)) summarize.!

!classRemoval: #AccountStructure stamp: 'JEA 11/16/2020 15:11:15'!
Report subclass: #AccountStructure
	instanceVariableNames: 'structure depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

----SNAPSHOT----(16 November 2020 15:11:19) CuisUniversity-4384.image priorSource: 17568563!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 15:12:03'!
test01EmptyPortfolioStructure
	
	self assert: (OrderedCollection with: 'Portfolio vacÔøΩo') 
	      equals: (AccountSummary for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize.! !

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 15:12:36'!
Report subclass: #AccountStructure
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 15:12:25' prior: 50881310!
test01EmptyPortfolioStructure
	
	self assert: (OrderedCollection with: 'Portfolio vacÔøΩo') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio vacÔøΩo')) summarize.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:12:39'!
ERROR!

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 15:13:33'!
Report subclass: #AccountStructure
	instanceVariableNames: 'structure'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 15:13:31' overrides: 50880268!
initializeFor: anAccount

	structure := OrderedCollection new.
	account := anAccount.! !
!AccountStructure methodsFor: 'summaries' stamp: 'JEA 11/16/2020 15:14:27' overrides: 50880290!
summarize

	structure add: 'Portfolio vacio'.
	^structure! !
!AccountStructure methodsFor: 'summaries' stamp: 'JEA 11/16/2020 15:14:37' prior: 50881352 overrides: 50880290!
summarize

	structure add: 'Portfolio vacÔøΩo'.
	^structure! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:14:39'!
PASSED!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 15:15:02'!
test02ReceptiveAccountStructure
	
	self assert: (OrderedCollection with: 'Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (ReceptiveAccount named: 'Cuenta vacÔøΩa')) summarize.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:15:08'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:15:08'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:15:08'!
ERROR!
!Account class methodsFor: 'instance creation' stamp: 'JEA 11/16/2020 15:16:17'!
named: aString
	
	^self new initializeWithName: aString.! !

!methodRemoval: Portfolio class #named: stamp: 'JEA 11/16/2020 15:16:17'!
named: aString
	
	^self new initializeWithName: aString.!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:16:21'!
FAILURE!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:16:21'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:16:21'!
FAILURE!
!AccountStructure methodsFor: 'summaries' stamp: 'JEA 11/16/2020 15:17:25' prior: 50881358 overrides: 50880290!
summarize

	account logInReport: self.
	^structure! !
!Portfolio methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:18' prior: 50880565 overrides: 50880494!
logInReport: aReport

	aReport logPortfolio: self.
	^accounts do: [ :anAccount | anAccount logInReport: aReport ].! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:25' prior: 50880573 overrides: 50880494!
logInReport: aReport
	
	^transactions do: [ :aTransaction | aTransaction logInReport: aReport. ].
	! !
!Account methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:30' prior: 50880494!
logInReport: aReport

	self subclassResponsibility.! !
!AccountTransaction methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:41' prior: 50880509!
logInReport: aReport

	self subclassResponsibility.! !
!Deposit methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:46' prior: 50880499 overrides: 50881505!
logInReport: aReport.

	aReport logDeposit: self.! !
!Deposit methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:49' prior: 50881511 overrides: 50881505!
logInReport: aReport

	aReport logDeposit: self.! !
!Withdraw methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:56' prior: 50880504 overrides: 50881505!
logInReport: aReport.

	aReport logWithdraw: self.! !
!Withdraw methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:18:57' prior: 50881523 overrides: 50881505!
logInReport: aReport

	aReport logWithdraw: self.! !
!TransferDeposit methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:19:04' prior: 50880515 overrides: 50881505!
logInReport: aReport

	aReport logTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:19:14' prior: 50880521 overrides: 50881505!
logInReport: aReport

	aReport logTransferWithdraw: self.! !
!ReceptiveAccount methodsFor: 'reports - private' stamp: 'JEA 11/16/2020 15:19:33' prior: 50881493 overrides: 50881500!
logInReport: aReport
	
	aReport logReceptiveAccount: self.
	^transactions do: [ :aTransaction | aTransaction logInReport: aReport. ].
	! !
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:20:07'!
logPortfolio: aPortfolio

	self subclassResponsibility.! !
!Report methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:20:16'!
logReceptiveAccount: aReceptiveAccount

	self subclassResponsibility.! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:20:33' overrides: 50881558!
logReceptiveAccount: aReceptiveAccount! !
!AccountSummary methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:20:49' overrides: 50881554!
logPortfolio: aPortfolio! !
!NetTransfer methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:20:58' overrides: 50881558!
logReceptiveAccount: aReceptiveAccount! !
!NetTransfer methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:21:08' overrides: 50881554!
logPortfolio: aPortfolio! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:21:23' overrides: 50881558!
logReceptiveAccount: aReceptiveAccount! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:21:28' overrides: 50881554!
logPortfolio: aReceptiveAccount! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:21:31' prior: 50881586 overrides: 50881554!
logPortfolio: aPortfolio! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:21:38' overrides: 50880272!
logDeposit: aDeposit! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:21:46' overrides: 50880286!
logWithdraw: aWithdraw! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:22:00' overrides: 50880276!
logTransferDeposit: aTransferDeposit! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:22:07' overrides: 50880281!
logTransferWithdraw: aTransferWithdraw! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:22:33' prior: 50881581 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: 'Cuenta vacia'! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:22:57' prior: 50881613 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: 'Cuenta vacÔøΩa'! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:23:09' prior: 50881591 overrides: 50881554!
logPortfolio: aPortfolio

	structure add: 'Portfolio vacÔøΩo'! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:23:11'!
PASSED!

----SNAPSHOT----(16 November 2020 15:23:16) CuisUniversity-4384.image priorSource: 17588997!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 15:23:34'!
test03PortfolioWithReceptiveAccountStructure
	| account |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
		
	self assert: (OrderedCollection with: 'Portfolio test 3' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 3' with: account)) summarize.! !

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 15:25:54'!
Report subclass: #AccountStructure
	instanceVariableNames: 'structure depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:25:51'!
indentation

	| indent depthOfIndent |
	(depth size = 0) ifTrue: [depthOfIndent := 0] ifFalse: [depthOfIndent := depth size].
	indent := ''.
	[depthOfIndent  = 0] whileFalse: [indent := (indent, '    ').
							   depthOfIndent := depthOfIndent - 1.].
						
	^indent.! !

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 15:35:11'!
Report subclass: #AccountStructure
	instanceVariableNames: 'structure depth indentations'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 15:35:10' prior: 50881346 overrides: 50880268!
initializeFor: anAccount

	structure := OrderedCollection new.
	indentations := OrderedCollection new.
	account := anAccount.! !

Report subclass: #AccountStructure
	instanceVariableNames: 'structure indentations'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!

!classDefinition: #AccountStructure category: 'Portfolio2' stamp: 'JEA 11/16/2020 15:35:16'!
Report subclass: #AccountStructure
	instanceVariableNames: 'structure indentations'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio2'!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:35:28' prior: 50881684!
indentation

	| indent depthOfIndent |
	depthOfIndent := indentations size.
	indent := ''.
	[depthOfIndent  = 0] whileFalse: [indent := (indent, '    ').
							   depthOfIndent := depthOfIndent - 1.].
						
	^indent.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:35:33' prior: 50881725!
indentation

	| indent depthOfIndent |
	depthOfIndent := indentations size.
	indent := ''.
	[depthOfIndent = 0] whileFalse: [indent := (indent, '    ').
							   depthOfIndent := depthOfIndent - 1.].
						
	^indent.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:35:38' prior: 50881736!
indentation
	| indent depthOfIndent |
	
	depthOfIndent := indentations size.
	indent := ''.
	
	[depthOfIndent = 0] whileFalse: [indent := (indent, '    ').
							   depthOfIndent := depthOfIndent - 1.].
						
	^indent.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:36:09' prior: 50881747!
indentation
	| indent depthOfIndent |
	
	depthOfIndent := indentations size.
	indent := ''.
	
	[depthOfIndent = 0] 
		whileFalse: [
			indent := (indent, '    ').
			depthOfIndent := depthOfIndent - 1.
		].
						
	^indent.! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:38:39' prior: 50881619 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: (self indentation, aReceptiveAccount name).
	(indentations size ~= 0) ifTrue: [ self decreaseLastAndRemoveIfZeroFrom: indentations]
					! !
!Account methodsFor: 'testing' stamp: 'JEA 11/16/2020 15:38:59' overrides: 16882612!
name

	^name.! !
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 15:42:33' prior: 50881705 overrides: 50880268!
initializeFor: anAccount

	structure := OrderedCollection new.
	indentations := OrderedCollection with: ''.
	account := anAccount.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:43:00'!
indentationForIndex: anIndex
	
	^indentations at: anIndex.! !

(OrderedCollection with: 3) at: 0!

(OrderedCollection with: 3) at: 1!

(OrderedCollection with: 3) size!

!methodRemoval: AccountStructure #indentation stamp: 'JEA 11/16/2020 15:44:46'!
indentation
	| indent depthOfIndent |
	
	depthOfIndent := indentations size.
	indent := ''.
	
	[depthOfIndent = 0] 
		whileFalse: [
			indent := (indent, '    ').
			depthOfIndent := depthOfIndent - 1.
		].
						
	^indent.!
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:45:28' prior: 50881769 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	indentations add: ''.
	structure add: (self indentationForIndex: indentations size, aReceptiveAccount name).
					! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:46:30' prior: 50881809 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: (self indentationForIndex: indentations size, aReceptiveAccount name).
					! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:46:42' prior: 50881818 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: (self indentationForIndex: indentations size, aReceptiveAccount name).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:47:22' prior: 50881625 overrides: 50881554!
logPortfolio: aPortfolio

	structure add: (self indentationForIndex: structure size + 1, aPortfolio name).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:47:29' prior: 50881826 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: (self indentationForIndex: structure size + 1, aReceptiveAccount name).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:47:44' prior: 50881841 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	structure add: (self indentationForIndex: structure size + 1, aReceptiveAccount name).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:48:18' prior: 50881834 overrides: 50881554!
logPortfolio: aPortfolio

	"(aPortfolio accountsSize ~= 0) ifTrue: [depth add: aPortfolio accountsSize]."
	
	structure add: (self indentationForIndex: structure size + 1, aPortfolio name).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:49:00' prior: 50881857 overrides: 50881554!
logPortfolio: aPortfolio

	"(aPortfolio accountsSize ~= 0) ifTrue: [depth add: aPortfolio accountsSize]."
	
	structure add: (self indentationForIndex: structure size + 1, aPortfolio name).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:50:19' prior: 50881867 overrides: 50881554!
logPortfolio: aPortfolio
	
	self addIndented: aPortfolio name to: structure.
	
	structure add: (self indentationForIndex: structure size + 1, aPortfolio name).! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:51:04'!
addIndented: aString to: aCollection

	aCollection add: (self indentationForIndex: aCollection size + 1, aString).! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:51:25' prior: 50881877 overrides: 50881554!
logPortfolio: aPortfolio
	
	self addIndented: aPortfolio name to: structure.! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:51:37' prior: 50881849 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	self addIndented: aReceptiveAccount name to: structure.! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 15:51:54' prior: 50881893 overrides: 50881554!
logPortfolio: aPortfolio
	
	self addIndentsForPortfolio: aPortfolio.
	
	self addIndented: aPortfolio name to: structure.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:52:09'!
addIndentsForPortfolio: aPortfolio

	! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:52:24' prior: 50881913!
addIndentsForPortfolio: aPortfolio! !
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 15:52:55' prior: 50881783 overrides: 50880268!
initializeFor: anAccount

	structure := OrderedCollection new.
	indentations := OrderedCollection new.
	account := anAccount.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:54:04' prior: 50881918!
addIndentsForPortfolio: aPortfolio

	indentations add: ''.
	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: '    '. 
			].! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:54:20' prior: 50881931!
addIndentsForPortfolio: aPortfolio

	indentations add: self currentIndent.
	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: '    '. 
			].! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:54:27' prior: 50881939!
addIndentsForPortfolio: aPortfolio

	indentations add: self currentIndent.
	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: self nextIndent. 
			].! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:54:55'!
currentIndent

	^indentations last.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:55:05'!
nextIndent

	^indentations last + '    '.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:55:43' prior: 50881948!
addIndentsForPortfolio: aPortfolio
	| nextIndent |

	indentations add: self currentIndent.


	nextIndent := self nextIndent.	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: nextIndent. 
			].! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:55:55' prior: 50881966!
addIndentsForPortfolio: aPortfolio
	| nextIndent |

	indentations add: self currentIndent.


	nextIndent := self nextIndent.	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: nextIndent. 
		].! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:56:09'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:56:09'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:56:09'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:56:09'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:56:15'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:57:04'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:57:04'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:57:04'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:57:04'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:57:07'!
ERROR!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:58:20' prior: 50881957!
currentIndent

	^indentations isEmpty
		ifTrue: [ '' ]
		ifFalse: [ indentations last ].! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:58:23'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:58:23'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:58:23'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:58:23'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:58:25'!
ERROR!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:58:47' prior: 50881961!
nextIndent

	^indentations last, '    '.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:58:55'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:58:55'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:58:55'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:58:55'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:58:56'!
ERROR!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 15:59:24' prior: 50881885!
addIndented: aString to: aCollection

	aCollection add: (self indentationForIndex: aCollection size + 1), aString.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:59:26'!
ERROR!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 15:59:26'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 15:59:26'!
ERROR!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:00:53' prior: 50881976!
addIndentsForPortfolio: aPortfolio
	| nextIndent |

	indentations add: self currentIndent.

	nextIndent := self nextIndent.	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: nextIndent. 
		].! !
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 16:01:59' prior: 50881899 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount
	
	self addIndentsForReceptiveAccount: aReceptiveAccount.

	self addIndented: aReceptiveAccount name to: structure.! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:02:46'!
addIndentsForReceptiveAccount: aReceptiveAccount
	| nextIndent |

	indentations add: self currentIndent.

	nextIndent := self nextIndent.	
	aReceptiveAccount accountsSize 
		timesRepeat: [ 
			indentations add: nextIndent. 
		].! !
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:04:24' prior: 50881790!
indentationForIndex: anIndex

	anIndex > indentations size ifTrue: [ indentations add: self currentIndent. ].
	
	^indentations at: anIndex.! !

!methodRemoval: AccountStructure #addIndentsForReceptiveAccount: stamp: 'JEA 11/16/2020 16:04:28'!
addIndentsForReceptiveAccount: aReceptiveAccount
	| nextIndent |

	indentations add: self currentIndent.

	nextIndent := self nextIndent.	
	aReceptiveAccount accountsSize 
		timesRepeat: [ 
			indentations add: nextIndent. 
		].!
!AccountStructure methodsFor: 'logs' stamp: 'JEA 11/16/2020 16:04:33' prior: 50882204 overrides: 50881558!
logReceptiveAccount: aReceptiveAccount

	self addIndented: aReceptiveAccount name to: structure.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:04:34'!
PASSED!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 16:04:56'!
test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'Portfolio vacÔøΩo'.
		
	self assert: (OrderedCollection with: 'Portfolio test 4' with: '    Portfolio vacÔøΩo' with: '    Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 4' with: portfolio with: account)) summarize.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:04:59'!
PASSED!
!ReportTest methodsFor: 'tests - account structure' stamp: 'JEA 11/16/2020 16:05:07'!
test05PortfolioWithPortfolioWithAccounts
	| account portfolio |
	account := ReceptiveAccount named: 'Cuenta vacÔøΩa'.
	portfolio := Portfolio named: 'SubPortfolio' with: account.
		
	self assert: (OrderedCollection with: 'Portfolio test 5' with: '    SubPortfolio' with: '        Cuenta vacÔøΩa') 
	      equals: (AccountStructure for: (Portfolio named: 'Portfolio test 5' with: portfolio)) summarize.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:05:09'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:05:09'!
FAILURE!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:05:09'!
FAILURE!

expected!

actual!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:08:08' prior: 50882194!
addIndentsForPortfolio: aPortfolio
	| nextIndent |

	nextIndent := self nextIndent.	
	aPortfolio accountsSize 
		timesRepeat: [ 
			indentations add: nextIndent. 
		].! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:08:18'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:08:18'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:08:18'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:08:18'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:08:18'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:08:22'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:09:06'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:09:06'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:09:06'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:09:06'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:09:06'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:09:08'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:09:23'!
ERROR!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:09:23'!
ERROR!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:09:23'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:09:23'!
ERROR!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:09:23'!
ERROR!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:09:24'!
ERROR!
!AccountStructure methodsFor: 'initialization' stamp: 'JEA 11/16/2020 16:10:25' prior: 50881923 overrides: 50880268!
initializeFor: anAccount

	structure := OrderedCollection new.
	indentations := OrderedCollection with: ''.
	account := anAccount.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:10:27'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:10:28'!
PASSED!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:10:45' prior: 50882062!
currentIndent

	^indentations isEmpty
		ifFalse: [ indentations last ].! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:10:46'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:47'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:10:47'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:47'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:10:47'!
PASSED!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:10:56' prior: 50882637!
currentIndent

	^indentations last.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:10:58'!
PASSED!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:11:31' prior: 50882223!
indentationForIndex: anIndex

	"anIndex > indentations size ifTrue: [ indentations add: self currentIndent. ]."
	
	^indentations at: anIndex.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:11:32'!
PASSED!
!AccountStructure methodsFor: 'indentation - private' stamp: 'JEA 11/16/2020 16:11:36' prior: 50882732!
indentationForIndex: anIndex
	
	^indentations at: anIndex.! !

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:11:37'!
PASSED!

!testRun: #ReportTest #test01EmptyPortfolioStructure stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test01NetTransferOfEmptyAccountIsZero stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test01NewAccountShouldOnlySummarizeBalanceZero stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test02AccountSummarizesDepositsAndUpdatedBalance stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test02NetTransferOfAccountsTakesTransfersOnly stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test02ReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test03AccountSummarizesWithdrawsAndTransfersAndUpdatedBalance stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test03NetTransferOfPortfolioTakesAllAccountTransfers stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test03PortfolioWithReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test04PortfolioSummarizesAllItsAccountsAndPortfolios stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test04PortfolioWithEmptyPortfolioAndReceptiveAccountStructure stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

!testRun: #ReportTest #test05PortfolioWithPortfolioWithAccounts stamp: 'JEA 11/16/2020 16:11:41'!
PASSED!

----SNAPSHOT----(16 November 2020 16:12:35) CuisUniversity-4384.image priorSource: 17600330!

----SNAPSHOT----(16 November 2020 16:15:06) CuisUniversity-4384.image priorSource: 17639049!

----SNAPSHOT----(16 November 2020 16:15:13) CuisUniversity-4384.image priorSource: 17639143!