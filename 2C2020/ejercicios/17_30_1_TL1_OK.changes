----STARTUP---- (18 November 2020 22:56:31) as /home/belu/Documents/ING_SOFT/linux64/CuisUniversity-4383.image!


TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 00:22:37'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 00:38:53'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'no messages' stamp: 'BT 11/19/2020 00:39:27'!
test01CreateCartWithClientIDAndCartIDWorksCorrectly
	| aCart aClientID aCartID |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	
	self assert: aCart belongsTo: aClientID.
	self assert: (aCart idIs: aCartID).
	 ! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:39:39'!
ERROR!
!Cart class methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:39:52'!
withID: aSmallInteger ofClient: aSmallInteger2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithID: aSmallInteger ofClient: aSmallInteger2 ! !
!Cart class methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:42:28' prior: 50869434!
withID: cartID ofClient: clientIdOfCart 
	^self new initializeWithID: cartID ofClient: clientIdOfCart ! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:42:35'!
ERROR!

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 00:42:55'!
Object subclass: #Cart
	instanceVariableNames: 'cartID_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 00:42:55'!
Object subclass: #Cart
	instanceVariableNames: 'cartID_CHANGE_ME clientIdOfCart_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:42:55'!
initializeWithID: cartID ofClient: clientIdOfCart 
	self shouldBeImplemented.
	cartID_CHANGE_ME := cartID.
	clientIdOfCart_CHANGE_ME := clientIdOfCart.! !

TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 00:45:44'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #Cart
	instanceVariableNames: 'acartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 00:46:29'!
Object subclass: #Cart
	instanceVariableNames: 'acartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart class methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:48:05' prior: 50869444!
withID: cartID ofClient: clientIdOfCart 
	^ self new initializeWithID: cartID ofClient: clientIdOfCart ! !
!Cart class methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:48:38' prior: 50869507!
withID: aCartID ofClient: anOwnerClientID 
	^ self new initializeWithID: aCartID ofClient: anOwnerClientID.! !

Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #Cart
	instanceVariableNames: 'acartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 00:48:46'!
Object subclass: #Cart
	instanceVariableNames: 'acartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:49:43' prior: 50869468!
initializeWithID: aCartID ofClient: anOwnerClientID 
	acartID := aCartID.
	ownerClientID := anOwnerClientID .! !

Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 00:49:50'!
Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:49:54' prior: 50869536!
initializeWithID: aCartID ofClient: anOwnerClientID 
	cartID := aCartID.
	ownerClientID := anOwnerClientID .! !
!Cart methodsFor: 'instance creation' stamp: 'BT 11/19/2020 00:50:39'!
idIs: aCartID
	^ cartID = aCartID.! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:50:44'!
ERROR!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:50:44'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 00:51:00' prior: 50869420!
test01CreateCartWithClientIDAndCartIDWorksCorrectly
	| aCart aClientID aCartID |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	
	self assert: (aCart belongsTo: aClientID).
	self assert: (aCart idIs: aCartID).
	 ! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:51:02'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 00:51:11'!
belongsTo: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 00:52:12' prior: 50869586!
belongsTo: aClientIDToBeCompared 
	^ ownerClientID = aClientIDToBeCompared! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:52:14'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 00:52:14'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 00:58:55'!
test02AddingA
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:00:24'!
test02AddingOneBookToCartWorksCorrectly
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 ! !

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:00:27'!
ERROR!

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:00:27'!
ERROR!
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:01:09'!
add: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:01:30' prior: 50869633!
add: anISBN 
	! !

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:01:33'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 01:01:57'!
hasBook: aSmallInteger times: aSmallInteger2 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 01:03:13'!
Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID map'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 01:03:11' prior: 50869643!
hasBook: anISBN times: quantity 
	map at: anISBN put: quantity.! !
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 01:04:07' prior: 50869655!
hasBook: anISBN times: quantity 
	^ (map at: anISBN) = quantity.! !

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:04:09'!
ERROR!

id := IdentityDictionary with: 1.!

id := IdentityDictionary new.
id add:1.!

id := IdentityDictionary new.!

id add:1.!

id add: 'hola' withOccurrences: 2. !

id := Dictionary new.!

id add: 'hola' withOccurrences: 2. !

id at: 'hola' put: 2.!
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:24:11' prior: 50869637!
add: anISBN 
	map at: anISBN ifPresent: [ map at: anISBN put: (map at: anISBN + 1) ] ifAbsent: [ map at: anISBN put: 1]. 
	! !

!methodRemoval: CartTest #test02AddingA stamp: 'BT 11/19/2020 01:24:21'!
test02AddingA
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 !

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:24:27'!
ERROR!

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:24:27'!
ERROR!
!Cart methodsFor: 'instance creation' stamp: 'BT 11/19/2020 01:25:06' prior: 50869554!
initializeWithID: aCartID ofClient: anOwnerClientID 
	cartID := aCartID.
	ownerClientID := anOwnerClientID.
	map := Dictionary new.! !

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:25:23'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:27:29'!
test03AddingManyBooksToCartWorksCorrectly
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 ! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:29:00'!
add: anISBN times: quantity
	map at: anISBN ifPresent: [ map at: anISBN put: (map at: anISBN + quantity) ] ifAbsent: [ map at: anISBN put: 1]. 
	! !

!methodRemoval: Cart #add: stamp: 'BT 11/19/2020 01:29:07'!
add: anISBN 
	map at: anISBN ifPresent: [ map at: anISBN put: (map at: anISBN + 1) ] ifAbsent: [ map at: anISBN put: 1]. 
	!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:29:31' prior: 50869615!
test02AddingOneBookToCartWorksCorrectly
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 ! !

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:29:34'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:32:06'!
test03AddingManyBooksOneTimeToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	aCart add: anotherISBN times: 1.	
	aCart add: anISBN times: 1.
	
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:32:33' prior: 50869752!
test03AddingManyBooksOneTimeToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	aCart add: anotherISBN times: 1.	
	aCart add: anISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart hasBook: anotherISBN times: 1).
	 ! !

!methodRemoval: CartTest #test03AddingManyBooksToCartWorksCorrectly stamp: 'BT 11/19/2020 01:32:40'!
test03AddingManyBooksToCartWorksCorrectly
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 !

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 01:32:43'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 01:32:43'!
PASSED!

!testRun: #CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:32:43'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 01:32:43'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:34:07'!
test04AddingOneBookMultipleTimesToCartWorksCorrectly
	| aCart aClientID aCartID anISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN times: 4.	
	aCart add: anISBN times: 2.	
	
	self assert: (aCart hasBook: anISBN times: 6).
	! !

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:34:16'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:34:16'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:34:28'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:34:28'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:34:46'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:35:09'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:35:22'!
ERROR!
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:36:09' prior: 50869722!
add: anISBN times: quantity
	map at: anISBN ifPresent: [ map at: anISBN put: (map at: anISBN + quantity) ] ifAbsent: [ map at: anISBN put: quantity]. 
	! !

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:36:11'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:36:23'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:36:23'!
ERROR!
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:37:55' prior: 50869846!
add: anISBN times: quantity
	map at: anISBN ifPresent: [ map at: anISBN put: ((map at: anISBN) + quantity) ] ifAbsent: [ map at: anISBN put: quantity]. 
	! !

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:38:02'!
ERROR!

map at: anISBN!

(map at: anISBN) + quantity!

map at: anISBN put: ((map at: anISBN) + quantity)!

map at: anISBN put: ((map at: anISBN) + quantity)!

map at: anISBN put: ((map at: anISBN) + quantity)!

map at: anISBN put: ((map at: anISBN) + quantity)!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:40:49'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:40:49'!
ERROR!
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:46:12' prior: 50869865!
add: anISBN times: bookQuantityToAdd
	map at: anISBN ifPresent: [ :previousQuantity | map at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ map at: anISBN put: bookQuantityToAdd]. 
	! !

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:46:17'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:46:40'!
test02AddingOneBookOneTimeToCartWorksCorrectly
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 ! !

!methodRemoval: CartTest #test02AddingOneBookToCartWorksCorrectly stamp: 'BT 11/19/2020 01:46:44'!
test02AddingOneBookToCartWorksCorrectly
	| aCart aClientID aCartID anISBN|
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart idIs: aCartID).
	 !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:47:59'!
test03AddingManyBooksManyTimesToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	
	aCart add: anISBN times: 1.
	aCart add: anotherISBN times: 3.	
	aCart add: anotherISBN times: 4.
	aCart add: anISBN times: 5.
	
	self assert: (aCart hasBook: anISBN times: 6).
	self assert: (aCart hasBook: anotherISBN times: 12).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:48:24'!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	
	aCart add: anISBN times: 1.
	aCart add: anotherISBN times: 3.	
	aCart add: anotherISBN times: 4.
	aCart add: anISBN times: 5.
	
	self assert: (aCart hasBook: anISBN times: 6).
	self assert: (aCart hasBook: anotherISBN times: 12).
	 ! !

!methodRemoval: CartTest #test03AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:49:24'!
test03AddingManyBooksManyTimesToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	
	aCart add: anISBN times: 1.
	aCart add: anotherISBN times: 3.	
	aCart add: anotherISBN times: 4.
	aCart add: anISBN times: 5.
	
	self assert: (aCart hasBook: anISBN times: 6).
	self assert: (aCart hasBook: anotherISBN times: 12).
	 !

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:49:30'!
FAILURE!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:49:30'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:49:51' prior: 50869947!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	
	aCart add: anISBN times: 1.
	aCart add: anotherISBN times: 3.	
	aCart add: anotherISBN times: 4.
	aCart add: anISBN times: 5.
	
	self assert: (aCart hasBook: anISBN times: 6).
	self assert: (aCart hasBook: anotherISBN times: 7).
	 ! !

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:49:54'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 01:50:01'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 01:50:01'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 01:50:01'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:50:01'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 01:50:01'!
PASSED!

id p!

id !

id associations !

id at: 'pepe' put: 1.!

id associations!

id associations !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:55:12' prior: 50869892!
add: anISBN times: bookQuantityToAdd
	map at: ('ISBN #', (anISBN asString)) ifPresent: [ :previousQuantity | map at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ map at: anISBN put: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:56:29'!
getBookKeyFor: anISBN

	^ 'ISBN #', (anISBN asString)! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:56:29' prior: 50870031!
add: anISBN times: bookQuantityToAdd
	map at: ((self getBookKeyFor: anISBN)) ifPresent: [ :previousQuantity | map at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ map at: anISBN put: bookQuantityToAdd]. 
	! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'BT 11/19/2020 01:57:53'!
Object subclass: #Cart
	instanceVariableNames: 'cartID ownerClientID booksInCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:57:53' prior: 50870046!
add: anISBN times: bookQuantityToAdd
	booksInCart at: ((self getBookKeyFor: anISBN)) ifPresent: [ :previousQuantity | booksInCart at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ booksInCart at: anISBN put: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:57:53' prior: 50869700!
initializeWithID: aCartID ofClient: anOwnerClientID 
	cartID := aCartID.
	ownerClientID := anOwnerClientID.
	booksInCart := Dictionary new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 01:57:53' prior: 50869660!
hasBook: anISBN times: quantity 
	^ (booksInCart at: anISBN) = quantity.! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 01:59:21' prior: 50870064!
add: anISBN times: bookQuantityToAdd
	booksInCart at: (self getBookKeyFor: anISBN) ifPresent: [ :previousQuantity | booksInCart at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ booksInCart at: anISBN put: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:00:32'!
addNewBook: anISBN times: bookQuantityToAdd

	^ booksInCart at: anISBN put: bookQuantityToAdd! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:00:32' prior: 50870088!
add: anISBN times: bookQuantityToAdd
	booksInCart at: (self getBookKeyFor: anISBN) ifPresent: [ :previousQuantity | booksInCart at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ self addNewBook: anISBN times: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:01:53' prior: 50870104!
add: anISBN times: bookQuantityToAdd
	booksInCart at: (self getBookKeyFor: anISBN) ifPresent: [ :previousQuantity | booksInCart at: anISBN put: (previousQuantity + bookQuantityToAdd) ] ifAbsent: [ self addNewBook: anISBN times: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:06:22' prior: 50870115!
add: anISBN times: bookQuantityToAdd
	booksInCart at: (self getBookKeyFor: anISBN) ifPresent: [ :previousQuantity | self updateBookQuantity: (previousQuantity + bookQuantityToAdd) To: anISBN] ifAbsent: [ self addNewBook: anISBN times: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:08:35'!
updateBookQuantity: newBookQuantity To: anISBN
	booksInCart at: (self getBookKeyFor: anISBN) put: newBookQuantity! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:09:12' prior: 50870098!
addNewBook: anISBN times: bookQuantityToAdd

	^ booksInCart at: (self getBookKeyFor: anISBN) put: bookQuantityToAdd! !
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 02:10:09'!
listBooks 
	^ booksInCart associations.! !

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:10:14'!
ERROR!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:10:14'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:10:24'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:10:24'!
ERROR!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:10:34'!
ERROR!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:10:34'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'BT 11/19/2020 02:11:09' prior: 50870083!
hasBook: anISBN times: quantity 
	^ (booksInCart at: (self getBookKeyFor: anISBN)) = quantity.! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:11:12'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:11:12'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:11:12'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:11:12'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:11:12'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:12:24'!
test06AddingNegativeQuantityOfBooksRaisesError
	| aCart aClientID aCartID anISBN  |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	aCart add: anISBN times: -1.
	self assert: (aCart hasBook: anISBN times: 6).
	! !

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:12:26'!
FAILURE!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:13:32' prior: 50870198!
test06AddingNegativeQuantityOfBooksRaisesError
	| aCart aClientID aCartID anISBN  |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	
	
	self should: [aCart add: anISBN times: -1.] 
	raise: Error
	withMessageText: ( Cart cantAddNegativeQuantityOfBooks).
	! !

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:13:37'!
ERROR!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:13:37'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:14:04'!
cantAddNegativeQuantityOfBooks
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:14:37' prior: 50870233!
cantAddNegativeQuantityOfBooks
	^ 'Cant add negative quantity of books!!!!'! !

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:14:39'!
FAILURE!
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:15:48' prior: 50870126!
add: anISBN times: bookQuantityToAdd
	self verifyValidQuantityOfBook: bookQuantityToAdd.
	booksInCart at: (self getBookKeyFor: anISBN) ifPresent: [ :previousQuantity | self updateBookQuantity: (previousQuantity + bookQuantityToAdd) To: anISBN] ifAbsent: [ self addNewBook: anISBN times: bookQuantityToAdd]. 
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:17:42'!
verifyValidQuantityOfBook: bookQuantityToAdd.
	(bookQuantityToAdd <= 0) ifTrue: [ self signalInvalidQuantityOfBooks].! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:18:27'!
signalInvalidQuantityOfBooks
	^ self error: (self class cantAddNegativeQuantityOfBooks).! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:21:59' prior: 50870247!
add: anISBN times: bookQuantityToAdd
	self verifyValidQuantityOfBook: bookQuantityToAdd.
	self checkIfPresentAndAdd: bookQuantityToAdd.
	
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:22:25' prior: 50870271!
add: anISBN times: bookQuantityToAdd
	self verifyValidQuantityOfBook: bookQuantityToAdd.
	self checkIfPresent: anISBN andAdd: bookQuantityToAdd.
	
	! !
!Cart methodsFor: 'actions' stamp: 'BT 11/19/2020 02:22:57'!
checkIfPresent: anISBN andAdd: bookQuantityToAdd.
	booksInCart at: (self getBookKeyFor: anISBN) ifPresent: [ :previousQuantity | self updateBookQuantity: (previousQuantity + bookQuantityToAdd) To: anISBN] ifAbsent: [ self addNewBook: anISBN times: bookQuantityToAdd]. 
	
	
	! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:24:51' prior: 50869990!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	| aCart aClientID aCartID anISBN anotherISBN |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	anISBN := 123.
	anotherISBN := 127.
	
	aCart add: anISBN times: 1.
	aCart add: anotherISBN times: 3.	
	aCart add: anotherISBN times: 4.
	aCart add: anISBN times: 5.
	
	self assert: (aCart hasBook: anISBN times: 6).
	self assert: (aCart hasBook: anotherISBN times: 7).
	 ! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:26:47'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aaCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:26:49'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aaCart aanISBN'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:26:51'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aaCart aanISBN aanotherISBN'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:26:43' overrides: 16927572!
setUp

	| aCartID aClientID |
	aClientID := 12.
	aCartID := 13.
	aaCart := Cart withID: aCartID ofClient: 	aClientID.
	aanISBN := 123.
	aanotherISBN := 127.! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:27:30' prior: 50869572!
test01CreateCartWithClientIDAndCartIDWorksCorrectly
	| aCart aClientID aCartID |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	
	self assert: (aCart belongsTo: aClientID).
	self assert: (aCart idIs: aCartID).
	 ! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:27:52'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aaCart aanISBN aanotherISBN aaClientID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:27:54'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aaCart aanISBN aanotherISBN aaClientID aaCartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:28:17' prior: 50870336 overrides: 16927572!
setUp
	
	aaClientID := 12.
	aaCartID := 13.
	aaCart := Cart withID: aaCartID ofClient: aaClientID .
	aanISBN := 123.
	aanotherISBN := 127.! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:30:40' prior: 50870344!
test01CreateCartWithClientIDAndCartIDWorksCorrectly
	| aCart aClientID aCartID |
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: 	aClientID.
	
	self assert: (aCart belongsTo: aClientID).
	self assert: (aCart idIs: aCartID).
	 ! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:33:33' prior: 50870371 overrides: 16927572!
setUp
	
	aaClientID := 12.
	aaCartID := 13.
	aaCart := Cart withID: aaCartID ofClient: aaClientID .
	aanISBN := 123.
	aanotherISBN := 127.! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:36:10' prior: 50870378!
test01CreateCartWithClientIDAndCartIDWorksCorrectly
	| JohnCartID clientJohnID JohnCart |
	clientJohnID := 12.
	JohnCartID := 13.
	JohnCart := Cart withID: clientJohnID ofClient: 	JohnCartID.
	
	self assert: (JohnCart belongsTo: clientJohnID).
	self assert: (JohnCart idIs: JohnCartID).
	 ! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:36:12'!
FAILURE!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:36:12'!
FAILURE!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:36:40' prior: 50870397!
test01CreateCartWithClientIDAndCartIDWorksCorrectly
	| JohnCartID clientJohnID JohnCart |
	clientJohnID := 12.
	JohnCartID := 13.
	JohnCart := Cart withID: JohnCartID ofClient: clientJohnID.
	
	self assert: (JohnCart belongsTo: clientJohnID).
	self assert: (JohnCart idIs: JohnCartID).
	 ! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:36:41'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:36:41'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:36:41'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:36:41'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:36:41'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:36:41'!
PASSED!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:36:41'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:38:48' prior: 50869905!
test02AddingOneBookOneTimeToCartWorksCorrectly	

	aaCart add: aanISBN times: 1.
	
	self assert: (aaCart hasBook: aanISBN times: 1).
	self assert: (aaCart idIs: aaCartID ).
	 ! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:39:21'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aaCart aanISBN aanotherISBN aaClientID aaCartID aanotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:39:19' prior: 50870390 overrides: 16927572!
setUp
	
	aaClientID := 12.
	aaCartID := 13.
	aaCart := Cart withID: aaCartID ofClient: aaClientID .
	aanISBN := 123.
	aanotherISBN := 127.
	
	aanotherCart := Cart withID: aaCartID ofClient: aaClientID .! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:40:43' prior: 50869767!
test03AddingManyBooksOneTimeToCartWorksCorrectly

	aaCart add: aanISBN times: 1.	
	aanotherCart add: aanotherISBN times: 1.
	
	self assert: (aaCart hasBook: aanISBN times: 1).
	self assert: (aanotherCart hasBook: aanotherCart times: 1).
	 ! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:41:38' prior: 50869808!
test04AddingOneBookMultipleTimesToCartWorksCorrectly

	aaCart add: aanISBN times: 1.
	aaCart add: aanISBN times: 5.
	
	self assert: (aaCart hasBook: aanISBN times: 6).

	 ! !
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:42:21' prior: 50870297!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	
	aaCart add: aanISBN times: 1.	
	aanotherCart add: aanotherISBN times: 1.
	
	aaCart add: aanISBN times: 4.	
	aanotherCart add: aanotherISBN times: 5.
	
	
	self assert: (aaCart hasBook: aanISBN times: 5).
	self assert: (aanotherCart hasBook: aanotherCart times: 6).
	 ! !

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:42:24'!
ERROR!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:42:24'!
ERROR!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:42:46'!
ERROR!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:42:46'!
ERROR!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:43:00' prior: 50870453!
test02AddingOneBookOneTimeToCartWorksCorrectly	

	aaCart add: aanISBN times: 1.
	
	self assert: (aaCart hasBook: aanISBN times: 1).
	! !

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:01'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:43:01'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:01'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:01'!
ERROR!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:01'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:01'!
ERROR!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:43:01'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:06'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:43:41' prior: 50870480!
test03AddingManyBooksOneTimeToCartWorksCorrectly

	aaCart add: aanISBN times: 1.	
	aaCart add: aanotherISBN times: 1.
	
	self assert: (aaCart hasBook: aanISBN times: 1).
	self assert: (aaCart hasBook: aanotherCart times: 1).
	 ! !

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:43:42'!
ERROR!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:44:15'!
ERROR!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:44:15'!
ERROR!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:45:06'!
PASSED!

(aaCart hasBook: aanISBN times: 1)!

 (aaCart hasBook: aanotherCart times: 1).!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:46:10' prior: 50870561!
test03AddingManyBooksOneTimeToCartWorksCorrectly

	aaCart add: aanISBN times: 1.	
	aaCart add: aanotherISBN times: 1.
	
	self assert: (aaCart hasBook: aanISBN times: 1).
	self assert: (aaCart hasBook: aanotherISBN times: 1).
	 ! !

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:46:13'!
FAILURE!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:46:27'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:46:55' prior: 50870499!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	
	aaCart add: aanISBN times: 1.	
	aanotherCart add: aanotherISBN times: 1.
	
	aaCart add: aanISBN times: 4.	
	aaCart add: aanotherISBN times: 5.
	
	
	self assert: (aaCart hasBook: aanISBN times: 5).
	self assert: (aaCart hasBook: aanotherISBN times: 6).
	 ! !

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:46:56'!
FAILURE!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:47:09' prior: 50870605!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	
	aaCart add: aanISBN times: 1.	
	aaCart add: aanotherISBN times: 1.
	
	aaCart add: aanISBN times: 4.	
	aaCart add: aanotherISBN times: 5.
	
	
	self assert: (aaCart hasBook: aanISBN times: 5).
	self assert: (aaCart hasBook: aanotherISBN times: 6).
	 ! !

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:47:10'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:47:10'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:47:10'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:47:10'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:47:10'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:47:10'!
PASSED!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:47:10'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'BT 11/19/2020 02:48:01' prior: 50870213!
test06AddingNegativeQuantityOfBooksRaisesError
	
	self should: [aaCart add: aanISBN times: -1.] 
	raise: Error
	withMessageText: ( Cart cantAddNegativeQuantityOfBooks).
	! !

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:48:02'!
PASSED!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:48:14'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aCart aanISBN aanotherISBN aaClientID aaCartID aanotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:14' prior: 50870471 overrides: 16927572!
setUp
	
	aaClientID := 12.
	aaCartID := 13.
	aCart := Cart withID: aaCartID ofClient: aaClientID .
	aanISBN := 123.
	aanotherISBN := 127.
	
	aanotherCart := Cart withID: aaCartID ofClient: aaClientID .! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:14' prior: 50870621!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	
	aCart add: aanISBN times: 1.	
	aCart add: aanotherISBN times: 1.
	
	aCart add: aanISBN times: 4.	
	aCart add: aanotherISBN times: 5.
	
	
	self assert: (aCart hasBook: aanISBN times: 5).
	self assert: (aCart hasBook: aanotherISBN times: 6).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:14' prior: 50870491!
test04AddingOneBookMultipleTimesToCartWorksCorrectly

	aCart add: aanISBN times: 1.
	aCart add: aanISBN times: 5.
	
	self assert: (aCart hasBook: aanISBN times: 6).

	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:14' prior: 50870588!
test03AddingManyBooksOneTimeToCartWorksCorrectly

	aCart add: aanISBN times: 1.	
	aCart add: aanotherISBN times: 1.
	
	self assert: (aCart hasBook: aanISBN times: 1).
	self assert: (aCart hasBook: aanotherISBN times: 1).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:14' prior: 50870658!
test06AddingNegativeQuantityOfBooksRaisesError
	
	self should: [aCart add: aanISBN times: -1.] 
	raise: Error
	withMessageText: ( Cart cantAddNegativeQuantityOfBooks).
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:14' prior: 50870526!
test02AddingOneBookOneTimeToCartWorksCorrectly	

	aCart add: aanISBN times: 1.
	
	self assert: (aCart hasBook: aanISBN times: 1).
	! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:48:32'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aCart anISBN aanotherISBN aaClientID aaCartID aanotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:32' prior: 50870679 overrides: 16927572!
setUp
	
	aaClientID := 12.
	aaCartID := 13.
	aCart := Cart withID: aaCartID ofClient: aaClientID .
	anISBN := 123.
	aanotherISBN := 127.
	
	aanotherCart := Cart withID: aaCartID ofClient: aaClientID .! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:32' prior: 50870689!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	
	aCart add: anISBN times: 1.	
	aCart add: aanotherISBN times: 1.
	
	aCart add: anISBN times: 4.	
	aCart add: aanotherISBN times: 5.
	
	
	self assert: (aCart hasBook: anISBN times: 5).
	self assert: (aCart hasBook: aanotherISBN times: 6).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:32' prior: 50870702!
test04AddingOneBookMultipleTimesToCartWorksCorrectly

	aCart add: anISBN times: 1.
	aCart add: anISBN times: 5.
	
	self assert: (aCart hasBook: anISBN times: 6).

	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:32' prior: 50870711!
test03AddingManyBooksOneTimeToCartWorksCorrectly

	aCart add: anISBN times: 1.	
	aCart add: aanotherISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart hasBook: aanotherISBN times: 1).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:32' prior: 50870721!
test06AddingNegativeQuantityOfBooksRaisesError
	
	self should: [aCart add: anISBN times: -1.] 
	raise: Error
	withMessageText: ( Cart cantAddNegativeQuantityOfBooks).
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:32' prior: 50870730!
test02AddingOneBookOneTimeToCartWorksCorrectly	

	aCart add: anISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:48:42'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aCart anISBN anotherISBN aaClientID aaCartID aanotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:42' prior: 50870747 overrides: 16927572!
setUp
	
	aaClientID := 12.
	aaCartID := 13.
	aCart := Cart withID: aaCartID ofClient: aaClientID .
	anISBN := 123.
	anotherISBN := 127.
	
	aanotherCart := Cart withID: aaCartID ofClient: aaClientID .! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:42' prior: 50870779!
test03AddingManyBooksOneTimeToCartWorksCorrectly

	aCart add: anISBN times: 1.	
	aCart add: anotherISBN times: 1.
	
	self assert: (aCart hasBook: anISBN times: 1).
	self assert: (aCart hasBook: anotherISBN times: 1).
	 ! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:42' prior: 50870757!
test05AddingManyBooksManyTimesToCartWorksCorrectly
	
	aCart add: anISBN times: 1.	
	aCart add: anotherISBN times: 1.
	
	aCart add: anISBN times: 4.	
	aCart add: anotherISBN times: 5.
	
	
	self assert: (aCart hasBook: anISBN times: 5).
	self assert: (aCart hasBook: anotherISBN times: 6).
	 ! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:48:49'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aCart anISBN anotherISBN aClientID aaCartID aanotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:49' prior: 50870815 overrides: 16927572!
setUp
	
	aClientID := 12.
	aaCartID := 13.
	aCart := Cart withID: aaCartID ofClient: aClientID .
	anISBN := 123.
	anotherISBN := 127.
	
	aanotherCart := Cart withID: aaCartID ofClient: aClientID .! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:48:54'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aCart anISBN anotherISBN aClientID aCartID aanotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:48:54' prior: 50870857 overrides: 16927572!
setUp
	
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: aClientID .
	anISBN := 123.
	anotherISBN := 127.
	
	aanotherCart := Cart withID: aCartID ofClient: aClientID .! !

!classDefinition: #CartTest category: 'TusLibros' stamp: 'BT 11/19/2020 02:49:02'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aCart anISBN anotherISBN aClientID aCartID anotherCart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'BT 11/19/2020 02:49:02' prior: 50870876 overrides: 16927572!
setUp
	
	aClientID := 12.
	aCartID := 13.
	aCart := Cart withID: aCartID ofClient: aClientID .
	anISBN := 123.
	anotherISBN := 127.
	
	anotherCart := Cart withID: aCartID ofClient: aClientID .! !

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:49:05'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:05'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:05'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:05'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:05'!
PASSED!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:49:05'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:49:09'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:09'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:09'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:09'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:09'!
PASSED!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:49:09'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:49:17'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:17'!
PASSED!

!testRun: #CartTest #test03AddingManyBooksOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:17'!
PASSED!

!testRun: #CartTest #test04AddingOneBookMultipleTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:17'!
PASSED!

!testRun: #CartTest #test05AddingManyBooksManyTimesToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:17'!
PASSED!

!testRun: #CartTest #test06AddingNegativeQuantityOfBooksRaisesError stamp: 'BT 11/19/2020 02:49:17'!
PASSED!

!testRun: #CartTest #test02AddingOneBookOneTimeToCartWorksCorrectly stamp: 'BT 11/19/2020 02:49:25'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:49:29'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:49:33'!
PASSED!

!testRun: #CartTest #test01CreateCartWithClientIDAndCartIDWorksCorrectly stamp: 'BT 11/19/2020 02:50:18'!
PASSED!