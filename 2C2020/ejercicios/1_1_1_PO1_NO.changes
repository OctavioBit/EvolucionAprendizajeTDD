
----STARTUP---- (3 November 2020 10:55:30) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagenportfolio1/CuisUniversity-4384.image!


----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/isw1-2c2020-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!

----STARTUP---- (4 November 2020 21:22:27) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagenportfolio1/CuisUniversity-4384.image!


----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/2020-2c/18-Portfolio1/Portfolio-Ejercicio.st----!

----STARTUP---- (6 November 2020 12:36:15) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagenportfolio1/CuisUniversity-4384.image!


----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/isw1-2c2020-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!

Object subclass: #PortfolioElement
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioElement category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 12:52:16'!
Object subclass: #PortfolioElement
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioElement subclass: #PortfolioNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioNode category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 12:52:40'!
PortfolioElement subclass: #PortfolioNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioElement subclass: #PortfolioLeaf
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioLeaf category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 12:52:43'!
PortfolioElement subclass: #PortfolioLeaf
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioElement category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 12:59:35'!
Object subclass: #PortfolioElement
	instanceVariableNames: 'children'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioElement methodsFor: 'nil' stamp: 'am 11/6/2020 12:59:28'!
add: aNode 
	
	self assertThatIsIndependentOf: aNode.
	
	aNode addParent: self.	
	children add: aNode.! !
!PortfolioNode methodsFor: 'as yet unclassified' stamp: 'am 11/6/2020 12:59:59' overrides: 50871571!
add: aNode 
	
	self assertThatIsIndependentOf: aNode.
	
	aNode addParent: self.	
	children add: aNode.! !
!PortfolioLeaf methodsFor: 'as yet unclassified' stamp: 'am 11/6/2020 12:59:59' overrides: 50871571!
add: aNode 
	
	self assertThatIsIndependentOf: aNode.
	
	aNode addParent: self.	
	children add: aNode.! !

!methodRemoval: PortfolioElement #add: stamp: 'am 11/6/2020 12:59:59'!
add: aNode 
	
	self assertThatIsIndependentOf: aNode.
	
	aNode addParent: self.	
	children add: aNode.!

!methodRemoval: PortfolioLeaf #add: stamp: 'am 11/6/2020 13:00:10'!
add: aNode 
	
	self assertThatIsIndependentOf: aNode.
	
	aNode addParent: self.	
	children add: aNode.!

!classDefinition: #PortfolioElement category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 13:00:26'!
Object subclass: #PortfolioElement
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioNode category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 13:00:26'!
PortfolioElement subclass: #PortfolioNode
	instanceVariableNames: 'children'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioLeaf category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 13:00:26'!
PortfolioElement subclass: #PortfolioLeaf
	instanceVariableNames: 'children'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioElement subclass: #PortfolioLeaf
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioLeaf category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 13:00:56'!
PortfolioElement subclass: #PortfolioLeaf
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'inserting' stamp: 'am 11/6/2020 13:01:22' prior: 50871344!
add: anAccountOrPortfolio 
	
	self node add: anAccountOrPortfolio node.! !

!classDefinition: #PortfolioElement category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 13:01:44'!
Object subclass: #PortfolioElement
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioElement methodsFor: 'nil' stamp: 'am 11/6/2020 13:01:43'!
addParent: aPortfolio 
	
	parents add: aPortfolio.! !

!methodRemoval: Portfolio #addParent: stamp: 'am 11/6/2020 13:01:54'!
addParent: aPortfolio 
	
	parents add: aPortfolio.!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'am 11/6/2020 13:02:15'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents node'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'balance' stamp: 'am 11/6/2020 13:02:13' prior: 50871328!
balance
	^ node balance! !

!classRemoval: #PortfolioNode stamp: 'am 11/6/2020 13:40:36'!
PortfolioElement subclass: #PortfolioNode
	instanceVariableNames: 'children'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioLeaf stamp: 'am 11/6/2020 13:40:37'!
PortfolioElement subclass: #PortfolioLeaf
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioElement stamp: 'am 11/6/2020 13:40:38'!
Object subclass: #PortfolioElement
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'inserting' stamp: 'NNH 11/4/2020 21:12:35' prior: 50871638!
add: anAccountOrPortfolio 
	
	self assertThatIsIndependentOf: anAccountOrPortfolio.
	
	anAccountOrPortfolio addParent: self.	
	accounts add: anAccountOrPortfolio.! !

!classRemoval: #ReceptiveAccount stamp: 'am 11/6/2020 15:59:01'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'am 11/6/2020 15:59:02'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents node'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'am 11/6/2020 15:59:03'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'am 11/6/2020 15:59:05'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'am 11/6/2020 15:59:06'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'am 11/6/2020 15:59:07'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'am 11/6/2020 15:59:08'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/isw1-2c2020-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!
!Portfolio methodsFor: 'assertions' stamp: 'am 11/6/2020 16:15:26' prior: 50872147!
assertThatIsIndependentOf: anAccountOrPortfolio

	self = anAccountOrPortfolio ifTrue: [self error: self class canNotAddPortfolioToItselfErrorDescription ].
	(anAccountOrPortfolio includes: self) ifTrue: [ self error: self class canNotAddPortfolioToItselfErrorDescription ].
	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !
!Portfolio methodsFor: 'assertions' stamp: 'am 11/6/2020 16:16:20' prior: 50872365!
assertThatIsIndependentOf: anAccountOrPortfolio

	self = anAccountOrPortfolio ifTrue: [self error: self class canNotAddPortfolioToItselfErrorDescription ].
	(anAccountOrPortfolio includes: self) ifTrue: [ self error: self class canNotAddAPortfolioThatIncludesThePortfolioItErrorDescription ].
	(self isInAPortfolioWith: anAccountOrPortfolio) ifTrue: [self error: self class canNotBelongToACommonPortfolioErrorDescription ].
	(self hasAccountsInCommonWith: anAccountOrPortfolio)	 ifTrue: [self error: self class canNotHaveAnAccountInCommonErrorDescription ].! !

----QUIT----(6 November 2020 16:18:25) CuisUniversity-4384.image priorSource: 17155564!

----STARTUP---- (6 November 2020 16:25:47) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagenportfolio1/CuisUniversity-4384.image!


----QUIT----(6 November 2020 17:39:10) CuisUniversity-4384.image priorSource: 17304144!

----STARTUP---- (6 November 2020 18:43:40) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagenportfolio1/CuisUniversity-4384.image!


!methodRemoval: PortfolioTest #test15 stamp: 'am 11/6/2020 20:36:12'!
test15
	
	| p1 p2 p3 p4 |
	
	p1 := Portfolio new.
	p2 := Portfolio new.
	p3 := Portfolio new.
	p4 := Portfolio new.

	p1 add: p3.
	p1 add: p4.
	p2 add: p3.

	self shouldnt: [p2 add: p4] raise: Error.
!

----QUIT----(6 November 2020 20:47:47) CuisUniversity-4384.image priorSource: 17304374!

----STARTUP---- (6 November 2020 20:54:40) as /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/imagenportfolio1/CuisUniversity-4384.image!


!classRemoval: #ReceptiveAccount stamp: 'am 11/6/2020 20:54:49'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'am 11/6/2020 20:54:51'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'am 11/6/2020 20:54:52'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'am 11/6/2020 20:54:53'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'am 11/6/2020 20:54:55'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'am 11/6/2020 20:54:56'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'am 11/6/2020 20:54:57'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/agustin/Escritorio/Uba/Materias/Compu/ISW1/isw1-2c2020-ejercicios/Portfolio-Ejercicio.st----!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:56:44' prior: 50872632!
test11PortfolioShouldNotAddAnOwnerPortfolio
	
	| aPortfolioWithEmptyPortfolio |
	aPortfolioWithEmptyPortfolio = self newPortfolioWith: {emptyPortfolio}.

	self should: [emptyPortfolio add: aPortfolioWithEmptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:56:55' prior: 50873448!
test11PortfolioShouldNotAddAnOwnerPortfolio
	
	| aPortfolioWithEmptyPortfolio |
	
	aPortfolioWithEmptyPortfolio = self newPortfolioWith: {emptyPortfolio}.

	self should: [emptyPortfolio add: aPortfolioWithEmptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 20:57:04'!
ERROR!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:57:33' prior: 50873462!
test11PortfolioShouldNotAddAnOwnerPortfolio
	
	| aPortfolioWithEmptyPortfolio |
	
	aPortfolioWithEmptyPortfolio := self newPortfolioWith: {emptyPortfolio}.

	self should: [emptyPortfolio add: aPortfolioWithEmptyPortfolio] 
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioThatIncludesThePortfolioErrorDescription.! !

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 20:57:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'am 11/6/2020 20:57:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'am 11/6/2020 20:57:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'am 11/6/2020 20:57:34'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'am 11/6/2020 20:57:35'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'am 11/6/2020 20:57:35'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:59:07' prior: 50872644!
test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio

	| aPortfolioOwninTwoPortfolios anEmptyPortfolio anotherEmptyPortfolio |

	anEmptyPortfolio := Portfolio new.
	anotherEmptyPortfolio := Portfolio new.
	
	aPortfolioOwninTwoPortfolios := self newPortfolioWith: {anEmptyPortfolio. anotherEmptyPortfolio }.

	self should: [anEmptyPortfolio add: anotherEmptyPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:59:23' prior: 50873558!
test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio

	| aPortfolioOwningTwoPortfolios anEmptyPortfolio anotherEmptyPortfolio |

	anEmptyPortfolio := Portfolio new.
	anotherEmptyPortfolio := Portfolio new.
	
	aPortfolioOwningTwoPortfolios := self newPortfolioWith: {anEmptyPortfolio. anotherEmptyPortfolio }.

	self should: [anEmptyPortfolio add: anotherEmptyPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:59:47' prior: 50873577!
test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio

	| aPortfolioOwningTwoPortfolios aPortfolio anotherEmptyPortfolio |

	aPortfolio := Portfolio new.
	anotherEmptyPortfolio := Portfolio new.
	
	aPortfolioOwningTwoPortfolios := self newPortfolioWith: {aPortfolio. anotherEmptyPortfolio }.

	self should: [aPortfolio add: anotherEmptyPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 20:59:55' prior: 50873597!
test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio

	| aPortfolioOwningTwoPortfolios aPortfolio anotherPortfolio |

	aPortfolio := Portfolio new.
	anotherPortfolio := Portfolio new.
	
	aPortfolioOwningTwoPortfolios := self newPortfolioWith: {aPortfolio. anotherPortfolio }.

	self should: [aPortfolio add: anotherPortfolio ]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'am 11/6/2020 20:59:59'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'am 11/6/2020 20:59:59'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 21:00:53' prior: 50872660!
test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct
	
	| anOwningPortfolio anotherOwningPortfolio |

	anOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	anotherOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.

	self should: [anOwningPortfolio add: anotherOwningPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'am 11/6/2020 21:01:01'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'am 11/6/2020 21:01:01'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 21:03:53' prior: 50872676!
test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio
		
	| aPortfolio aMasterPortfolio anOwningPortfolio |
	
	anOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	aPortfolio := Portfolio new.
	aMasterPortfolio := self newPortfolioWith: {anOwningPortfolio. aPortfolio} .

	self should: [aPortfolio add: emptyPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'am 11/6/2020 21:04:00'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'am 11/6/2020 21:04:00'!
PASSED!
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 21:04:48' prior: 50873783!
test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio
		
	| aPortfolioThatCanNotOwnEmptyPortfolio aMasterPortfolio anOwningPortfolio |
	
	anOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	aPortfolioThatCanNotOwnEmptyPortfolio := Portfolio new.
	aMasterPortfolio := self newPortfolioWith: {anOwningPortfolio. aPortfolioThatCanNotOwnEmptyPortfolio} .

	self should: [aPortfolioThatCanNotOwnEmptyPortfolio add: emptyPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyAreOwnedByACommonPortfolioErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 21:05:56' prior: 50872695!
test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly
		
	| aMasterPortfolio aPortfolioThatCanNotOwnEmptyPortfolio anOwningPortfolio |
	
	anOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	aPortfolioThatCanNotOwnEmptyPortfolio := Portfolio new.
	aMasterPortfolio := self newPortfolioWith: {anOwningPortfolio. aPortfolioThatCanNotOwnEmptyPortfolio} .

	self should: [aPortfolioThatCanNotOwnEmptyPortfolio add: emptyPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 21:06:20' prior: 50873891!
test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly
		
	| aMasterPortfolio aPortfolioThatCanNotOwnEmptyPortfolio anOwningPortfolio |
	
	anOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	aPortfolioThatCanNotOwnEmptyPortfolio := Portfolio new.
	aMasterPortfolio := self newPortfolioWith: {anOwningPortfolio.} .

	self should: [aPortfolioThatCanNotOwnEmptyPortfolio add: emptyPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !
!PortfolioTest methodsFor: 'testing dependencies' stamp: 'am 11/6/2020 21:07:23' prior: 50873913!
test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly
		
	| aMasterPortfolio anOwningPortfolio anotherOwningPortfolio |
	
	anOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	anotherOwningPortfolio := self newPortfolioWith: {emptyPortfolio}.
	aMasterPortfolio := self newPortfolioWith: {anOwningPortfolio.} .

	self should: [aMasterPortfolio add: anotherOwningPortfolio]
	raise: Error
	withMessageText: Portfolio canNotAddAPortfolioWhenTheyOwnACommonFinancialProductErrorDescription.! !

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfEmptyPortfolioIsZero stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneFinancialProductIsBalanceOfThatAccount stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioWithMoreThanOneFinancialProductIsSumOfBalances stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test04EmptyPortfolioHasRegisteredNoTransactions stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithOneFinancialProductRegistersATransactionOfThatAccount stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test06APortfolioWithMoreThanOneFinancialProductRegistersAllTransactions stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test07EmptyPortfolioHasNoTransactions stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioWithOneFinancialProductHasTheTransactionsOfThatAccount stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test09APortfolioWithMoreThanOneFinancialProductHasTheTransactionsOfItsAccounts stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldNotAddItself stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldNotAddAnOwnerPortfolio stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldNotAddFinancialProductIfTheyBothBelongToAnotherPortfolio stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldNotAddAnotherPortfolioWhenTheyBothOwnAFinancialProduct stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test14APortfolioShouldNotAddAnotherFinancialProductWhenTheyAreOwnedIndirectlyByAnotherPortfolio stamp: 'am 11/6/2020 21:07:28'!
PASSED!

!testRun: #PortfolioTest #test15APortfolioShouldNotAddAPortfolioWhenTheyBothOwnTheSameFinancialProductIndirectly stamp: 'am 11/6/2020 21:07:28'!
PASSED!

----QUIT----(6 November 2020 21:08:45) CuisUniversity-4384.image priorSource: 17304877!