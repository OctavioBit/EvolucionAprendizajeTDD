

----STARTUP---- (9 November 2020 19:18:10) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64\CuisUniversity-4384.image!


----End fileIn of C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64\Portfolio-Solucion.st----!

!classDefinition: #Transference category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 19:29:59'!
AccountTransaction subclass: #Transference
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTest methodsFor: 'transferece test' stamp: 'LH 11/9/2020 19:29:30'!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.! !
!PortfolioTest methodsFor: 'transferece test' stamp: 'LH 11/9/2020 19:32:31' prior: 50868495!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.! !

!testRun: #PortfolioTest #test16 stamp: 'LH 11/9/2020 19:33:29'!
ERROR!
!Transference class methodsFor: 'instance creation' stamp: 'LH 11/9/2020 19:34:09'!
from: aReceptiveAccount to: aReceptiveAccount2 of: aSmallInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFrom: aReceptiveAccount to: aReceptiveAccount2 of: aSmallInteger ! !
!Transference class methodsFor: 'instance creation' stamp: 'LH 11/9/2020 19:41:59' prior: 50868520!
from: aSenderAccount to: aRecipientAccount of: aValue
	
	Withdraw register: aValue on: aSenderAccount.
	Deposit register: aValue on: aRecipientAccount. 
	
	^self new initialize: aValue. ! !

!testRun: #PortfolioTest #test16 stamp: 'LH 11/9/2020 19:42:01'!
ERROR!

!classDefinition: #Transference category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 19:42:30'!
AccountTransaction subclass: #Transference
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transference methodsFor: 'initialization' stamp: 'LH 11/9/2020 19:42:30'!
initialize: aValue 
	self shouldBeImplemented.
	value := aValue.! !
!Transference methodsFor: 'initialization' stamp: 'LH 11/9/2020 19:42:39' prior: 50868550!
initialize: aValue 

	value := aValue.! !

!testRun: #PortfolioTest #test16 stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'LH 11/9/2020 19:42:45'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LH 11/9/2020 19:42:45'!
PASSED!
!PortfolioTest class methodsFor: 'transferece test' stamp: 'LH 11/9/2020 19:49:42'!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.! !

!methodRemoval: PortfolioTest #test16 stamp: 'LH 11/9/2020 19:49:42'!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.!
!PortfolioTest methodsFor: 'transferece test' stamp: 'LH 11/9/2020 19:49:49'!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.! !

!methodRemoval: PortfolioTest class #test16 stamp: 'LH 11/9/2020 19:49:50'!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 19:50:23'!
test08
	|aTransferece account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 19:50:40' prior: 50868671!
test08
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.
! !

!methodRemoval: PortfolioTest #test16 stamp: 'LH 11/9/2020 19:50:46'!
test16
	|aPortfolio aTransferece account1 account2|
	
	aPortfolio := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransferece := Transference from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 19:52:24'!
test09
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transference from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference).
	self assert: (account1 hasRegistered: aTransference).
! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 19:54:24'!
FAILURE!
!Transference class methodsFor: 'instance creation' stamp: 'LH 11/9/2020 20:00:40' prior: 50868531!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer|
	
	aTransfer := self new initializeFrom: aSenderAccount to: aRecipientAccount of: aValue. 
	aSenderAccount register: aTransfer.
	aRecipientAccount register: aTransfer.
	^aTransfer.! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:00:44'!
ERROR!

!classDefinition: #Transference category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 20:01:07'!
AccountTransaction subclass: #Transference
	instanceVariableNames: 'value senderAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transference category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 20:01:07'!
AccountTransaction subclass: #Transference
	instanceVariableNames: 'value senderAccount recipientAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transference methodsFor: 'initialization' stamp: 'LH 11/9/2020 20:01:07'!
initializeFrom: aSenderAccount to: aRecipientAccount of: aValue 
	self shouldBeImplemented.
	senderAccount := aSenderAccount.
	recipientAccount := aRecipientAccount.
	value := aValue.! !
!Transference methodsFor: 'initialization' stamp: 'LH 11/9/2020 20:01:13' prior: 50868752!
initializeFrom: aSenderAccount to: aRecipientAccount of: aValue 

	senderAccount := aSenderAccount.
	recipientAccount := aRecipientAccount.
	value := aValue.! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:01:16'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:01:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:01:16'!
ERROR!
!Transference methodsFor: 'balance' stamp: 'LH 11/9/2020 20:03:04'!
addToBalance: aBalance! !
!Transference methodsFor: 'balance' stamp: 'LH 11/9/2020 20:03:19' overrides: 50868388!
affectBalance: aBalance! !

!methodRemoval: Transference #addToBalance: stamp: 'LH 11/9/2020 20:03:19'!
addToBalance: aBalance!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:03:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:03:24'!
FAILURE!

thisContext sender!

thisContext sender class = ReceptiveAccount!

thisContext sender!

thisContext sender receiver!

thisContext sender receiver!

thisContext root sender receiver !
!Transference methodsFor: 'balance' stamp: 'LH 11/9/2020 20:10:36' prior: 50868809 overrides: 50868388!
affectBalance: aBalance

	thisContext sender receiver = senderAccount ifTrue: [^aBalance - value].
	thisContext sender receiver = recipientAccount ifTrue: [^aBalance + value].! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:10:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:10:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:10:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 20:10:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:10:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:10:49'!
PASSED!

!classRenamed: #Transference as: #Transfer stamp: 'LH 11/9/2020 20:11:10'!
Smalltalk renameClassNamed: #Transference as: #Transfer!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LH 11/9/2020 20:11:10' prior: 50868683!
test08
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LH 11/9/2020 20:11:10' prior: 50868706!
test09
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference).
	self assert: (account1 hasRegistered: aTransference).
! !

!methodRemoval: Transfer #initialize: stamp: 'LH 11/9/2020 20:24:17'!
initialize: aValue 

	value := aValue.!
!Transfer methodsFor: 'balance' stamp: 'LH 11/9/2020 20:27:56'!
affectBalance: aBalance for: anAccount

	anAccount = senderAccount ifTrue: [^aBalance - value].
	anAccount sender receiver = recipientAccount ifTrue: [^aBalance + value].! !
!Transfer methodsFor: 'balance' stamp: 'LH 11/9/2020 20:28:02' prior: 50868934!
affectBalance: aBalance for: anAccount

	anAccount = senderAccount ifTrue: [^aBalance - value].
	anAccount = recipientAccount ifTrue: [^aBalance + value].! !
!Transfer methodsFor: 'balance' stamp: 'LH 11/9/2020 20:28:25' prior: 50868856 overrides: 50868388!
affectBalance: aBalance

	self affectBalance: aBalance for: thisContext sender receiver.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:28:29'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:28:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:28:29'!
FAILURE!
!Transfer methodsFor: 'balance' stamp: 'LH 11/9/2020 20:28:47' prior: 50868951 overrides: 50868388!
affectBalance: aBalance

	^self affectBalance: aBalance for: thisContext sender receiver.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 20:28:48'!
PASSED!

Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount recipientAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 20:33:06'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount recipientAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #TransferComponents
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferComponents category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 20:56:20'!
AccountTransaction subclass: #TransferComponents
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferComponents subclass: #TransferDeposits
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposits category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 20:59:57'!
TransferComponents subclass: #TransferDeposits
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferComponents subclass: #TransferWithdraw
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:00:12'!
TransferComponents subclass: #TransferWithdraw
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferComponents subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferWithdraw category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:00:19'!
TransferComponents subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferComponents subclass: #TransferDeposits
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferDeposits category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:00:22'!
TransferComponents subclass: #TransferDeposits
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #TransferDeposits as: #TransferDeposit stamp: 'LH 11/9/2020 21:00:30'!
Smalltalk renameClassNamed: #TransferDeposits as: #TransferDeposit!

AccountTransaction subclass: #TransferComponents
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferComponents category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:00:38'!
AccountTransaction subclass: #TransferComponents
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferDeposit methodsFor: 'no messages' stamp: 'LH 11/9/2020 21:01:34' overrides: 50868388!
affectBalance: aBalance

	^aBalance + transfer value.! !
!TransferWithdraw methodsFor: 'no messages' stamp: 'LH 11/9/2020 21:02:08' overrides: 50868388!
affectBalance: aBalance

	^aBalance + transfer value.! !
!TransferComponents methodsFor: 'no messages' stamp: 'LH 11/9/2020 21:02:38'!
affectValue: aBalance

	self subclassResponsibility ! !
!TransferComponents methodsFor: 'balance' stamp: 'LH 11/9/2020 21:04:44' overrides: 50868388!
affectBalance: aBalance

	self subclassResponsibility ! !

!methodRemoval: TransferComponents #affectValue: stamp: 'LH 11/9/2020 21:04:45'!
affectValue: aBalance

	self subclassResponsibility !
!TransferComponents class methodsFor: 'no messages' stamp: 'LH 11/9/2020 21:07:39'!
for: aTransfer

	^self basicNew initialize: aTransfer.! !
!TransferDeposit methodsFor: 'initialization' stamp: 'LH 11/9/2020 21:08:15'!
initialize: aTransfer

	transfer := aTransfer .! !
!TransferWithdraw methodsFor: 'initialization' stamp: 'LH 11/9/2020 21:08:48'!
initialize: aTransfer

	transfer := aTransfer.! !
!TransferComponents methodsFor: 'initialization' stamp: 'LH 11/9/2020 21:09:13'!
initialization: aTransfer

	self subclassResponsibility .! !
!TransferComponents methodsFor: 'value' stamp: 'LH 11/9/2020 21:09:54' overrides: 50868384!
value

	self subclassResponsibility.! !
!TransferDeposit methodsFor: 'value' stamp: 'LH 11/9/2020 21:10:18' overrides: 50869169!
value

	^transfer value.! !
!TransferDeposit methodsFor: 'balance' stamp: 'LH 11/9/2020 21:10:25' prior: 50869125 overrides: 50869140!
affectBalance: aBalance

	^aBalance + self value.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'LH 11/9/2020 21:10:31' prior: 50869130 overrides: 50869140!
affectBalance: aBalance

	^aBalance + self value.! !
!TransferWithdraw methodsFor: 'value' stamp: 'LH 11/9/2020 21:10:42' overrides: 50869169!
value

	^transfer value.! !
!Transfer methodsFor: 'value' stamp: 'LH 11/9/2020 21:11:05' overrides: 16881508!
value

	^value.! !
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/9/2020 21:16:29' prior: 50868722!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aTransfer := Transfer new.
	aTransferDeposit := Deposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := Withdraw register: aTransfer on: aSenderAccount.
	^aTransfer .! !
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/9/2020 21:17:20' prior: 50869198!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aTransfer := Transfer new.
	aTransferDeposit := Deposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := Withdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:17:59'!
Object subclass: #Transfer
	instanceVariableNames: 'value senderAccount deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'LH 11/9/2020 21:17:59' prior: 50868761!
initializeFrom: aSenderAccount to: aRecipientAccount of: aValue 

	senderAccount := aSenderAccount.
	deposit := aRecipientAccount.
	value := aValue.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'LH 11/9/2020 21:17:59' prior: 50868942!
affectBalance: aBalance for: anAccount

	anAccount = senderAccount ifTrue: [^aBalance - value].
	anAccount = deposit ifTrue: [^aBalance + value].! !

!classDefinition: #Transfer category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:18:11'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdraw deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transfer methodsFor: 'as yet unclassified' stamp: 'LH 11/9/2020 21:18:11' prior: 50869233!
initializeFrom: aSenderAccount to: aRecipientAccount of: aValue 

	withdraw := aSenderAccount.
	deposit := aRecipientAccount.
	value := aValue.! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'LH 11/9/2020 21:18:11' prior: 50869241!
affectBalance: aBalance for: anAccount

	anAccount = withdraw ifTrue: [^aBalance - value].
	anAccount = deposit ifTrue: [^aBalance + value].! !
!Transfer methodsFor: 'accesing' stamp: 'LH 11/9/2020 21:18:36'!
withdraw

	^withdraw.! !
!Transfer methodsFor: 'accesing' stamp: 'LH 11/9/2020 21:19:10'!
deposit

	^deposit.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 21:19:25' prior: 50868919!
test09
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).
! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:19:26'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 21:19:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:19:26'!
ERROR!

account2!
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/9/2020 21:20:56' prior: 50869211!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:21:02'!
FAILURE!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 21:21:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:21:02'!
FAILURE!
!TransferWithdraw methodsFor: 'balance' stamp: 'LH 11/9/2020 21:21:22' prior: 50869185 overrides: 50869140!
affectBalance: aBalance

	^aBalance - self value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 21:21:25'!
PASSED!

!methodRemoval: Transfer #affectBalance: stamp: 'LH 11/9/2020 21:22:16'!
affectBalance: aBalance

	^self affectBalance: aBalance for: thisContext sender receiver.!

!methodRemoval: Transfer #affectBalance:for: stamp: 'LH 11/9/2020 21:22:18'!
affectBalance: aBalance for: anAccount

	anAccount = withdraw ifTrue: [^aBalance - value].
	anAccount = deposit ifTrue: [^aBalance + value].!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 21:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 21:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 21:22:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 21:22:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 21:22:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:22:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 21:22:32'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 21:25:05'!
test08ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.
! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'LH 11/9/2020 21:25:10'!
test08
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 21:26:05'!
test09ATransactionRegistersATransferDepositAndATransferWithdraw
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).
! !

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'LH 11/9/2020 21:26:05'!
test09
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 21:26:14'!
test09ATransferRegistersATransferDepositAndATransferWithdraw
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).
! !

!methodRemoval: ReceptiveAccountTest #test09ATransactionRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/9/2020 21:26:14'!
test09ATransactionRegistersATransferDepositAndATransferWithdraw
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 21:28:38'!
test10ATransferWithdrawAndDepositKnowTheirTransfer
	|aTransfer account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer from: account1 to: account2 of: 100.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.
! !

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:28:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:28:47'!
ERROR!
!TransferComponents methodsFor: 'accessing' stamp: 'LH 11/9/2020 21:29:04'!
transfer
	self shouldBeImplemented.
	^transfer! !
!TransferComponents methodsFor: 'accessing' stamp: 'LH 11/9/2020 21:29:09' prior: 50869558!
transfer
	
	^transfer! !

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test09ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/9/2020 21:29:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:29:13'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LH 11/9/2020 21:29:21' prior: 50869537!
test10ATransferWithdrawAndDepositKnowTheirTransfer
	|aTransfer account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer from: account1 to: account2 of: 100.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.
! !

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test09ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/9/2020 21:29:24'!
PASSED!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:31:28'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'LH 11/9/2020 21:31:47'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'test' stamp: 'LH 11/9/2020 21:40:43'!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	
	account1 := ReceptiveAccount new.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: (account1 accountSummary).! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/9/2020 21:40:45'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/9/2020 21:41:18'!
accountSummary
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/9/2020 21:42:02' prior: 50869706!
accountSummary

	^ OrderedCollection with: 'Balance = 0'.! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/9/2020 21:42:04'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/9/2020 21:42:04'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/9/2020 21:46:16'!
test02AnAccountSummaryOfAnAccountWithATransactionReturnsItAndTheBalance
	
	|account1|
	
	account1 := ReceptiveAccount new.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: (account1 accountSummary).! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/9/2020 22:14:14' prior: 50869711!
accountSummary

	^OrderedCollection with: 'Balance = 0'.
	"|aReport|
	aReport := OrderedCollection new.
	
	self transactions do:[:aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposit is ',aTransaction value asString)]].
	
	^ aReport add: ('Balance = ', self balance asString)."! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/9/2020 22:14:47'!
test02AnAccountSummaryOfAnAccountWithADepositReturnsTheDepositAndBalanceOfAccount
! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/9/2020 22:15:18'!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
! !

!methodRemoval: ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsTheDepositAndBalanceOfAccount stamp: 'LH 11/9/2020 22:15:18'!
test02AnAccountSummaryOfAnAccountWithADepositReturnsTheDepositAndBalanceOfAccount
!

!methodRemoval: ReportTest #test02AnAccountSummaryOfAnAccountWithATransactionReturnsItAndTheBalance stamp: 'LH 11/9/2020 22:15:23'!
test02AnAccountSummaryOfAnAccountWithATransactionReturnsItAndTheBalance
	
	|account1|
	
	account1 := ReceptiveAccount new.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: (account1 accountSummary).!

----SNAPSHOT----(9 November 2020 22:15:28) CuisUniversity-4384.image priorSource: 17155564!

----QUIT----(9 November 2020 22:15:32) CuisUniversity-4384.image priorSource: 17219903!

----STARTUP---- (9 November 2020 22:15:39) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64\CuisUniversity-4384.image!


----QUIT----(9 November 2020 22:15:52) CuisUniversity-4384.image priorSource: 17219996!

----STARTUP---- (10 November 2020 17:05:18) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64\CuisUniversity-4384.image!

!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:06:24'!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:06:25'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:06:25'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:06:42'!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:06:57'!
test03ATransferWithdrawAndDepositKnowTheirTransfer
	|aTransfer account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer from: account1 to: account2 of: 100.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.
! !

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:06:59'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:07:00'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:07:00'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:07:00'!
PASSED!

!methodRemoval: ReceptiveAccountTest #test08ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:07:09'!
test08ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.
	
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.
!

!methodRemoval: ReceptiveAccountTest #test09ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:07:11'!
test09ATransferRegistersATransferDepositAndATransferWithdraw
	|aTransference account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransference := Transfer from: account1 to: account2 of: 100.
	
	self assert: (account2 hasRegistered: aTransference deposit).
	self assert: (account1 hasRegistered: aTransference withdraw).
!

!methodRemoval: ReceptiveAccountTest #test10ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:07:12'!
test10ATransferWithdrawAndDepositKnowTheirTransfer
	|aTransfer account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer from: account1 to: account2 of: 100.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.
!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:28:15'!
test04ATransferCantBeDoneBetweenTheSameAccount
	|aTransfer account1|
	
	account1 := ReceptiveAccount new.
	
	self should:[aTransfer := Transfer from: account1 to: account1 of: 100.]
		raise: Error
		withMessageText: Transfer caNotTransferBeetweenTheSameAccount.
	! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:28:31' prior: 50869895!
test04ATransferCantBeDoneBetweenTheSameAccount
	|account1|
	
	account1 := ReceptiveAccount new.
	
	self should:[Transfer from: account1 to: account1 of: 100.]
		raise: Error
		withMessageText: Transfer caNotTransferBeetweenTheSameAccount.
	! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:28:32'!
ERROR!
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:28:56'!
caNotTransferBeetweenTheSameAccount
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:29:28' prior: 50869920!
caNotTransferBeetweenTheSameAccount
	^'Can not make a transfer between the same account'! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:29:29'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/10/2020 17:30:45' prior: 50869329!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aSenderAccount = aRecipientAccount  ifTrue: [^self error: Transfer caNotTransferBeetweenTheSameAccount ].
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:30:46'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:30:46'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:30:46'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:30:46'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:30:46'!
PASSED!
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:31:10'!
canNotTransferBeetweenTheSameAccount
	^'Can not make a transfer between the same account'! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'LH 11/10/2020 17:31:10' prior: 50869906!
test04ATransferCantBeDoneBetweenTheSameAccount
	|account1|
	
	account1 := ReceptiveAccount new.
	
	self should:[Transfer from: account1 to: account1 of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'LH 11/10/2020 17:31:10' prior: 50869936!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aSenderAccount = aRecipientAccount  ifTrue: [^self error: Transfer canNotTransferBeetweenTheSameAccount ].
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!methodRemoval: Transfer class #caNotTransferBeetweenTheSameAccount stamp: 'LH 11/10/2020 17:31:10'!
caNotTransferBeetweenTheSameAccount
	^'Can not make a transfer between the same account'!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:31:15'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:31:15'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:31:15'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:31:15'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:32:16'!
test05ATransferCantBeDoneBeOf0Value
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should:[Transfer from: account1 to: account2 of: 0.]
		raise: Error
		withMessageText: Transfer canNotTransfer0.
	! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:32:21'!
ERROR!
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:32:30'!
canNotTransfer0
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:32:46' prior: 50870043!
canNotTransfer0
	^'Can not transfer a value of 0'! !
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:33:18' prior: 50870048!
canNotTransfer0
	^'Invalid value for a transfer'! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:33:19'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/10/2020 17:34:17' prior: 50869990!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aSenderAccount = aRecipientAccount  ifTrue: [^self error: Transfer canNotTransferBeetweenTheSameAccount ].
	aValue = 0 ifTrue:[^self error: Transfer canNotTransfer0 ].
	
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:34:18'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:34:18'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:34:18'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:34:18'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:34:19'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:34:19'!
PASSED!
!Transfer class methodsFor: 'error description' stamp: 'LH 11/10/2020 17:34:53'!
invalidValue
	^'Invalid value for a transfer'! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'LH 11/10/2020 17:34:53' prior: 50870029!
test05ATransferCantBeDoneBeOf0Value
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should:[Transfer from: account1 to: account2 of: 0.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'LH 11/10/2020 17:34:53' prior: 50870061!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aSenderAccount = aRecipientAccount  ifTrue: [^self error: Transfer canNotTransferBeetweenTheSameAccount ].
	aValue = 0 ifTrue:[^self error: Transfer invalidValue ].
	
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!methodRemoval: Transfer class #canNotTransfer0 stamp: 'LH 11/10/2020 17:34:53'!
canNotTransfer0
	^'Invalid value for a transfer'!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:34:59'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:34:59'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:34:59'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:34:59'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:34:59'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:35:27'!
test06ATransferCantBeOfNegativeValue
	|account1 account2|
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should:[Transfer from: account1 to: account2 of: -1.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:35:28'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/10/2020 17:35:47' prior: 50870119!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	aSenderAccount = aRecipientAccount  ifTrue: [^self error: Transfer canNotTransferBeetweenTheSameAccount ].
	aValue <= 0 ifTrue:[^self error: Transfer invalidValue ].
	
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:35:48'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:35:48'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:35:48'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:35:48'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:35:48'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:35:48'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:35:48'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/10/2020 17:40:41'!
ifAnEvaluation: aClosureEvaluation sendTheTransferError: aMessageForErorText
	
	
	aClosureEvaluation value  ifTrue: [^self error: (aMessageForErorText sendTo: Transfer)].
! !
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/10/2020 17:42:12' prior: 50870176!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.
	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValue.

	
	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:42:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:42:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:42:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:42:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:42:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:42:14'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'LH 11/10/2020 17:42:39' prior: 50870230!
from: aSenderAccount to: aRecipientAccount of: aValue
	|aTransfer aTransferDeposit aTransferWithdraw|
	
	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.
	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValue.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:42:40'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:42:40'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:42:40'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:42:40'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:42:40'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:42:40'!
PASSED!

----SNAPSHOT----(10 November 2020 17:43:42) CuisUniversity-4384.image priorSource: 17220211!
!TransferComponents methodsFor: 'balance' stamp: 'LH 11/10/2020 17:46:43' prior: 50869140 overrides: 50868388!
affectBalance: aBalance
	"includes the net value of this transaction in aBalance"
	self subclassResponsibility ! !
!TransferComponents methodsFor: 'value' stamp: 'LH 11/10/2020 17:47:03' prior: 50869169 overrides: 50868384!
value
	"returns the value of this transaction"
	self subclassResponsibility.! !
!TransferComponents methodsFor: 'accessing' stamp: 'LH 11/10/2020 17:47:47' prior: 50869563!
transfer
	"returns the transfer from wich this transaction originates"
	^transfer! !
!TransferDeposit methodsFor: 'balance' stamp: 'LH 11/10/2020 17:48:04' prior: 50869179 overrides: 50870319!
affectBalance: aBalance
	"see superclass"
	^aBalance + self value.! !
!TransferDeposit methodsFor: 'value' stamp: 'LH 11/10/2020 17:48:12' prior: 50869174 overrides: 50870326!
value
	"see superclass"
	^transfer value.! !
!TransferWithdraw methodsFor: 'balance' stamp: 'LH 11/10/2020 17:48:18' prior: 50869379 overrides: 50870319!
affectBalance: aBalance
	"see superclass"
	^aBalance - self value.! !
!TransferComponents methodsFor: 'value' stamp: 'LH 11/10/2020 17:48:39' prior: 50870326 overrides: 50868384!
value
	"returns the value of this transaction"
	^transfer value.! !

!methodRemoval: TransferDeposit #value stamp: 'LH 11/10/2020 17:48:50'!
value
	"see superclass"
	^transfer value.!

!methodRemoval: TransferWithdraw #value stamp: 'LH 11/10/2020 17:48:54'!
value

	^transfer value.!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:49:17'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:49:17'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:49:17'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:49:17'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:49:17'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:49:17'!
PASSED!
!Transfer methodsFor: 'accesing' stamp: 'LH 11/10/2020 17:50:06' prior: 50869275!
deposit
	"returns the transferDeposit associated with this transfer"
	^deposit.! !
!Transfer methodsFor: 'accesing' stamp: 'LH 11/10/2020 17:50:16' prior: 50869272!
withdraw
	"returns the transferWithdraw associated with this transfer"
	^withdraw.! !
!Transfer methodsFor: 'accesing' stamp: 'LH 11/10/2020 17:50:31' prior: 50869194 overrides: 16881508!
value
	"returns the value of this transfer"
	^value.! !

TestCase subclass: #TransferTest
	instanceVariableNames: 'account1 account2 aTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #TransferTest
	instanceVariableNames: 'firstAccount secondAccount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'LH 11/10/2020 17:56:47'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'firstAccount secondAccount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:57:36' overrides: 16927572!
setUp
	
	firstAccount := ReceptiveAccount new.
	secondAccount := ReceptiveAccount new.
	! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:58:39' prior: 50870426 overrides: 16927572!
setUp
	
	firstAccount := ReceptiveAccount new.
	secondAccount := ReceptiveAccount new.
	
	transfer := Transfer from: firstAccount to: secondAccount of: 100.! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:59:13' prior: 50869789!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	self setUp.
	
	self assert: 100 equals: secondAccount balance.
	self assert: -100 equals: firstAccount balance.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:59:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:59:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:59:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:59:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:59:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:59:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:59:14'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 17:59:56' prior: 50869809!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	
	self setUp.
	
	self assert: (secondAccount hasRegistered: transfer deposit).
	self assert: (firstAccount hasRegistered: transfer withdraw).! !

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:59:57'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 17:59:57'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 17:59:57'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 17:59:58'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 17:59:58'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 17:59:58'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 17:59:58'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 18:00:28' prior: 50869823!
test03ATransferWithdrawAndDepositKnowTheirTransfer

	self setUp.
	
	self assert: transfer equals: transfer deposit transfer.
	self assert: transfer equals: transfer withdraw transfer.
! !

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 18:00:32'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 18:00:32'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 18:00:32'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 18:00:32'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 18:00:32'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 18:00:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 18:00:33'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 18:00:59' prior: 50869979!
test04ATransferCantBeDoneBetweenTheSameAccount
	
	self setUp.
	
	self should:[Transfer from: firstAccount to: firstAccount of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 18:01:02' prior: 50870544!
test04ATransferCantBeDoneBetweenTheSameAccount
	
	self setUp.
	
	self should:[Transfer from: firstAccount to: firstAccount of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 18:01:04'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 18:01:04'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 18:01:04'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 18:01:04'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 18:01:04'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 18:01:04'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 18:01:04'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 18:01:27' prior: 50870108!
test05ATransferCantBeDoneBeOf0Value

	self setUp.
	
	self should:[Transfer from: firstAccount to: firstAccount of: 0.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 18:01:28'!
FAILURE!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 18:01:38' prior: 50870589!
test05ATransferCantBeDoneBeOf0Value

	self setUp.
	
	self should:[Transfer from: firstAccount to: secondAccount of: 0.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 18:01:39'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 18:01:39'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 18:01:39'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 18:01:39'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 18:01:39'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 18:01:39'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 18:01:39'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'LH 11/10/2020 18:02:00' prior: 50870161!
test06ATransferCantBeOfNegativeValue
	
	self setUp.
	
	self should:[Transfer from: firstAccount to: secondAccount of: -1.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/10/2020 18:02:01'!
PASSED!

----SNAPSHOT----(10 November 2020 18:02:17) CuisUniversity-4384.image priorSource: 17237264!

----QUIT----(10 November 2020 18:02:29) CuisUniversity-4384.image priorSource: 17248568!

----STARTUP---- (11 November 2020 15:37:39) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64\CuisUniversity-4384.image!

!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 15:49:55' prior: 50869750!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	|account1|
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert: (OrderedCollection with:'Deposito por 100' with: 'Balance = 0') equals: (account1 accountSummary).! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:49:57'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/11/2020 15:50:45' prior: 50869733!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do:[:aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito con ',aTransaction value asString)]].
	
	^ aReport add: ('Balance = ', self balance asString).! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:50:47'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 15:51:02' prior: 50870678!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	|account1|
	
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100') equals: (account1 accountSummary).! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:51:04'!
FAILURE!

aReport!

aTransaction!

 ('Deposito con ',aTransaction value asString)!

aReport!

aReport!

('Balance = ', self balance asString)!

aReport!

account1 accountSummary!

aReport add: ('Balance = ', self balance asString)!
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/11/2020 15:54:17' prior: 50870694!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do:[:aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito con ',aTransaction value asString)]].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/11/2020 15:54:24' prior: 50870732!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do:[:aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito con ',aTransaction value asString)]].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:54:28'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/11/2020 15:54:52' prior: 50870744!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do:[:aTransaction | (aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ',aTransaction value asString)]].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:54:53'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 15:54:53'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:54:53'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 15:57:59'!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate
	|account1|
	
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100') equals: (account1 accountSummary).! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 15:58:29' prior: 50870783!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate
	|account1|
	
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert: (OrderedCollection with:'Extracci�n por 100' with: 'Balance = -100') equals: (account1 accountSummary).! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 15:58:30'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'LH 11/11/2020 15:59:24' prior: 50870760!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do:[:aTransaction | 
						(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ',aTransaction value asString)].
						(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ',aTransaction value asString)].].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 15:59:27'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 15:59:27'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 15:59:28'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 15:59:28'!
PASSED!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'LH 11/11/2020 16:01:34'!
TestCase subclass: #ReportTest
	instanceVariableNames: 'firstAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:01:33' overrides: 16927572!
setUp
	
	firstAccount := ReceptiveAccount new.! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:01:56' prior: 50869693!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	self setUp.
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: (firstAccount accountSummary).! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:02:21'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:02:21'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:02:21'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:02:21'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:02:47' prior: 50870709!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	self setUp.
	Deposit register: 100 on: firstAccount.
	
	self assert: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100') equals: (firstAccount accountSummary).! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:03:13' prior: 50870794!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 100 on: firstAccount .
	
	self assert: (OrderedCollection with:'Extracci�n por 100' with: 'Balance = -100') equals: (firstAccount accountSummary).! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:03:15'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:03:15'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:03:15'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:03:15'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:04:57'!
assertEqualsWithFirstAccountSummary: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (firstAccount accountSummary).! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:05:16' prior: 50870854!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	self setUp.
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with: 'Balance = 0').
	self assert: (OrderedCollection with: 'Balance = 0') equals: (firstAccount accountSummary).! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:05:17'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:05:17'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:05:17'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:05:17'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:05:35' prior: 50870922!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	self setUp.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:05:58' prior: 50870878!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	self setUp.
	Deposit register: 100 on: firstAccount.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100').
	self assert: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100') equals: (firstAccount accountSummary).! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:05:59'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:05:59'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:05:59'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:05:59'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:06:05' prior: 50870956!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	self setUp.
	Deposit register: 100 on: firstAccount.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100').! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:06:21' prior: 50870889!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 100 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Deposito por 100' with: 'Balance = 100').
	self assert: (OrderedCollection with:'Extracci�n por 100' with: 'Balance = -100') equals: (firstAccount accountSummary).! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:06:33' prior: 50870996!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 100 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Extracci�n por 100' with: 'Balance = -100').
	self assert: (OrderedCollection with:'Extracci�n por 100' with: 'Balance = -100') equals: (firstAccount accountSummary).! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:06:34'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:06:34'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:06:34'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:06:34'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/11/2020 16:06:40' prior: 50871010!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 100 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Extracci�n por 100' with: 'Balance = -100').! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:06:53'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/11/2020 16:06:53'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/11/2020 16:06:53'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/11/2020 16:06:53'!
PASSED!

----QUIT----(11 November 2020 16:07:09) CuisUniversity-4384.image priorSource: 17248662!

----STARTUP---- (11 November 2020 18:50:43) as /Users/ilanolkies/uba/ingsoft1/macos64 2/CuisUniversity-4384.image!


----End fileIn of /Users/ilanolkies/uba/ingsoft1/macos64 2/Portfolio-Solucion.st----!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:21:20'!
test04AnAccountSummaryOfAnAccountWithAOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida de transferencia por 100' with: 'Balance = -100').! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAOutgoingTransfer stamp: 'IO 11/11/2020 19:21:21'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:22:47' prior: 50868493!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Salida de transferencia por ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:22:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:22:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:22:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:22:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:22:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:22:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:22:53'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:23:10'!
test04AnAccountSummaryOfAnAccountWithAIncomingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: account2 to: firstAccount of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada de transferencia por 100' with: 'Balance = -100').! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:23:11'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:23:41' prior: 50868819!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Salida de transferencia por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Entrada de transferencia por ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:23:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:23:50'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:23:53'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:23:53'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:23:53'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:23:53'!
FAILURE!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAOutgoingTransfer stamp: 'IO 11/11/2020 19:23:53'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:24:04'!
test05AnAccountSummaryOfAnAccountWithAOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida de transferencia por 100' with: 'Balance = -100').! !

!methodRemoval: ReportTest #test04AnAccountSummaryOfAnAccountWithAOutgoingTransfer stamp: 'IO 11/11/2020 19:24:04'!
test04AnAccountSummaryOfAnAccountWithAOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida de transferencia por 100' with: 'Balance = -100').!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:24:14' prior: 50869007!
test05AnAccountSummaryOfAnAccountWithAOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	"self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida de transferencia por 100' with: 'Balance = -100')."! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:24:23' prior: 50868881!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Salida de transferencia por ', aTransaction value asString)].
		"(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Entrada de transferencia por ', aTransaction value asString)]."
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:24:24'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:24:29'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:24:29'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:24:29'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:24:29'!
FAILURE!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAOutgoingTransfer stamp: 'IO 11/11/2020 19:24:29'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:24:29'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:25:27' prior: 50869045!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Salida por transferencia por ', aTransaction value asString)].
		"(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Entrada de transferencia por ', aTransaction value asString)]."
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:25:33'!
FAILURE!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:25:37'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:25:37'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:25:37'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:25:37'!
FAILURE!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAOutgoingTransfer stamp: 'IO 11/11/2020 19:25:37'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:25:37'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:25:56' prior: 50869118!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Salida por transferencia por ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!methodRemoval: ReportTest #test05AnAccountSummaryOfAnAccountWithAOutgoingTransfer stamp: 'IO 11/11/2020 19:25:59'!
test05AnAccountSummaryOfAnAccountWithAOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	"self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida de transferencia por 100' with: 'Balance = -100')."!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:26:03'!
FAILURE!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:26:10'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:26:19' prior: 50868864!
test04AnAccountSummaryOfAnAccountWithAIncomingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: account2 to: firstAccount of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada de transferencia por 100' with: 'Balance = -100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:26:53'!
test04AnAccountSummaryOfAnAccountWithANOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada de transferencia por 100' with: 'Balance = -100').! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithANOutgoingTransfer stamp: 'IO 11/11/2020 19:26:54'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:27:14'!
FAILURE!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithANOutgoingTransfer stamp: 'IO 11/11/2020 19:27:14'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:27:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:27:14'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:27:29' prior: 50869169!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:27:32'!
FAILURE!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithANOutgoingTransfer stamp: 'IO 11/11/2020 19:27:32'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:27:32'!
PASSED!

!methodRemoval: ReportTest #test04AnAccountSummaryOfAnAccountWithAIncomingTransfer stamp: 'IO 11/11/2020 19:28:19'!
test04AnAccountSummaryOfAnAccountWithAIncomingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: account2 to: firstAccount of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada de transferencia por 100' with: 'Balance = -100').!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:28:28'!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada de transferencia por 100' with: 'Balance = -100').! !

!methodRemoval: ReportTest #test04AnAccountSummaryOfAnAccountWithANOutgoingTransfer stamp: 'IO 11/11/2020 19:28:28'!
test04AnAccountSummaryOfAnAccountWithANOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada de transferencia por 100' with: 'Balance = -100').!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:28:37' prior: 50869520!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida por transferencia de 100' with: 'Balance = -100').! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:28:41'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:29:20' prior: 50869363!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:29:38'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:29:38'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:29:38'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:29:38'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:29:38'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:30:01'!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: account2 to: firstAccount of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada por transferencia de 100' with: 'Balance = 100').! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:30:08'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:30:08'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:30:08'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:30:31' prior: 50869563!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Deposito por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:30:33'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:30:36'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:30:36'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:30:36'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:30:36'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:30:36'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:34:56'!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada por transferencia de 100' with: 'Balance = 100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:35:34' prior: 50869910!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: (OrderedCollection with:'Entrada por transferencia de 100' with: 'Balance = 100') equals: (portfolio1 accountSummary).! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:35:39' prior: 50869920!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: (OrderedCollection with:'Entrada por transferencia de 100' with: 'Balance = 100') equals: portfolio1 accountSummary.! !

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:35:40'!
ERROR!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:36:11' prior: 50869930!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: (OrderedCollection with: 'Balance = 0') equals: portfolio1 accountSummary.! !
!Portfolio methodsFor: 'nil' stamp: 'IO 11/11/2020 19:36:34'!
accountSummary
	^OrderedCollection with: 'Balance = 0'.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:36:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:36:37'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:36:37'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:39:19'!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 40.

	self assert: (OrderedCollection
		with: 'Dep�stio por'
		with: 'Balance = 0'
	) equals: portfolio1 accountSummary.! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:39:26' prior: 50868164!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	self setUp.
	Deposit register: 100 on: firstAccount.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Dep�stio por 100' with: 'Balance = 100').! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:39:40'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:39:55' prior: 50869743!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString)].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString)].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString)].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString)].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:39:56'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:39:56'!
FAILURE!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:39:56'!
FAILURE!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:39:59'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:39:59'!
FAILURE!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:39:59'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:40:17' prior: 50870141!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 40.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100'
		with: 'Balance = 0'
	) equals: portfolio1 accountSummary.! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:40:27' prior: 50870159!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	self setUp.
	Deposit register: 100 on: firstAccount.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:40:32' prior: 50868174!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 100 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:40:35' prior: 50869546!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida por transferencia de 100.' with: 'Balance = -100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:40:38' prior: 50869601!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: account2 to: firstAccount of: 100.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada por transferencia de 100.' with: 'Balance = 100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:40:55' prior: 50870292!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 50 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Extracci�n por 50.' with: 'Balance = -100').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:41:08' prior: 50870302!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: firstAccount to: account2 of: 20.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:41:16' prior: 50870314!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	| account2 |
	
	account2 := ReceptiveAccount new.
	self setUp.
	Transfer from: account2 to: firstAccount of: 30.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'IO 11/11/2020 19:41:48' prior: 50870173!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:41:50'!
FAILURE!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:41:50'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:41:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:41:50'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:41:58' prior: 50870327!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 50 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Extracci�n por 50.' with: 'Balance = --50').! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:42:00' prior: 50870518!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	self setUp.
	Withdraw register: 50 on: firstAccount .
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with:'Extracci�n por 50.' with: 'Balance = -50').! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:42:02'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:42:02'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:42:02'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:42:29' prior: 50870264!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100'
		with: 'Extraccio�n por 50'
		with 
		with: 'Balance = 0'
	) equals: portfolio1 accountSummary.! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:42:58' prior: 50870674!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extraccio�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 0'
	) equals: portfolio1 accountSummary.! !

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:43:01'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:43:06' prior: 50870693!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extraccio�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	) equals: portfolio1 accountSummary.! !

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:43:09'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/11/2020 19:44:01' prior: 50869951!
accountSummary
	^accounts first accountSummary.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:44:03'!
ERROR!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:44:03'!
ERROR!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:44:03'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:44:03'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/11/2020 19:44:46' prior: 50870744!
accountSummary
	(accounts size = 0) ifTrue: [^OrderedCollection with: 'Balance = 0'].
	^accounts first accountSummary.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:44:47'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:44:50'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:44:50'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:44:50'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:45:38'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 19:45:38'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:45:38'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 19:46:17' prior: 50870718!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extraccio�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	) equals: portfolio1 accountSummary.! !

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 19:46:18'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 20:00:33' prior: 50871217!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	) equals: portfolio1 accountSummary.! !

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 20:00:34'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 20:00:34'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 20:00:50'!
test07APortfolioWithOneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	) equals: portfolio1 accountSummary.! !

!methodRemoval: ReportTest #test07APortfolioWithoneAccountsHasAccountsReport stamp: 'IO 11/11/2020 20:00:50'!
test07APortfolioWithoneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	) equals: portfolio1 accountSummary.!

OrderedCollection!
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 20:05:35'!
test08APortfolioWithManyAccountsHasCorrectBalanceInReport

	| portfolio1 account1 account2 account3 report |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 100.'.
	report add: 'Extracci�n por 50.'.
	report add: 'Salida por transferencia de 20.'.
	report add: 'Entrada por transferencia de 30.'.
	
	report add: 'Balance = '.

	self assert: report equals: portfolio1 accountSummary.! !
!ReportTest methodsFor: 'test' stamp: 'IO 11/11/2020 20:06:10' prior: 50871340!
test08APortfolioWithManyAccountsHasCorrectBalanceInReport

	| portfolio1 account1 account2 account3 report |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: report equals: portfolio1 accountSummary.! !

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/11/2020 20:06:10'!
FAILURE!

!methodRemoval: Portfolio #accountSummary stamp: 'IO 11/11/2020 20:06:39'!
accountSummary
	(accounts size = 0) ifTrue: [^OrderedCollection with: 'Balance = 0'].
	^accounts first accountSummary.!
!Account methodsFor: 'reports' stamp: 'IO 11/11/2020 20:06:47'!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.! !

!methodRemoval: ReceptiveAccount #accountSummary stamp: 'IO 11/11/2020 20:06:47'!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	self transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	aReport add: ('Balance = ', self balance asString).
	^aReport.!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/11/2020 20:06:50'!
PASSED!

----SNAPSHOT----(11 November 2020 20:34:05) CuisUniversity-4384.image priorSource: 17155564!

----STARTUP---- (12 November 2020 14:57:56) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\CuisUniversity-4384.image!


!classRemoval: #Transfer stamp: 'LH 11/12/2020 14:59:00'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdraw deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'LH 11/12/2020 14:59:01'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferWithdraw stamp: 'LH 11/12/2020 14:59:01'!
TransferComponents subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferDeposit stamp: 'LH 11/12/2020 14:59:01'!
TransferComponents subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferComponents stamp: 'LH 11/12/2020 14:59:02'!
AccountTransaction subclass: #TransferComponents
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'LH 11/12/2020 14:59:02'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'LH 11/12/2020 14:59:03'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'LH 11/12/2020 14:59:03'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'LH 11/12/2020 14:59:03'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'LH 11/12/2020 14:59:04'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTest stamp: 'LH 11/12/2020 14:59:04'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'firstAccount secondAccount transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReportTest stamp: 'LH 11/12/2020 14:59:05'!
TestCase subclass: #ReportTest
	instanceVariableNames: 'firstAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'LH 11/12/2020 14:59:05'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'LH 11/12/2020 14:59:05'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\Portfolio-Solucion.st----!

----QUIT----(12 November 2020 15:02:14) CuisUniversity-4384.image priorSource: 17261509!

----STARTUP---- (12 November 2020 19:52:33) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\CuisUniversity-4384.image!


----QUIT----(12 November 2020 20:56:30) CuisUniversity-4384.image priorSource: 17301565!

----STARTUP---- (14 November 2020 15:20:34) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\CuisUniversity-4384.image!


!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'LH 11/14/2020 16:34:57'!
Object subclass: #AccountSummary
	instanceVariableNames: 'report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary class methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 16:34:57'!
for: anAccount
	^self new initializeFor: anAccount! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 16:34:57'!
initializeFor: anAccount
	report := anAccount.! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 16:34:57'!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	report transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	aReport add: ('Balance = ', report balance asString).
	^aReport.! !
!Account methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 16:34:57' prior: 50871801!
accountSummary
	^(AccountSummary for: self) accountSummary! !
!AccountSummary methodsFor: 'initialization' stamp: 'LH 11/14/2020 16:35:29' prior: 50872352!
initializeFor: anAccount

	report := OrderedCollection new..! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:36:00'!
accountSummary: anAccount

	|aReport|
	aReport := OrderedCollection new.
	
	anAccount transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	aReport add: ('Balance = ', anAccount balance asString).
	^aReport.! !

!methodRemoval: AccountSummary #accountSummary stamp: 'LH 11/14/2020 16:36:12'!
accountSummary

	|aReport|
	aReport := OrderedCollection new.
	
	report transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [aReport add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [aReport add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [aReport add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [aReport add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	aReport add: ('Balance = ', report balance asString).
	^aReport.!
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:36:34' prior: 50872392!
accountSummary: anAccount
	
	anAccount transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [report add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [report add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [report add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	report add: ('Balance = ', anAccount balance asString).
	^report.! !
!AccountSummary methodsFor: 'initialization' stamp: 'LH 11/14/2020 16:36:55' overrides: 16896425!
initialize
	report := OrderedCollection new..! !
!AccountSummary class methodsFor: 'instance creation' stamp: 'LH 11/14/2020 16:37:10' prior: 50872347!
for: anAccount
	^self new initialize accountSummary: anAccount! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:37:37'!
accountSummaryFor: anAccount
	
	anAccount transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [report add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [report add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [report add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	report add: ('Balance = ', anAccount balance asString).
	^report.! !
!AccountSummary class methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 16:37:37' prior: 50872470!
for: anAccount
	^self new initialize accountSummaryFor: anAccount! !

!methodRemoval: AccountSummary #accountSummary: stamp: 'LH 11/14/2020 16:37:37'!
accountSummary: anAccount
	
	anAccount transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [report add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [report add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [report add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].
	
	report add: ('Balance = ', anAccount balance asString).
	^report.!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:38:47' prior: 50871569!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	account1 := ReceptiveAccount new.
	self setUp.
	
	self assertEqualsWithFirstAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:41:09'!
assertAnAccountSumaryOf:anAccount Equals: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountSummary for: anAccount).! !
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:42:08' prior: 50872527!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	account1 := ReceptiveAccount new.
	self setUp.
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with: 'Balance = 0').

	self assertEqualsWithFirstAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:42:09'!
ERROR!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:42:52'!
ERROR!
!Account methodsFor: 'reports' stamp: 'LH 11/14/2020 16:43:53' prior: 50872382!
accountSummary
	^(AccountSummary for: self).! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:44:13'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:44:15'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:44:15'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:44:15'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:44:15'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:44:16'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:44:16'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:44:16'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:44:16'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:44:16'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:44:29' prior: 50872544!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with: 'Balance = 0').! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:44:31'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:44:31'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:45:09' prior: 50871577!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	|account1|
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:45:10'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:45:10'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:45:10'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:45:10'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:45:10'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:45:10'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:45:11'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:45:11'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:45:11'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:45:42' prior: 50871587!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Extracci�n por 50.' with: 'Balance = -50').! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:45:43'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:46:01' prior: 50872694!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:46:02'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:46:02'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:47:09' prior: 50871597!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: firstAccount to: account2 of: 20.	
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:47:10'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:47:18' prior: 50872754!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:47:20'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:47:20'!
PASSED!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:48:14' prior: 50871609!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: firstAccount of: 30.	
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:48:14'!
FAILURE!
!ReportTest methodsFor: 'test' stamp: 'LH 11/14/2020 16:48:22' prior: 50872818!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assertAnAccountSumaryOf:account1 Equals: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:48:22'!
PASSED!

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:48:23'!
PASSED!

!methodRemoval: ReportTest #setUp stamp: 'LH 11/14/2020 16:48:41'!
setUp
	
	firstAccount := ReceptiveAccount new.!

!methodRemoval: ReportTest #assertEqualsWithFirstAccountSummary: stamp: 'LH 11/14/2020 16:48:44'!
assertEqualsWithFirstAccountSummary: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (firstAccount accountSummary).!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'LH 11/14/2020 16:48:50'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:50:00'!
gatherAccountSummaryFor: anAccount

	anAccount transactions do: [ :aTransaction |
		(aTransaction isKindOf: Deposit) ifTrue: [report add: ('Dep�stio por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: ('Extracci�n por ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferWithdraw) ifTrue: [report add: ('Salida por transferencia de ', aTransaction value asString, '.')].
		(aTransaction isKindOf: TransferDeposit) ifTrue: [report add: ('Entrada por transferencia de ', aTransaction value asString, '.')].
	].! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:50:25' prior: 50872475!
accountSummaryFor: anAccount
	self gatherAccountSummaryFor: anAccount.
	
	report add: ('Balance = ', anAccount balance asString).
	^report.! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:50:33' prior: 50872927!
accountSummaryFor: anAccount

	self gatherAccountSummaryFor: anAccount.
	
	report add: ('Balance = ', anAccount balance asString).
	
	^report.! !

!testRun: #ReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 16:50:34'!
PASSED!

!testRun: #ReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 16:50:34'!
PASSED!
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:51:59'!
gatherAccountSummaryForDeposit: aDeposit

	report add: ('Dep�stio por ', aDeposit value asString, '.').! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:52:26'!
gatherAccountSummaryForWithdraw: aWithdraw

	report add: ('Extracci�n por ', aWithdraw value asString, '.').! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:57:13'!
gatherAccountSummaryForTrasnferWithdraw: aTransferWithdraw

	report add: ('Salida por transferencia de ', aTransferWithdraw value asString, '.').! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 16:57:41'!
gatherAccountSummaryForTransferDeposit: aTransferDeposit

	report add: ('Entrada por transferencia de ', aTransferDeposit value asString, '.')! !
!Deposit methodsFor: 'reports' stamp: 'LH 11/14/2020 16:59:33'!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForDeposit: self.! !

----SNAPSHOT----(14 November 2020 17:00:00) CuisUniversity-4384.image priorSource: 17301793!
!AccountTransaction methodsFor: 'reports' stamp: 'LH 11/14/2020 17:00:41'!
accountSummaryGatherIn: anAccountSummary

	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'reports' stamp: 'LH 11/14/2020 17:01:08' overrides: 50873007!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'LH 11/14/2020 17:01:38' overrides: 50873007!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferWithdraw: self.! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 17:02:00'!
gatherAccountSummaryForTransferWithdraw: aTransferWithdraw

	report add: ('Salida por transferencia de ', aTransferWithdraw value asString, '.').! !

!methodRemoval: AccountSummary #gatherAccountSummaryForTrasnferWithdraw: stamp: 'LH 11/14/2020 17:02:00'!
gatherAccountSummaryForTrasnferWithdraw: aTransferWithdraw

	report add: ('Salida por transferencia de ', aTransferWithdraw value asString, '.').!
!Withdraw methodsFor: 'reports' stamp: 'LH 11/14/2020 17:02:42' overrides: 50873007!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForWithdraw: self.! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 17:04:52' prior: 50872905!
gatherAccountSummaryFor: anAccount

	anAccount transactions do: [ :aTransaction | aTransaction gatherAccountSummaryIn: self].! !
!TransferDeposit methodsFor: 'reports' stamp: 'LH 11/14/2020 17:05:38'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'LH 11/14/2020 17:05:38'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferWithdraw: self.! !
!Withdraw methodsFor: 'reports' stamp: 'LH 11/14/2020 17:05:38'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForWithdraw: self.! !
!AccountTransaction methodsFor: 'reports' stamp: 'LH 11/14/2020 17:05:38'!
gatherAccountSummaryIn: anAccountSummary

	self subclassResponsibility ! !
!Deposit methodsFor: 'reports' stamp: 'LH 11/14/2020 17:05:38' overrides: 50873073!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForDeposit: self.! !

!methodRemoval: TransferDeposit #accountSummaryGatherIn: stamp: 'LH 11/14/2020 17:05:38'!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferDeposit: self.!

!methodRemoval: TransferWithdraw #accountSummaryGatherIn: stamp: 'LH 11/14/2020 17:05:38'!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferWithdraw: self.!

!methodRemoval: Withdraw #accountSummaryGatherIn: stamp: 'LH 11/14/2020 17:05:38'!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForWithdraw: self.!

!methodRemoval: AccountTransaction #accountSummaryGatherIn: stamp: 'LH 11/14/2020 17:05:38'!
accountSummaryGatherIn: anAccountSummary

	self subclassResponsibility !

!methodRemoval: Deposit #accountSummaryGatherIn: stamp: 'LH 11/14/2020 17:05:38'!
accountSummaryGatherIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForDeposit: self.!

!classRenamed: #ReportTest as: #AccountSummaryTest stamp: 'LH 11/14/2020 17:08:14'!
Smalltalk renameClassNamed: #ReportTest as: #AccountSummaryTest!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:08:18'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:08:18'!
PASSED!
!AccountSummary methodsFor: 'gathering accounts' stamp: 'LH 11/14/2020 17:09:18'!
gatherAccountSummaryForReceptiveAccount: aReceptiveAccount

	aReceptiveAccount transactions do: [ :aTransaction | aTransaction gatherAccountSummaryIn: self].! !
!AccountSummary methodsFor: 'gathering accounts' stamp: 'LH 11/14/2020 17:10:00'!
gatherAccountSummaryForPortfolio: aPortfolio

	aPortfolio transactions do: [ :aTransaction | aTransaction gatherAccountSummaryIn: self].! !

!methodRemoval: AccountSummary #gatherAccountSummaryForPortfolio: stamp: 'LH 11/14/2020 17:10:09'!
gatherAccountSummaryForPortfolio: aPortfolio

	aPortfolio transactions do: [ :aTransaction | aTransaction gatherAccountSummaryIn: self].!

!methodRemoval: AccountSummary #gatherAccountSummaryForReceptiveAccount: stamp: 'LH 11/14/2020 17:10:11'!
gatherAccountSummaryForReceptiveAccount: aReceptiveAccount

	aReceptiveAccount transactions do: [ :aTransaction | aTransaction gatherAccountSummaryIn: self].!
!Portfolio methodsFor: 'reports' stamp: 'LH 11/14/2020 17:11:51'!
gatherAccountSummaryIn: anAccountSummary

	accounts do: [:anAccount | anAccount gatherAccountSummaryIn: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'report' stamp: 'LH 11/14/2020 17:12:31'!
gatherAccountSummaryIn: anAccountSummary

	transactions do: [:aTransaction | aTransaction gatherAccountSummaryIn: anAccountSummary ].! !
!AccountSummary methodsFor: 'evaluating' stamp: 'LH 11/14/2020 17:13:14' prior: 50872935!
accountSummaryFor: anAccount

	anAccount gatherAccountSummaryIn: self.
	
	report add: ('Balance = ', anAccount balance asString).
	
	^report.! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:13:15'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:13:16'!
PASSED!

!methodRemoval: AccountSummary #gatherAccountSummaryFor: stamp: 'LH 11/14/2020 17:13:30'!
gatherAccountSummaryFor: anAccount

	anAccount transactions do: [ :aTransaction | aTransaction gatherAccountSummaryIn: self].!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:13:43'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:13:43'!
PASSED!
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:17:41'!
gatherForTransaction: aTransaction withText: reportMessage

	report add: (reportMessage, aTransaction value asString, '.').! !
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:18:40' prior: 50872972!
gatherAccountSummaryForDeposit: aDeposit
	
	self gatherForTransaction: aDeposit withText: 'Dep�stio por '.
	"report add: ('Dep�stio por ', aDeposit value asString, '.')."! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:18:41'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:18:41'!
PASSED!
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:18:55' prior: 50873283!
gatherAccountSummaryForDeposit: aDeposit
	
	self gatherForTransaction: aDeposit withText: 'Dep�stio por '.! !
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:19:39' prior: 50872991!
gatherAccountSummaryForTransferDeposit: aTransferDeposit

	self gatherForTransaction: aTransferDeposit withText: 'Entrada por transferencia de '.
	! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:19:40'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:19:40'!
PASSED!
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:20:08' prior: 50873026!
gatherAccountSummaryForTransferWithdraw: aTransferWithdraw

	self gatherForTransaction: aTransferWithdraw withText: 'Salida por transferencia de '.! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:20:09'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:20:09'!
PASSED!
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:20:20' prior: 50872978!
gatherAccountSummaryForWithdraw: aWithdraw

	report add: ('Extracci�n por ', aWithdraw value asString, '.').! !
!AccountSummary methodsFor: 'gathering transactions' stamp: 'LH 11/14/2020 17:20:39' prior: 50873411!
gatherAccountSummaryForWithdraw: aWithdraw

	self gatherForTransaction: aWithdraw withText: 'Extracci�n por '.! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:20:40'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:20:40'!
PASSED!
!Account methodsFor: 'reports' stamp: 'LH 11/14/2020 17:21:27'!
gatherAccountSummaryIn: anAccountSummary

	self subclassResponsibility.! !

----SNAPSHOT----(14 November 2020 17:21:39) CuisUniversity-4384.image priorSource: 17323300!

!methodRemoval: Account #accountSummary stamp: 'LH 11/14/2020 17:21:42'!
accountSummary
	^(AccountSummary for: self).!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:21:45'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:21:45'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:21:45'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:21:45'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:21:45'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:21:45'!
ERROR!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:21:45'!
ERROR!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:21:45'!
ERROR!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:22:22' prior: 50871621!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: (OrderedCollection with: 'Balance = 0') equals:  (AccountSummary for: portfolio1).! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:22:26'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:22:26'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:22:26'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:22:26'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:22:26'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:22:26'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:22:26'!
ERROR!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:22:26'!
ERROR!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:23:02' prior: 50871629!
test07APortfolioWithOneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	) equals: (AccountSummary for: portfolio1).! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:23:05'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:23:05'!
ERROR!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:23:05'!
ERROR!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:23:32' prior: 50871652!
test08APortfolioWithManyAccountsHasCorrectBalanceInReport

	| portfolio1 account1 account2 account3 report |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: report equals:  (AccountSummary for: portfolio1).! !

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:23:33'!
PASSED!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:23:36'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:23:36'!
PASSED!
!Account methodsFor: 'reports' stamp: 'LH 11/14/2020 17:24:59' prior: 50873456!
gatherAccountSummaryIn: anAccountSummary
	"gathers the data of this account for an account summary"
	
	self subclassResponsibility.! !
!Portfolio methodsFor: 'reports' stamp: 'LH 11/14/2020 17:25:27' prior: 50873181 overrides: 50873675!
gatherAccountSummaryIn: anAccountSummary
	"see superclass"
	
	accounts do: [:anAccount | anAccount gatherAccountSummaryIn: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'report' stamp: 'LH 11/14/2020 17:25:35' prior: 50873188 overrides: 50873675!
gatherAccountSummaryIn: anAccountSummary
	"see superclass"
	
	transactions do: [:aTransaction | aTransaction gatherAccountSummaryIn: anAccountSummary ].! !
!AccountTransaction methodsFor: 'reports' stamp: 'LH 11/14/2020 17:31:47' prior: 50873073!
gatherAccountSummaryIn: anAccountSummary
	"communicates to an account summary what class this transaction is"
	self subclassResponsibility ! !

----SNAPSHOT----(14 November 2020 17:35:39) CuisUniversity-4384.image priorSource: 17337930!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:48:18'!
assert:anAccount hasAccountSummaryReport: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountSummary for: anAccount).! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:18' prior: 50872709!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummaryReport: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:18' prior: 50872771!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummaryReport: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:18' prior: 50872649!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	|account1|
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummaryReport: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:18' prior: 50872835!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummaryReport: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:18' prior: 50872606!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummaryReport: (OrderedCollection with: 'Balance = 0').! !

!methodRemoval: AccountSummaryTest #assertAnAccountSumaryOf:Equals: stamp: 'LH 11/14/2020 17:48:18'!
assertAnAccountSumaryOf:anAccount Equals: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountSummary for: anAccount).!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:48:30'!
assert:anAccount hasAccountSummary: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountSummary for: anAccount).! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:30' prior: 50873755!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:30' prior: 50873769!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:30' prior: 50873743!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	|account1|
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:30' prior: 50873717!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'LH 11/14/2020 17:48:30' prior: 50873729!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!methodRemoval: AccountSummaryTest #assert:hasAccountSummaryReport: stamp: 'LH 11/14/2020 17:48:30'!
assert:anAccount hasAccountSummaryReport: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountSummary for: anAccount).!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:49:17' prior: 50873500!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:49:18'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:49:18'!
PASSED!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:49:42' prior: 50873541!
test07APortfolioWithOneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).! !

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:49:44'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:49:44'!
PASSED!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:50:12' prior: 50873601!
test08APortfolioWithManyAccountsHasCorrectBalanceInReport

	| portfolio1 account1 account2 account3 report |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: portfolio1 hasAccountSummary: report .! !

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:50:13'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:50:14'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:50:14'!
PASSED!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:51:33' prior: 50873967!
test08APortfolioWithManyAccountsHasCorrectBalanceInReport

	| portfolio1 account1 account2 account3 report |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: portfolio1 hasAccountSummary: report .! !

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:51:34'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:51:34'!
PASSED!
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:51:45' prior: 50873794!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:51:51' prior: 50873842!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!AccountSummaryTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:52:00' prior: 50873830!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:52:30' prior: 50871729!
test03ATransferWithdrawAndDepositKnowTheirTransfer

	self setUp.
	
	self assert: transfer equals: transfer deposit transfer.
	self assert: transfer equals: transfer withdraw transfer.! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:56:05'!
validTransferOf100Value

	^Transfer from: firstAccount to: secondAccount of: 100.! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:57:00' prior: 50871712!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	self setUp.
	self validTransferOf100Value.
	
	self assert: 100 equals: secondAccount balance.
	self assert: -100 equals: firstAccount balance.! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:57:06' prior: 50871704 overrides: 16927572!
setUp
	
	firstAccount := ReceptiveAccount new.
	secondAccount := ReceptiveAccount new.
! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:57:55' prior: 50871720!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	|aTransfer|
	
	self setUp.
	aTransfer := self validTransferOf100Value.
	
	self assert: (secondAccount hasRegistered: aTransfer deposit).
	self assert: (firstAccount hasRegistered: aTransfer withdraw).! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:58:35' prior: 50874151!
test03ATransferWithdrawAndDepositKnowTheirTransfer
	|aTransfer|
	
	self setUp.
	aTransfer := self validTransferOf100Value.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.! !
!TransferTest methodsFor: 'test' stamp: 'LH 11/14/2020 17:58:50' prior: 50871738!
test04ATransferCantBeDoneBetweenTheSameAccount

	self setUp.
	
	self should:[Transfer from: firstAccount to: firstAccount of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/14/2020 17:58:51'!
PASSED!

TestCase subclass: #TransferTest
	instanceVariableNames: 'firstAccount secondAccount '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'LH 11/14/2020 17:59:05'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'firstAccount secondAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/14/2020 17:59:08'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/14/2020 17:59:08'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/14/2020 17:59:08'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/14/2020 17:59:08'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/14/2020 17:59:08'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/14/2020 17:59:08'!
PASSED!

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'LH 11/14/2020 17:59:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/14/2020 17:59:17'!
PASSED!

----SNAPSHOT----(14 November 2020 17:59:32) CuisUniversity-4384.image priorSource: 17345774!

----QUIT----(14 November 2020 17:59:35) CuisUniversity-4384.image priorSource: 17368326!

----STARTUP---- (14 November 2020 18:26:07) as /Users/ilanolkies/uba/ingsoft1/macos64/CuisUniversity-4384.image!


----End fileIn of /Users/ilanolkies/uba/ingsoft1/macos64/Portfolio-Solucion.st----!
!Account methodsFor: 'transactions' stamp: 'IO 11/14/2020 18:26:41' prior: 50868388!
addTransactionsTo: aCollectionOfTransactions

	self subclassResponsibility.
! !
!Account methodsFor: 'transactions' stamp: 'IO 11/14/2020 18:26:49' prior: 50868393!
transactions

	self subclassResponsibility.
! !
!Account methodsFor: 'testing' stamp: 'IO 11/14/2020 18:26:57' prior: 50868376!
hasRegistered: aTransaction

	self subclassResponsibility.
! !
!Account methodsFor: 'testing' stamp: 'IO 11/14/2020 18:27:04' prior: 50868380!
isComposedBy: anAccount

	self subclassResponsibility.
! !
!Account methodsFor: 'balance' stamp: 'IO 11/14/2020 18:27:11' prior: 50868384!
balance

	self subclassResponsibility.
! !
!Account methodsFor: 'composition' stamp: 'IO 11/14/2020 18:27:26' prior: 50868397!
addedTo: aPortfolio

	self subclassResponsibility.
! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 18:27:31' prior: 50868401!
gatherAccountSummaryIn: anAccountSummary

	"gathers the data of this account for an account summary"
	
	self subclassResponsibility.! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 18:27:34' prior: 50869064!
gatherAccountSummaryIn: anAccountSummary

	"gathers the data of this account for an account summary"

	self subclassResponsibility.! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 18:27:36' prior: 50869071!
gatherAccountSummaryIn: anAccountSummary

	"gathers the data of this account for an account summary"

	self subclassResponsibility.
! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:28:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:28:14'!
PASSED!
!AccountSummary methodsFor: 'initialization' stamp: 'IO 11/14/2020 18:30:40' prior: 50868637 overrides: 16896425!
initialize
	report := OrderedCollection new.! !

!classRenamed: #AccountSummary as: #AccountReport stamp: 'IO 11/14/2020 18:31:45'!
Smalltalk renameClassNamed: #AccountSummary as: #AccountReport!
!AccountSummaryTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:31:45' prior: 50867781!
assert:anAccount hasAccountSummary: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountReport for: anAccount).! !

!testRun: #AccountSummaryTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #AccountSummaryTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:31:58'!
PASSED!

!classRenamed: #AccountSummaryTest as: #AccountReportTest stamp: 'IO 11/14/2020 18:32:06'!
Smalltalk renameClassNamed: #AccountSummaryTest as: #AccountReportTest!

!testRun: #AccountReportTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #AccountReportTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:32:10'!
PASSED!

!classRenamed: #AccountReport as: #AccountReporter stamp: 'IO 11/14/2020 18:32:32'!
Smalltalk renameClassNamed: #AccountReport as: #AccountReporter!
!AccountReportTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:32:32' prior: 50869234!
assert:anAccount hasAccountSummary: aCollectionOfStrings
	
	self assert: aCollectionOfStrings equals: (AccountReporter for: anAccount).! !

!classRenamed: #AccountReportTest as: #AccountReporterTest stamp: 'IO 11/14/2020 18:32:39'!
Smalltalk renameClassNamed: #AccountReportTest as: #AccountReporterTest!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:32:40'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:32:40'!
PASSED!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:33:28' prior: 50869527!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountReport).! !
!AccountReporter methodsFor: 'evaluating' stamp: 'IO 11/14/2020 18:34:28' prior: 50868646!
accountSummaryFor: anAccount

	anAccount gatherAccountSummaryIn: self.
	
	report add: ('Balance = ', anAccount balance asString).
	
	^report.! !

Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 18:34:34'!
Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporter methodsFor: 'evaluating' stamp: 'IO 11/14/2020 18:34:53' prior: 50869687!
accountSummaryFor: anAccount

	account := 	anAccount.! !
!AccountReporter methodsFor: 'evaluating' stamp: 'IO 11/14/2020 18:35:12'!
accountSummary

	 account gatherAccountSummaryIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:35:14'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:35:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:35:14'!
PASSED!
!AccountReporter methodsFor: 'evaluating' stamp: 'IO 11/14/2020 18:35:19' prior: 50869713!
accountSummary

	account gatherAccountSummaryIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:35:20'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:35:20'!
ERROR!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:35:31' prior: 50869678!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountReport).! !
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:35:42' prior: 50869897!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:35:44'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:35:44'!
PASSED!
!AccountReporter methodsFor: 'evaluating' stamp: 'IO 11/14/2020 18:36:20'!
for: anAccount

	account := 	anAccount.! !
!AccountReporter class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:36:20' prior: 50868699!
for: anAccount
	^self new initialize for: anAccount! !

!methodRemoval: AccountReporter #accountSummaryFor: stamp: 'IO 11/14/2020 18:36:20'!
accountSummaryFor: anAccount

	account := 	anAccount.!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:36:24'!
PASSED!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:36:58'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:36:58'!
PASSED!
!AccountReporter class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 18:37:09' prior: 50870058!
for: anAccount
	^self new initializeFor: anAccount! !
!AccountReporter methodsFor: 'initialization' stamp: 'IO 11/14/2020 18:37:31' prior: 50868641!
initializeFor: anAccount

	report := OrderedCollection new.! !
!AccountReporter methodsFor: 'initialization' stamp: 'IO 11/14/2020 18:37:39' prior: 50870349!
initializeFor: anAccount

	report := OrderedCollection new.
	account := anAccount.
! !

!methodRemoval: AccountReporter #initialize stamp: 'IO 11/14/2020 18:37:41'!
initialize
	report := OrderedCollection new.!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:37:43'!
PASSED!

!methodRemoval: AccountReporter #for: stamp: 'IO 11/14/2020 18:37:52'!
for: anAccount

	account := 	anAccount.!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:37:54'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:37:54'!
PASSED!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:41:30'!
gatherAccountSummaryTextWith: reportMessage for: aTransaction

	report add: (reportMessage, aTransaction value asString, '.').! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:41:32'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:41:32'!
PASSED!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:41:42'!
addAccountSummaryTextWith: reportMessage for: aTransaction

	report add: (reportMessage, aTransaction value asString, '.').! !

!methodRemoval: AccountReporter #gatherAccountSummaryTextWith:for: stamp: 'IO 11/14/2020 18:41:53'!
gatherAccountSummaryTextWith: reportMessage for: aTransaction

	report add: (reportMessage, aTransaction value asString, '.').!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:42:37' prior: 50868654!
gatherAccountSummaryForDeposit: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:43:02' prior: 50868661!
gatherAccountSummaryForTransferDeposit: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:43:03'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:43:03'!
PASSED!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:43:20' prior: 50868669!
gatherAccountSummaryForTransferWithdraw: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:43:22'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:43:22'!
PASSED!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:43:42' prior: 50868677!
gatherAccountSummaryForWithdraw: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:43:43'!
PASSED!

!methodRemoval: AccountReporter #gatherForTransaction:withText: stamp: 'IO 11/14/2020 18:43:46'!
gatherForTransaction: aTransaction withText: reportMessage

	report add: (reportMessage, aTransaction value asString, '.').!
!Withdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 18:45:57'!
getReportedIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForWithdraw: self.! !
!AccountTransaction methodsFor: 'reports' stamp: 'IO 11/14/2020 18:45:57'!
getReportedIn: anAccountSummary
	"communicates to an account summary what class this transaction is"
	self subclassResponsibility ! !
!TransferDeposit methodsFor: 'reports' stamp: 'IO 11/14/2020 18:45:57' overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferDeposit: self.! !
!Deposit methodsFor: 'reports' stamp: 'IO 11/14/2020 18:45:57' overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForDeposit: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 18:45:57' overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferWithdraw: self.! !

!methodRemoval: Withdraw #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 18:45:57'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForWithdraw: self.!

!methodRemoval: AccountTransaction #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 18:45:57'!
gatherAccountSummaryIn: anAccountSummary
	"communicates to an account summary what class this transaction is"
	self subclassResponsibility !

!methodRemoval: TransferDeposit #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 18:45:57'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferDeposit: self.!

!methodRemoval: Deposit #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 18:45:57'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForDeposit: self.!

!methodRemoval: TransferWithdraw #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 18:45:57'!
gatherAccountSummaryIn: anAccountSummary

	anAccountSummary gatherAccountSummaryForTransferWithdraw: self.!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:46:01'!
ERROR!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:46:01'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:46:01'!
ERROR!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:46:01'!
ERROR!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:46:01'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:46:01'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:46:01'!
PASSED!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:47:17'!
ERROR!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:47:17'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:47:17'!
ERROR!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:47:17'!
ERROR!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:47:17'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:47:17'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:47:17'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:47:17'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/14/2020 18:48:12' prior: 50868616 overrides: 50869078!
gatherAccountSummaryIn: anAccountSummary
	"see superclass"
	
	transactions do: [:aTransaction | aTransaction getReportedIn: anAccountSummary ].! !

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:48:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:48:14'!
PASSED!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:49:33'!
addDepositToReport: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:49:33' prior: 50870958 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addDepositToReport: self.! !

!methodRemoval: AccountReporter #gatherAccountSummaryForDeposit: stamp: 'IO 11/14/2020 18:49:33'!
gatherAccountSummaryForDeposit: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:49:35'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:49:36'!
PASSED!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:50:07'!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:50:07' prior: 50870952 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addTransferDepositToReport: self.! !

!methodRemoval: AccountReporter #gatherAccountSummaryForTransferDeposit: stamp: 'IO 11/14/2020 18:50:07'!
gatherAccountSummaryForTransferDeposit: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:50:18'!
addTransferWithdrawToReport: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:50:18' prior: 50870964 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addTransferWithdrawToReport: self.! !

!methodRemoval: AccountReporter #gatherAccountSummaryForTransferWithdraw: stamp: 'IO 11/14/2020 18:50:18'!
gatherAccountSummaryForTransferWithdraw: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
!
!AccountReporter methodsFor: 'gathering transactions' stamp: 'IO 11/14/2020 18:50:30'!
addWithdrawToReport: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:50:30' prior: 50870938 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addWithdrawToReport: self.! !

!methodRemoval: AccountReporter #gatherAccountSummaryForWithdraw: stamp: 'IO 11/14/2020 18:50:30'!
gatherAccountSummaryForWithdraw: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:50:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:50:33'!
PASSED!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:51:30' prior: 50870789!
addAccountSummaryTextWith: aPrefix for: aTransaction

	report add: (aPrefix, aTransaction value asString, '.').
! !
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 18:52:22' prior: 50869858!
accountSummary

	account gatherAccountSummaryIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !

!classRenamed: #AccountReporter as: #AccountSummaryReporter stamp: 'IO 11/14/2020 18:53:05'!
Smalltalk renameClassNamed: #AccountReporter as: #AccountSummaryReporter!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:53:05' prior: 50869906!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountSummaryReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).! !

!classRenamed: #AccountTransaction as: #AccountSummaryTransaction stamp: 'IO 11/14/2020 18:53:12'!
Smalltalk renameClassNamed: #AccountTransaction as: #AccountSummaryTransaction!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:53:26'!
addDepositToAccountSummary: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:53:26' prior: 50871431 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addDepositToAccountSummary: self.! !

!methodRemoval: AccountSummaryReporter #addDepositToReport: stamp: 'IO 11/14/2020 18:53:26'!
addDepositToReport: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:53:28'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:53:28'!
PASSED!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:53:39'!
addTransferDepositToAccountSummary: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !

!methodRemoval: AccountSummaryReporter #addTransferDepositToReport: stamp: 'IO 11/14/2020 18:53:39'!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:53:42'!
ERROR!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:53:42'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:53:42'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:53:42'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:53:42'!
PASSED!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:53:50'!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !

!methodRemoval: AccountSummaryReporter #addTransferDepositToAccountSummary: stamp: 'IO 11/14/2020 18:53:50'!
addTransferDepositToAccountSummary: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:53:55'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:53:55'!
PASSED!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:54:05'!
addTransferDepositToAccountSummary: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:54:05' prior: 50871590 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addTransferDepositToAccountSummary: self.! !

!methodRemoval: AccountSummaryReporter #addTransferDepositToReport: stamp: 'IO 11/14/2020 18:54:05'!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:54:15'!
addTransferWithdrawToAccountSummary: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 18:54:15' prior: 50871613 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addTransferWithdrawToAccountSummary: self.! !

!methodRemoval: AccountSummaryReporter #addTransferWithdrawToReport: stamp: 'IO 11/14/2020 18:54:15'!
addTransferWithdrawToReport: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 18:54:27'!
addWithdrawToAccountSummary: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !

!methodRemoval: AccountSummaryReporter #addWithdrawToReport: stamp: 'IO 11/14/2020 18:54:27'!
addWithdrawToReport: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:56:28'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:56:28'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:56:28'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:56:28'!
PASSED!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:56:38'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:56:38'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:56:38'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:56:38'!
PASSED!

!testRun: #AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:56:46'!
ERROR!

!testRun: #AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:56:46'!
ERROR!

!testRun: #AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:56:46'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 18:56:46'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 18:56:46'!
PASSED!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:57:16'!
test01AccountSummaryForAnEmptyAccount
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!methodRemoval: AccountReporterTest #test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0 stamp: 'IO 11/14/2020 18:57:16'!
test01AnAccountSummaryOfAnEmptyAccountReturnsBalanceIs0
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:57:31'!
test02AccountSummaryForAnAccountWithADeposit
	
	|account1|
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !

!methodRemoval: AccountReporterTest #test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate stamp: 'IO 11/14/2020 18:57:31'!
test02AnAccountSummaryOfAnAccountWithADepositReturnsAccurate
	
	|account1|
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:57:42'!
test03AccountSummaryForAnAccountWithAWithdraw

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !

!methodRemoval: AccountReporterTest #test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate stamp: 'IO 11/14/2020 18:57:42'!
test03AnAccountSummaryOfAnAccountWithAWithdrawReturnsAccurate

	|account1|
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:58:06'!
test04AccountSummaryForAnAccountWithADepositTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!methodRemoval: AccountReporterTest #test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer stamp: 'IO 11/14/2020 18:58:06'!
test04AnAccountSummaryOfAnAccountWithAnOutgoingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:58:51'!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!methodRemoval: AccountReporterTest #test04AccountSummaryForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 18:58:51'!
test04AccountSummaryForAnAccountWithADepositTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account1 to: account2 of: 20.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:59:01'!
test05AnAccountSummaryOfAnAccountWithADepositTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !

!methodRemoval: AccountReporterTest #test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer stamp: 'IO 11/14/2020 18:59:01'!
test05AnAccountSummaryOfAnAccountWithAnIncommingTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:59:24'!
test07AccountReportForPortfolioWithOneAccount

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).! !

!methodRemoval: AccountReporterTest #test07APortfolioWithOneAccountsHasAccountsReport stamp: 'IO 11/14/2020 18:59:24'!
test07APortfolioWithOneAccountsHasAccountsReport

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	
	portfolio1 add: account1.
	
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:59:36'!
test06AccountSummaryForAPortfolioWithNoAccounts

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!methodRemoval: AccountReporterTest #test06APortfolioWithNoAccountsHasBalance0 stamp: 'IO 11/14/2020 18:59:36'!
test06APortfolioWithNoAccountsHasBalance0

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:59:42'!
test05AccountSummaryOfAnAccountWithADepositTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !

!methodRemoval: AccountReporterTest #test05AnAccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 18:59:42'!
test05AnAccountSummaryOfAnAccountWithADepositTransfer

	|account1 account2 |
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Transfer from: account2 to: account1 of: 30.	
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').!
!AccountReporterTest methodsFor: 'test' stamp: 'IO 11/14/2020 18:59:56'!
test08AccountSummaryForPortfolioWithManyAccounts

	| portfolio1 account1 account2 account3 report |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: portfolio1 hasAccountSummary: report .! !

!methodRemoval: AccountReporterTest #test08APortfolioWithManyAccountsHasCorrectBalanceInReport stamp: 'IO 11/14/2020 18:59:56'!
test08APortfolioWithManyAccountsHasCorrectBalanceInReport

	| portfolio1 account1 account2 account3 report |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: portfolio1 hasAccountSummary: report .!

!classRenamed: #AccountReporterTest as: #AccountSummaryReporterTest stamp: 'IO 11/14/2020 19:00:12'!
Smalltalk renameClassNamed: #AccountReporterTest as: #AccountSummaryReporterTest!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/14/2020 19:06:03'!
gatherReportIn: anAccountSummary
	"see superclass"
	
	accounts do: [:anAccount | anAccount gatherAccountSummaryIn: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/14/2020 19:06:03'!
gatherReportIn: anAccountSummary
	"see superclass"
	
	transactions do: [:aTransaction | aTransaction getReportedIn: anAccountSummary ].! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 19:06:03'!
gatherReportIn: anAccountSummary

	"gathers the data of this account for an account summary"

	self subclassResponsibility.
! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:06:03' prior: 50871792!
accountSummary

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:06:03' prior: 50868504 overrides: 50869078!
gatherAccountSummaryIn: anAccountSummary
	"see superclass"
	
	accounts do: [:anAccount | anAccount gatherReportIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:06:03' prior: 50873071 overrides: 50873085!
gatherReportIn: anAccountSummary
	"see superclass"
	
	accounts do: [:anAccount | anAccount gatherReportIn: anAccountSummary ].! !

!methodRemoval: Portfolio #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 19:06:03'!
gatherAccountSummaryIn: anAccountSummary
	"see superclass"
	
	accounts do: [:anAccount | anAccount gatherReportIn: anAccountSummary ].!

!methodRemoval: ReceptiveAccount #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 19:06:03'!
gatherAccountSummaryIn: anAccountSummary
	"see superclass"
	
	transactions do: [:aTransaction | aTransaction getReportedIn: anAccountSummary ].!

!methodRemoval: Account #gatherAccountSummaryIn: stamp: 'IO 11/14/2020 19:06:03'!
gatherAccountSummaryIn: anAccountSummary

	"gathers the data of this account for an account summary"

	self subclassResponsibility.
!

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:06:06'!
ERROR!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:06:06'!
ERROR!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:06:06'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:06:06'!
PASSED!

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:06:19'!
ERROR!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:06:19'!
ERROR!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:06:19'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:06:19'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:06:19'!
PASSED!
!Withdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 19:06:54' prior: 50871634 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addWithdrawToAccountSummary: self.! !

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:06:55'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:06:55'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/14/2020 19:07:38' prior: 50873078 overrides: 50873085!
gatherReportIn: anAccountSummary
	"see superclass"
	
	transactions do: [ :aTransaction | aTransaction getReportedIn: anAccountSummary ].! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/14/2020 19:07:40' prior: 50873558 overrides: 50873085!
gatherReportIn: anAccountSummary
	"see superclass"

	transactions do: [ :aTransaction | aTransaction getReportedIn: anAccountSummary ].! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/14/2020 19:08:09' prior: 50873109 overrides: 50873085!
gatherReportIn: anAccountSummary
	"see superclass"
	
	accounts do: [ :anAccount | anAccount gatherReportIn: anAccountSummary ].
! !

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:09:46'!
PASSED!

----SNAPSHOT----(14 November 2020 19:10:27) CuisUniversity-4384.image priorSource: 17155564!

----QUIT----(14 November 2020 19:10:30) CuisUniversity-4384.image priorSource: 17346175!

----STARTUP---- (14 November 2020 19:10:36) as /Users/ilanolkies/uba/ingsoft1/macos64/CuisUniversity-4384.image!


Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:10:54'!
Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountReporter stamp: 'IO 11/14/2020 19:10:57'!
Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #AccountSummaryReporter as: #AccountReporter stamp: 'IO 11/14/2020 19:11:01'!
Smalltalk renameClassNamed: #AccountSummaryReporter as: #AccountReporter!
!AccountSummaryReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:11:01' prior: 50871805!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).! !

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:12:15'!
AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountSummaryReporter stamp: 'IO 11/14/2020 19:12:42'!
AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #AccountReporter as: #AccountSummaryReporter stamp: 'IO 11/14/2020 19:12:46'!
Smalltalk renameClassNamed: #AccountReporter as: #AccountSummaryReporter!
!AccountSummaryReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:12:46' prior: 50873754!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountSummaryReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).! !

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:12:49'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:12:49'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:12:49'!
PASSED!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:12:49'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:12:49'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:12:49'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:12:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:12:50'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 19:14:05'!
validTransferOfValue100

	^Transfer from: firstAccount to: secondAccount of: 100.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:14:05' prior: 50868313!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	|aTransfer|
	
	self setUp.
	aTransfer := self validTransferOfValue100.
	
	self assert: (secondAccount hasRegistered: aTransfer deposit).
	self assert: (firstAccount hasRegistered: aTransfer withdraw).! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:14:05' prior: 50868324!
test03ATransferWithdrawAndDepositKnowTheirTransfer
	|aTransfer|
	
	self setUp.
	aTransfer := self validTransferOfValue100.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:14:05' prior: 50868304!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	self setUp.
	self validTransferOfValue100.
	
	self assert: 100 equals: secondAccount balance.
	self assert: -100 equals: firstAccount balance.! !

!methodRemoval: TransferTest #validTransferOf100Value stamp: 'IO 11/14/2020 19:14:05'!
validTransferOf100Value

	^Transfer from: firstAccount to: secondAccount of: 100.!

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:14:09'!
PASSED!

!classRenamed: #AccountSummaryTransaction as: #AccountTransaction stamp: 'IO 11/14/2020 19:14:30'!
Smalltalk renameClassNamed: #AccountSummaryTransaction as: #AccountTransaction!

!testRun: #AccountSummaryReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #AccountSummaryReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:14:33'!
PASSED!

Object subclass: #AccountReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:15:01'!
Object subclass: #AccountReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountReporter stamp: 'IO 11/14/2020 19:15:09'!
Object subclass: #AccountReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #TransferNetReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporterTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:15:32'!
TestCase subclass: #TransferNetReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #AccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:16:04'!
TestCase subclass: #AccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:16:18'!
AccountTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:16:37'!
AccountTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporterTest methodsFor: 'nil' stamp: 'IO 11/14/2020 19:18:34'!
test01TransferNetForAnEmptyAccount
	
	| anAccount aReporter |
	
	anAccount := ReceptiveAccount new.
	aReporter := TransferNetReporterTest for: anAccount.
	self assert: 0 equals: (aReporter transferNet).! !

!testRun: #TransferNetReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:18:37'!
ERROR!

!testRun: #TransferNetReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:18:47'!
ERROR!

!testRun: #TransferNetReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:18:47'!
ERROR!

TestCase subclass: #TransferNetReporterTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporterTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:19:07'!
TestCase subclass: #TransferNetReporterTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferNetReporterTest stamp: 'IO 11/14/2020 19:19:11'!
TestCase subclass: #TransferNetReporterTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #TransferNetReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReportTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:19:33'!
TestCase subclass: #TransferNetReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:20:47'!
Object subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReportTest methodsFor: 'no messages' stamp: 'IO 11/14/2020 19:20:40'!
test01TransferNetForEmptyAccount

	| anAccount aReporter |
	
	anAccount := ReceptiveAccount new.
	aReporter := TransferNetReporter for: anAccount.
	
	self assert: 0 equals: (aReporter transferNet).
! !

!testRun: #TransferNetReportTest #test01TransferNetForEmptyAccount stamp: 'IO 11/14/2020 19:20:58'!
ERROR!
!TransferNetReporter class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:21:04'!
for: aReceptiveAccount 
	self shouldBeImplemented.! !

!testRun: #TransferNetReportTest #test01TransferNetForEmptyAccount stamp: 'IO 11/14/2020 19:21:13'!
ERROR!
!TransferNetReporter class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:21:54' prior: 50874419!
for: aReceptiveAccount 
	^self basicNew initializeFor: aReceptiveAccount.
! !
!TransferNetReporter methodsFor: 'no messages' stamp: 'IO 11/14/2020 19:22:11'!
initializeFor: aReceptoiveAccount

	! !

!testRun: #TransferNetReportTest #test01TransferNetForEmptyAccount stamp: 'IO 11/14/2020 19:22:16'!
ERROR!

!testRun: #TransferNetReportTest #test01TransferNetForEmptyAccount stamp: 'IO 11/14/2020 19:22:16'!
ERROR!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:22:24'!
transferNet
	self shouldBeImplemented.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:22:28' prior: 50874444!
transferNet
	^0.
! !

!testRun: #TransferNetReportTest #test01TransferNetForEmptyAccount stamp: 'IO 11/14/2020 19:22:30'!
PASSED!

!classRemoval: #TransferNetReportTest stamp: 'IO 11/14/2020 19:24:45'!
TestCase subclass: #TransferNetReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferNetReporter stamp: 'IO 11/14/2020 19:24:47'!
Object subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #AccountSummaryReporter as: #AccountReporter stamp: 'IO 11/14/2020 19:24:53'!
Smalltalk renameClassNamed: #AccountSummaryReporter as: #AccountReporter!
!AccountSummaryReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:24:53' prior: 50873805!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).! !

!classRenamed: #AccountSummaryReporterTest as: #AccountReporterTest stamp: 'IO 11/14/2020 19:24:59'!
Smalltalk renameClassNamed: #AccountSummaryReporterTest as: #AccountReporterTest!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:25:52'!
test01TransferNetForAnEmptyAccount

	| account1 |

	account1 := ReceptiveAccount new.

	self assert: account1 hasTransferNet: 0.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:26:20'!
assert: anAccount hasTransferNet: aNetValue

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aNetValue equals: (reporter transferNet).! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:27:29'!
assert: anAccount hasReport: aReportName withResult: aReportResult

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aReportResult equals: (aReportName sendTo: reporter).! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:27:52' prior: 50874476!
assert:anAccount hasAccountSummary: aCollectionOfStrings

	self assert: anAccount hasReport: #accountSummary withResult: aCollectionOfStrings.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:27:56'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:27:56'!
PASSED!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:27:56'!
ERROR!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:28:06'!
test09AccountSummaryForAnEmptyAccount
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!methodRemoval: AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:06'!
test01AccountSummaryForAnEmptyAccount
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:28:27' prior: 50874498!
assert: anAccount hasTransferNet: aNetValue

	self assert: anAccount hasReport: #transferNet withResult: aNetValue.
! !

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:29'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:29'!
PASSED!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:29'!
ERROR!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:28:48'!
netValue
	^0.! !

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:50'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:50'!
PASSED!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:28:50'!
ERROR!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:29:08'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:29:08'!
PASSED!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:29:08'!
ERROR!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:29:35'!
transferNet
	^0.! !

!methodRemoval: AccountReporter #netValue stamp: 'IO 11/14/2020 19:29:35'!
netValue
	^0.!

!testRun: #AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #AccountReporterTest #test09AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:29:37'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:29:37'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 19:30:33'!
test01AccountSummaryForAnEmptyAccount
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!methodRemoval: AccountReporterTest #test09AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:30:33'!
test09AccountSummaryForAnEmptyAccount
	
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:30:39'!
test09TransferNetForAnEmptyAccount

	| account1 |

	account1 := ReceptiveAccount new.

	self assert: account1 hasTransferNet: 0.
! !

!methodRemoval: AccountReporterTest #test01TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:30:39'!
test01TransferNetForAnEmptyAccount

	| account1 |

	account1 := ReceptiveAccount new.

	self assert: account1 hasTransferNet: 0.
!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 19:31:56'!
test09TransferNetForAnAccountWithADepositTransfer

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account2 to: account1 of: 100.

	self assert: account1 hasTransferNet: 100.
! !

!testRun: #AccountReporterTest #test09TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:31:58'!
FAILURE!

!testRun: #AccountReporterTest #test09TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:31:58'!
FAILURE!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:32:52' prior: 50874806!
transferNet

	(account transactions size > 0) ^account transactions first value.
	^0.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:32:55'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:32:55'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:32:55'!
ERROR!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:33:10' prior: 50875003!
transferNet

	(account transactions size > 0) ifTrue: [^account transactions first value].
	^0.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:33:11'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:33:11'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 19:33:52'!
test10TransferNetForAnAccountWithADepositTransfer

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account2 to: account1 of: 100.

	self assert: account1 hasTransferNet: 100.
! !

!methodRemoval: AccountReporterTest #test09TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:33:52'!
test09TransferNetForAnAccountWithADepositTransfer

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account2 to: account1 of: 100.

	self assert: account1 hasTransferNet: 100.
!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 19:34:24'!
test10TransferNetForAnAccountWithAWidthdrawTransfer

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.

	self assert: account1 hasTransferNet: -100.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 19:34:29'!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.

	self assert: account1 hasTransferNet: -100.
! !

!methodRemoval: AccountReporterTest #test10TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:34:29'!
test10TransferNetForAnAccountWithAWidthdrawTransfer

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 100.

	self assert: account1 hasTransferNet: -100.
!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:37:29' prior: 50875047!
transferNet

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: TransferDeposit) ifTrue: [^account transactions first value].
		(account transactions first isKindOf: TransferWithdraw) ifTrue: [^account transactions first value negated].
	].
	^0.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:37:30'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:37:30'!
PASSED!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:38:20' prior: 50875146!
transferNet

	| transferNet |
	
	transferNet := 0.

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: TransferDeposit) ifTrue: [^account transactions first value].
		(account transactions first isKindOf: TransferWithdraw) ifTrue: [^account transactions first value negated].
	].

	^transferNet.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:38:21'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:38:21'!
PASSED!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:39:00' prior: 50875305!
transferNet

	| transferNet |
	
	transferNet := 0.

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: Transfer) ifTrue: [transferNet := account transactions first affectBalance: transferNet].
	].

	^transferNet.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:39:00'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:39:00'!
FAILURE!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:39:00'!
FAILURE!
!AccountReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:39:15' prior: 50875360!
transferNet

	| transferNet |
	
	transferNet := 0.

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: TransferComponents) ifTrue: [transferNet := account transactions first affectBalance: transferNet].
	].

	^transferNet.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:39:16'!
PASSED!

!classRenamed: #TransferComponents as: #TransferComponent stamp: 'IO 11/14/2020 19:39:21'!
Smalltalk renameClassNamed: #TransferComponents as: #TransferComponent!
!AccountReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:39:21' prior: 50875413!
transferNet

	| transferNet |
	
	transferNet := 0.

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: TransferComponent) ifTrue: [transferNet := account transactions first affectBalance: transferNet].
	].

	^transferNet.! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:44:56' prior: 50874516!
assert: anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:44:58'!
PASSED!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:45:19'!
AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:45:57'!
addDepositToReport: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:45:57' prior: 50871827 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addDepositToReport: self.! !

!methodRemoval: AccountReporter #addDepositToAccountSummary: stamp: 'IO 11/14/2020 19:45:57'!
addDepositToAccountSummary: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:46:01'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:46:01'!
PASSED!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:46:10'!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:46:10' prior: 50872293 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addTransferDepositToReport: self.! !

!methodRemoval: AccountReporter #addTransferDepositToAccountSummary: stamp: 'IO 11/14/2020 19:46:10'!
addTransferDepositToAccountSummary: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:46:13'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:46:13'!
PASSED!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:46:23'!
addTransferWithdrawToReport: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:46:23' prior: 50872316 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addTransferWithdrawToReport: self.! !

!methodRemoval: AccountReporter #addTransferWithdrawToAccountSummary: stamp: 'IO 11/14/2020 19:46:23'!
addTransferWithdrawToAccountSummary: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:46:26'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:46:26'!
PASSED!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:46:54'!
addWithdrawToReport: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:46:54' prior: 50873413 overrides: 50870944!
getReportedIn: anAccountSummary

	anAccountSummary addWithdrawToReport: self.! !

!methodRemoval: AccountReporter #addWithdrawToAccountSummary: stamp: 'IO 11/14/2020 19:46:54'!
addWithdrawToAccountSummary: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:46:56'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:46:56'!
PASSED!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:47:04' overrides: 50876058!
addWithdrawToReport: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !

!methodRemoval: AccountReporter #addWithdrawToReport: stamp: 'IO 11/14/2020 19:47:04'!
addWithdrawToReport: aWithdraw
	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:47:09' overrides: 50875888!
addTransferWithdrawToReport: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !

!methodRemoval: AccountReporter #addTransferWithdrawToReport: stamp: 'IO 11/14/2020 19:47:09'!
addTransferWithdrawToReport: aTransferWithdraw
	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:47:12' overrides: 50875718!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !

!methodRemoval: AccountReporter #addTransferDepositToReport: stamp: 'IO 11/14/2020 19:47:12'!
addTransferDepositToReport: aTransferDeposit
	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:47:17' overrides: 50875552!
addDepositToReport: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !

!methodRemoval: AccountReporter #addDepositToReport: stamp: 'IO 11/14/2020 19:47:17'!
addDepositToReport: aDeposit
	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.!
!AccountSummaryReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:47:21' overrides: 50871785!
addAccountSummaryTextWith: aPrefix for: aTransaction

	report add: (aPrefix, aTransaction value asString, '.').
! !

!methodRemoval: AccountReporter #addAccountSummaryTextWith:for: stamp: 'IO 11/14/2020 19:47:21'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	report add: (aPrefix, aTransaction value asString, '.').
!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:47:34' prior: 50875483!
assert: anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountSummaryReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter accountSummary).
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:47:35'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:47:38'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:47:38'!
PASSED!
!AccountSummaryReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 19:47:53' overrides: 50873093!
accountSummary

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !

!methodRemoval: AccountReporter #accountSummary stamp: 'IO 11/14/2020 19:47:53'!
accountSummary

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.!

Object subclass: #AccountReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:48:31'!
Object subclass: #AccountReporter
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: '	report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:48:37'!
AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: 'report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporter methodsFor: 'initialization' stamp: 'IO 11/14/2020 19:48:49' prior: 50870354!
initializeFor: anAccount

	account := anAccount.
! !
!AccountSummaryReporter methodsFor: 'nil' stamp: 'IO 11/14/2020 19:49:15' overrides: 50876532!
initializeFor: anAccount

	report := OrderedCollection new.
	super initializeFor: anAccount.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:49:17'!
PASSED!

AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:49:36'!
AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:50:00'!
AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'no messages' stamp: 'IO 11/14/2020 19:50:03' overrides: 50875471!
transferNet

	| transferNet |
	
	transferNet := 0.

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: TransferComponent) ifTrue: [transferNet := account transactions first affectBalance: transferNet].
	].

	^transferNet.! !

!methodRemoval: AccountReporter #transferNet stamp: 'IO 11/14/2020 19:50:07'!
transferNet

	| transferNet |
	
	transferNet := 0.

	(account transactions size > 0) ifTrue: [
		(account transactions first isKindOf: TransferComponent) ifTrue: [transferNet := account transactions first affectBalance: transferNet].
	].

	^transferNet.!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:50:39'!
addDepositToReport: aDeposit
	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:50:49'!
addWithdrawToReport: aWithdraw
	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:50:57'!
addTransferWithdrawToReport: aWithdraw
	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 19:51:01'!
addTransferDepositToReport: aDeposit
	self subclassResponsibility.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 19:53:15'!
test12TransferNetForAnAccountWithManyTransfers

	| account1 account2 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer from: account1 to: account2 of: 50.
	Transfer from: account2 to: account1 of: 100.

	self assert: account1 hasTransferNet: 50.
! !

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:53:17'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:53:17'!
ERROR!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:54:12' prior: 50876717!
transferNet

	| transferNet |
	
	transferNet := 0.

	account transactions do: [ :transaction |
		(transaction isKindOf: TransferComponent) ifTrue: [transferNet := transaction affectBalance: transferNet].
	].

	^transferNet.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:54:13'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:54:13'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:54:13'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:54:13'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:54:13'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:54:28'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:54:28'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:54:28'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:54:28'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:54:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:54:29'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:54:53'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:54:53'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:54:53'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:54:53'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:54:53'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:54:53'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:55:40' prior: 50874685!
assert: anAccount hasTransferNet: aNetValue

	| reporter |
	reporter := TransferNetReporter for: anAccount.
	self assert: aNetValue equals: (reporter accountSummary).
! !

!methodRemoval: AccountReporterTest #assert:hasReport:withResult: stamp: 'IO 11/14/2020 19:55:51'!
assert: anAccount hasReport: aReportName withResult: aReportResult

	| reporter |
	reporter := AccountReporter for: anAccount.
	self assert: aReportResult equals: (aReportName sendTo: reporter).!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:55:54'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:55:54'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:55:54'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:55:54'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:55:54'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:56:07'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:56:07'!
ERROR!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 19:56:30' prior: 50877242!
assert: anAccount hasTransferNet: aNetValue

	| reporter |
	reporter := TransferNetReporter for: anAccount.
	self assert: aNetValue equals: (reporter transferNet).
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 19:56:31'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 19:56:31'!
PASSED!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:58:05' prior: 50876778!
transferNet

	account gatherReportIn: self.
	
	

	"| transferNet |
	
	transferNet := 0.

	account transactions do: [ :transaction |
		(transaction isKindOf: TransferComponent) ifTrue: [transferNet := transaction affectBalance: transferNet].
	].

	^transferNet."! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:58:29' overrides: 50876738!
addDepositToReport: aDeposit
	
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:58:44' overrides: 50876753!
addTransferDepositToReport: aDeposit

! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:58:55' overrides: 50876748!
addTransferWithdrawToReport: aDeposit

! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:58:59' overrides: 50876743!
addWithdrawToReport: aDeposit

! !

AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 19:59:14'!
AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:59:21' prior: 50877472!
transferNet

	account gatherReportIn: self.


	"| transferNet |
	
	transferNet := 0.

	account transactions do: [ :transaction |
		(transaction isKindOf: TransferComponent) ifTrue: [transferNet := transaction affectBalance: transferNet].
	].

	^transferNet."! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:59:46' prior: 50877489 overrides: 50876753!
addTransferDepositToReport: aDeposit

	transferNet := aDeposit affectBalance: transferNet.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 19:59:50' prior: 50877494 overrides: 50876748!
addTransferWithdrawToReport: aDeposit

	transferNet := aDeposit affectBalance: transferNet.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:00:05' prior: 50877517!
transferNet

	account gatherReportIn: self.

	^transferNet.


	"| transferNet |
	
	transferNet := 0.

	account transactions do: [ :transaction |
		(transaction isKindOf: TransferComponent) ifTrue: [transferNet := transaction affectBalance: transferNet].
	].

	^transferNet."! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:00:06'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:00:06'!
FAILURE!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:00:06'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:00:06'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:00:06'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:00:16'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:00:16'!
FAILURE!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:00:16'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:00:16'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:00:16'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:00:54'!
ERROR!
!TransferNetReporter methodsFor: 'nil' stamp: 'IO 11/14/2020 20:02:12' overrides: 50876532!
initializeFor: anAccount

	transferNet := 0.
	super initializeFor: anAccount.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 20:02:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 20:02:14'!
PASSED!
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:02:57' prior: 50876753!
addTransferDepositToReport: aTransferDeposit
	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:01' prior: 50876748!
addTransferWithdrawToReport: aTransferWithdraw
	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:05' prior: 50876743!
addWithdrawToReport: aTransferWithdraw
	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:18' prior: 50876738!
addDepositToReport: aDeposit

	"add a deposit to this report"

	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:28' prior: 50877807!
addTransferDepositToReport: aTransferDeposit

	"add a transfer deposit to this report"

	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:39' prior: 50877813!
addTransferWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:46' prior: 50877838!
addTransferWithdrawToReport: aTransferWithdraw

	"add a transfer withdraw to this report"

	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'add to report' stamp: 'IO 11/14/2020 20:03:51' prior: 50877819!
addWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
! !
!AccountReporter methodsFor: 'initialization' stamp: 'IO 11/14/2020 20:04:07' prior: 50876532!
initializeFor: anAccount

	"initialize a report for an account"

	account := anAccount.
! !
!AccountSummaryReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 20:04:20' prior: 50876493!
accountSummary

	"get account summary report"

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:05:23' prior: 50877544!
transferNet

	account gatherReportIn: self.

	^transferNet.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:05:28' prior: 50877873!
transferNet

	account gatherReportIn: self.

	^transferNet.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:05:55'!
addTransferToReport: aDeposit

	transferNet := aDeposit affectBalance: transferNet.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:06:17' prior: 50877530 overrides: 50877831!
addTransferDepositToReport: aTransferDeposit

	self addTransferToReport: aTransferDeposit.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:05' prior: 50877537 overrides: 50877845!
addTransferWithdrawToReport: aTransferWithdraw

	self addTransferToReport: aTransferWithdraw.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:20' prior: 50877484 overrides: 50877825!
addDepositToReport: aDeposit

	"see superclass"

	
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:27' prior: 50877891 overrides: 50877831!
addTransferDepositToReport: aTransferDeposit

	"see superclass"

	self addTransferToReport: aTransferDeposit.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:30' prior: 50877884!
addTransferToReport: aDeposit

	"see superclass"

	transferNet := aDeposit affectBalance: transferNet.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:33' prior: 50877898 overrides: 50877845!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addTransferToReport: aTransferWithdraw.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:37' prior: 50877499 overrides: 50877852!
addWithdrawToReport: aDeposit

	"see superclass"

! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:07:55' prior: 50877650 overrides: 50877859!
initializeFor: anAccount

	"initialize a transfer net report"

	transferNet := 0.
	super initializeFor: anAccount.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:08:06' prior: 50877879!
transferNet

	account gatherReportIn: self.

	^transferNet.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:08:23'!
emitReport

	account gatherReportIn: self.

	^transferNet.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:08:23' prior: 50877312!
assert: anAccount hasTransferNet: aNetValue

	| reporter |
	reporter := TransferNetReporter for: anAccount.
	self assert: aNetValue equals: (reporter emitReport).
! !

!methodRemoval: TransferNetReporter #transferNet stamp: 'IO 11/14/2020 20:08:23'!
transferNet

	account gatherReportIn: self.

	^transferNet.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 20:08:26'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 20:08:26'!
PASSED!
!AccountSummaryReporter methodsFor: 'reports' stamp: 'IO 11/14/2020 20:08:39'!
emitReport

	"get account summary report"

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:08:39' prior: 50876294!
assert: anAccount hasAccountSummary: aCollectionOfStrings

	| reporter |
	reporter := AccountSummaryReporter for: anAccount.
	self assert: aCollectionOfStrings equals: (reporter emitReport).
! !

!methodRemoval: AccountSummaryReporter #accountSummary stamp: 'IO 11/14/2020 20:08:39'!
accountSummary

	"get account summary report"

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.!
!AccountReporter methodsFor: 'initialization' stamp: 'IO 11/14/2020 20:09:01'!
emitReport

	"emit this report"

	self subclassResponsibility.

! !
!AccountReporter class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 20:10:29' prior: 50870344!
for: anAccount

	"create a report for an account"

	^self new initializeFor: anAccount! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 20:12:46' prior: 50876280!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"see superclass"

	report add: (aPrefix, aTransaction value asString, '.').
! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 20:12:49' prior: 50876268 overrides: 50877825!
addDepositToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 20:12:52' prior: 50876253 overrides: 50877831!
addTransferDepositToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 20:12:55' prior: 50876238 overrides: 50877845!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 20:12:58' prior: 50876225 overrides: 50877852!
addWithdrawToReport: aWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 20:13:10' prior: 50878122 overrides: 50878146!
emitReport

	"see superclass"

	account gatherReportIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 20:13:14' prior: 50877952 overrides: 50878146!
emitReport

	"see superclass"

	account gatherReportIn: self.

	^transferNet.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:14:27'!
assert: anAccount hasReport: aReporterClass withResult: aNetValue

	| reporter |
	reporter := aReporterClass for: anAccount.
	self assert: aNetValue equals: (reporter emitReport).
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:14:39' prior: 50878216!
assert: anAccount hasReport: aReporterClass withResult: aReportResult

	| reporter |
	reporter := aReporterClass for: anAccount.
	self assert: aReportResult equals: (reporter emitReport).
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:14:54' prior: 50878130!
assert: anAccount hasAccountSummary: aCollectionOfStrings

	self assert: anAccount hasReport: AccountSummaryReporter withResult: aCollectionOfStrings.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:14:54'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:14:54'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:15:12' prior: 50877958!
assert: anAccount hasTransferNet: aNetValue

	self assert: anAccount hasReport: TransferNetReporter withResult: aNetValue.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:15:13'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:15:13'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:16:33' prior: 50872901!
test07AccountReportForPortfolioWithOneAccount

	| portfolio1 account1 account2 |

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	

	portfolio1 add: account1.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:18:32' prior: 50872992!
test08AccountSummaryForPortfolioWithManyAccounts

	| portfolio1 account1 account2 account3 report |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	portfolio1 add: account2. 	

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account3 of: 20.
	Transfer from: account3 to: account1 of: 30.
	
	Deposit register: 200 on: account2.
	Withdraw register: 100 on: account2.
	Transfer from: account2 to: account3 of: 40.
	Transfer from: account3 to: account2 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:18:36'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:18:36'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:19:37'!
test13TransferNetForAPortfolioWithManyTransfers

	| account1 account2 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	Transfer from: account1 to: account2 of: 50.
	Transfer from: account2 to: account1 of: 100.

	self assert: portfolio1 hasTransferNet: 50.
! !

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:19:38'!
PASSED!

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:19:38'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:20:30' prior: 50878450!
test13TransferNetForAPortfolioWithManyTransfers

	| account1 account2 account3 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio1 add: account3.
	
	Transfer from: account1 to: account2 of: 50.
	Transfer from: account2 to: account1 of: 100.
	Transfer from: account2 to: account3 of: 20.

	self assert: portfolio1 hasTransferNet: 50.
! !

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:20:30'!
FAILURE!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:20:37' prior: 50878518!
test13TransferNetForAPortfolioWithManyTransfers

	| account1 account2 account3 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio1 add: account3.
	
	Transfer from: account1 to: account2 of: 50.
	Transfer from: account2 to: account1 of: 100.
	Transfer from: account2 to: account3 of: 20.

	self assert: portfolio1 hasTransferNet: 70.
! !

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:20:37'!
PASSED!

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:20:37'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:21:33' prior: 50874969!
test09TransferNetForAnEmptyAccount

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	self assert: account1 hasTransferNet: 0.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:22:48'!
craetePortfolio

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	^portfolio1.
! !
!AccountReporterTest methodsFor: 'utils' stamp: 'IO 11/14/2020 20:23:44'!
createPortfolio

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	^portfolio1.
! !

!methodRemoval: AccountReporterTest #craetePortfolio stamp: 'IO 11/14/2020 20:23:44'!
craetePortfolio

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	^portfolio1.
!

!methodRemoval: AccountReporterTest #createPortfolio stamp: 'IO 11/14/2020 20:24:59'!
createPortfolio

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	^portfolio1.
!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:25:02'!
PASSED!

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:25:02'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:25:08' prior: 50878611!
test09TransferNetForAnEmptyAccount

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	self assert: portfolio1 hasTransferNet: 0.
! !

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:25:09'!
PASSED!

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:25:09'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:25:36' prior: 50875091!
test10TransferNetForAnAccountWithADepositTransfer

	| account1 account2 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	Transfer from: account2 to: account1 of: 100.

	self assert: portfolio1 hasTransferNet: 100.
! !

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:25:37'!
PASSED!

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:25:37'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:25:59' prior: 50875124!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| account1 account2 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	portfolio1 := Portfolio new.

	Transfer from: account1 to: account2 of: 100.

	self assert: portfolio1 hasTransferNet: -100.
! !

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:25:59'!
FAILURE!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:26:12' prior: 50878832!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| account1 account2 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	Transfer from: account1 to: account2 of: 100.

	self assert: portfolio1 hasTransferNet: -100.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:26:27' prior: 50876758!
test12TransferNetForAnAccountWithManyTransfers

	| account1 account2 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	
	Transfer from: account1 to: account2 of: 50.
	Transfer from: account2 to: account1 of: 100.

	self assert: portfolio1 hasTransferNet: 50.
! !

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!testRun: #AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:26:27'!
PASSED!

!methodRemoval: AccountReporterTest #test13TransferNetForAPortfolioWithManyTransfers stamp: 'IO 11/14/2020 20:26:30'!
test13TransferNetForAPortfolioWithManyTransfers

	| account1 account2 account3 portfolio1 |

	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	account3 := ReceptiveAccount new.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio1 add: account3.
	
	Transfer from: account1 to: account2 of: 50.
	Transfer from: account2 to: account1 of: 100.
	Transfer from: account2 to: account3 of: 20.

	self assert: portfolio1 hasTransferNet: 70.
!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:27:49' prior: 50872947!
test06AccountSummaryForAPortfolioWithNoAccounts

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:27:57' prior: 50874952!
test01AccountSummaryForAnEmptyAccount
	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:27:58' prior: 50878956!
test01AccountSummaryForAnEmptyAccount

	|account1|
	account1 := ReceptiveAccount new.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:28:07' prior: 50872774!
test02AccountSummaryForAnAccountWithADeposit

	|account1|
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:28:11' prior: 50878974!
test02AccountSummaryForAnAccountWithADeposit

	| account1 |
	account1 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:28:17' prior: 50872797!
test03AccountSummaryForAnAccountWithAWithdraw

	| account1 |
	account1 := ReceptiveAccount new.
	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !

Object subclass: #AccountReporterTestUtil
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporterTestUtil category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 20:29:23'!
Object subclass: #AccountReporterTestUtil
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #AccountReporterTestUtil as: #AccountFactory stamp: 'IO 11/14/2020 20:30:09'!
Smalltalk renameClassNamed: #AccountReporterTestUtil as: #AccountFactory!

!classRenamed: #AccountFactory as: #AccountTestFactory stamp: 'IO 11/14/2020 20:30:14'!
Smalltalk renameClassNamed: #AccountFactory as: #AccountTestFactory!
!AccountTestFactory class methodsFor: 'no messages' stamp: 'IO 11/14/2020 20:32:41'!
withTwoAccounts
	^self basicNew initializeWithTwoAccounts.
	! !

!classDefinition: #AccountTestFactory category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 20:33:21'!
Object subclass: #AccountTestFactory
	instanceVariableNames: 'account1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTestFactory category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 20:33:22'!
Object subclass: #AccountTestFactory
	instanceVariableNames: 'account1 account2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTestFactory methodsFor: 'no messages' stamp: 'IO 11/14/2020 20:33:17'!
initializeWithTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.! !
!AccountTestFactory methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:33:31'!
account1
	^account1.
! !
!AccountTestFactory methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:33:34'!
account2
	^account2.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:34:35' prior: 50872847!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 20.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:34:40' prior: 50878996!
test03AccountSummaryForAnAccountWithAWithdraw

	| account1 |
	account1 := ReceptiveAccount new.

	Withdraw register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:34:43' prior: 50878985!
test02AccountSummaryForAnAccountWithADeposit

	| account1 |
	account1 := ReceptiveAccount new.

	Deposit register: 100 on: account1.
	
	self assert:account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !

!classRenamed: #AccountTestFactory as: #AccountTestSetup stamp: 'IO 11/14/2020 20:34:54'!
Smalltalk renameClassNamed: #AccountTestFactory as: #AccountTestSetup!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:34:54' prior: 50879065!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accounts |
	accounts := AccountTestSetup withTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 20.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!AccountTestSetup class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:35:20'!
withOneAccount
	^self basicNew initializeWithOneAccount.
	! !
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:35:32'!
initializeWithOneAccount
	account1 := ReceptiveAccount new.! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:37:50' prior: 50879107!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accountss |
	accountss := AccountTestSetup withTwoAccounts.

	Transfer from: accountss account1 to: accountss account2 of: 20.	
	
	self assert: accountss account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!classDefinition: #AccountReporterTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 20:38:39'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:38:38'!
setUpWith: aSetUpMessage

	accounts := aSetUpMessage sendTo: AccountTestSetup.
! !
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:39:05'!
withOneAccount
	account1 := ReceptiveAccount new.! !

!methodRemoval: AccountTestSetup #initializeWithOneAccount stamp: 'IO 11/14/2020 20:39:11'!
initializeWithOneAccount
	account1 := ReceptiveAccount new.!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:39:19'!
withTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.! !
!AccountTestSetup class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:39:19' prior: 50879030!
withTwoAccounts
	^self basicNew withTwoAccounts.
	! !

!methodRemoval: AccountTestSetup #initializeWithTwoAccounts stamp: 'IO 11/14/2020 20:39:19'!
initializeWithTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:39:38'!
setUp: aSetUpMessage

	accounts := aSetUpMessage sendTo: AccountTestSetup.
! !

!methodRemoval: AccountReporterTest #setUpWith: stamp: 'IO 11/14/2020 20:39:38'!
setUpWith: aSetUpMessage

	accounts := aSetUpMessage sendTo: AccountTestSetup.
!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:39:45' prior: 50879186!
setUp: withASetUpMessage

	accounts := withASetUpMessage sendTo: AccountTestSetup.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:40:09' prior: 50878965!
test01AccountSummaryForAnEmptyAccount

	self setUp: #withOneAccount.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:40:10'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:40:28'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:40:28'!
ERROR!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:41:01'!
initializeWithOneAccount
	account1 := ReceptiveAccount new.! !

!methodRemoval: AccountTestSetup #withOneAccount stamp: 'IO 11/14/2020 20:41:01'!
withOneAccount
	account1 := ReceptiveAccount new.!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:41:11'!
initializeWithTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.! !
!AccountTestSetup class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:41:11' prior: 50879175!
withTwoAccounts
	^self basicNew initializeWithTwoAccounts.
	! !

!methodRemoval: AccountTestSetup #withTwoAccounts stamp: 'IO 11/14/2020 20:41:11'!
withTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 20:41:16'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 20:41:16'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:41:48' prior: 50879090!
test02AccountSummaryForAnAccountWithADeposit

	self setUp: #withOneAccount.

	Deposit register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:41:49'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:41:49'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:42:11' prior: 50879079!
test03AccountSummaryForAnAccountWithAWithdraw

	self setUp: #withOneAccount.

	Withdraw register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:42:12'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:42:12'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:42:39' prior: 50879131!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	self setUp: #withTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 20.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:42:40'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:42:40'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:43:09' prior: 50872965!
test05AccountSummaryOfAnAccountWithADepositTransfer
	
	self setUp: #withTwoAccounts

	Transfer from: accounts account2 to: accounts account1 of: 30.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:43:15' prior: 50879583!
test05AccountSummaryOfAnAccountWithADepositTransfer
	
	self setUp: #withTwoAccounts.

	Transfer from: accounts account2 to: accounts account1 of: 30.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:43:15'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:43:15'!
PASSED!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:43:45'!
initializeWithPortfolioAndTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:44:08' prior: 50878342!
test07AccountReportForPortfolioWithOneAccount

	| portfolio1 account1 account2 |
	
	self setUp: #initializeWithPortfolioAndTwoAccounts.

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	

	portfolio1 add: account1.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).
! !

!classDefinition: #AccountTestSetup category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 20:44:28'!
Object subclass: #AccountTestSetup
	instanceVariableNames: 'account1 account2 portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:44:27' prior: 50879657!
initializeWithPortfolioAndTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	portfolio1 := Portfolio new.! !
!AccountTestSetup class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:44:42'!
withPortfolioAndTwoAccounts
	^self basicNew initializeWithPortfolioAndTwoAccounts.
	! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:44:44'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 20:44:44'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:44:44'!
ERROR!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:45:02' prior: 50879664!
test07AccountReportForPortfolioWithOneAccount

	| portfolio1 account1 account2 |
	
	self setUp: #withPortfolioAndTwoAccounts.

	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	

	portfolio1 add: account1.

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.

	self assert: portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).
! !

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:45:02'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:45:03'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:45:03'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:45:29' prior: 50879866!
test07AccountReportForPortfolioWithOneAccount
	
	self setUp: #withPortfolioAndTwoAccounts.

	Deposit register: 100 on: accounts account1.
	Withdraw register: 50 on: accounts account1.
	Transfer from: accounts account1 to: accounts account2 of: 20.
	Transfer from: accounts account2 to: accounts account1 of: 30.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).
! !
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:45:43'!
portfolio1
	^portfolio1.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:45:45'!
FAILURE!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 20:45:45'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:45:45'!
FAILURE!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:46:00' prior: 50879697!
initializeWithPortfolioAndTwoAccounts
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	portfolio1 := Portfolio new.
	portfolio1 add: account1.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:46:01'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:46:05'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:46:05'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:46:49' prior: 50878365!
test08AccountSummaryForPortfolioWithManyAccounts

	| portfolio1 account1 account2 account3 report |
	
	portfolio1 := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.	
	account3 := ReceptiveAccount new.
	
	portfolio1 add: account1. 
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.
	
	portfolio1 add: account3. 	
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: account2 of: 40.
	Transfer from: account2 to: account3 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:46:50'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:46:50'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:47:44' prior: 50880218!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |
	self setUp: #withPortfolioAndTwoAccounts.
	account3 := ReceptiveAccount new.
	
	Deposit register: 100 on: accounts account1.
	Withdraw register: 50 on: accounts account1.
	Transfer from: accounts account1 to: accounts account2 of: 20.
	Transfer from: accounts account2 to: accounts account1 of: 30.
	
	accounts portfolio1 add: account3. 	
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:47:45'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:47:45'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:47:55' prior: 50880304!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |

	self setUp: #withPortfolioAndTwoAccounts.
	
	Deposit register: 100 on: accounts account1.
	Withdraw register: 50 on: accounts account1.
	Transfer from: accounts account1 to: accounts account2 of: 20.
	Transfer from: accounts account2 to: accounts account1 of: 30.
	
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3. 	
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:48:32' prior: 50879939!
test07AccountReportForPortfolioWithOneAccount
	
	self setUp: #withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	Deposit register: 100 on: accounts account1.
	Withdraw register: 50 on: accounts account1.
	Transfer from: accounts account1 to: accounts account2 of: 20.
	Transfer from: accounts account2 to: accounts account1 of: 30.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:48:36' prior: 50880425!
test07AccountReportForPortfolioWithOneAccount
	
	self setUp: #withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'
		with: 'Balance = 60'
	).
! !
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:48:51'!
mockAllTransactions! !
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:49:40' prior: 50880462!
mockAllTransactions

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer from: account1 to: account2 of: 20.
	Transfer from: account2 to: account1 of: 30.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:49:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:49:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:49:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:49:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:49:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:49:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:49:41'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:49:41'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:49:41'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:49:41'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:49:41'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:49:41'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:49:57' prior: 50880389!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |

	self setUp: #withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3. 	
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:49:58'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:49:58'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:50:01' prior: 50880521!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |

	self setUp: #withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3. 	
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:50:02'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:50:02'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:51:03' prior: 50880447!
test07AccountReportForPortfolioWithOneAccount
	
	| report |

	self setUp: #withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	
	report := OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.
		
	report add: 'Balance = 60'.

	self assert: accounts portfolio1 hasAccountSummary: report.
! !

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:51:04'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:51:04'!
PASSED!
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:51:48'!
mockedTransactionsAccountSummary

	^OrderedCollection
		with: 'Dep�stio por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:52:09' prior: 50880679!
test07AccountReportForPortfolioWithOneAccount
	
	| report |

	self setUp: #withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	
	report := accounts mockedTransactionsAccountSummary.
		
	report add: 'Balance = 60'.

	self assert: accounts portfolio1 hasAccountSummary: report.
! !

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:52:09'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:52:09'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:52:19' prior: 50880600!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |

	self setUp: #withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3. 	
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:52:20'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:52:20'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:52:29' prior: 50880816!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |

	self setUp: #withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3. 
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:52:31' prior: 50880892!
test08AccountSummaryForPortfolioWithManyAccounts

	| account3 report |

	self setUp: #withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3.
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:52:32'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:52:32'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:52:53' prior: 50878704!
test09TransferNetForAnEmptyAccount

	| account1 portfolio1 |

	account1 := ReceptiveAccount new.
	portfolio1 := Portfolio new.

	self assert: portfolio1 hasTransferNet: 0.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:53:00' prior: 50880993!
test09TransferNetForAnEmptyAccount

	| portfolio1 |

	portfolio1 := Portfolio new.

	self assert: portfolio1 hasTransferNet: 0.
! !

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:53:01'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:53:01'!
PASSED!
!AccountTestSetup class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:53:30'!
withEmptyPortfolio
	^self basicNew initializeWithPortfolioAndTwoAccounts.
	! !
!AccountTestSetup class methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:53:37' prior: 50881058!
withEmptyPortfolio
	^self basicNew initializeWithEmptyPortfolio.
	! !
!AccountTestSetup methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 20:53:53'!
initializeWithEmptyPortfolio
	portfolio1 := Portfolio new.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:54:24' prior: 50878947!
test06AccountSummaryForAPortfolioWithNoAccounts

	self setUp: #withEmptyPortfolio.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').
! !

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:54:25'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:54:25'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:55:18' prior: 50881002!
test09TransferNetForAnEmptyAccount

	self setUp: #withEmptyPortfolio.

	self assert: accounts portfolio1 hasTransferNet: 0.
! !

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:55:19'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:55:19'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:55:49' prior: 50878766!
test10TransferNetForAnAccountWithADepositTransfer

	self setUp: #withPortfolioAndTwoAccounts.
	
	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: accounts portfolio1 hasTransferNet: 100.
! !

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:55:49'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:55:49'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:56:05' prior: 50878848!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	self setUp: #withPortfolioAndTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 100.

	self assert: accounts portfolio1 hasTransferNet: -100.
! !

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:56:06'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:56:06'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 20:56:41' prior: 50878861!
test12TransferNetForAnAccountWithManyTransfers

	self setUp: #withPortfolioAndTwoAccounts.
	
	Transfer from: accounts account1 to: accounts account2 of: 50.
	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: accounts portfolio1 hasTransferNet: 50.
! !

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:56:41'!
PASSED!

TestCase subclass: #AccountReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporterTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 20:58:29'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:58:48' prior: 50879203!
test01AccountSummaryForAnEmptyAccount

	| accounts |
	accounts := #withOneAccount.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:58:49'!
ERROR!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:58:58' prior: 50879400!
test02AccountSummaryForAnAccountWithADeposit

	| accounts |
	accounts := #withOneAccount.

	Deposit register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:03' prior: 50879460!
test03AccountSummaryForAnAccountWithAWithdraw

	| accounts |
	accounts := #withOneAccount.

	Withdraw register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:25' prior: 50881383!
test01AccountSummaryForAnEmptyAccount

	| accounts |
	accounts := AccountTestSetup withOneAccount.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:29' prior: 50881396!
test02AccountSummaryForAnAccountWithADeposit

	| accounts |
	accounts := AccountTestSetup withOneAccount.

	Deposit register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:30'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:59:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:30'!
ERROR!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:36' prior: 50881408!
test03AccountSummaryForAnAccountWithAWithdraw

	| accounts |
	accounts := AccountTestSetup withOneAccount.

	Withdraw register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:59:37'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:59:37'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:42' prior: 50879521!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accounts |
	accounts := AccountTestSetup withTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 20.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:59:43'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:59:43'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:48' prior: 50879596!
test05AccountSummaryOfAnAccountWithADepositTransfer

	| accounts |
	accounts := AccountTestSetup withTwoAccounts.

	Transfer from: accounts account2 to: accounts account1 of: 30.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:59:49'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:59:49'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 20:59:54' prior: 50881075!
test06AccountSummaryForAPortfolioWithNoAccounts

	| accounts |
	accounts := AccountTestSetup withEmptyPortfolio.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').
! !

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 20:59:54'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 20:59:54'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 21:00:11' prior: 50880754!
test07AccountReportForPortfolioWithOneAccount
	
	| report accounts |

	accounts := AccountTestSetup withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	
	report := accounts mockedTransactionsAccountSummary.
		
	report add: 'Balance = 60'.

	self assert: accounts portfolio1 hasAccountSummary: report.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 21:00:15' prior: 50881741!
test07AccountReportForPortfolioWithOneAccount
	
	| accounts report |

	accounts := AccountTestSetup withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	
	report := accounts mockedTransactionsAccountSummary.
		
	report add: 'Balance = 60'.

	self assert: accounts portfolio1 hasAccountSummary: report.
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 21:00:28' prior: 50880918!
test08AccountSummaryForPortfolioWithManyAccounts

	| accounts account3 report |

	accounts := AccountTestSetup withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3.
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:00:51' prior: 50881133!
test09TransferNetForAnEmptyAccount

	| accounts |

	accounts := AccountTestSetup withEmptyPortfolio.

	self assert: accounts portfolio1 hasTransferNet: 0.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:01:01' prior: 50881794!
test09TransferNetForAnEmptyAccount

	| accounts |

	accounts := AccountTestSetup withEmptyPortfolio.

	self assert: accounts portfolio1 hasTransferNet: 0.
! !

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:03'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:04'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:04'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:01:08' prior: 50881189!
test10TransferNetForAnAccountWithADepositTransfer

	| accounts |

	accounts := AccountTestSetup withPortfolioAndTwoAccounts.
	
	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: accounts portfolio1 hasTransferNet: 100.
! !

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:09'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:09'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:01:13' prior: 50881249!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| accounts |

	accounts := AccountTestSetup withPortfolioAndTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 100.

	self assert: accounts portfolio1 hasTransferNet: -100.
! !

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:13'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:13'!
PASSED!
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:01:17' prior: 50881309!
test12TransferNetForAnAccountWithManyTransfers

	| accounts |

	accounts := AccountTestSetup withPortfolioAndTwoAccounts.
	
	Transfer from: accounts account1 to: accounts account2 of: 50.
	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: accounts portfolio1 hasTransferNet: 50.
! !

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:17'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:01:25'!
PASSED!

!methodRemoval: AccountReporterTest #setUp: stamp: 'IO 11/14/2020 21:01:34'!
setUp: withASetUpMessage

	accounts := withASetUpMessage sendTo: AccountTestSetup.
!

Object subclass: #AccountTestFactory
	instanceVariableNames: 'account1 account2 portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTestFactory category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 21:02:10'!
Object subclass: #AccountTestFactory
	instanceVariableNames: 'account1 account2 portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTestFactory stamp: 'IO 11/14/2020 21:02:13'!
Object subclass: #AccountTestFactory
	instanceVariableNames: 'account1 account2 portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRenamed: #AccountTestSetup as: #AccountTestFactory stamp: 'IO 11/14/2020 21:02:18'!
Smalltalk renameClassNamed: #AccountTestSetup as: #AccountTestFactory!
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881767!
test08AccountSummaryForPortfolioWithManyAccounts

	| accounts account3 report |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3.
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer from: account3 to: accounts account2 of: 40.
	Transfer from: accounts account2 to: account3 of: 60.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881682!
test06AccountSummaryForAPortfolioWithNoAccounts

	| accounts |
	accounts := AccountTestFactory withEmptyPortfolio.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881754!
test07AccountReportForPortfolioWithOneAccount
	
	| accounts report |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	
	report := accounts mockedTransactionsAccountSummary.
		
	report add: 'Balance = 60'.

	self assert: accounts portfolio1 hasAccountSummary: report.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881619!
test05AccountSummaryOfAnAccountWithADepositTransfer

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer from: accounts account2 to: accounts account1 of: 30.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881420!
test01AccountSummaryForAnEmptyAccount

	| accounts |
	accounts := AccountTestFactory withOneAccount.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881859!
test10TransferNetForAnAccountWithADepositTransfer

	| accounts |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.
	
	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: accounts portfolio1 hasTransferNet: 100.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881430!
test02AccountSummaryForAnAccountWithADeposit

	| accounts |
	accounts := AccountTestFactory withOneAccount.

	Deposit register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881802!
test09TransferNetForAnEmptyAccount

	| accounts |

	accounts := AccountTestFactory withEmptyPortfolio.

	self assert: accounts portfolio1 hasTransferNet: 0.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881981!
test12TransferNetForAnAccountWithManyTransfers

	| accounts |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.
	
	Transfer from: accounts account1 to: accounts account2 of: 50.
	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: accounts portfolio1 hasTransferNet: 50.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881920!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| accounts |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 100.

	self assert: accounts portfolio1 hasTransferNet: -100.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881495!
test03AccountSummaryForAnAccountWithAWithdraw

	| accounts |
	accounts := AccountTestFactory withOneAccount.

	Withdraw register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:02:18' prior: 50881556!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 20.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:02:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:02:24'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:02:24'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:04:58' prior: 50873981!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer from: accounts account1 to: accounts account2 of: 100.

	self assert: 100 equals: accounts account1 balance.
	self assert: -100 equals: accounts account2 balance.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:04:59'!
FAILURE!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:05:06' prior: 50882484!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer from: accounts account2 to: accounts account1 of: 100.

	self assert: 100 equals: accounts account1 balance.
	self assert: -100 equals: accounts account2 balance.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:05:07'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:05:07'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:05:07'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:05:07'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:05:07'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:05:07'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:05:07'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:05:15' prior: 50882501!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	self assert: 100 equals: accounts account1 balance.
	self assert: -100 equals: accounts account2 balance.! !
!AccountTestFactory methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:05:42'!
mockTransfer

	^Transfer from: account2 to: account1 of: 100.
! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:06:47' prior: 50882539!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	accounts mockTransfer.

	self assert: 100 equals: accounts account1 balance.
	self assert: -100 equals: accounts account2 balance.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:06:48'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:06:48'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:06:48'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:06:48'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:06:48'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:06:48'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:06:48'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:07:13' prior: 50873958!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	
	| accounts aTransfer |
	accounts := AccountTestFactory withTwoAccounts.

	aTransfer := accounts mockTransfer.

	self assert: (secondAccount hasRegistered: aTransfer deposit).
	self assert: (firstAccount hasRegistered: aTransfer withdraw).! !

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:07:15'!
FAILURE!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:07:34' prior: 50882592!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	
	| accounts aTransfer |
	accounts := AccountTestFactory withTwoAccounts.

	aTransfer := accounts mockTransfer.

	self assert: (accounts account2 hasRegistered: aTransfer deposit).
	self assert: (accounts account1 hasRegistered: aTransfer withdraw).! !

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:07:35'!
FAILURE!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:07:44'!
FAILURE!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:08:33'!
FAILURE!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:08:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:08:33'!
FAILURE!
!AccountTestFactory methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:11:08' prior: 50882550!
mockTransfer

	^Transfer from: account1 to: account2 of: 100.
! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:11:17' prior: 50882555!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	accounts mockTransfer.

	self assert: 100 equals: accounts account2 balance.
	self assert: -100 equals: accounts account1 balance.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:11:18'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:11:26'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:11:26'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:11:26'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:11:26'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:11:26'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:11:26'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:11:26'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:11:38' prior: 50873970!
test03ATransferWithdrawAndDepositKnowTheirTransfer
	
	| accounts aTransfer |
	accounts := AccountTestFactory withTwoAccounts.

	aTransfer := accounts mockTransfer.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.! !

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:11:39'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:11:39'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:11:39'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:11:39'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:11:39'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:11:39'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:11:39'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:11:48' prior: 50868334!
test04ATransferCantBeDoneBetweenTheSameAccount

	self setUp.
	
	self should:[Transfer from: firstAccount to: firstAccount of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	
	! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:11:52' prior: 50882808!
test04ATransferCantBeDoneBetweenTheSameAccount

	self setUp.
	
	self should:[Transfer from: firstAccount to: firstAccount of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	
	! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:11:55' prior: 50882818!
test04ATransferCantBeDoneBetweenTheSameAccount

	self setUp.
	
	self should: [Transfer from: firstAccount to: firstAccount of: 100.]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	
	! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:11:57' prior: 50882828!
test04ATransferCantBeDoneBetweenTheSameAccount

	self setUp.
	
	self should: [Transfer from: firstAccount to: firstAccount of: 100]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
	
	! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:12:32' prior: 50882838!
test04ATransferCantBeDoneBetweenTheSameAccount

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer from: accounts account1 to: accounts account1 of: 100]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:12:34'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:12:34'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:12:34'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:12:34'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:12:34'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:12:34'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:12:34'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:12:48' prior: 50868343!
test05ATransferCantBeDoneBeOf0Value

	self setUp.

	self should:[Transfer from: firstAccount to: secondAccount of: 0.]
		raise: Error
		withMessageText: Transfer invalidValue.
! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:13:06' prior: 50882885!
test05ATransferCantBeDoneBeOf0Value

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should:[Transfer from: accounts account1 to: accounts account2 of: 0.]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:13:06'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:13:06'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:13:06'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:13:06'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:13:06'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:13:06'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:13:06'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:13:18' prior: 50868351!
test06ATransferCantBeOfNegativeValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should:[Transfer from: accounts account1 to: accounts account2 of: -1.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:13:23' prior: 50882930!
test06ATransferCantBeOfNegativeValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should:[Transfer from: accounts account1 to: accounts account2 of: -1.]
		raise: Error
		withMessageText: Transfer invalidValue.
	! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:13:24' prior: 50882941!
test06ATransferCantBeOfNegativeValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should:[Transfer from: accounts account1 to: accounts account2 of: -1.]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:13:24'!
PASSED!

!methodRemoval: TransferTest #validTransferOfValue100 stamp: 'IO 11/14/2020 21:13:27'!
validTransferOfValue100

	^Transfer from: firstAccount to: secondAccount of: 100.!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:13:38' prior: 50882952!
test06ATransferCantBeOfNegativeValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer from: accounts account1 to: accounts account2 of: -1.]
		raise: Error
		withMessageText: Transfer invalidValue.
! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:13:42' prior: 50882894!
test05ATransferCantBeDoneBeOf0Value

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer from: accounts account1 to: accounts account2 of: 0.]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!methodRemoval: TransferTest #setUp stamp: 'IO 11/14/2020 21:13:54'!
setUp
	
	firstAccount := ReceptiveAccount new.
	secondAccount := ReceptiveAccount new.
!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:13:56'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:13:58'!
PASSED!

TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 21:14:03'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:14:04'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:14:04'!
PASSED!
!TransferComponent class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:15:44' prior: 50868840!
for: aTransfer

	^self basicNew initialize: aTransfer.! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:15:56' prior: 50868992!
from: aSenderAccount to: aRecipientAccount of: aValue

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.
	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValue.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:15:58' prior: 50883343!
from: aSenderAccount to: aRecipientAccount of: aValue

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValue.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:16:14' prior: 50883365!
from: aSenderAccount to: aRecipientAccount of: aValue

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValue.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.
	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:16:15' prior: 50883387!
from: aSenderAccount to: aRecipientAccount of: aValue

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValue.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:17:14'!
register: aValue from: aSenderAccount to: aRecipientAccount
	^self from: aSenderAccount to: aRecipientAccount of: aValue
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:17:15'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:17:15'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:17:15'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:17:15'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:17:15'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:17:15'!
PASSED!
!AccountTestFactory methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:17:45' prior: 50882702!
mockTransfer

	^Transfer register: 100 from: account1 to: account2.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:17:46'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:17:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:17:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:17:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:17:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:17:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:17:50'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:18:11' prior: 50882848!
test04ATransferCantBeDoneBetweenTheSameAccount

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: 100 from: accounts account1 to: accounts account1]
		raise: Error
		withMessageText: Transfer canNotTransferBeetweenTheSameAccount.
! !

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:18:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:18:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:18:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:18:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:18:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:18:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:18:14'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:18:21' prior: 50883004!
test05ATransferCantBeDoneBeOf0Value

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: 0 from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:18:22'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:18:22'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:18:22'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:18:22'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:18:22'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:18:22'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:18:22'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:18:31' prior: 50882993!
test06ATransferCantBeOfNegativeValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: -1 from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:18:31'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:18:31'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:18:31'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:18:31'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:18:31'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:18:31'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:18:31'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:18:57'!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: aValue from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValue.
! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:19:07' prior: 50883589!
test05ATransferCantBeDoneBeOf0Value

	self assertInvalidValue: 0.

! !

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:19:08'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:19:08'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:19:08'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:19:08'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:19:08'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:19:08'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:19:08'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:19:20' prior: 50883625!
test06ATransferCantBeOfNegativeValue

	self assertInvalidValue: -1.

! !

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:19:20'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:19:20'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:19:20'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:19:20'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:19:20'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:19:20'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:19:20'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:22:27'!
assertTransferCreatedWith: transferConstructorArguments raises: anErrorMessage

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [#register:from:to: sendTo: Transfer with: transferConstructorArguments]
		raise: Error
		withMessageText: anErrorMessage.
! !
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:22:48' prior: 50883731!
assertTransferCreatedWith: transferConstructorArguments raises: anErrorMessage

	self should: [#register:from:to: sendTo: Transfer with: transferConstructorArguments]
		raise: Error
		withMessageText: anErrorMessage.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:22:49'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:22:49'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:22:49'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:22:49'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:22:49'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:22:49'!
PASSED!
!TransferTest methodsFor: 'util' stamp: 'IO 11/14/2020 21:23:41' prior: 50883660!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self assertTransferCreatedWith: #(aValue (accounts account1) (accounts account2)) raises: Transfer invalidValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:23:44'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:23:44'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:23:44'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:23:44'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:23:44'!
FAILURE!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:23:44'!
FAILURE!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:24:35'!
FAILURE!
!TransferTest methodsFor: 'util' stamp: 'IO 11/14/2020 21:26:02' prior: 50883775!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self assertTransferCreatedWith: (Array with: aValue with: (accounts account1) with: (accounts account2)) raises: Transfer invalidValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:26:02'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:26:02'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:26:02'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:26:02'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:26:02'!
FAILURE!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:26:02'!
FAILURE!

!methodRemoval: TransferTest #assertInvalidValue: stamp: 'IO 11/14/2020 21:26:06'!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self assertTransferCreatedWith: (Array with: aValue with: (accounts account1) with: (accounts account2)) raises: Transfer invalidValue.
!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:26:21' prior: 50883743!
assertTransferCreatedWith: transferConstructorArguments raises: anErrorMessage

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [#register:from:to: sendTo: Transfer with: transferConstructorArguments]
		raise: Error
		withMessageText: anErrorMessage.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:26:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:26:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:26:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:26:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:26:23'!
ERROR!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:26:23'!
ERROR!
!TransferTest methodsFor: 'test' stamp: 'IO 11/14/2020 21:27:37'!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: aValue from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:27:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:27:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:27:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:27:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:27:38'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:27:38'!
PASSED!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:28:08'!
invalidValueErrorMessage
	^'Invalid value for a transfer'! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:28:08' prior: 50883885!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: aValue from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValueErrorMessage.
! !

!methodRemoval: Transfer class #invalidValue stamp: 'IO 11/14/2020 21:28:08'!
invalidValue
	^'Invalid value for a transfer'!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:28:11'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:28:11'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:28:11'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:28:11'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:28:11'!
FAILURE!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:28:11'!
FAILURE!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:28:20'!
invalidValue
	^'Invalid value for a transfer'! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:28:20' prior: 50883922!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: aValue from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValue.
! !

!methodRemoval: Transfer class #invalidValueErrorMessage stamp: 'IO 11/14/2020 21:28:20'!
invalidValueErrorMessage
	^'Invalid value for a transfer'!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:28:23'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:28:23'!
PASSED!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:28:35'!
invalidValueErrorMessage
	^'Invalid value for a transfer'! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:28:35' prior: 50883964!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: aValue from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValueErrorMessage.
! !

!methodRemoval: Transfer class #invalidValue stamp: 'IO 11/14/2020 21:28:35'!
invalidValue
	^'Invalid value for a transfer'!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:28:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:28:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:28:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:28:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:28:38'!
FAILURE!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:28:38'!
FAILURE!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:28:52'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:28:52'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:28:52'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:28:52'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:28:52'!
FAILURE!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:28:52'!
FAILURE!
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:29:21' prior: 50883408!
from: aSenderAccount to: aRecipientAccount of: aValue
! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:29:37' prior: 50883429!
register: aValue from: aSenderAccount to: aRecipientAccount

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #canNotTransferBeetweenTheSameAccount.

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValueErrorMessage.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:29:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:29:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:29:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:29:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:29:38'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:29:38'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 21:30:10' prior: 50882320!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer register: 20 from: accounts account1 to: accounts account2.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 21:30:20' prior: 50882224!
test05AccountSummaryOfAnAccountWithADepositTransfer

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.

	Transfer register: 30 from: accounts account2 to: accounts account1.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/14/2020 21:30:38' prior: 50882173!
test08AccountSummaryForPortfolioWithManyAccounts

	| accounts account3 report |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3.
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer register: 40 from: account3 to: accounts account2.
	Transfer register: 60 from: accounts account2 to: account3.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:30:51' prior: 50882248!
test10TransferNetForAnAccountWithADepositTransfer

	| accounts |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.
	
	Transfer register: 100 from: accounts account2 to: accounts account1.

	self assert: accounts portfolio1 hasTransferNet: 100.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:31:05' prior: 50882295!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| accounts |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.

	Transfer register: 100 from: accounts account1 to: accounts account2.

	self assert: accounts portfolio1 hasTransferNet: -100.
! !
!AccountReporterTest methodsFor: 'transfer net' stamp: 'IO 11/14/2020 21:31:24' prior: 50882281!
test12TransferNetForAnAccountWithManyTransfers

	| accounts |

	accounts := AccountTestFactory withPortfolioAndTwoAccounts.
	
	Transfer register: 50 from: accounts account1 to: accounts account2.
	Transfer register: 100 from: accounts account2 to: accounts account1.

	self assert: accounts portfolio1 hasTransferNet: 50.
! !
!AccountTestFactory methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:31:51' prior: 50880466!
mockAllTransactions

	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer register: 20 from: account1 to: account2.
	Transfer register: 30 from: account2 to: account1.! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:31:52'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:31:56'!
PASSED!

!methodRemoval: Transfer class #from:to:of: stamp: 'IO 11/14/2020 21:32:00'!
from: aSenderAccount to: aRecipientAccount of: aValue
!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:33:10'!
senderIsRecipientErrorMessage
	^'Can not make a transfer between the same account'! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:33:10' prior: 50883552!
test04ATransferCantBeDoneBetweenTheSameAccount

	| accounts |
	accounts := AccountTestFactory withTwoAccounts.
	
	self should: [Transfer register: 100 from: accounts account1 to: accounts account1]
		raise: Error
		withMessageText: Transfer senderIsRecipientErrorMessage.
! !

!methodRemoval: Transfer class #canNotTransferBeetweenTheSameAccount stamp: 'IO 11/14/2020 21:33:10'!
canNotTransferBeetweenTheSameAccount
	^'Can not make a transfer between the same account'!
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:33:23' prior: 50884199!
register: aValue from: aSenderAccount to: aRecipientAccount

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #senderIsRecipient.

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValueErrorMessage.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:33:24'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:33:24'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:33:24'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:33:24'!
FAILURE!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:33:24'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:33:24'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:33:24'!
FAILURE!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:33:37' prior: 50884569!
senderIsRecipientErrorMessage
	^'Can not make a transfer between the same account'! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:33:42' prior: 50884593!
register: aValue from: aSenderAccount to: aRecipientAccount

	|aTransfer aTransferDeposit aTransferWithdraw|

	self ifAnEvaluation: [aSenderAccount = aRecipientAccount] sendTheTransferError: #senderIsRecipientErrorMessage.

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValueErrorMessage.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:33:43'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:33:43'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:33:43'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:33:43'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:33:43'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:33:43'!
PASSED!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:35:13'!
errorWith: anErrorMessageMessage
	[^self error: (anErrorMessageMessage sendTo: Transfer)].
! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:35:46' prior: 50884646!
register: aValue from: aSenderAccount to: aRecipientAccount

	|aTransfer aTransferDeposit aTransferWithdraw|

	(aSenderAccount = aRecipientAccount) ifTrue: [^self errorWith: #senderIsRecipientErrorMessage].

	self ifAnEvaluation: [aValue <= 0] sendTheTransferError: #invalidValueErrorMessage.

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:35:47'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:35:47'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:35:47'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:35:47'!
FAILURE!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:35:47'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:35:47'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:35:47'!
FAILURE!
!Transfer class methodsFor: 'error description' stamp: 'IO 11/14/2020 21:36:02' prior: 50884689!
errorWith: anErrorMessageMessage
	^self error: (anErrorMessageMessage sendTo: Transfer).
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:36:03'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:36:03'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:36:03'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:36:03'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:36:03'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:36:03'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:36:28' prior: 50884695!
register: aValue from: aSenderAccount to: aRecipientAccount

	|aTransfer aTransferDeposit aTransferWithdraw|

	(aSenderAccount = aRecipientAccount) ifTrue: [^self errorWith: #senderIsRecipientErrorMessage].
	(aValue <= 0) ifTrue: [^self errorWith: #invalidValueErrorMessage].

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:36:29'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:36:29'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:36:29'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:36:29'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:36:29'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:36:29'!
PASSED!

!methodRemoval: Transfer class #ifAnEvaluation:sendTheTransferError: stamp: 'IO 11/14/2020 21:36:33'!
ifAnEvaluation: aClosureEvaluation sendTheTransferError: aMessageForErorText
	
	
	aClosureEvaluation value  ifTrue: [^self error: (aMessageForErorText sendTo: Transfer)].
!
!Transfer class methodsFor: 'errors' stamp: 'IO 11/14/2020 21:37:01' prior: 50884742!
errorWith: anErrorMessageMessage

	"send an error given a message"

	^self error: (anErrorMessageMessage sendTo: Transfer).
! !
!Transfer class methodsFor: 'errors' stamp: 'IO 11/14/2020 21:37:13' prior: 50884821!
errorWith: anErrorMessageMessage

	"send an error given a message description message"

	^self error: (anErrorMessageMessage sendTo: Transfer).
! !
!Transfer class methodsFor: 'errors' stamp: 'IO 11/14/2020 21:37:19' prior: 50884828!
errorWith: anErrorMessageMessage

	"send an error given a message description message"

	^self error: (anErrorMessageMessage sendTo: self).
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:37:20'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:37:20'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:37:20'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:37:20'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:37:20'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:37:20'!
PASSED!
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:37:52' prior: 50884770!
register: aValue from: aSenderAccount to: aRecipientAccount

	"create a transaction and register the corresponding transfers to the accounts involved"

	|aTransfer aTransferDeposit aTransferWithdraw|

	(aSenderAccount = aRecipientAccount) ifTrue: [^self errorWith: #senderIsRecipientErrorMessage].
	(aValue <= 0) ifTrue: [^self errorWith: #invalidValueErrorMessage].

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFrom: aTransferWithdraw to: aTransferDeposit of: aValue.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:37:53'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:37:53'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:37:53'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:37:53'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:37:53'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:37:53'!
PASSED!
!Transfer methodsFor: 'accesing' stamp: 'IO 11/14/2020 21:38:14' prior: 50868969!
deposit

	"return the deposit associated with this transfer"

	^deposit.! !

----SNAPSHOT----(14 November 2020 21:38:17) CuisUniversity-4384.image priorSource: 17346269!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:38:25'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:38:25'!
PASSED!
!Transfer methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:38:57' prior: 50868962!
initializeFrom: aSenderAccount to: aRecipientAccount of: aValue

	"initialize a transfer for a given sender, recipient and value"

	withdraw := aSenderAccount.
	deposit := aRecipientAccount.
	value := aValue.
! !
!Transfer methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:39:59'!
initializeFor: aValue from: aSenderAccount to: aRecipientAccount

	"initialize a transfer for a given sender, recipient and value"

	withdraw := aSenderAccount.
	deposit := aRecipientAccount.
	value := aValue.
! !
!Transfer class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:40:18' prior: 50884866!
register: aValue from: aSenderAccount to: aRecipientAccount

	"create a transaction and register the corresponding transfers to the accounts involved"

	|aTransfer aTransferDeposit aTransferWithdraw|

	(aSenderAccount = aRecipientAccount) ifTrue: [^self errorWith: #senderIsRecipientErrorMessage].
	(aValue <= 0) ifTrue: [^self errorWith: #invalidValueErrorMessage].

	aTransfer := Transfer new.
	aTransferDeposit := TransferDeposit register: aTransfer on: aRecipientAccount.
	aTransferWithdraw := TransferWithdraw register: aTransfer on: aSenderAccount.

	^aTransfer initializeFor: aValue from: aTransferWithdraw to: aTransferDeposit.
! !

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:40:19'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:40:19'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:40:19'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:40:19'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:40:19'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:40:19'!
PASSED!

!methodRemoval: Transfer #initializeFrom:to:of: stamp: 'IO 11/14/2020 21:40:30'!
initializeFrom: aSenderAccount to: aRecipientAccount of: aValue

	"initialize a transfer for a given sender, recipient and value"

	withdraw := aSenderAccount.
	deposit := aRecipientAccount.
	value := aValue.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:40:34'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:40:34'!
PASSED!
!Transfer methodsFor: 'accesing' stamp: 'IO 11/14/2020 21:40:42' prior: 50868975 overrides: 16881508!
value

	"returns the value of this transfer"

	^value.
! !
!Transfer methodsFor: 'accesing' stamp: 'IO 11/14/2020 21:40:53' prior: 50868979!
withdraw

	"returns the withdrar associated with this transfer"

	^withdraw.
! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:43:12' prior: 50873085!
gatherReportIn: anAccountReporter

	"send all the transactions to a reporter"

	self subclassResponsibility.
! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:43:59' prior: 50885307!
gatherReportIn: anAccountReporter

	"make all its transactions be sent to a reporter"

	self subclassResponsibility.
! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:44:08' prior: 50885314!
gatherReportIn: anAccountReporter

	"make all its transactions be sent to a reporter"

	self subclassResponsibility.
! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:44:25' prior: 50885321!
gatherReportIn: anAccountReporter

	"tell all its transactions to be sent to a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/14/2020 21:45:01'!
collectIn: anAccountSummary
	"see superclass"
	
	accounts do: [ :anAccount | anAccount gatherReportIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/14/2020 21:45:01'!
collectIn: anAccountSummary
	"see superclass"

	transactions do: [ :aTransaction | aTransaction getReportedIn: anAccountSummary ].! !
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:45:01'!
collectIn: anAccountReporter

	"tell all its transactions to be sent to a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:45:01' prior: 50873574 overrides: 50885328!
gatherReportIn: anAccountSummary
	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!AccountSummaryReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:45:01' prior: 50878202 overrides: 50878146!
emitReport

	"see superclass"

	account collectIn: self.
	
	report add: ('Balance = ', account balance asString).
	
	^report.! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:45:01' prior: 50878210 overrides: 50878146!
emitReport

	"see superclass"

	account collectIn: self.

	^transferNet.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:45:01' prior: 50885334 overrides: 50885348!
collectIn: anAccountSummary
	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !

!methodRemoval: Portfolio #gatherReportIn: stamp: 'IO 11/14/2020 21:45:01'!
gatherReportIn: anAccountSummary
	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
!

!methodRemoval: ReceptiveAccount #gatherReportIn: stamp: 'IO 11/14/2020 21:45:01'!
gatherReportIn: anAccountSummary
	"see superclass"

	transactions do: [ :aTransaction | aTransaction getReportedIn: anAccountSummary ].!

!methodRemoval: Account #gatherReportIn: stamp: 'IO 11/14/2020 21:45:01'!
gatherReportIn: anAccountReporter

	"tell all its transactions to be sent to a reporter"

	self subclassResponsibility.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:45:04'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:45:04'!
PASSED!
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:45:28' prior: 50885348!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/14/2020 21:45:35' prior: 50885378 overrides: 50885555!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/14/2020 21:45:42' prior: 50885341 overrides: 50885555!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction getReportedIn: anAccountSummary ].! !
!AccountTransaction methodsFor: 'reports' stamp: 'IO 11/14/2020 21:46:18' prior: 50870944!
getReportedIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility ! !
!Deposit methodsFor: 'reports' stamp: 'IO 11/14/2020 21:46:35'!
collectIn: anAccountSummary

	anAccountSummary addDepositToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'IO 11/14/2020 21:46:35'!
collectIn: anAccountSummary

	anAccountSummary addTransferDepositToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 21:46:35'!
collectIn: anAccountSummary

	anAccountSummary addTransferWithdrawToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 21:46:35'!
collectIn: anAccountSummary

	anAccountSummary addWithdrawToReport: self.! !
!AccountTransaction methodsFor: 'reports' stamp: 'IO 11/14/2020 21:46:35'!
collectIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:46:35' prior: 50885570 overrides: 50885555!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !

!methodRemoval: Deposit #getReportedIn: stamp: 'IO 11/14/2020 21:46:35'!
getReportedIn: anAccountSummary

	anAccountSummary addDepositToReport: self.!

!methodRemoval: TransferDeposit #getReportedIn: stamp: 'IO 11/14/2020 21:46:35'!
getReportedIn: anAccountSummary

	anAccountSummary addTransferDepositToReport: self.!

!methodRemoval: TransferWithdraw #getReportedIn: stamp: 'IO 11/14/2020 21:46:35'!
getReportedIn: anAccountSummary

	anAccountSummary addTransferWithdrawToReport: self.!

!methodRemoval: Withdraw #getReportedIn: stamp: 'IO 11/14/2020 21:46:35'!
getReportedIn: anAccountSummary

	anAccountSummary addWithdrawToReport: self.!

!methodRemoval: AccountTransaction #getReportedIn: stamp: 'IO 11/14/2020 21:46:35'!
getReportedIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:46:39'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:46:39'!
PASSED!
!Account methodsFor: 'reports' stamp: 'IO 11/14/2020 21:48:02' prior: 50885555!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Deposit methodsFor: 'reports' stamp: 'IO 11/14/2020 21:48:36' prior: 50885584 overrides: 50885604!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'IO 11/14/2020 21:49:03' prior: 50885589 overrides: 50885604!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 21:49:08' prior: 50885594 overrides: 50885604!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 21:49:12' prior: 50885599 overrides: 50885604!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.! !
!TransferComponent methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:51:27' prior: 50868820!
initialization: aTransfer

	"initialize a new transfer component for a given transfer"

	self subclassResponsibility .! !
!TransferComponent class methodsFor: 'instance creation' stamp: 'IO 11/14/2020 21:51:39' prior: 50883338!
for: aTransfer

	"create a transfer component for a given transfer"

	^self basicNew initialize: aTransfer.! !
!TransferComponent methodsFor: 'balance' stamp: 'IO 11/14/2020 21:51:47' prior: 50868813 overrides: 50868721!
affectBalance: aBalance

	"includes the net value of this transaction in aBalance"

	self subclassResponsibility ! !
!TransferComponent methodsFor: 'value' stamp: 'IO 11/14/2020 21:51:55' prior: 50868807 overrides: 50868717!
value

	"returns the value of this transaction"

	^transfer value.! !
!TransferComponent methodsFor: 'accessing' stamp: 'IO 11/14/2020 21:52:03' prior: 50868825!
transfer

	"return the transfer from wich this transaction originates"

	^transfer! !
!TransferComponent methodsFor: 'value' stamp: 'IO 11/14/2020 21:52:07' prior: 50885855 overrides: 50868717!
value

	"return the value of this transaction"

	^transfer value.! !
!TransferDeposit methodsFor: 'balance' stamp: 'IO 11/14/2020 21:52:15' prior: 50868858 overrides: 50885847!
affectBalance: aBalance

	"see superclass"

	^aBalance + self value.
! !
!TransferDeposit methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:52:20' prior: 50868863!
initialize: aTransfer

	transfer := aTransfer .! !
!TransferComponent methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:52:29'!
initializate: aTransfer

	"initialize a new transfer component for a given transfer"

	self subclassResponsibility .! !
!TransferDeposit methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:52:33' prior: 50885880!
initialize: aTransfer! !
!TransferComponent methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:52:42'!
initialize: aTransfer

	"initialize a new transfer component for a given transfer"


	transfer := aTransfer .! !

!methodRemoval: TransferComponent #initialization: stamp: 'IO 11/14/2020 21:52:44'!
initialization: aTransfer

	"initialize a new transfer component for a given transfer"

	self subclassResponsibility .!

!methodRemoval: TransferComponent #initializate: stamp: 'IO 11/14/2020 21:52:44'!
initializate: aTransfer

	"initialize a new transfer component for a given transfer"

	self subclassResponsibility .!

!methodRemoval: TransferDeposit #initialize: stamp: 'IO 11/14/2020 21:52:49'!
initialize: aTransfer!

!methodRemoval: TransferWithdraw #initialize: stamp: 'IO 11/14/2020 21:52:52'!
initialize: aTransfer

	transfer := aTransfer.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:52:53'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:52:53'!
PASSED!
!TransferComponent methodsFor: 'initialization' stamp: 'IO 11/14/2020 21:53:04' prior: 50885896!
initialize: aTransfer

	"initialize a new transfer component for a given transfer"

	transfer := aTransfer.
! !
!TransferWithdraw methodsFor: 'balance' stamp: 'IO 11/14/2020 21:53:18' prior: 50868888 overrides: 50885847!
affectBalance: aBalance

	"see superclass"

	^aBalance - self value.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/14/2020 21:53:22' prior: 50885818 overrides: 50885604!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
! !

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 21:54:44'!
AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: 'report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:54:44' prior: 50877940 overrides: 50877859!
initializeFor: anAccount

	"initialize a transfer net report"

	report := 0.
	super initializeFor: anAccount.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:54:44' prior: 50885372 overrides: 50878146!
emitReport

	"see superclass"

	account collectIn: self.

	^report.
! !
!TransferNetReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/14/2020 21:54:44' prior: 50877918!
addTransferToReport: aDeposit

	"see superclass"

	report := aDeposit affectBalance: report.! !
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:01' prior: 50886111 overrides: 50878146!
emitReport

	"see superclass"
	
	super collectIn: self.

	^report.
! !
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:14' prior: 50878146!
emitReport

	"emit this report"
	account collectIn: self.
! !
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:22' prior: 50885364 overrides: 50886129!
emitReport

	"see superclass"

	account collectIn: self.
	report add: ('Balance = ', account balance asString).
	
	^report.! !
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:23' prior: 50886135 overrides: 50886129!
emitReport

	"see superclass"

	account collectIn: self.

	report add: ('Balance = ', account balance asString).
	
	^report.! !
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:27' prior: 50886124 overrides: 50886129!
emitReport

	"see superclass"
	
	super collectIn: self.

	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:55:29'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:29'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:29'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:55:29'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:55:29'!
ERROR!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:36' prior: 50886143 overrides: 50886129!
emitReport

	"see superclass"

	super collectIn: self.

	report add: ('Balance = ', account balance asString).
	
	^report.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:55:37'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:55:37'!
ERROR!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:42' prior: 50886203 overrides: 50886129!
emitReport

	"see superclass"

	account collectIn: self.

	report add: ('Balance = ', account balance asString).
	
	^report.! !
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:46' prior: 50886151 overrides: 50886129!
emitReport

	"see superclass"
	
	report collectIn: self.

	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:55:47'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:47'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:47'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:55:47'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:55:47'!
ERROR!
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:55:51' prior: 50886264 overrides: 50886129!
emitReport

	"see superclass"
	
	account collectIn: self.

	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:55:52'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:55:52'!
PASSED!
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:56:05' prior: 50886129!
emitReport

	"emit this report"

	account collectIn: self.
! !
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:56:20' prior: 50886256 overrides: 50886366!
emitReport

	"see superclass"

	super emitReport.

	report add: ('Balance = ', account balance asString).
	
	^report.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:56:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:56:23'!
PASSED!
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:56:30' prior: 50886315 overrides: 50886366!
emitReport

	"see superclass"
	
	super emitReport.

	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:56:30'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:56:31'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:56:31'!
PASSED!
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:56:46'!
collectReport

	"emit this report"

	account collectIn: self.
! !
!TransferNetReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:57:21' prior: 50886425 overrides: 50886366!
emitReport

	"see superclass"
	
	^super emitReport.

! !
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:57:30' prior: 50886366!
emitReport

	"emit this report"

	^account collectIn: self.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:57:31'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:57:31'!
FAILURE!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:57:31'!
FAILURE!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:57:31'!
FAILURE!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:57:31'!
FAILURE!

AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 21:57:50'!
AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 21:57:53'!
AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountReporter category: 'Portfolio-Solucion' stamp: 'IO 11/14/2020 21:58:14'!
Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:58:26' prior: 50886486!
emitReport

	"emit this report"

	account collectIn: self.
	^report
! !
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:58:27' prior: 50886575!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:58:28'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:58:28'!
PASSED!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:58:55' prior: 50886372 overrides: 50886581!
emitReport

	"see superclass"

	| aReport |
	aReport := super emitReport.

	aReport add: ('Balance = ', account balance asString).
	
	^aReport.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:58:55'!
PASSED!

!methodRemoval: TransferNetReporter #emitReport stamp: 'IO 11/14/2020 21:59:02'!
emitReport

	"see superclass"
	
	^super emitReport.

!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:59:08'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:59:08'!
PASSED!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:59:30' prior: 50886633 overrides: 50886581!
emitReport

	"see superclass"

	super emitReport.
	report add: ('Balance = ', account balance asString).
	^report.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:59:31'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 21:59:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 21:59:34'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 21:59:34'!
PASSED!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:59:49' prior: 50886737 overrides: 50886581!
emitReport

	"see superclass"

	super emitReport add: ('Balance = ', account balance asString).
	^report.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:59:49'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:59:49'!
PASSED!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:59:55' prior: 50886941 overrides: 50886581!
emitReport

	"see superclass"

	^super emitReport add: ('Balance = ', account balance asString).
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 21:59:56'!
FAILURE!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 21:59:56'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 21:59:56'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 21:59:56'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 21:59:56'!
PASSED!
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/14/2020 21:59:59' prior: 50886994 overrides: 50886581!
emitReport

	"see superclass"

	super emitReport add: ('Balance = ', account balance asString).
	^report.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 22:00:00'!
PASSED!

!methodRemoval: AccountReporter #collectReport stamp: 'IO 11/14/2020 22:00:03'!
collectReport

	"emit this report"

	account collectIn: self.
!
!TransferNetReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 22:00:57' prior: 50886117!
addTransferToReport: aTransfer

	"adds a given transfer to the report"

	report := aTransfer affectBalance: report.! !
!TransferNetReporter methodsFor: 'adding to report' stamp: 'IO 11/14/2020 22:01:12' prior: 50877934 overrides: 50877852!
addWithdrawToReport: aWithdraw

	"see superclass"

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/14/2020 22:01:58'!
PASSED!

----SNAPSHOT----(14 November 2020 22:02:02) CuisUniversity-4384.image priorSource: 17704491!

----QUIT----(14 November 2020 22:09:59) CuisUniversity-4384.image priorSource: 17779738!

----STARTUP---- (15 November 2020 21:33:35) as /Users/ilanolkies/uba/ingsoft1/macos64/CuisUniversity-4384.image!


!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:33:47'!
PASSED!

!classRenamed: #AccountTestFactory as: #AccountTestUtility stamp: 'IO 11/15/2020 21:34:11'!
Smalltalk renameClassNamed: #AccountTestFactory as: #AccountTestUtility!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882770!
test03ATransferWithdrawAndDepositKnowTheirTransfer
	
	| accounts aTransfer |
	accounts := AccountTestUtility withTwoAccounts.

	aTransfer := accounts mockTransfer.
	
	self assert: aTransfer equals: aTransfer deposit transfer.
	self assert: aTransfer equals: aTransfer withdraw transfer.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884257!
test05AccountSummaryOfAnAccountWithADepositTransfer

	| accounts |
	accounts := AccountTestUtility withTwoAccounts.

	Transfer register: 30 from: accounts account2 to: accounts account1.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Entrada por transferencia de 30.' with: 'Balance = 30').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884323!
test12TransferNetForAnAccountWithManyTransfers

	| accounts |

	accounts := AccountTestUtility withPortfolioAndTwoAccounts.
	
	Transfer register: 50 from: accounts account1 to: accounts account2.
	Transfer register: 100 from: accounts account2 to: accounts account1.

	self assert: accounts portfolio1 hasTransferNet: 50.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884299!
test10TransferNetForAnAccountWithADepositTransfer

	| accounts |

	accounts := AccountTestUtility withPortfolioAndTwoAccounts.
	
	Transfer register: 100 from: accounts account2 to: accounts account1.

	self assert: accounts portfolio1 hasTransferNet: 100.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882707!
test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver
	
	| accounts |
	accounts := AccountTestUtility withTwoAccounts.

	accounts mockTransfer.

	self assert: 100 equals: accounts account2 balance.
	self assert: -100 equals: accounts account1 balance.! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882307!
test03AccountSummaryForAnAccountWithAWithdraw

	| accounts |
	accounts := AccountTestUtility withOneAccount.

	Withdraw register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Extracci�n por 100.' with: 'Balance = -100').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884271!
test08AccountSummaryForPortfolioWithManyAccounts

	| accounts account3 report |

	accounts := AccountTestUtility withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3.
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer register: 40 from: account3 to: accounts account2.
	Transfer register: 60 from: accounts account2 to: account3.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�stio por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884311!
test11TransferNetForAnAccountWithAWidthdrawTransfer

	| accounts |

	accounts := AccountTestUtility withPortfolioAndTwoAccounts.

	Transfer register: 100 from: accounts account1 to: accounts account2.

	self assert: accounts portfolio1 hasTransferNet: -100.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884135!
assertInvalidValue: aValue

	| accounts |
	accounts := AccountTestUtility withTwoAccounts.
	
	self should: [Transfer register: aValue from: accounts account1 to: accounts account2]
		raise: Error
		withMessageText: Transfer invalidValueErrorMessage.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882272!
test09TransferNetForAnEmptyAccount

	| accounts |

	accounts := AccountTestUtility withEmptyPortfolio.

	self assert: accounts portfolio1 hasTransferNet: 0.
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882200!
test06AccountSummaryForAPortfolioWithNoAccounts

	| accounts |
	accounts := AccountTestUtility withEmptyPortfolio.

	self assert: accounts portfolio1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').
! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884243!
test04AccountSummaryForAnAccountWithAWithdrawTransfer

	| accounts |
	accounts := AccountTestUtility withTwoAccounts.

	Transfer register: 20 from: accounts account1 to: accounts account2.	
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Salida por transferencia de 20.' with: 'Balance = -20').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882238!
test01AccountSummaryForAnEmptyAccount

	| accounts |
	accounts := AccountTestUtility withOneAccount.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with: 'Balance = 0').! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882260!
test02AccountSummaryForAnAccountWithADeposit

	| accounts |
	accounts := AccountTestUtility withOneAccount.

	Deposit register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Dep�stio por 100.' with: 'Balance = 100').
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50883852!
assertTransferCreatedWith: transferConstructorArguments raises: anErrorMessage

	| accounts |
	accounts := AccountTestUtility withTwoAccounts.
	
	self should: [#register:from:to: sendTo: Transfer with: transferConstructorArguments]
		raise: Error
		withMessageText: anErrorMessage.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882609!
test02ATransferRegistersATransferDepositAndATransferWithdraw
	
	| accounts aTransfer |
	accounts := AccountTestUtility withTwoAccounts.

	aTransfer := accounts mockTransfer.

	self assert: (accounts account2 hasRegistered: aTransfer deposit).
	self assert: (accounts account1 hasRegistered: aTransfer withdraw).! !
!AccountReporterTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50882210!
test07AccountReportForPortfolioWithOneAccount
	
	| accounts report |

	accounts := AccountTestUtility withPortfolioAndTwoAccounts.

	accounts mockAllTransactions.
	
	report := accounts mockedTransactionsAccountSummary.
		
	report add: 'Balance = 60'.

	self assert: accounts portfolio1 hasAccountSummary: report.
! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:34:11' prior: 50884575!
test04ATransferCantBeDoneBetweenTheSameAccount

	| accounts |
	accounts := AccountTestUtility withTwoAccounts.
	
	self should: [Transfer register: 100 from: accounts account1 to: accounts account1]
		raise: Error
		withMessageText: Transfer senderIsRecipientErrorMessage.
! !

!classDefinition: #AccountTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 21:40:06'!
AccountReporter subclass: #AccountTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporterTest methodsFor: 'nil' stamp: 'IO 11/15/2020 21:39:55'!
test13AccountTreeForAnAccount
	| johnsAccount reporter |
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	
	reporter := AccountTreeReporter for: johnsAccount.
	
	self assert: (OrderedCollection with: 'Cuenta de Juan') equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:40:08'!
ERROR!
!ReceptiveAccount class methodsFor: 'nil' stamp: 'IO 11/15/2020 21:40:55'!
named: aName

	^self basicNew initializeNamed: aName.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:40:56'!
PASSED!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 21:41:36'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'IO 11/15/2020 21:41:35'!
initializeNamed: aName

	self initialize.
	name := aName.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:41:47'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:41:47'!
FAILURE!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:41:47'!
FAILURE!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:41:56'!
FAILURE!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:42:08'!
FAILURE!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:45:12'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:45:12'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:45:12' overrides: 50887694!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!AccountReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:12' prior: 50886581!
emitReport

	"emit this report"

	account collectTransactionsIn: self.
	^report.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:12' prior: 50885612 overrides: 50885797!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:12' prior: 50885562 overrides: 50885797!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:12' prior: 50887687 overrides: 50887694!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:12' prior: 50887701 overrides: 50887694!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !

!methodRemoval: ReceptiveAccount #collectIn: stamp: 'IO 11/15/2020 21:45:12'!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].!

!methodRemoval: Account #collectIn: stamp: 'IO 11/15/2020 21:45:12'!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!methodRemoval: Portfolio #collectIn: stamp: 'IO 11/15/2020 21:45:12'!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:45:15'!
ERROR!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:45:15'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:45:15'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:45:16'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:45:16'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:45:16'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:45:16'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:45:25'!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].! !
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:45:25'!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:45:25' overrides: 50887930!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !
!AccountReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:25' prior: 50887709!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:25' prior: 50887733 overrides: 50887694!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:25' prior: 50887742 overrides: 50887694!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:25' prior: 50887923 overrides: 50887930!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:45:25' prior: 50887937 overrides: 50887930!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !

!methodRemoval: ReceptiveAccount #collectTransactionsIn: stamp: 'IO 11/15/2020 21:45:25'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].!

!methodRemoval: Account #collectTransactionsIn: stamp: 'IO 11/15/2020 21:45:25'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!methodRemoval: Portfolio #collectTransactionsIn: stamp: 'IO 11/15/2020 21:45:25'!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:45:27'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:45:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:45:28'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:45:28'!
FAILURE!
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:45:45'!
collectNameIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:46:18' overrides: 50888162!
collectNameIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
! !
!AccountTreeReporter methodsFor: 'no messages' stamp: 'IO 11/15/2020 21:46:43'!
addNameToReport: aName
	report add: aName.
! !
!AccountTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:46:55' overrides: 50877859!
initializeFor: anAccount

	report := OrderedCollection new.
	super initializeFor: anAccount.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:47:10'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:47:10'!
FAILURE!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:47:10'!
FAILURE!
!AccountTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:47:23' prior: 50888175!
addNameToReport: aName
	report add: aName.
! !
!AccountTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:48:16' overrides: 50887945!
emitReport
	account collectNameIn: self.
	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:48:18'!
PASSED!

AccountReporter subclass: #AccountTransactionsReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransactionsReporter category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 21:49:08'!
AccountReporter subclass: #AccountTransactionsReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransactionsReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReporter category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 21:49:16'!
AccountTransactionsReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransactionsReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReporter category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 21:49:23'!
AccountTransactionsReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:49:55' overrides: 50877825!
addDepositToReport: aDeposit

	"add a deposit to this report"

	self subclassResponsibility.
! !
!AccountTransactionsReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:49:55' overrides: 50877825!
addDepositToReport: aDeposit

	"add a deposit to this report"

	self subclassResponsibility.
! !

!methodRemoval: AccountReporter #addDepositToReport: stamp: 'IO 11/15/2020 21:49:55'!
addDepositToReport: aDeposit

	"add a deposit to this report"

	self subclassResponsibility.
!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:50:06' overrides: 50877831!
addTransferDepositToReport: aTransferDeposit

	"add a transfer deposit to this report"

	self subclassResponsibility.
! !
!AccountTransactionsReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:50:06' overrides: 50877831!
addTransferDepositToReport: aTransferDeposit

	"add a transfer deposit to this report"

	self subclassResponsibility.
! !

!methodRemoval: AccountReporter #addTransferDepositToReport: stamp: 'IO 11/15/2020 21:50:06'!
addTransferDepositToReport: aTransferDeposit

	"add a transfer deposit to this report"

	self subclassResponsibility.
!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:50:12' overrides: 50877845!
addTransferWithdrawToReport: aTransferWithdraw

	"add a transfer withdraw to this report"

	self subclassResponsibility.
! !
!AccountTransactionsReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:50:12' overrides: 50877845!
addTransferWithdrawToReport: aTransferWithdraw

	"add a transfer withdraw to this report"

	self subclassResponsibility.
! !

!methodRemoval: AccountReporter #addTransferWithdrawToReport: stamp: 'IO 11/15/2020 21:50:12'!
addTransferWithdrawToReport: aTransferWithdraw

	"add a transfer withdraw to this report"

	self subclassResponsibility.
!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:50:20' overrides: 50877852!
addWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
! !
!AccountTransactionsReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 21:50:20' overrides: 50877852!
addWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
! !

!methodRemoval: AccountReporter #addWithdrawToReport: stamp: 'IO 11/15/2020 21:50:20'!
addWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
!
!AccountTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:50:31'!
emitReporta
	account collectNameIn: self.
	^report.
! !
!AccountTreeReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 21:51:04' prior: 50888244 overrides: 50887945!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
! !
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 21:51:04' overrides: 50887945!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
! !

!methodRemoval: AccountReporter #emitReport stamp: 'IO 11/15/2020 21:51:04'!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
!

!methodRemoval: AccountTreeReporter #emitReporta stamp: 'IO 11/15/2020 21:51:07'!
emitReporta
	account collectNameIn: self.
	^report.
!
!Account class methodsFor: 'reports' stamp: 'IO 11/15/2020 21:51:57'!
collectNameIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !

!methodRemoval: Account #collectNameIn: stamp: 'IO 11/15/2020 21:51:57'!
collectNameIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:52:05'!
collectNameIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !

!methodRemoval: Account class #collectNameIn: stamp: 'IO 11/15/2020 21:52:05'!
collectNameIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:52:08'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:52:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:52:09'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:52:09'!
FAILURE!

!methodRemoval: AccountTreeReporter #addDepositToReport: stamp: 'IO 11/15/2020 21:52:29'!
addDepositToReport: aDeposit

	"add a deposit to this report"

	self subclassResponsibility.
!

!methodRemoval: AccountTreeReporter #addTransferDepositToReport: stamp: 'IO 11/15/2020 21:52:34'!
addTransferDepositToReport: aTransferDeposit

	"add a transfer deposit to this report"

	self subclassResponsibility.
!

!methodRemoval: AccountTreeReporter #addTransferWithdrawToReport: stamp: 'IO 11/15/2020 21:52:36'!
addTransferWithdrawToReport: aTransferWithdraw

	"add a transfer withdraw to this report"

	self subclassResponsibility.
!

!methodRemoval: AccountTreeReporter #addWithdrawToReport: stamp: 'IO 11/15/2020 21:52:37'!
addWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:52:45'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:52:45'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:52:45'!
FAILURE!
!AccountTreeReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 21:53:01' prior: 50888429!
emitReport

	"emit this report"

	account collectNameIn: self.
	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:53:04'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:53:04'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:53:20'!
collectNamesIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
! !
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:53:20'!
collectNamesIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!AccountTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:53:20' prior: 50888817!
emitReport

	"emit this report"

	account collectNamesIn: self.
	^report.
! !

!methodRemoval: ReceptiveAccount #collectNameIn: stamp: 'IO 11/15/2020 21:53:20'!
collectNameIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
!

!methodRemoval: Account #collectNameIn: stamp: 'IO 11/15/2020 21:53:20'!
collectNameIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:53:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:53:23'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:53:23'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:53:38'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:53:38'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:53:38' overrides: 50889169!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:53:38' prior: 50887969 overrides: 50887930!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:53:38' prior: 50887977 overrides: 50887930!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !
!AccountTransactionsReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:53:38' prior: 50888435!
emitReport

	"emit this report"

	account collectTransactionsIn: self.
	^report.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:53:38' prior: 50889162 overrides: 50889169!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:53:38' prior: 50889176 overrides: 50889169!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !

!methodRemoval: ReceptiveAccount #collectIn: stamp: 'IO 11/15/2020 21:53:38'!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].!

!methodRemoval: Account #collectIn: stamp: 'IO 11/15/2020 21:53:38'!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!methodRemoval: Portfolio #collectIn: stamp: 'IO 11/15/2020 21:53:38'!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:53:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:53:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:53:41'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:53:41'!
ERROR!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:53:41'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:53:41'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:53:42'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:53:42'!
PASSED!
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:54:46'!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:54:46' overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:54:46' overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionsIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:54:46' prior: 50889217 overrides: 50889169!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!AccountTransactionsReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:54:46' prior: 50889201!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:54:46' prior: 50889208 overrides: 50889169!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:54:46' prior: 50889404 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:54:46' prior: 50889412 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !

!methodRemoval: Account #collectTransactionsIn: stamp: 'IO 11/15/2020 21:54:46'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!methodRemoval: Portfolio #collectTransactionsIn: stamp: 'IO 11/15/2020 21:54:46'!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
!

!methodRemoval: ReceptiveAccount #collectTransactionsIn: stamp: 'IO 11/15/2020 21:54:46'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:54:49'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:54:49'!
PASSED!
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:55:21'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self collectIn: anAccountReporter.
! !
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 21:55:38' prior: 50889429!
emitReport

	"emit this report"

	account collectTransactionsIn: self.
	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:55:40'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:55:41'!
PASSED!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:56:31' overrides: 50889635!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:56:47' prior: 50889803 overrides: 50889635!
collectTransactionsIn: anAccountSummary

	"see superclass"
	self collectIn: anAccountSummary.
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:57:12' prior: 50889453 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !

!methodRemoval: Portfolio #collectTransactionsIn: stamp: 'IO 11/15/2020 21:57:19'!
collectTransactionsIn: anAccountSummary

	"see superclass"
	self collectIn: anAccountSummary.
!

!methodRemoval: Account #collectTransactionsIn: stamp: 'IO 11/15/2020 21:57:23'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self collectIn: anAccountReporter.
!
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 21:57:42' prior: 50889643!
emitReport

	"emit this report"

	account collectIn: self.
	^report.
! !
!AccountTransaction methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:00'!
collectTransactionIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility ! !
!Deposit methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:00' overrides: 50889843!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:00' overrides: 50889843!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:00' overrides: 50889843!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
! !
!Withdraw methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:00' overrides: 50889843!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:58:00' prior: 50889445 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:58:00' prior: 50889818 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionIn: anAccountSummary ].! !

!methodRemoval: AccountTransaction #collectIn: stamp: 'IO 11/15/2020 21:58:00'!
collectIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility !

!methodRemoval: Deposit #collectIn: stamp: 'IO 11/15/2020 21:58:00'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.!

!methodRemoval: TransferDeposit #collectIn: stamp: 'IO 11/15/2020 21:58:00'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.!

!methodRemoval: TransferWithdraw #collectIn: stamp: 'IO 11/15/2020 21:58:00'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
!

!methodRemoval: Withdraw #collectIn: stamp: 'IO 11/15/2020 21:58:00'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:58:03'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:58:03'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:03'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:58:03'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:58:03'!
ERROR!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:58:03'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:58:03'!
PASSED!
!AccountTransaction methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:20'!
collectIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility ! !
!Deposit methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:20' overrides: 50890075!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:20' overrides: 50890075!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
! !
!TransferDeposit methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:20' overrides: 50890075!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:20' overrides: 50890075!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:58:20' prior: 50889878 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:58:20' prior: 50889886 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectIn: anAccountSummary ].! !

!methodRemoval: AccountTransaction #collectTransactionIn: stamp: 'IO 11/15/2020 21:58:20'!
collectTransactionIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility !

!methodRemoval: Deposit #collectTransactionIn: stamp: 'IO 11/15/2020 21:58:20'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.!

!methodRemoval: TransferWithdraw #collectTransactionIn: stamp: 'IO 11/15/2020 21:58:20'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
!

!methodRemoval: TransferDeposit #collectTransactionIn: stamp: 'IO 11/15/2020 21:58:20'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.!

!methodRemoval: Withdraw #collectTransactionIn: stamp: 'IO 11/15/2020 21:58:20'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:58:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:58:23'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:58:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:58:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:58:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:58:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:58:23'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:58:23'!
PASSED!
!Deposit methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:35'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:35'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:35'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:35'!
collectTransactionIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
! !
!AccountTransaction methodsFor: 'reports' stamp: 'IO 11/15/2020 21:58:35'!
collectTransactionIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility ! !

!methodRemoval: Deposit #collectIn: stamp: 'IO 11/15/2020 21:58:35'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addDepositToReport: self.!

!methodRemoval: TransferDeposit #collectIn: stamp: 'IO 11/15/2020 21:58:35'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferDepositToReport: self.!

!methodRemoval: Withdraw #collectIn: stamp: 'IO 11/15/2020 21:58:35'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addWithdrawToReport: self.!

!methodRemoval: TransferWithdraw #collectIn: stamp: 'IO 11/15/2020 21:58:35'!
collectIn: anAccountSummary

	"see superclass"

	anAccountSummary addTransferWithdrawToReport: self.
!

!methodRemoval: AccountTransaction #collectIn: stamp: 'IO 11/15/2020 21:58:35'!
collectIn: anAccountSummary

	"make this transaction be collected by a reporter"

	self subclassResponsibility !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:58:38'!
ERROR!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:58:38'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:58:38'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:58:52' prior: 50890116 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionIn: anAccountSummary ].! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:58:54'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:58:54'!
PASSED!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 21:59:08'!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectIn: anAccountSummary ].
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 21:59:08'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionIn: anAccountSummary ].! !
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 21:59:08'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:59:08' prior: 50890108 overrides: 50889397!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 21:59:08' prior: 50890682 overrides: 50890696!
collectTransactionsIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !

!methodRemoval: Portfolio #collectIn: stamp: 'IO 11/15/2020 21:59:08'!
collectIn: anAccountSummary

	"see superclass"
	
	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
!

!methodRemoval: ReceptiveAccount #collectIn: stamp: 'IO 11/15/2020 21:59:08'!
collectIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionIn: anAccountSummary ].!

!methodRemoval: Account #collectIn: stamp: 'IO 11/15/2020 21:59:08'!
collectIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:59:28'!
ERROR!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:59:28'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:59:28'!
PASSED!
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 21:59:38' prior: 50889838!
emitReport

	"emit this report"

	account collectTransactionsIn: self.
	^report.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 21:59:40'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:00:14'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:00:18'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:00:29'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:00:29'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:01:30'!
test13AccountTreeForAnEmptyPortfolio
	| childrenPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:01:31'!
ERROR!

Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 22:02:07'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 22:02:11'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:02:14'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:02:14'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:02:14'!
ERROR!
!Account methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:02:35'!
initializeNamed: aName

	self initialize.
	name := aName.
! !

!methodRemoval: ReceptiveAccount #initializeNamed: stamp: 'IO 11/15/2020 22:02:35'!
initializeNamed: aName

	self initialize.
	name := aName.
!
!Account class methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 22:02:41'!
named: aName

	^self basicNew initializeNamed: aName.
! !

!methodRemoval: ReceptiveAccount class #named: stamp: 'IO 11/15/2020 22:02:41'!
named: aName

	^self basicNew initializeNamed: aName.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:02:44'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:02:44'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:02:44'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:03:30' overrides: 50888983!
collectNamesIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:03:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:03:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:03:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:03:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:03:31'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:03:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:03:33'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:03:54'!
test14AccountTreeForAnEmptyPortfolio
	| childrenPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.! !

!methodRemoval: AccountReporterTest #test13AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:03:55'!
test13AccountTreeForAnEmptyPortfolio
	| childrenPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:04:18'!
test14AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:04:24'!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.! !

!methodRemoval: AccountReporterTest #test14AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:04:24'!
test14AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:05:07' prior: 50891840!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection with: 'Portfolio de hijos') equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:05:39' prior: 50891865!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos.'
		with: '  Cuenta de Juan.'
		with: '  Cuenta de Angeles.'
	) equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:05:46' prior: 50891885!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos.'
		with: '  Cuenta de Juan.'
		with: '  Cuenta de Angeles.'
	) equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:05:54' prior: 50891907!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos.'
		with: '    Cuenta de Juan.'
		with: '    Cuenta de Angeles.'
	) equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:06:11' prior: 50891929!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos.'
		with: '  Cuenta de Juan.'
		with: '  Cuenta de Angeles.'
	) equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:06:16'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:06:16'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:06:16'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:08:56'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:10:02' prior: 50891583 overrides: 50888983!
collectNamesIn: anAccountSummary

	"see superclass"
	self collectNamesIn: anAccountSummary withPrefix: ''.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:10:03'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:10:03'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:10:03'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:10:09' prior: 50892145 overrides: 50888983!
collectNamesIn: anAccountSummary

	"see superclass"
	self collectNamesIn: anAccountSummary withPrefix: ''.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:11:13' prior: 50892317 overrides: 50888983!
collectNamesIn: anAccountSummary

	"see superclass"
	anAccountSummary addNameToReport: name.
! !

!methodRemoval: Portfolio #collectNamesIn:withPrefix: stamp: 'IO 11/15/2020 22:11:15'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:12:03' prior: 50892324 overrides: 50888983!
collectNamesIn: anAccountSummary

	"see superclass"
	accounts do: [ :account | account collectNamesIn: anAccountSummary withPrefix: ''. ]

! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 22:12:23'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/15/2020 22:12:50' prior: 50888977 overrides: 50888983!
collectNamesIn: anAccountSummary

	"see superclass"

	self collectNamesIn: anAccountSummary withPrefix: ''.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:14:05'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"
	accounts do: [ :account | account collectNamesIn: anAccountSummary withPrefix: aPrefix. ]

! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:14:22' prior: 50892337 overrides: 50888983!
collectNamesIn: anAccountSummary

	self collectNamesIn: anAccountSummary withPrefix: ''.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:15:16' prior: 50892358!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"
	anAccountSummary addNameToReport: (aPrefix, name).
	accounts do: [ :account | account collectNamesIn: anAccountSummary withPrefix: (aPrefix, '  '). ]

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:15:18'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:15:18'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:15:18'!
FAILURE!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:16:21'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:16:21'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:16:21'!
FAILURE!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:17:23' prior: 50891951!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:17:24'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:17:24'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:17:59'!
test15AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:18:04'!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !

!methodRemoval: AccountReporterTest #test15AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:18:04'!
test15AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:18:52' prior: 50892815!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount familyPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia'.
	
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:19:43' prior: 50892858!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount familyPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia'.
	
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:19:50' prior: 50892882!
test16AccountTreeForAPortfolioWithPortfolios"
	| childrenPortfolio johnsAccount angiesAccount familyPortfolio reporter |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia'.
	
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport."! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:19:50'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:19:50'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:20:19' prior: 50892714!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount reporter |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:20:21'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'IO 11/15/2020 22:20:27'!
named: aString with: aReceptiveAccount with: aReceptiveAccount3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString with: aReceptiveAccount with: aReceptiveAccount3 ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'IO 11/15/2020 22:20:33' prior: 50893017!
named: aString with: aReceptiveAccount with: aReceptiveAccount3 

	^self new initializeNamed: aString with: aReceptiveAccount with: aReceptiveAccount3 ! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:20:38'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 22:20:49'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 22:20:49'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents string receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 22:20:49'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents string receptiveAccount receptiveAccount3'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:20:49'!
initializeNamed: aString with: aReceptiveAccount with: aReceptiveAccount3 
	self shouldBeImplemented.
	string := aString.
	receptiveAccount := aReceptiveAccount.
	receptiveAccount3 := aReceptiveAccount3.! !
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:21:11' prior: 50893064!
initializeNamed: aName with: aReceptiveAccount with: anOtherReceptiveAccount
	self shouldBeImplemented.
	string := aName.
	receptiveAccount := aReceptiveAccount.
	receptiveAccount3 := anOtherReceptiveAccount.! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:21:12'!
ERROR!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:21:20'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'IO 11/15/2020 22:21:49' prior: 50893028!
named: aName with: aReceptiveAccount with: aReceptiveAccount3 

	^self new initializeNamed: aName with: aReceptiveAccount with: aReceptiveAccount3 ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'IO 11/15/2020 22:22:00' prior: 50893091!
named: aName with: aReceptiveAccount with: anotherReceptiveAccount 

	^self new initializeNamed: aName with: aReceptiveAccount with: anotherReceptiveAccount ! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:22:02'!
ERROR!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:22:02'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:22:02'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:22:17' prior: 50893074!
initializeNamed: aName with: aReceptiveAccount with: anOtherReceptiveAccount
	
	string := aName.
	receptiveAccount := aReceptiveAccount.
	receptiveAccount3 := anOtherReceptiveAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:23:07' prior: 50893276!
initializeNamed: aName with: aReceptiveAccount with: anotherReceptiveAccount
	self initializeNamed: aName.
	self add: aReceptiveAccount.
	self add anotherReceptiveAccount.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:23:11'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:23:13'!
ERROR!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:23:13'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:23:13'!
ERROR!
!Portfolio methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:23:18' prior: 50893285!
initializeNamed: aName with: aReceptiveAccount with: anotherReceptiveAccount
	self initializeNamed: aName.
	self add: aReceptiveAccount.
	self add: anotherReceptiveAccount.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:23:18'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:23:20'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:23:20'!
PASSED!
!Portfolio class methodsFor: 'instance creation' stamp: 'IO 11/15/2020 22:25:10' prior: 50893099!
named: aName with: aReceptiveAccount with: anotherReceptiveAccount 

	^((self new initializeNamed: aName) add: aReceptiveAccount) add: anotherReceptiveAccount ! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:25:12'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:25:14'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:25:14'!
PASSED!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'IO 11/15/2020 22:25:40' prior: 50868551!
with: anAccount with: anotherAccount

	^self new
		add: anAccount;
		add: anotherAccount;
		yourself
! !
!Portfolio class methodsFor: 'instance creation' stamp: 'IO 11/15/2020 22:27:20' prior: 50893752!
named: aName with: anAccount with: anotherAccount

	| portfolio |
	portfolio := self basicNew initializeNamed: aName.
	portfolio add: anAccount.
	portfolio add: anotherAccount.
	^portfolio.
! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:27:21'!
PASSED!

!methodRemoval: Portfolio #initializeNamed:with:with: stamp: 'IO 11/15/2020 22:27:27'!
initializeNamed: aName with: aReceptiveAccount with: anotherReceptiveAccount
	self initializeNamed: aName.
	self add: aReceptiveAccount.
	self add: anotherReceptiveAccount.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:27:28'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:27:29'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:27:32'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:27:32'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:28:52' prior: 50892906!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio reporter |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	childrenPortfolio add: johnsAccount.
	childrenPortfolio add: angiesAccount.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:29:08'!
ERROR!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:29:53' prior: 50894396!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio reporter |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	
	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:29:57'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:29:59'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:29:59'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:30:03' prior: 50894428!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio reporter |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	reporter := AccountTreeReporter for: childrenPortfolio.
	
	self assert: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	) equals: reporter emitReport.! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:30:06'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:30:09'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:30:57'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:30:57'!
PASSED!
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 22:31:20' prior: 50888983!
collectNamesIn: anAccountReporter

	"make the name be collected by a reporter"

	self subclassResponsibility.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:31:30' prior: 50892367 overrides: 50894999!
collectNamesIn: anAccountSummary

	"see superclass"

	self collectNamesIn: anAccountSummary withPrefix: ''.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:31:33' prior: 50892373!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
	accounts do: [ :account | account collectNamesIn: anAccountSummary withPrefix: (aPrefix, '  '). ]

! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/15/2020 22:31:38' prior: 50890712 overrides: 50890696!
collectTransactionsIn: anAccountSummary

	"see superclass"

	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
! !
!Account methodsFor: 'reports' stamp: 'IO 11/15/2020 22:32:39'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"make all its transactions be collected by a reporter with a given prefix"

	self subclassResponsibility.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:32:41'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:32:41'!
PASSED!
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 22:33:41' prior: 50890893!
emitReport

	"see superclass"

	account collectTransactionsIn: self.
	^report.
! !
!AccountReporter methodsFor: 'emitting' stamp: 'IO 11/15/2020 22:33:53'!
emitReport

	"emit this report"
	
	self subclassResponsibility.
! !
!AccountSummaryReporter methodsFor: 'initialization' stamp: 'IO 11/15/2020 22:34:42' prior: 50876537 overrides: 50877859!
initializeFor: anAccount

	"see superclass"

	report := OrderedCollection new.
	super initializeFor: anAccount.
! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/15/2020 22:35:18' prior: 50878159!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:35:23'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/15/2020 22:36:50'!
PASSED!

----SNAPSHOT----(15 November 2020 22:36:54) CuisUniversity-4384.image priorSource: 17779832!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:44:57'!
assert: anAccount hasAccountTree: anAccountTreeReport

	self assert: anAccount hasReport: AccountTreeReporter withResult: anAccountTreeReport.! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:45:52' prior: 50887571!
test13AccountTreeForAnAccount
	| johnsAccount reporter |
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	
	reporter := AccountTreeReporter for: johnsAccount.
	
	self assert: johnsAccount hasAccountTree: (OrderedCollection with: 'Cuenta de Juan').! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:46:06' prior: 50895573!
test13AccountTreeForAnAccount
	| johnsAccount |
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.

	self assert: johnsAccount hasAccountTree: (OrderedCollection with: 'Cuenta de Juan').! !

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:46:08'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:46:08'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:46:31' prior: 50891804!
test14AccountTreeForAnEmptyPortfolio
	| childrenPortfolio |
	childrenPortfolio := Portfolio named: 'Portfolio de hijos'.

	self assert: childrenPortfolio hasAccountTree: (OrderedCollection with: 'Portfolio de hijos').! !
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:46:56' prior: 50892993!
test15AccountTreeForAPortfolioWithAccounts
	| childrenPortfolio johnsAccount angiesAccount |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.

	self assert: childrenPortfolio hasAccountTree: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	).! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:46:58'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:46:58'!
PASSED!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:47:11' prior: 50894580!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	self assert: johnsAccount hasAccountTree: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	)! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:47:16'!
FAILURE!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:47:26' prior: 50895748!
test16AccountTreeForAPortfolioWithPortfolios
	| childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	self assert: familyPortfolio hasAccountTree: (OrderedCollection
		with: 'Portfolio de hijos'
		with: '  Cuenta de Juan'
		with: '  Cuenta de Angeles'
	)! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:47:26'!
FAILURE!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:47:38'!
FAILURE!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:49:02' prior: 50895776!
test16AccountTreeForAPortfolioWithPortfolios
	| report childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	report := OrderedCollection
		with: '  Portfolio de hijos'
		with: '    Cuenta de Juan'
		with: '    Cuenta de Angeles'.

	self assert: familyPortfolio hasAccountTree: report.! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:49:02'!
FAILURE!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/15/2020 22:50:20' prior: 50895808!
test16AccountTreeForAPortfolioWithPortfolios
	| report childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	report := OrderedCollection
		with: 'Portfolio de la familia'
		with: '  Cuenta mia'
		with: '  Portfolio de hijos'
		with: '    Cuenta de Juan'
		with: '    Cuenta de Angeles'.

	self assert: familyPortfolio hasAccountTree: report.! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:50:21'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/15/2020 22:50:24'!
PASSED!

----SNAPSHOT----(15 November 2020 22:50:32) CuisUniversity-4384.image priorSource: 18045140!

AccountReporter subclass: #AccountTreeSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTreeSummaryReporter category: 'Portfolio-Solucion' stamp: 'IO 11/15/2020 22:51:41'!
AccountReporter subclass: #AccountTreeSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountReporter subclass: #AccountTreeReporter
	instanceVariableNames: 'indentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 00:29:37'!
AccountReporter subclass: #AccountTreeReporter
	instanceVariableNames: 'indentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 00:31:05'!
beginHierarchy
	indentation := (indentation, '  ')
! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 00:31:30'!
endHierarchy
	indentation := indentation
! !
!AccountTreeReporter methodsFor: 'initialization' stamp: 'IO 11/16/2020 00:31:52' prior: 50888180 overrides: 50877859!
initializeFor: anAccount

	report := OrderedCollection new.
	indentation := ''.
	super initializeFor: anAccount.
! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 00:32:47' prior: 50895965!
endHierarchy
	indentation := indentation from: 1 to: indentation size -2.
! !
!Portfolio methodsFor: 'reports' stamp: 'IO 11/16/2020 00:33:58' prior: 50895013 overrides: 50895031!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
	anAccountSummary beginHierarchy.
	accounts do: [ :account | account collectNamesIn: anAccountSummary withPrefix: (aPrefix, ''). ].
	anAccountSummary endHierarchy.

! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 00:34:22' prior: 50888239!
addNameToReport: aName
	report add: (indentation, aName).
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:34:23'!
ERROR!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:34:23'!
ERROR!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:34:23'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:34:23'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:35:26'!
ERROR!

'  ' from: 1 to: 2!

'  '!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 00:39:19' prior: 50895978!
endHierarchy
	| newIndentation |
	newIndentation := ''.
	(1 to: indentation size - 2) do: [newIndentation append: '  '].
	indentation := newIndentation.
! !

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:39:22'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:39:26'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:39:26'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:39:26'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:39:59'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:39:59'!
ERROR!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:39:59'!
ERROR!

indentation size!

indentation size -2 !

1 to: indentation size -2!

1 to: indentation size -2!

self do: []!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 00:42:16' prior: 50896172!
endHierarchy
	indentation := '' padded: 1 to: indentation size - 2 with: ' '.
! !

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:42:18'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:42:20'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:42:29'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:42:30'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:42:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:42:52'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:42:52'!
PASSED!
!ReceptiveAccount methodsFor: 'report' stamp: 'IO 11/16/2020 00:43:20' prior: 50892352 overrides: 50894999!
collectNamesIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:43:21'!
PASSED!

!methodRemoval: ReceptiveAccount #collectNamesIn:withPrefix: stamp: 'IO 11/16/2020 00:43:28'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
!
!Portfolio methodsFor: 'reports' stamp: 'IO 11/16/2020 00:44:03' prior: 50895006 overrides: 50894999!
collectNamesIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
	anAccountSummary beginHierarchy.
	accounts do: [ :account | account collectNamesIn: anAccountSummary. ].
	anAccountSummary endHierarchy.
! !

!methodRemoval: Portfolio #collectNamesIn:withPrefix: stamp: 'IO 11/16/2020 00:44:05'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"see superclass"

	anAccountSummary addNameToReport: (aPrefix, name).
	anAccountSummary beginHierarchy.
	accounts do: [ :account | account collectNamesIn: anAccountSummary withPrefix: (aPrefix, ''). ].
	anAccountSummary endHierarchy.

!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:44:07'!
PASSED!

!methodRemoval: Account #collectNamesIn:withPrefix: stamp: 'IO 11/16/2020 00:44:10'!
collectNamesIn: anAccountSummary withPrefix: aPrefix

	"make all its transactions be collected by a reporter with a given prefix"

	self subclassResponsibility.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:44:13'!
PASSED!

!classRemoval: #AccountTreeSummaryReporter stamp: 'IO 11/16/2020 00:44:32'!
AccountReporter subclass: #AccountTreeSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 00:44:33'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 00:45:38'!
PASSED!

----SNAPSHOT----(16 November 2020 00:46:24) CuisUniversity-4384.image priorSource: 18056931!

----STARTUP---- (16 November 2020 12:41:01) as C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\CuisUniversity-4384.image!


!classRemoval: #Transfer stamp: 'LH 11/16/2020 12:41:08'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdraw deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'LH 11/16/2020 12:41:08'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferWithdraw stamp: 'LH 11/16/2020 12:41:09'!
TransferComponents subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferDeposit stamp: 'LH 11/16/2020 12:41:09'!
TransferComponents subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferComponents stamp: 'LH 11/16/2020 12:41:09'!
AccountTransaction subclass: #TransferComponents
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'LH 11/16/2020 12:41:10'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'LH 11/16/2020 12:41:10'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountSummary stamp: 'LH 11/16/2020 12:41:10'!
Object subclass: #AccountSummary
	instanceVariableNames: 'report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'LH 11/16/2020 12:41:11'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'LH 11/16/2020 12:41:11'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'LH 11/16/2020 12:41:12'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTest stamp: 'LH 11/16/2020 12:41:12'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'firstAccount secondAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'LH 11/16/2020 12:41:12'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'LH 11/16/2020 12:41:13'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountSummaryTest stamp: 'LH 11/16/2020 12:41:13'!
TestCase subclass: #AccountSummaryTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\Portfolio-Solucion.st----!
!Account methodsFor: 'name' stamp: 'LH 11/16/2020 13:18:47' overrides: 16882612!
name

	^name.! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:24:02'!
addAccountToReport: anAccount

	anAccount addToTheReport: self.! !
!Portfolio methodsFor: 'reports' stamp: 'LH 11/16/2020 13:25:38'!
addToTheReport: aReport

	"see superclass"
	aReport addAPortfolio: self.
	accounts do: [ :anAccount | anAccount addToTheReport: aReport ].
! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:26:31'!
addAPortfolio: aPortfolio

	! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:27:05' prior: 50876263!
addAPortfolio: aPortfolio
	"add a portfolio to the report, if needed. By default does nothing"
	! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:27:55' overrides: 50876267!
addAPortfolio: aPortfolio
	"adds the name of a Portfolio to the report"! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:28:12' prior: 50876274 overrides: 50876267!
addAPortfolio: aPortfolio
	"adds the name of a Portfolio to the report"
	
	! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:29:16'!
addAnAccount: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.! !

!methodRemoval: AccountTreeReporter #addAPortfolio: stamp: 'LH 11/16/2020 13:29:33'!
addAPortfolio: aPortfolio
	"adds the name of a Portfolio to the report"
	
	!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:29:46'!
addAnAccountToReport: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.! !

!methodRemoval: AccountTreeReporter #addAnAccount: stamp: 'LH 11/16/2020 13:29:46'!
addAnAccount: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:29:58' overrides: 50876251!
addAccountToReport: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.! !

!methodRemoval: AccountTreeReporter #addAnAccountToReport: stamp: 'LH 11/16/2020 13:29:58'!
addAnAccountToReport: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:30:20' prior: 50876313 overrides: 50876251!
addAccountToReport: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	anAccount addToTheReport: self.! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:33:25' prior: 50876328 overrides: 50876251!
addAccountToReport: anAccount
	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	anAccount addToTheReport: self.
	self endHierarchy.! !
!AccountTransaction methodsFor: 'reports' stamp: 'LH 11/16/2020 13:35:10'!
addToTheReport: aReport
	"adds this transaction to a report"
	
	self subclassResponsibility.
	! !
!Portfolio methodsFor: 'reports' stamp: 'LH 11/16/2020 13:35:47' prior: 50876256!
addToTheReport: aReport

	"see superclass"
	
	accounts do: [ :anAccount | anAccount addToTheReport: aReport ].
! !
!Account methodsFor: 'reports' stamp: 'LH 11/16/2020 13:36:22'!
addToTheReport: aReport

	"add this account and it's childrent to a report"

	self subclassResponsibility.
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'LH 11/16/2020 13:37:05' overrides: 50876358!
addToTheReport: aReports! !
!ReceptiveAccount methodsFor: 'report' stamp: 'LH 11/16/2020 13:37:08' prior: 50876365 overrides: 50876358!
addToTheReport: aReport! !
!Portfolio methodsFor: 'reports' stamp: 'LH 11/16/2020 13:38:35' prior: 50876352 overrides: 50876358!
addToTheReport: aReport

	"see superclass"
	
	accounts do: [ :anAccount | aReport addAccountToReport: anAccount ].
! !
!ReceptiveAccount methodsFor: 'report' stamp: 'LH 11/16/2020 13:40:15' prior: 50876370 overrides: 50876358!
addToTheReport: aReport

	transactions do: [:aTransaction | aTransaction addToTheReport: aReport]
	! !
!Deposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:41:01' overrides: 50876346!
addToTheReport: aReport

	aReport addADeposit: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:41:41' overrides: 50876346!
addToTheReport: aReport

	aReport addATransferDeposit: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:41:59' overrides: 50876346!
addToTheReport: aReport

	aReport addATransferWithdraw: self.! !
!Withdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:42:14' overrides: 50876346!
addToTheReport: aReport

	aReport addAWithdraw: self.! !
!Deposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:43:11' prior: 50876389 overrides: 50876346!
addToTheReport: aReport

	aReport addADepositToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:43:21' prior: 50876394 overrides: 50876346!
addToTheReport: aReport

	aReport addATransferDepositToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:43:28' prior: 50876399 overrides: 50876346!
addToTheReport: aReport

	aReport addATransferWithdrawToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:43:34' prior: 50876404 overrides: 50876346!
addToTheReport: aReport

	aReport addAWithdrawToReport: self.! !

!methodRemoval: AccountReporter #addAPortfolio: stamp: 'LH 11/16/2020 13:43:51'!
addAPortfolio: aPortfolio
	"add a portfolio to the report, if needed. By default does nothing"
	!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:44:26'!
addDepositToReport: anAccount
	"adds a Deposit to this report. by default does nothing"! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:44:45'!
addWithdrawToReport: aWithdraw
	"adds a Withdraw to this report. by default does nothing"! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:44:51' prior: 50876438!
addDepositToReport: aDeposit
	"adds a Deposit to this report. by default does nothing"! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:45:15'!
addTransferDepositToReport: aTDeposit
	"adds a Transfer Deposit to this report. by default does nothing"! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:45:28'!
addTransferWithdrawToReport: aTWithdraw
	"adds a Transfer Withdraw to this report. by default does nothing"! !
!Deposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:45:46' prior: 50876409 overrides: 50876346!
addToTheReport: aReport

	aReport addADepositToReport: self.! !
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:46:49'!
addADepositToReport: aDeposit
	"adds a Deposit to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addDepositToReport: stamp: 'LH 11/16/2020 13:46:49'!
addDepositToReport: aDeposit
	"adds a Deposit to this report. by default does nothing"!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:47:00'!
addATransferDepositToReport: aTDeposit
	"adds a Transfer Deposit to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addTransferDepositToReport: stamp: 'LH 11/16/2020 13:47:01'!
addTransferDepositToReport: aTDeposit
	"adds a Transfer Deposit to this report. by default does nothing"!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:47:12'!
addATransferWithdrawToReport: aTWithdraw
	"adds a Transfer Withdraw to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addTransferWithdrawToReport: stamp: 'LH 11/16/2020 13:47:12'!
addTransferWithdrawToReport: aTWithdraw
	"adds a Transfer Withdraw to this report. by default does nothing"!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:47:21'!
addAWithdrawToReport: aWithdraw
	"adds a Withdraw to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addWithdrawToReport: stamp: 'LH 11/16/2020 13:47:21'!
addWithdrawToReport: aWithdraw
	"adds a Withdraw to this report. by default does nothing"!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 13:47:29'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 13:47:29'!
PASSED!
!TransferNetReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:48:11' overrides: 50876485!
addATransferDepositToReport: aTDeposit

	! !
!TransferNetReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:49:41' prior: 50876583 overrides: 50876485!
addATransferDepositToReport: aTDeposit
	"see superclass"
	
	self addTransferToReport: aTDeposit.! !
!TransferNetReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 13:49:58' overrides: 50876498!
addATransferWithdrawToReport: aTWithdraw
	"see superclass"
	
	self addTransferToReport: aTWithdraw.! !

!methodRemoval: TransferNetReporter #addATransferDepositToReport: stamp: 'LH 11/16/2020 13:51:19'!
addATransferDepositToReport: aTDeposit
	"see superclass"
	
	self addTransferToReport: aTDeposit.!

!methodRemoval: TransferNetReporter #addATransferWithdrawToReport: stamp: 'LH 11/16/2020 13:51:23'!
addATransferWithdrawToReport: aTWithdraw
	"see superclass"
	
	self addTransferToReport: aTWithdraw.!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:51:42'!
addDepositToReport: aDeposit
	"adds a Deposit to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addADepositToReport: stamp: 'LH 11/16/2020 13:51:42'!
addADepositToReport: aDeposit
	"adds a Deposit to this report. by default does nothing"!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:52:12'!
addWithdrawToReport: aWithdraw
	"adds a Withdraw to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addAWithdrawToReport: stamp: 'LH 11/16/2020 13:52:12'!
addAWithdrawToReport: aWithdraw
	"adds a Withdraw to this report. by default does nothing"!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:52:31'!
addTransferWithdrawToReport: aTWithdraw
	"adds a Transfer Withdraw to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addATransferWithdrawToReport: stamp: 'LH 11/16/2020 13:52:31'!
addATransferWithdrawToReport: aTWithdraw
	"adds a Transfer Withdraw to this report. by default does nothing"!
!AccountReporter methodsFor: 'add to report' stamp: 'LH 11/16/2020 13:52:46'!
addTransferDepositToReport: aTDeposit
	"adds a Transfer Deposit to this report. by default does nothing"! !

!methodRemoval: AccountReporter #addATransferDepositToReport: stamp: 'LH 11/16/2020 13:52:46'!
addATransferDepositToReport: aTDeposit
	"adds a Transfer Deposit to this report. by default does nothing"!
!Deposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:53:15' prior: 50876469 overrides: 50876346!
addToTheReport: aReport

	aReport addDepositToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:53:25' prior: 50876415 overrides: 50876346!
addToTheReport: aReport

	aReport addTransferDepositToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:53:31' prior: 50876421 overrides: 50876346!
addToTheReport: aReport

	aReport addTransferWithdrawToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:53:36' prior: 50876427 overrides: 50876346!
addToTheReport: aReport

	aReport addWithdrawToReport: self.! !
!Withdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:53:56' prior: 50876681 overrides: 50876346!
addToTheReport: aReport
	"see superclass"
	
	aReport addWithdrawToReport: self.! !
!TransferWithdraw methodsFor: 'reports' stamp: 'LH 11/16/2020 13:54:02' prior: 50876675 overrides: 50876346!
addToTheReport: aReport
	"see superclass"

	aReport addTransferWithdrawToReport: self.! !
!TransferDeposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:54:08' prior: 50876669 overrides: 50876346!
addToTheReport: aReport
	"see superclass"
	
	aReport addTransferDepositToReport: self.! !
!Deposit methodsFor: 'reports' stamp: 'LH 11/16/2020 13:54:15' prior: 50876663 overrides: 50876346!
addToTheReport: aReport
	"see superclass"
	
	aReport addDepositToReport: self.! !
!AccountReporter methodsFor: 'emitting' stamp: 'LH 11/16/2020 13:57:25' prior: 50875584!
emitReport

	"emit this report"
	
	self addAccountToReport: account.
! !
!AccountReporter methodsFor: 'emitting' stamp: 'LH 11/16/2020 13:58:01' prior: 50876712!
emitReport

	"emit this report"
	
	self addAccountToReport: account.
	^report.
! !
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'LH 11/16/2020 13:58:24' prior: 50875645 overrides: 50876718!
emitReport

	"see superclass"

	"account collectTransactionsIn: self.
	^report."
	! !
!AccountTransactionsReporter methodsFor: 'emitting' stamp: 'LH 11/16/2020 13:58:45' prior: 50876725 overrides: 50876718!
emitReport

	"see superclass"

	"account collectTransactionsIn: self.
	^report."
	^super emitReport.! !
!AccountTreeReporter methodsFor: 'emitting' stamp: 'LH 11/16/2020 13:59:19' prior: 50875786 overrides: 50876718!
emitReport

	"emit this report"

	"account collectNamesIn: self.
	^report.
"
	^super emitReport.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 13:59:24'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 13:59:25'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 13:59:25'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 13:59:25'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 13:59:25'!
FAILURE!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 13:59:25'!
FAILURE!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 13:59:41'!
FAILURE!

(reporter emitReport)!

aReportResult!

anAccount!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 14:03:10'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:03:10'!
FAILURE!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 14:03:10'!
FAILURE!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:03:13'!
FAILURE!

indentation!

indentation!

indentation!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:05:34'!
FAILURE!

indentation!

indentation!

indentation size - 2!

'' padded: 1 to: indentation size - 2 with: ' '!

leftOrRight!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 14:10:34' prior: 50875802!
endHierarchy
	indentation := '' padded: #left to: indentation size - 2 with: ' '.
! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:10:36'!
ERROR!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:11:00'!
ERROR!

leftOrRight!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:12:06'!
ERROR!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:12:20'!
ERROR!

----End fileIn of C:\Users\Usuario\Desktop\labo\inge1\Cuis\windows64 Portfolio2\Packages\TerseGuide.pck.st----!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'LH 11/16/2020 14:15:56' prior: 50876882!
endHierarchy
	indentation := indentation copyFrom: 1 to: indentation size - 2.
	"indentation := '' padded: 1 to: indentation size - 2 with: ' '".
! !

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:15:57'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 14:15:59'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 14:16:02'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 14:16:03'!
PASSED!

----SNAPSHOT----(16 November 2020 14:17:48) CuisUniversity-4384.image priorSource: 17368420!

!methodRemoval: Portfolio #collectNamesIn: stamp: 'LH 11/16/2020 14:18:16'!
collectNamesIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
	anAccountSummary beginHierarchy.
	accounts do: [ :account | account collectNamesIn: anAccountSummary. ].
	anAccountSummary endHierarchy.
!

!methodRemoval: Portfolio #collectTransactionsIn: stamp: 'LH 11/16/2020 14:18:17'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	accounts do: [ :anAccount | anAccount collectTransactionsIn: anAccountSummary ].
!

!methodRemoval: ReceptiveAccount #collectNamesIn: stamp: 'LH 11/16/2020 14:18:21'!
collectNamesIn: anAccountSummary

	"see superclass"

	anAccountSummary addNameToReport: name.
!

!methodRemoval: ReceptiveAccount #collectTransactionsIn: stamp: 'LH 11/16/2020 14:18:23'!
collectTransactionsIn: anAccountSummary

	"see superclass"

	transactions do: [ :aTransaction | aTransaction collectTransactionIn: anAccountSummary ].!

!methodRemoval: Account #collectNamesIn: stamp: 'LH 11/16/2020 14:18:26'!
collectNamesIn: anAccountReporter

	"make the name be collected by a reporter"

	self subclassResponsibility.
!

!methodRemoval: Account #collectTransactionsIn: stamp: 'LH 11/16/2020 14:18:28'!
collectTransactionsIn: anAccountReporter

	"make all its transactions be collected by a reporter"

	self subclassResponsibility.
!

!methodRemoval: AccountTransactionsReporter #emitReport stamp: 'LH 11/16/2020 14:19:28'!
emitReport

	"see superclass"

	"account collectTransactionsIn: self.
	^report."
	^super emitReport.!

!methodRemoval: AccountTransactionsReporter #addDepositToReport: stamp: 'LH 11/16/2020 14:19:57'!
addDepositToReport: aDeposit

	"add a deposit to this report"

	self subclassResponsibility.
!

!methodRemoval: AccountTransactionsReporter #addTransferDepositToReport: stamp: 'LH 11/16/2020 14:19:59'!
addTransferDepositToReport: aTransferDeposit

	"add a transfer deposit to this report"

	self subclassResponsibility.
!

!methodRemoval: AccountTransactionsReporter #addTransferWithdrawToReport: stamp: 'LH 11/16/2020 14:20:01'!
addTransferWithdrawToReport: aTransferWithdraw

	"add a transfer withdraw to this report"

	self subclassResponsibility.
!

!methodRemoval: AccountTransactionsReporter #addWithdrawToReport: stamp: 'LH 11/16/2020 14:20:03'!
addWithdrawToReport: aTransferWithdraw

	"add a withdraw to this report"

	self subclassResponsibility.
!

!methodRemoval: TransferNetReporter #addDepositToReport: stamp: 'LH 11/16/2020 14:20:17'!
addDepositToReport: aDeposit

	"see superclass"

	
!

!methodRemoval: TransferNetReporter #addWithdrawToReport: stamp: 'LH 11/16/2020 14:20:22'!
addWithdrawToReport: aWithdraw

	"see superclass"

!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 14:20:27'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 14:20:28'!
PASSED!

!methodRemoval: AccountTreeReporter #emitReport stamp: 'LH 11/16/2020 14:21:18'!
emitReport

	"emit this report"

	"account collectNamesIn: self.
	^report.
"
	^super emitReport.!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 14:21:28'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'LH 11/16/2020 14:21:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'LH 11/16/2020 14:21:34'!
PASSED!

----SNAPSHOT----(16 November 2020 14:25:10) CuisUniversity-4384.image priorSource: 17544398!

----SNAPSHOT----(16 November 2020 15:22:38) CuisUniversity-4384.image priorSource: 18368802!
!AccountReporterTest methodsFor: 'account tree' stamp: 'IO 11/16/2020 15:28:54'!
test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions
	| report childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio externalAccount |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	externalAccount :- ReceptiveAccount new.

	report := OrderedCollection
		with: 'Portfolio de la familia'
		with: '  Cuenta mia'
		with: '    Dep�sito por 100.'
		with: '    Extracci�n por 50.'
		with: '    Balance = 50'.
	
	report add: '  Portfolio de hijos'.
	report add: '    Cuenta de Juan'.
	report add: '      Dep�sito por 80.'.
	report add: '      Extracci�n por 50.'.
	report add: '      Balance = 30'.
	report add: '    Cuenta de Angeles'.
	report add: '      Salida por transferencia de 200.'.
	report add: '      Balance = -200'.
	report add: '    Balance = -170'.
	report add: '  Balance = -120'.

	self assert: familyPortfolio hasAccountSummaryTree: report.! !

!classDefinition: #AccountSummaryTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 15:29:41'!
ProtoObject subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountReporterTest methodsFor: 'assertions' stamp: 'IO 11/16/2020 15:29:31'!
assert: anAccount hasAccountSummaryTree: aCollectionOfStrings

	self assert: anAccount hasReport: AccountSummaryTreeReporter withResult: aCollectionOfStrings.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:29:42'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:29:43'!
ERROR!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:29:43'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:29:58'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:29:58'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:29:58'!
ERROR!
!AccountReporterTest methodsFor: 'account summary tree' stamp: 'IO 11/16/2020 15:30:07' prior: 50905682!
test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions
	| report childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio externalAccount |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	externalAccount := ReceptiveAccount new.

	report := OrderedCollection
		with: 'Portfolio de la familia'
		with: '  Cuenta mia'
		with: '    Dep�sito por 100.'
		with: '    Extracci�n por 50.'
		with: '    Balance = 50'.
	
	report add: '  Portfolio de hijos'.
	report add: '    Cuenta de Juan'.
	report add: '      Dep�sito por 80.'.
	report add: '      Extracci�n por 50.'.
	report add: '      Balance = 30'.
	report add: '    Cuenta de Angeles'.
	report add: '      Salida por transferencia de 200.'.
	report add: '      Balance = -200'.
	report add: '    Balance = -170'.
	report add: '  Balance = -120'.

	self assert: familyPortfolio hasAccountSummaryTree: report.! !

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:30:12'!
ERROR!

AccountReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 15:30:46'!
AccountReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:30:47'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:30:47'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:30:47'!
FAILURE!

AccountTreeReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 15:32:41'!
AccountTreeReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryTreeReporter methodsFor: 'no messages' stamp: 'IO 11/16/2020 15:33:28' overrides: 50904870!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	self endHierarchy.
! !

AccountSummaryReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 15:35:55'!
AccountSummaryReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:36:22' prior: 50906230 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	super emitReport add: ('Balance = ', account balance asString).
	self endHierarchy.
! !

!classDefinition: #AccountSummaryTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 15:36:36'!
AccountSummaryReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: 'indentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryTreeReporter methodsFor: 'nil' stamp: 'IO 11/16/2020 15:36:34'!
beginHierarchy
	indentation := (indentation, '  ')
! !
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:36:50'!
endHierarchy
	indentation := indentation copyFrom: 1 to: indentation size - 2.

! !
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:37:22' overrides: 50901921!
initializeFor: anAccount
	super initializeFor: anAccount.
	indentation := ''.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:37:24'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:37:24'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:37:24'!
ERROR!
!AccountSummaryTreeReporter methodsFor: 'nil' stamp: 'IO 11/16/2020 15:37:45'!
addNameToReport: aName
	report add: (indentation, aName).
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:37:47'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:37:53'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:37:53'!
PASSED!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:39:33' prior: 50906255 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super emitReport.
	super emitReport add: ('Balance = ', account balance asString).
	self endHierarchy.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:39:35'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:39:35'!
PASSED!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:39:48' prior: 50906591 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:39:50'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:39:50'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:39:50'!
FAILURE!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:40:06' prior: 50906663 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	self endHierarchy.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:40:07'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:40:07'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:40:07'!
FAILURE!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:40:23' prior: 50906845 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.

	self endHierarchy.

! !
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:41:51' prior: 50907029 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	self endHierarchy.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:41:52'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:41:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:41:53'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:41:53'!
FAILURE!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:42:45' prior: 50907039 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	report add: ('Balance = ', account balance asString).
	self endHierarchy.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:42:48'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:42:48'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:42:49'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:42:49'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:42:49'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:42:49'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:42:49'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:42:49'!
FAILURE!
!AccountReporterTest methodsFor: 'account summary tree' stamp: 'IO 11/16/2020 15:45:25' prior: 50905982!
test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions
	| report childrenPortfolio johnsAccount angiesAccount myAccount familyPortfolio externalAccount |

	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.
	externalAccount := ReceptiveAccount new.
	
	Deposit register: 100 on: myAccount.
	Withdraw register: 50 on: myAccount.
	Deposit register: 80 on: johnsAccount.
	Withdraw register: 50 on: johnsAccount.
	Transfer register: 200 from: angiesAccount to: externalAccount.

	report := OrderedCollection
		with: 'Portfolio de la familia'
		with: '  Cuenta mia'
		with: '    Dep�sito por 100.'
		with: '    Extracci�n por 50.'
		with: '    Balance = 50'.
	
	report add: '  Portfolio de hijos'.
	report add: '    Cuenta de Juan'.
	report add: '      Dep�sito por 80.'.
	report add: '      Extracci�n por 50.'.
	report add: '      Balance = 30'.
	report add: '    Cuenta de Angeles'.
	report add: '      Salida por transferencia de 200.'.
	report add: '      Balance = -200'.
	report add: '    Balance = -170'.
	report add: '  Balance = -120'.

	self assert: familyPortfolio hasAccountSummaryTree: report.! !

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:45:26'!
FAILURE!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:46:28'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:46:28'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:46:28'!
FAILURE!
!AccountSummaryTreeReporter methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:47:06' prior: 50907224 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	report add: (indentation, 'Balance = ', anAccount balance asString).
	self endHierarchy.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:47:07'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:47:07'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:47:07'!
FAILURE!

!methodRemoval: AccountSummaryTreeReporter #beginHierarchy stamp: 'IO 11/16/2020 15:47:49'!
beginHierarchy
	indentation := (indentation, '  ')
!

!methodRemoval: AccountSummaryTreeReporter #endHierarchy stamp: 'IO 11/16/2020 15:47:51'!
endHierarchy
	indentation := indentation copyFrom: 1 to: indentation size - 2.

!

!methodRemoval: AccountSummaryTreeReporter #initializeFor: stamp: 'IO 11/16/2020 15:47:53'!
initializeFor: anAccount
	super initializeFor: anAccount.
	indentation := ''.!

!methodRemoval: AccountSummaryTreeReporter #addNameToReport: stamp: 'IO 11/16/2020 15:48:11'!
addNameToReport: aName
	report add: (indentation, aName).
!

AccountTreeReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: 'indentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTreeReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryTreeReporter category: 'Portfolio-Solucion' stamp: 'IO 11/16/2020 15:48:31'!
AccountTreeReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReporter methodsFor: 'nil' stamp: 'IO 11/16/2020 15:48:42'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
! !

!methodRemoval: TransferNetReporter #addAccountSummaryTextWith:for: stamp: 'IO 11/16/2020 15:49:14'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:49:15'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:49:15'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:49:15'!
FAILURE!
!AccountTreeReporter methodsFor: 'nil' stamp: 'IO 11/16/2020 15:50:06'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
! !

!methodRemoval: AccountTreeReporter #addAccountSummaryTextWith:for: stamp: 'IO 11/16/2020 15:50:15'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
!
!AccountSummaryTreeReporter methodsFor: 'nil' stamp: 'IO 11/16/2020 15:50:24'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:50:50' overrides: 50904065!
addDepositToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�stio por ' for: aDeposit.! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:51:08' overrides: 50904074!
addTransferDepositToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:51:14' overrides: 50904084!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:51:22' overrides: 50904094!
addWithdrawToReport: aWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:51:28' prior: 50908070!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (indentation, aPrefix, aTransaction value asString, '.').
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:51:30'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:51:30'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:51:30'!
FAILURE!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:52:46' prior: 50907638 overrides: 50904870!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	anAccount reportAccountIn: self.
	report add: (indentation, 'Balance = ', anAccount balance asString).
	self endHierarchy.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:52:48'!
FAILURE!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:52:48'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:52:48'!
FAILURE!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:54:20' prior: 50908079 overrides: 50904065!
addDepositToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�sito por ' for: aDeposit.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:54:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:54:23'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:54:23'!
PASSED!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:54:33' prior: 50901882 overrides: 50904065!
addDepositToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�sito por ' for: aDeposit.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:54:35'!
FAILURE!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:54:35'!
FAILURE!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:54:35'!
FAILURE!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:54:35'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:54:35'!
PASSED!
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/16/2020 15:54:40' prior: 50900778!
test02AccountSummaryForAnAccountWithADeposit

	| accounts |
	accounts := AccountTestUtility withOneAccount.

	Deposit register: 100 on: accounts account1.
	
	self assert: accounts account1 hasAccountSummary: (OrderedCollection with:'Dep�sito por 100.' with: 'Balance = 100').
! !
!AccountReporterTest methodsFor: 'account summary' stamp: 'IO 11/16/2020 15:54:51' prior: 50900851!
test08AccountSummaryForPortfolioWithManyAccounts

	| accounts account3 report |

	accounts := AccountTestUtility withPortfolioAndTwoAccounts.
	
	accounts mockAllTransactions.
	
	account3 := ReceptiveAccount new.
	accounts portfolio1 add: account3.
	
	Deposit register: 200 on: account3.
	Withdraw register: 100 on: account3.
	Transfer register: 40 from: account3 to: accounts account2.
	Transfer register: 60 from: accounts account2 to: account3.

	report := accounts mockedTransactionsAccountSummary.

	report add: 'Dep�sito por 200.'.
	report add: 'Extracci�n por 100.'.
	report add: 'Salida por transferencia de 40.'.
	report add: 'Entrada por transferencia de 60.'.
	
	report add: 'Balance = 180'.

	self assert: accounts portfolio1 hasAccountSummary: report .! !
!AccountTestUtility methodsFor: 'as yet unclassified' stamp: 'IO 11/16/2020 15:55:03' prior: 50902079!
mockedTransactionsAccountSummary

	^OrderedCollection
		with: 'Dep�sito por 100.'
		with: 'Extracci�n por 50.'
		with: 'Salida por transferencia de 20.'
		with: 'Entrada por transferencia de 30.'.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:55:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:55:05'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:55:05'!
PASSED!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:56:07'!
addTransferDepositTextToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:56:21' prior: 50908087 overrides: 50904074!
addTransferDepositToReport: aTransferDeposit

	"see superclass"

	self addTransferDepositTextToReport: aTransferDeposit.

	! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:56:22'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:56:23'!
PASSED!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:56:27'!
addTransferDepositTextToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !

!methodRemoval: AccountSummaryTreeReporter #addTransferDepositTextToReport: stamp: 'IO 11/16/2020 15:56:27'!
addTransferDepositTextToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:57:06'!
addTransferDepositTextToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	! !

!methodRemoval: AccountTreeReporter #addTransferDepositTextToReport: stamp: 'IO 11/16/2020 15:57:06'!
addTransferDepositTextToReport: aTransferDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Entrada por transferencia de ' for: aTransferDeposit.

	!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:57:25' prior: 50901889 overrides: 50904074!
addTransferDepositToReport: aTransferDeposit

	"see superclass"

	self addTransferDepositTextToReport: aTransferDeposit.

	! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:57:26'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:57:27'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:57:27'!
PASSED!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:58:25' prior: 50901873!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"see superclass"

	report add: (aPrefix, aTransaction value asString, '.').
! !
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:58:45'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	self subclassResponsibility.

! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:58:48'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:58:49'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:58:49'!
PASSED!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:59:04'!
addDepositTextToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�sito por ' for: aDeposit.! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:59:25' prior: 50908662 overrides: 50904065!
addDepositToReport: aDeposit

	"see superclass"

	self addDepositTextToReport: aDeposit.! !
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:59:30'!
addDepositTextToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�sito por ' for: aDeposit.! !

!methodRemoval: AccountSummaryReporter #addDepositTextToReport: stamp: 'IO 11/16/2020 15:59:30'!
addDepositTextToReport: aDeposit

	"see superclass"

	self addAccountSummaryTextWith: 'Dep�sito por ' for: aDeposit.!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 15:59:40' prior: 50908484 overrides: 50904065!
addDepositToReport: aDeposit

	"see superclass"

	self addDepositTextToReport: aDeposit.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:59:41'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 15:59:43'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 15:59:43'!
PASSED!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:01'!
addTransferWithdrawTextToReport: aTransferWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:15' prior: 50901898 overrides: 50904084!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addTransferWithdrawTextToReport: 'Salida por transferencia de '! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:17' prior: 50909813 overrides: 50904084!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addTransferWithdrawTextToReport: 'Salida por transferencia de '.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:00:18'!
FAILURE!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:00:18'!
FAILURE!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:00:18'!
FAILURE!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:00:18'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:00:19'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:00:19'!
PASSED!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:29' prior: 50909822 overrides: 50904084!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addTransferWithdrawTextToReport: aTransferWithdraw.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:00:29'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:00:29'!
PASSED!
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:35'!
addTransferWithdrawTextToReport: aTransferWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
! !

!methodRemoval: AccountSummaryReporter #addTransferWithdrawTextToReport: stamp: 'IO 11/16/2020 16:00:35'!
addTransferWithdrawTextToReport: aTransferWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Salida por transferencia de ' for: aTransferWithdraw.
!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:46' prior: 50908096 overrides: 50904084!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addTransferWithdrawTextToReport:  aTransferWithdraw.
! !
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:00:47' prior: 50910089 overrides: 50904084!
addTransferWithdrawToReport: aTransferWithdraw

	"see superclass"

	self addTransferWithdrawTextToReport: aTransferWithdraw.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:00:48'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:00:48'!
PASSED!
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:01:04'!
addWithdrawTextToReport: aWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !
!AccountSummaryReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:01:12' prior: 50901907 overrides: 50904094!
addWithdrawToReport: aWithdraw

	"see superclass"

	self addWithdrawTextToReport: aWithdraw.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:01:13'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:01:13'!
PASSED!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:01:29' prior: 50908105 overrides: 50904094!
addWithdrawToReport: aWithdraw

	"see superclass"

	self addWithdrawTextToReport: aWithdraw.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:01:33'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:01:33'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:01:33'!
ERROR!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:01:40'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:01:40'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:01:40'!
ERROR!
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:01:50'!
addWithdrawTextToReport: aWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
! !

!methodRemoval: AccountSummaryReporter #addWithdrawTextToReport: stamp: 'IO 11/16/2020 16:01:50'!
addWithdrawTextToReport: aWithdraw

	"see superclass"

	self addAccountSummaryTextWith: 'Extracci�n por ' for: aWithdraw.
!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:01:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:01:52'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:01:52'!
PASSED!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:07:27'!
addAccountToReport: anAccount andThenDo: aBlock

	"
		adds the name of a Portfolio to the report and executes a given block after each account is added
	"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	aBlock value.
	self endHierarchy.
! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:07:33'!
addAccountToReport: anAccount thenDo: aBlock

	"
		adds the name of a Portfolio to the report and executes a given block after each account is added
	"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	aBlock value.
	self endHierarchy.
! !

!methodRemoval: AccountTreeReporter #addAccountToReport:andThenDo: stamp: 'IO 11/16/2020 16:07:34'!
addAccountToReport: anAccount andThenDo: aBlock

	"
		adds the name of a Portfolio to the report and executes a given block after each account is added
	"
	
	self addNameToReport: anAccount name.
	self beginHierarchy.
	super addAccountToReport: anAccount.
	aBlock value.
	self endHierarchy.
!
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:07:51' prior: 50904870 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	self addAccountToReport: anAccount thenDo: [].! !
!AccountTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:07:52' prior: 50910930 overrides: 50904857!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"

	self addAccountToReport: anAccount thenDo: [].! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:07:53'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:07:53'!
PASSED!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:08:42' prior: 50908297 overrides: 50910938!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addAccountToReport: anAccount thenDo: [report add: (indentation, 'Balance = ', anAccount balance asString).].
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:08:43'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:08:44'!
PASSED!

----SNAPSHOT----(16 November 2020 16:09:55) CuisUniversity-4384.image priorSource: 18368896!

----SNAPSHOT----(16 November 2020 16:10:20) CuisUniversity-4384.image priorSource: 18545210!

!classRemoval: #Transfer stamp: 'IO 11/16/2020 16:13:38'!
Object subclass: #Transfer
	instanceVariableNames: 'value withdraw deposit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'IO 11/16/2020 16:13:39'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferWithdraw stamp: 'IO 11/16/2020 16:13:39'!
TransferComponent subclass: #TransferWithdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferDeposit stamp: 'IO 11/16/2020 16:13:39'!
TransferComponent subclass: #TransferDeposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferComponent stamp: 'IO 11/16/2020 16:13:39'!
AccountTransaction subclass: #TransferComponent
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'IO 11/16/2020 16:13:39'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'IO 11/16/2020 16:13:40'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTestUtility stamp: 'IO 11/16/2020 16:13:40'!
Object subclass: #AccountTestUtility
	instanceVariableNames: 'account1 account2 portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferNetReporter stamp: 'IO 11/16/2020 16:13:40'!
AccountReporter subclass: #TransferNetReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountSummaryTreeReporter stamp: 'IO 11/16/2020 16:13:41'!
AccountTreeReporter subclass: #AccountSummaryTreeReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTreeReporter stamp: 'IO 11/16/2020 16:13:41'!
AccountReporter subclass: #AccountTreeReporter
	instanceVariableNames: 'indentation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountSummaryReporter stamp: 'IO 11/16/2020 16:13:41'!
AccountReporter subclass: #AccountSummaryReporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountReporter stamp: 'IO 11/16/2020 16:13:41'!
Object subclass: #AccountReporter
	instanceVariableNames: 'account report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'IO 11/16/2020 16:13:42'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'IO 11/16/2020 16:13:42'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents string receptiveAccount receptiveAccount3'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'IO 11/16/2020 16:13:42'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #TransferTest stamp: 'IO 11/16/2020 16:13:42'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'IO 11/16/2020 16:13:43'!
AccountTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'IO 11/16/2020 16:13:43'!
AccountTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTest stamp: 'IO 11/16/2020 16:13:43'!
TestCase subclass: #AccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountReporterTest stamp: 'IO 11/16/2020 16:13:44'!
TestCase subclass: #AccountReporterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of /Users/ilanolkies/uba/ingsoft1/ingeSoft-2020-2c/19-Portfolio-2/Portfolio-Solucion.st----!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:13:50'!
PASSED!

!methodRemoval: AccountReporter #addAccountSummaryTextWith:for: stamp: 'IO 11/16/2020 16:15:39'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	self subclassResponsibility.

!
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:15:47'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"see superclass"

	report add: (aPrefix, aTransaction value asString, '.').
! !

!methodRemoval: AccountSummaryReporter #addAccountSummaryTextWith:for: stamp: 'IO 11/16/2020 16:15:47'!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"see superclass"

	report add: (aPrefix, aTransaction value asString, '.').
!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:16:19' prior: 50912675 overrides: 50913373!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	super addAccountSummaryTextWith: (indentation, aPrefix) for: aTransaction.
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:16:20'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:16:20'!
PASSED!
!AccountReporter methodsFor: 'texts' stamp: 'IO 11/16/2020 16:18:04'!
getBalanceTextFor: anAccount

	^'Balance = ', anAccount balance asString.
! !
!AccountSummaryReporter methodsFor: 'emitting' stamp: 'IO 11/16/2020 16:18:56' prior: 50912591 overrides: 50912488!
emitReport

	"see superclass"

	super emitReport add: (self getBalanceTextFor: account).
	^report.! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:18:57'!
PASSED!

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:19:25'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:19:25'!
PASSED!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:20:12' prior: 50912685 overrides: 50912619!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addAccountToReport: anAccount thenDo: [report add: (indentation, self getBalanceTextFor: anAccount).].
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:20:13'!
ERROR!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:20:13'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:20:13'!
ERROR!
!AccountSummaryTreeReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:20:21' prior: 50913815 overrides: 50912619!
addAccountToReport: anAccount

	"adds the name of a Portfolio to the report"
	
	self addAccountToReport: anAccount thenDo: [report add: (indentation, (self getBalanceTextFor: anAccount)).].
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:20:22'!
PASSED!

----SNAPSHOT----(16 November 2020 16:21:34) CuisUniversity-4384.image priorSource: 18545304!
!AccountReporter methodsFor: 'adding to report' stamp: 'IO 11/16/2020 16:22:42' prior: 50913373!
addAccountSummaryTextWith: aPrefix for: aTransaction

	"add a transaction to the report given a prefix"

	report add: (aPrefix, aTransaction value asString, '.').
! !

!testRun: #AccountReporterTest #test01AccountSummaryForAnEmptyAccount stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test02AccountSummaryForAnAccountWithADeposit stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test03AccountSummaryForAnAccountWithAWithdraw stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test04AccountSummaryForAnAccountWithAWithdrawTransfer stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test05AccountSummaryOfAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test06AccountSummaryForAPortfolioWithNoAccounts stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test07AccountReportForPortfolioWithOneAccount stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test08AccountSummaryForPortfolioWithManyAccounts stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test09TransferNetForAnEmptyAccount stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test10TransferNetForAnAccountWithADepositTransfer stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test11TransferNetForAnAccountWithAWidthdrawTransfer stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test12TransferNetForAnAccountWithManyTransfers stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test13AccountTreeForAnAccount stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test14AccountTreeForAnEmptyPortfolio stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test15AccountTreeForAPortfolioWithAccounts stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test16AccountTreeForAPortfolioWithPortfolios stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #AccountReporterTest #test17AccountSummaryTreeForAPortfolioWithPortfoliosAndTransactions stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithOneAccountIsAccountBalance stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #TransferTest #test01ATransferDecreasesBalanceOfSenderAndIncreasesOnReceiver stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #TransferTest #test02ATransferRegistersATransferDepositAndATransferWithdraw stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #TransferTest #test03ATransferWithdrawAndDepositKnowTheirTransfer stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #TransferTest #test04ATransferCantBeDoneBetweenTheSameAccount stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #TransferTest #test05ATransferCantBeDoneBeOf0Value stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

!testRun: #TransferTest #test06ATransferCantBeOfNegativeValue stamp: 'IO 11/16/2020 16:23:05'!
PASSED!

----SNAPSHOT----(16 November 2020 16:23:15) CuisUniversity-4384.image priorSource: 18640853!