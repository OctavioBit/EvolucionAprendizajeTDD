

----STARTUP---- (10 December 2020 20:56:34) as /mnt/6750e462-c385-4872-92cc-c2b6e5c52075/Documents/UBA/1er cuatri 2020/Ingeniería 1/VM CUIS/CuisUniversity-4383.image!


!classRemoval: #PointsPortableObject stamp: 'G. B. 12/10/2020 20:56:52'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #NoPointsPortableObject stamp: 'G. B. 12/10/2020 20:56:53'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PortableObject stamp: 'G. B. 12/10/2020 20:56:54'!
StageObject subclass: #PortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Door stamp: 'G. B. 12/10/2020 20:56:55'!
StageObject subclass: #Door
	instanceVariableNames: 'state key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #StageObject stamp: 'G. B. 12/10/2020 20:56:55'!
Object subclass: #StageObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Weight stamp: 'G. B. 12/10/2020 20:56:56'!
PortableObjectProperties subclass: #Weight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Points stamp: 'G. B. 12/10/2020 20:56:57'!
PortableObjectProperties subclass: #Points
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PortableObjectProperties stamp: 'G. B. 12/10/2020 20:56:58'!
Object subclass: #PortableObjectProperties
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PlayableCharacter stamp: 'G. B. 12/10/2020 20:56:58'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'name backpack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorOpenedState stamp: 'G. B. 12/10/2020 20:56:59'!
DoorState subclass: #DoorOpenedState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorKeyClosedState stamp: 'G. B. 12/10/2020 20:57:00'!
DoorState subclass: #DoorKeyClosedState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorClosedState stamp: 'G. B. 12/10/2020 20:57:00'!
DoorState subclass: #DoorClosedState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorState stamp: 'G. B. 12/10/2020 20:57:01'!
Object subclass: #DoorState
	instanceVariableNames: 'door'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Backpack stamp: 'G. B. 12/10/2020 20:57:02'!
Object subclass: #Backpack
	instanceVariableNames: 'weightCapacity gamePointsCapacity container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorTest stamp: 'G. B. 12/10/2020 20:57:03'!
TestCase subclass: #DoorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #BackpackTest stamp: 'G. B. 12/10/2020 20:57:04'!
TestCase subclass: #BackpackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

----End fileIn of /home/guille/Desktop/ISW1-2020-2C-2doParcial.st----!

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/17-TerniLapilli/TerniLapilli.st----!

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/16-MarsRover/MarsRover.st----!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'G. B. 12/10/2020 21:15:27'!
PASSED!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 21:36:23'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'nil' stamp: 'G. B. 12/10/2020 21:38:12'!
test01_

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 21:41:56'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:42:17'!
test01_canPutPlayerInValidPosition

	| playableCharacter room |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	room _ Room withN: 3 AndM: 2.
	
	room insert: playableCharacter.
	
	
	self assert: (room contentAt: 1@2) equals: playableCharacter.! !

!methodRemoval: RoomTest #test01_ stamp: 'G. B. 12/10/2020 21:43:17'!
test01_

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:43:53' prior: 50960337!
test01_canPutPlayerInValidPosition

	| playableCharacter room |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	room _ Room withN: 3 AndM: 2.
	
	room insert: playableCharacter.
	
	self assert: (room contentAt: 1@2) equals: playableCharacter.! !

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:44:04'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:44:19'!
defaultBackpack

	^ Backpack containingUpTo: 100 limitingPointsTo: 100 ! !

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:44:20'!
ERROR!

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:44:20'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 21:44:29'!
withN: aSmallInteger AndM: aSmallInteger2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithN: aSmallInteger AndM: aSmallInteger2 ! !
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 21:44:51' prior: 50960388!
withN: N AndM: M 
	^self new initializeWithN: N AndM: M. ! !

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:44:53'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 21:45:05'!
Object subclass: #Room
	instanceVariableNames: 'n'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 21:45:05'!
Object subclass: #Room
	instanceVariableNames: 'n m'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:45:05'!
initializeWithN: N AndM: M 
	self shouldBeImplemented.
	n := N.
	m := M.! !
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:45:17' prior: 50960420!
initializeWithN: N AndM: M 
	n := N.
	m := M.! !

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:45:37'!
ERROR!
!Room methodsFor: '*Aconcagua-Extensions' stamp: 'G. B. 12/10/2020 21:45:53'!
insert: aPlayableCharacter 
	self shouldBeImplemented.! !

!methodRemoval: Room #insert: stamp: 'G. B. 12/10/2020 21:46:13'!
insert: aPlayableCharacter 
	self shouldBeImplemented.!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:46:22'!
insert: aPlayableCharacter
! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 21:47:01'!
contentAt: aPosition! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:52:22'!
test01_canNotCreateRoomWithNLessthan1
	|room|
	
	room _ Room withN: 3 AndM: 2.
		
! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:53:46' prior: 50960449!
test01_canNotCreateRoomWithNLessthan1
	self
		should: [ Room withN: 3 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:53:52' prior: 50960455!
test01_canNotCreateRoomWithNLessthan1
	self
		should: [ Room withN: 0 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:53:54'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:54:56' prior: 50960426!
initializeWithN: N AndM: M 
	n := N.
	m := M.! !
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:55:38' prior: 50960474!
initializeWithN: N AndM: M 

	(N < 0) ifTrue: [self error: self class invalidRoomLimitErrorDescription].

	n := N.
	m := M.! !
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 21:56:03'!
invalidRoomLimitErrorDescription
	'room size must be integer and greater than 0'! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:56:13'!
FAILURE!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:56:13'!
FAILURE!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:56:47' prior: 50960479!
initializeWithN: N AndM: M 

	(N < 1) ifTrue: [self error: self class invalidRoomLimitErrorDescription].

	n := N.
	m := M.! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:56:51'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:56:51'!
PASSED!

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:56:51'!
FAILURE!

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:56:51'!
FAILURE!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:57:05'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:57:14'!
test01_canNotCreateRoomWithMLessthan1
	self
		should: [ Room withN: 0 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:57:20' prior: 50960521!
test01_canNotCreateRoomWithMLessthan1
	self
		should: [ Room withN:2 AndM: 0. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:57:29'!
test02_canNotCreateRoomWithNLessthan1
	self
		should: [ Room withN: 0 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !

!testRun: #RoomTest #test02_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:57:31'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 21:57:31'!
FAILURE!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:57:31'!
PASSED!

!testRun: #RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:57:31'!
FAILURE!

!testRun: #RoomTest #test02_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:57:31'!
PASSED!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 21:57:55' prior: 50960498!
initializeWithN: N AndM: M 

	(N < 1 or: [M <1]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].

	n := N.
	m := M.! !

!testRun: #RoomTest #test01_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 21:58:05'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:58:10'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:58:50'!
test02_canNotCreateRoomWithMLessthan1
	self
		should: [ Room withN:2 AndM: 0. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !

!methodRemoval: RoomTest #test01_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 21:58:50'!
test01_canNotCreateRoomWithMLessthan1
	self
		should: [ Room withN:2 AndM: 0. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:59:02'!
testxx_canPutPlayerInValidPosition

	| playableCharacter room |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	room _ Room withN: 3 AndM: 2.
	
	room insert: playableCharacter.
	
	self assert: (room contentAt: 1@2) equals: playableCharacter.! !

!methodRemoval: RoomTest #test01_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 21:59:02'!
test01_canPutPlayerInValidPosition

	| playableCharacter room |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	room _ Room withN: 3 AndM: 2.
	
	room insert: playableCharacter.
	
	self assert: (room contentAt: 1@2) equals: playableCharacter.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 21:59:39'!
test02_canNotCreateRoomWithNonIntegerLimit
	self
		should: [ Room withN: 2.5 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !

!testRun: #RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 21:59:43'!
FAILURE!

!methodRemoval: RoomTest #test02_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 21:59:53'!
test02_canNotCreateRoomWithNLessthan1
	self
		should: [ Room withN: 0 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		!

!testRun: #RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 21:59:57'!
FAILURE!

!testRun: #RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 21:59:57'!
FAILURE!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 22:01:03' prior: 50960561!
initializeWithN: N AndM: M 

	(N < 1 or: [M <1]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].
	((N isKindOf: Integer) and: [M isKindOf: Integer]) ifFalse: [self error: self class invalidRoomLimitErrorDescription].

	n := N.
	m := M.! !

!testRun: #RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 22:01:11'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 22:01:17'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 22:01:19'!
PASSED!

!testRun: #RoomTest #testxx_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 22:03:17'!
FAILURE!
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 22:03:42' prior: 50960445!
contentAt: aPosition
^PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 22:03:44'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 22:03:44'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 22:03:44'!
PASSED!

!testRun: #RoomTest #testxx_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 22:03:44'!
ERROR!

!testRun: #RoomTest #testxx_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 22:03:44'!
ERROR!
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 22:03:58' prior: 50960667!
contentAt: aPosition
! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:05:24'!
testxx_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !

!testRun: #RoomTest #testxx_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 22:06:06'!
ERROR!
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:06:16'!
insert: aNoPointsPortableObject at: aPoint 
	self shouldBeImplemented.! !

!methodRemoval: Room #insert: stamp: 'G. B. 12/10/2020 22:06:26'!
insert: aPlayableCharacter
!
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:06:33' prior: 50960707!
insert: anItem at: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:17:57' prior: 50960715!
insert: anItem at: aPoint 
! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 22:18:13'!
Object subclass: #Room
	instanceVariableNames: 'n m positions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'G. B. 12/10/2020 22:18:11' prior: 50960643!
initializeWithN: N AndM: M 

	(N < 1 or: [M <1]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].
	((N isKindOf: Integer) and: [M isKindOf: Integer]) ifFalse: [self error: self class invalidRoomLimitErrorDescription].

	n := N.
	m := M.
	positions _ Dictionary new.! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:18:38' prior: 50960720!
insert: anItem at: aPoint 
	positions at: aPoint put: anItem.! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 22:19:10' prior: 50960690!
contentAt: aPosition
	^ positions at: aPosition ifAbsent: [].! !

!testRun: #RoomTest #testxx_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 22:19:14'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:19:41'!
testxx_canNotPutItemInInvalidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:20:07'!
test03_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !

!methodRemoval: RoomTest #testxx_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 22:20:07'!
testxx_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:20:18'!
test04_canNotPutItemInInvalidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !

!methodRemoval: RoomTest #testxx_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 22:20:18'!
testxx_canNotPutItemInInvalidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:20:47' prior: 50960789!
test04_canNotPutItemInInvalidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 7@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:21:20' prior: 50960811!
test04_canNotPutItemInInvalidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
		
	self
		should: [ 	room insert: item at: 7@1. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 22:21:22'!
FAILURE!
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:23:17' prior: 50960744!
insert: anItem at: aPoint
	(aPoint x < 1 or: [aPoint y <1]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].
	((aPoint x isKindOf: Integer) and: [aPoint y isKindOf: Integer]) ifFalse: [self error: self class invalidRoomLimitErrorDescription].

	positions at: aPoint put: anItem.! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:24:06' prior: 50960837!
insert: anItem at: aPoint
	(aPoint x < 1 or: [aPoint y <1]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].
	((aPoint x isKindOf: Integer) and: [aPoint y isKindOf: Integer]) ifFalse: [self error: self class invalidRoomLimitErrorDescription].
	
	(aPoint x >= n or: [aPoint y >= m]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].


	positions at: aPoint put: anItem.! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 22:24:09'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 22:24:09'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 22:24:09'!
PASSED!

!testRun: #RoomTest #test03_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 22:24:09'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 22:24:09'!
PASSED!

!testRun: #RoomTest #testxx_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 22:24:09'!
ERROR!

!testRun: #RoomTest #testxx_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 22:24:09'!
ERROR!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 22:24:16'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:26:27'!
test03_canNotCreateRoomWithNonIntegerLimit
	self
		should: [ Room withN: 2.5 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		! !

!methodRemoval: RoomTest #test02_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 22:26:28'!
test02_canNotCreateRoomWithNonIntegerLimit
	self
		should: [ Room withN: 2.5 AndM: 2. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription.
		!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:26:35'!
test04_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !

!methodRemoval: RoomTest #test03_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 22:26:35'!
test03_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:26:40'!
test05_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !

!methodRemoval: RoomTest #test04_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 22:26:40'!
test04_canPutItemInValidPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.!

!methodRemoval: RoomTest #testxx_canPutPlayerInValidPosition stamp: 'G. B. 12/10/2020 22:28:01'!
testxx_canPutPlayerInValidPosition

	| playableCharacter room |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North .

	room _ Room withN: 3 AndM: 2.
	
	room insert: playableCharacter.
	
	self assert: (room contentAt: 1@2) equals: playableCharacter.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:28:15'!
test06_canNotPutItemInOccupiedPosition

	| item room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:29:01' prior: 50960962!
test06_canNotPutItemInOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self assert: (room contentAt: 1@1) equals: item_1.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:29:56' prior: 50960973!
test06_canNotPutItemInOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self
		should: [ 	room insert: item_2 at: 1@1. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 22:31:27'!
canNotInsertItemInOccupiedPositionErrorDescription
	'can not insert item in occupied position!!'! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:32:32' prior: 50960849!
insert: anItem at: aPoint
	(aPoint x < 1 or: [aPoint y <1]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].
	((aPoint x isKindOf: Integer) and: [aPoint y isKindOf: Integer]) ifFalse: [self error: self class invalidRoomLimitErrorDescription].
	
	(aPoint x >= n or: [aPoint y >= m]) ifTrue: [self error: self class invalidRoomLimitErrorDescription].


	(positions includesKey: aPoint) ifTrue: [self error: self class canNotInsertItemInOccupiedPositionErrorDescription ].
	positions at: aPoint put: anItem.! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 22:32:54' prior: 50961009!
insert: anItem at: aPoint
	(aPoint x < 1 or: [aPoint y <1]) ifTrue: [^self error: self class invalidRoomLimitErrorDescription].
	((aPoint x isKindOf: Integer) and: [aPoint y isKindOf: Integer]) ifFalse: [^self error: self class invalidRoomLimitErrorDescription].
	
	(aPoint x >= n or: [aPoint y >= m]) ifTrue: [^self error: self class invalidRoomLimitErrorDescription].


	(positions includesKey: aPoint) ifTrue: [^self error: self class canNotInsertItemInOccupiedPositionErrorDescription ].
	positions at: aPoint put: anItem.! !

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 22:32:58'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:34:34'!
test06_canNotMovePlayerIntoOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self
		should: [ 	room insert: item_2 at: 1@1. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:35:24'!
test07_canNotMovePlayerIntoOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self
		should: [ 	room insert: item_2 at: 1@1. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!methodRemoval: RoomTest #test06_canNotMovePlayerIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:35:24'!
test06_canNotMovePlayerIntoOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self
		should: [ 	room insert: item_2 at: 1@1. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:36:57'!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #South .

	
	self
		should: [ 	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:37:22' prior: 50961100!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 1@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North .

	
	self
		should: [ 	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:37:30' prior: 50961118!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North .

	
	self
		should: [ 	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!methodRemoval: RoomTest #test07_canNotMovePlayerIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:37:39'!
test07_canNotMovePlayerIntoOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self
		should: [ 	room insert: item_2 at: 1@1. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:39:10' prior: 50961136!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North .

	
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!PlayableCharacter methodsFor: 'testing' stamp: 'G. B. 12/10/2020 22:39:42'!
position	
	^position.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:43:18' prior: 50961170!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North .

	room insert: playableCharacter at: 0@0.
	
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:46:24' prior: 50961192!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North .

	room insert: playableCharacter at: 0@2.
	
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 22:52:59' prior: 50961212!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North .

	room insert: playableCharacter at: 0@0.
	
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:53:08'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:53:08'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:53:40'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:53:40'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:53:40'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:54:14'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:54:14'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:54:14'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:54:42'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:54:42'!
ERROR!

!testRun: #RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 22:54:42'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:04:10' prior: 50961232!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 23:05:47'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name currentRoom'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:05:44'!
moveInto: aRoom
	currentRoom _ aRoom.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:11:56' prior: 50958088!
moveForward
	
	position := position + heading forwardPoint! !
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:13:34' prior: 50961326!
moveForward
	currentRoom assertIsEmptyPosition: (position + heading forwardPoint).
	position := position + heading forwardPoint! !
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:13:46' prior: 50958083!
moveBackward
	currentRoom assertIsEmptyPosition: (position + heading forwardPoint).
	position := position - heading forwardPoint ! !
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:13:50' prior: 50961338!
moveBackward
	currentRoom assertIsEmptyPosition: (position - heading forwardPoint).
	position := position - heading forwardPoint ! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 23:14:20'!
assertIsEmptyPosition: aPosition
! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 23:14:58' prior: 50961353!
assertIsEmptyPosition: aPosition
	(positions includesKey: aPosition) ifTrue: [^self error: self class isOccupiedPositionErrorDescription ].
! !
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 23:15:15'!
isOccupiedPositionErrorDescription
	'position is occupied'! !

!methodRemoval: PlayableCharacter #position stamp: 'G. B. 12/10/2020 23:16:02'!
position	
	^position.!
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:16:22' prior: 50961321!
moveInto: aRoom
	aRoom assertIsEmptyPosition: position.
	currentRoom _ aRoom.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:16:47'!
test08_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:17:03'!
test07_canNotInsertplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!methodRemoval: RoomTest #test07_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:03'!
test07_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:17:20' prior: 50961398!
test07_canNotInsertplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@0.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.
		
	self
		should: [ playableCharacter moveInto: room. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:21'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:21'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:33'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:33'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:33'!
ERROR!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:44'!
ERROR!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:44'!
ERROR!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:17:44'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:18:11' prior: 50961438!
test07_canNotInsertplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@0.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.
		
	self
		should: [ playableCharacter moveInto: room. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		! !

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:18:12'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:18:12'!
ERROR!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:19:14'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:19:50' prior: 50961379!
test08_canNotMoveplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		! !

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:19:50'!
ERROR!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:19:50'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:22:05' prior: 50961487!
test07_canNotInsertplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@0.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room. 
	
'''	self
		should: [ playableCharacter moveInto: room. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		'''! !

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:22:06'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:22:06'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 23:22:56' prior: 50961364!
isOccupiedPositionErrorDescription
	^'position is occupied'! !

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:23:34'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:23:34'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:23:34'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:24:22' prior: 50961543!
test07_canNotInsertplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@0.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	
	self
		should: [ playableCharacter moveInto: room. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		! !

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:24:23'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:24:23'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:24:53'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:25:18' prior: 50961587!
test07_canNotInsertplayableCharacterIntoOccupiedPosition

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@0.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	
	self
		should: [ playableCharacter moveInto: room. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		! !

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:19'!
ERROR!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:19'!
ERROR!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:26'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:26'!
ERROR!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:26'!
ERROR!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:32'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:25:48' prior: 50960987!
test06_canNotPutItemInOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 0@0.
	
	self
		should: [ 	room insert: item_2 at: 0@0 ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:50'!
ERROR!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:50'!
ERROR!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:25:50'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:25:59' prior: 50961677!
test06_canNotPutItemInOccupiedPosition

	| item_1 item_2 room |

	item_1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	item_2 := NoPointsPortableObject named: 'stop sign' weighing: 2.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item_1 at: 1@1.
	
	self
		should: [ 	room insert: item_2 at: 1@1. ]
		raise: Error
		withMessageText: Room canNotInsertItemInOccupiedPositionErrorDescription.
		! !
!Room methodsFor: 'adding' stamp: 'G. B. 12/10/2020 23:26:29' prior: 50961028!
insert: anItem at: aPoint
	(aPoint x < 0 or: [aPoint y < 0]) ifTrue: [^self error: self class invalidRoomLimitErrorDescription].
	((aPoint x isKindOf: Integer) and: [aPoint y isKindOf: Integer]) ifFalse: [^self error: self class invalidRoomLimitErrorDescription].
	
	(aPoint x >= n or: [aPoint y >= m]) ifTrue: [^self error: self class invalidRoomLimitErrorDescription].


	(positions includesKey: aPoint) ifTrue: [^self error: self class canNotInsertItemInOccupiedPositionErrorDescription ].
	positions at: aPoint put: anItem.! !

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:26:40'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:26:43'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:27:08'!
test08_canNotMoveplayableCharacterOutOfRoomLimits

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 3 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:27:43' prior: 50961746!
test08_canNotMoveplayableCharacterOutOfRoomLimits

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:27:51' prior: 50961765!
test08_canNotMoveplayableCharacterOutOfRoomLimits

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room invalidRoomLimitErrorDescription .
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:28:03' prior: 50961784!
test08_canNotMoveplayableCharacterOutOfRoomLimits

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room cantMoveOffLimitsErrorDescription.
		! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 23:28:56'!
assertIsValidPosition: aPosition
	(positions includesKey: aPosition) ifTrue: [^self error: self class isOccupiedPositionErrorDescription ].
! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:28:56' prior: 50961331!
moveForward
	currentRoom assertIsValidPosition: (position + heading forwardPoint).
	position := position + heading forwardPoint! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:28:56' prior: 50961346!
moveBackward
	currentRoom assertIsValidPosition: (position - heading forwardPoint).
	position := position - heading forwardPoint ! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:28:56' prior: 50961373!
moveInto: aRoom
	aRoom assertIsValidPosition: position.
	currentRoom _ aRoom.! !

!methodRemoval: Room #assertIsEmptyPosition: stamp: 'G. B. 12/10/2020 23:28:56'!
assertIsEmptyPosition: aPosition
	(positions includesKey: aPosition) ifTrue: [^self error: self class isOccupiedPositionErrorDescription ].
!
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 23:29:15' prior: 50961821!
assertIsValidPosition: aPosition
	(positions includesKey: aPosition) ifTrue: [^self error: self class isOccupiedPositionErrorDescription ].
! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 23:30:21' prior: 50961858!
assertIsValidPosition: aPosition
	(positions includesKey: aPosition) ifTrue: [^self error: self class isOccupiedPositionErrorDescription ].
	
	(aPosition x < 0 or: [aPosition y < 0]) ifTrue: [^self error: self class invalidRoomLimitErrorDescription].
	
	(aPosition x >= n or: [aPosition y >= m]) ifTrue: [^self error: self class invalidRoomLimitErrorDescription].
! !
!Room class methodsFor: 'instance creation' stamp: 'G. B. 12/10/2020 23:30:46'!
cantMoveOffLimitsErrorDescription
	^'cant move off limits'! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/10/2020 23:31:01' prior: 50961866!
assertIsValidPosition: aPosition
	(positions includesKey: aPosition) ifTrue: [^self error: self class isOccupiedPositionErrorDescription ].
	
	(aPosition x < 0 or: [aPosition y < 0]) ifTrue: [^self error: self class cantMoveOffLimitsErrorDescription ].
	
	(aPosition x >= n or: [aPosition y >= m]) ifTrue: [^self error: self class cantMoveOffLimitsErrorDescription ].
! !

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/10/2020 23:31:12'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'G. B. 12/10/2020 23:31:16'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'G. B. 12/10/2020 23:31:16'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'G. B. 12/10/2020 23:31:16'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'G. B. 12/10/2020 23:31:16'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'G. B. 12/10/2020 23:31:16'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/10/2020 23:31:16'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/10/2020 23:31:20'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'G. B. 12/10/2020 23:31:23'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'G. B. 12/10/2020 23:31:23'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'G. B. 12/10/2020 23:31:23'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'G. B. 12/10/2020 23:31:23'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'G. B. 12/10/2020 23:31:23'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/10/2020 23:31:23'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:33:27' prior: 50961829!
moveForward
	(currentRoom isKindOf: Room) ifTrue: [currentRoom assertIsValidPosition: (position + heading forwardPoint)].
	position := position + heading forwardPoint! !
!PlayableCharacter methodsFor: 'moving' stamp: 'G. B. 12/10/2020 23:33:38' prior: 50961837!
moveBackward
	(currentRoom isKindOf: Room) ifTrue: [currentRoom assertIsValidPosition: (position - heading forwardPoint)].
	position := position - heading forwardPoint ! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/10/2020 23:33:44'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:43:34'!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room cantMoveOffLimitsErrorDescription.
		! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 23:45:21'!
Object subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:45:38' prior: 50962329!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| item room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject named: 'armario'.
	nonPortableObject add: NonPortableObject named: 'cajon 1'.
	nonPortableObject add: NonPortableObject named: 'cajon 2'.


	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room cantMoveOffLimitsErrorDescription.
		! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 23:46:22'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:49:08' prior: 50962357!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| item room nonPortableObject playableCharacter cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.

	nonPortableObject add: NonPortableObject named: 'cajon 2'.

	NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room cantMoveOffLimitsErrorDescription.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:51:21' prior: 50962394!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	NoPointsPortableObject named: 'bufanda' weighing: 3.

	cajon_1 add: NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	cajon_2 add: NoPointsPortableObject named: 'llave magica 2' weighing: 5.

	

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:51:28' prior: 50962423!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	NoPointsPortableObject named: 'bufanda' weighing: 3.

	cajon_1 add: NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	cajon_2 add: NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:51:54' prior: 50962449!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).

	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/10/2020 23:51:56'!
ERROR!
!NonPortableObject class methodsFor: 'no messages' stamp: 'G. B. 12/10/2020 23:52:32'!
named: aName
	
	^ self new initializeNamed: aName. ! !
!NonPortableObject methodsFor: 'nil' stamp: 'G. B. 12/10/2020 23:52:53'!
initializeNamed: aName
	
	name := aName.
! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:53:38'!
add: aStageObject
	contents add: aStageObject.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:54:02' prior: 50962509!
initializeNamed: aName
	name _ aName.
	contents _ OrderedCollection new.! !

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/10/2020 23:54:10'!
PASSED!
!NonPortableObject class methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:56:15'!
named: aName weighing: aWeight
	
	^ self new initializeNamed: aName weighing: aWeight.! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/10/2020 23:56:41'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name contents weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/10/2020 23:56:39'!
initializeNamed: aName weighing: aWeight
	name _ aName.
	weight _ aWeight.
	contents _ OrderedCollection new.! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'G. B. 12/11/2020 00:02:42'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 00:03:04' prior: 50962519!
initializeNamed: aName
	name _ aName.
	contents _ OrderedCollection new.! !

!methodRemoval: NonPortableObject #initializeNamed:weighing: stamp: 'G. B. 12/11/2020 00:03:22'!
initializeNamed: aName weighing: aWeight
	name _ aName.
	weight _ aWeight.
	contents _ OrderedCollection new.!

!methodRemoval: NonPortableObject class #named:weighing: stamp: 'G. B. 12/11/2020 00:03:50'!
named: aName weighing: aWeight
	
	^ self new initializeNamed: aName weighing: aWeight.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 00:04:39' prior: 50962475!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).



	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 00:04:40'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 00:04:43'!
PASSED!
!RoomTest methodsFor: 'empty/occupied positions tests' stamp: 'G. B. 12/11/2020 00:11:27'!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).



	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !
!RoomTest methodsFor: 'empty/occupied positions tests' stamp: 'G. B. 12/11/2020 00:12:33' prior: 50962778!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave |

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.

	self assert: (room contentAt: 1@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:13:54' prior: 50962804!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.


	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@3 heading: #North.

	playableCharacter moveInto: room.


	self assert: (room contentAt: 1@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:14:59' prior: 50962816!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.


	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@3 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (room contentAt: 1@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:15:32' prior: 50962833!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.


	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@3 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:15:39' prior: 50962851!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.


	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@3 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
	self assert: (playableCharacter backpackIncludes: llave).

		! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:16:26' prior: 50960749!
contentAt: aPosition
	^ positions at: aPosition ifAbsent: [].! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:18:01'!
isEmpty: aPosition
	^ (positions includesKey: aPosition) not .! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:18:31' prior: 50962869!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.


	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@3 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
	self assert: (room isEmptyPosition: 3@3)

		! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:18:42'!
isEmptyPosition: aPosition
	^ (positions includesKey: aPosition) not .! !

!methodRemoval: Room #isEmpty: stamp: 'G. B. 12/11/2020 00:18:42'!
isEmpty: aPosition
	^ (positions includesKey: aPosition) not .!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:18:53'!
FAILURE!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:18:53'!
FAILURE!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:19:02' prior: 50962899!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@3 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
	self assert: (room isEmptyPosition: 3@3)

		! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:22:54'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:25:08' prior: 50958102!
take: aPortableObject
	self assertCanTakeObject: aPortableObject. 
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:25:44'!
assertCanTakeObject: aStageObject
	currentRoom ! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:25:59' prior: 50962959!
take: aStageObject
	self assertCanTakeObject: aStageObject. 
	backpack add: aStageObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:27:32' prior: 50962965!
assertCanTakeObject: aStageObject
! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:29:24' prior: 50962977!
assertCanTakeObject: aStageObject
	(currentRoom objectPosition: aStageObject  = position + heading forwardPoint) ifFalse: [self error: self class canNotTakeObjectErrorDescription]! !
!PlayableCharacter class methodsFor: 'heading' stamp: 'G. B. 12/11/2020 00:29:44'!
canNotTakeObjectErrorDescription
	
	^'i cant reach that object'! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:30:51'!
objectPosition: aStageObject
! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:31:38' prior: 50962996!
objectPosition: aStageObject
	positions keyAtValue: aStageObject.! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:31:42' prior: 50963000!
objectPosition: aStageObject
	^positions keyAtValue: aStageObject.! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:31:59'!
stageObjectPosition: aStageObject
	^positions keyAtValue: aStageObject.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 00:31:59' prior: 50962982!
assertCanTakeObject: aStageObject
	(currentRoom stageObjectPosition: aStageObject  = position + heading forwardPoint) ifFalse: [self error: self class canNotTakeObjectErrorDescription]! !

!methodRemoval: Room #objectPosition: stamp: 'G. B. 12/11/2020 00:31:59'!
objectPosition: aStageObject
	^positions keyAtValue: aStageObject.!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:32:10'!
ERROR!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:32:10'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:32:34' prior: 50963016!
assertCanTakeObject: aStageObject
	(currentRoom stageObjectPosition: aStageObject  = (position + heading forwardPoint)) ifFalse: [self error: self class canNotTakeObjectErrorDescription]! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:32:41'!
ERROR!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:32:41'!
ERROR!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:33:37' prior: 50962935!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
	self assert: (room isEmptyPosition: 3@3)

		! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:33:41'!
ERROR!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:33:41'!
ERROR!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:34:34'!
ERROR!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:34:34'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:35:19' prior: 50962970!
take: aStageObject
	self assertCanTakeObject: aStageObject. 
	backpack add: aStageObject.
	currentRoom removeStageObject: aStageObject.! !
!Room methodsFor: 'accessing' stamp: 'G. B. 12/11/2020 00:36:05'!
removeStageObject: aStageObject
	|key|
	key _ positions keyAtValue: aStageObject.
	positions removeKey: key.! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:36:12'!
ERROR!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:36:12'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:36:58' prior: 50963038!
assertCanTakeObject: aStageObject
	((currentRoom stageObjectPosition: aStageObject)  = (position + heading forwardPoint)) ifFalse: [self error: self class canNotTakeObjectErrorDescription]! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:37:05'!
PASSED!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:37:55' prior: 50963055!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
	self assert: (room isEmptyPosition: 3@3)

		! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:37:57'!
ERROR!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:39:42' prior: 50963125!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: room .

		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:33:37' prior: 50963148!
test11_playableCharacterCanTakePortableObjectInFrontOfHim

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@3.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave).
	self assert: (room isEmptyPosition: 3@3)

		! !

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:40:22'!
PASSED!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:42:07'!
test12_playableCharacterCanNotTakePortableObjectOutOfReach

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	playableCharacter take: llave.

	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.

		! !

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:42:08'!
ERROR!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:42:41' prior: 50963228!
test12_playableCharacterCanNotTakePortableObjectOutOfReach

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self
		should: [ 	playableCharacter take: llave.]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		
	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.

		! !

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:42:43'!
FAILURE!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:42:58' prior: 50963252!
test12_playableCharacterCanNotTakePortableObjectOutOfReach

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self
		should: [ 	playableCharacter take: llave.]
		raise: Error
		withMessageText: Room isOccupiedPositionErrorDescription .
		
'''	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.
'''
		! !

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:42:59'!
FAILURE!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:43:19' prior: 50963279!
test12_playableCharacterCanNotTakePortableObjectOutOfReach

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self
		should: [ 	playableCharacter take: llave.]
		raise: Error
		withMessageText: PlayableCharacter canNotTakeObjectErrorDescription .
		
'''	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.
'''
		! !

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:43:20'!
PASSED!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:43:28' prior: 50963306!
test12_playableCharacterCanNotTakePortableObjectOutOfReach

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self
		should: [ 	playableCharacter take: llave.]
		raise: Error
		withMessageText: PlayableCharacter canNotTakeObjectErrorDescription .
		
	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.
		! !

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 00:43:28'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 00:43:29'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 00:43:29'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 00:43:29'!
PASSED!
!RoomTest methodsFor: 'empty/occupied positions tests' stamp: 'G. B. 12/11/2020 00:47:17' prior: 50962583!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:47:56'!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room llave playableCharacter|

	llave _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.

	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self
		should: [ 	playableCharacter take: llave.]
		raise: Error
		withMessageText: PlayableCharacter canNotTakeObjectErrorDescription .
		
	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:49:33' prior: 50963471!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room llave playableCharacter cajon_1 cajon_2 nonPortableObject |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.
	
	room _ Room withN: 5 AndM: 5.
	
	room insert: llave at: 3@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self
		should: [ 	playableCharacter take: llave.]
		raise: Error
		withMessageText: PlayableCharacter canNotTakeObjectErrorDescription .
		
	self assert: (playableCharacter backpackIncludes: llave) not.
	self assert: (room contentAt: 3@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:51:40' prior: 50963494!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room llave playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.


	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	

	self assert: (room contentAt: 3@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:52:40' prior: 50963533!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room llave playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.


	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	

	self assert: (room contentAt: 3@1) equals: llave.
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:53:21' prior: 50963570!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.


	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	

	self assert: (room isEmptyPosition: 3@3).
		! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:53:27' prior: 50963607!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.


	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (room isEmptyPosition: 3@3).! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:53:38' prior: 50963643!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (room isEmptyPosition: 3@3).! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:53:59' prior: 50963679!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda).
	self assert: (room isEmptyPosition: 3@3).! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 00:54:52' prior: 50963715!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda).
	self assert: (room isEmptyPosition: 3@3).! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 00:57:34' prior: 50963090!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	
	backpack add: aStageObject.
	currentRoom removeStageObject: aStageObject.! !

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/18-Portfolio1/Portfolio-Ejercicio.st----!

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/19-Portfolio2/Portfolio-Solucion.st----!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:00:34' prior: 50963793!
take: aStageObject
	self assertCanTakeObject: aStageObject.
		backpack add: aStageObject.
	currentRoom removeStageObject: aStageObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:00:35' prior: 50966006!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	backpack add: aStageObject.
	currentRoom removeStageObject: aStageObject.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:05:40'!
portableObjectsInside
	|results|
	results _ Set new.
	^ contents do: [:aStageObject | (aStageObject isKindOf: NonPortableObject) ifTrue: [results merge: (aStageObject portableObjectsInside)] 
																  ifFalse: [results add: aStageObject]].! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:08:51' prior: 50966014!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	(aStageObject  isKindOf: NonPortableObject) ifTrue: [aStageObject portableObjectsInside do: [:portableObject | backpack add: aStageObject.]]
										  ifFalse: [backpack add: aStageObject. currentRoom removeStageObject: aStageObject.].
	! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:13:01' prior: 50966033!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	(aStageObject  isKindOf: NonPortableObject) ifTrue: [aStageObject portableObjectsInside do: [:portableObject | portableObject assertCanAddTo: backpack. 
																							backpack add: portableObject.
																							aStageObject removePortableObject: portableObject]]
										  
										ifFalse: [
											aStageObject assertCanAddTo: backpack.
											backpack add: aStageObject. currentRoom removeStageObject: aStageObject.].
	! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:13:48' prior: 50966022!
portableObjectsInside
	|results|
	results _ Set new.
	^ contents do: [:aStageObject | (aStageObject isKindOf: NonPortableObject) ifTrue: [results merge: (aStageObject portableObjectsInside)] 
																  ifFalse: [results add: aStageObject]].! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:19:02'!
removePortableObject: portableObject
	^ contents remove: portableObject  ifAbsent: [ contents do: [:stageObject | (stageObject isKindOf: NonPortableObject) ifTrue: [stageObject  removePortableObject: portableObject ] ]
													
		
		
		 ].! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:19:31' prior: 50966077!
removePortableObject: portableObject
	^ contents remove: portableObject  ifAbsent: [ contents do: [:stageObject | (stageObject isKindOf: NonPortableObject) ifTrue: [stageObject  removePortableObject: portableObject ] ] ].! !

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:20:16'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:20:16'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:20:52' prior: 50966066!
portableObjectsInside
	|results|
	results _ Set new.
	^ contents do: [:aStageObject | (aStageObject isKindOf: NonPortableObject) ifTrue: [results union: (aStageObject portableObjectsInside)] 
																  ifFalse: [results add: aStageObject]].! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:20:55'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:20:55'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:20:55'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:21:02'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:21:02'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:22:30'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:22:30'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:23:44'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:23:44'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:26:18' prior: 50966108!
portableObjectsInside
	|results|
	results _ Set new.
	^ contents do: [:aStageObject | (aStageObject isKindOf: NonPortableObject) ifTrue: [results union: [aStageObject portableObjectsInside]] 
																  ifFalse: [results add: aStageObject]].! !

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:26:24'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:26:24'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:28:09' prior: 50966196!
portableObjectsInside
	|results|
	results _ Set new.
	^ contents do: [:aStageObject | (aStageObject isKindOf: NonPortableObject) ifTrue: [results _ results union: (aStageObject portableObjectsInside)] 
																  ifFalse: [results add: aStageObject]].! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:28:12'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:28:12'!
ERROR!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:28:12'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'G. B. 12/11/2020 01:30:37' prior: 50966216!
portableObjectsInside
	|results|
	results _ Set new.
	contents do: [:aStageObject | (aStageObject isKindOf: NonPortableObject) ifTrue: [results _ results union: (aStageObject portableObjectsInside)] 
																  ifFalse: [results add: aStageObject]].
															
	^results.! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:30:42'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:30:42'!
FAILURE!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:30:42'!
FAILURE!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 01:31:18' prior: 50963753!
test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda).
! !

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:31:19'!
PASSED!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 01:31:37'!
test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 10.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 5.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 3.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda).
! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 01:31:59' prior: 50966431!
test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 50.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 50.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 300.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda).
! !
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 01:32:07' prior: 50966469!
test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 50.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 50.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 300.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda) not.
! !

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:32:08'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:37:56' prior: 50966046!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	(aStageObject  isKindOf: NonPortableObject) ifTrue: [aStageObject portableObjectsInside do: [:portableObject | (portableObject checkCanAddTo: backpack) ifTrue:[
																							backpack add: portableObject.
																							aStageObject removePortableObject: portableObject]]]
										  
										ifFalse: [
											(aStageObject checkCanAddTo: backpack) ifTrue: [
											backpack add: aStageObject. currentRoom removeStageObject: aStageObject.]].
	! !
!PointsPortableObject methodsFor: 'adding' stamp: 'G. B. 12/11/2020 01:39:33'!
checkCanAddTo: aBackpack 
	
	^aBackpack checkCanAddPointPortableObject: self! !
!NoPointsPortableObject methodsFor: 'adding' stamp: 'G. B. 12/11/2020 01:39:46'!
checkCanAddTo: aBackpack 
	
	^aBackpack checkCanAddNoPointsPortableObject: self! !
!Backpack methodsFor: 'adding - private' stamp: 'G. B. 12/11/2020 01:40:29'!
checkCanAddNoPointsPortableObject: aNoPointsPortableObject 
	
	self assertWeightAdding: aNoPointsPortableObject tolerating: 0.
	! !
!Backpack methodsFor: 'adding - private' stamp: 'G. B. 12/11/2020 01:40:42'!
checkCanAddPointPortableObject: aPointsPortableObject 
	
	self assertWeightAdding: aPointsPortableObject tolerating: 5.
	self assertPointsAdding: aPointsPortableObject.
	! !
!Backpack methodsFor: 'assertions' stamp: 'G. B. 12/11/2020 01:41:14'!
checkPointsAdding: aPointsPortableObject

	(self totalPoints + aPointsPortableObject points) > gamePointsCapacity! !
!Backpack methodsFor: 'assertions' stamp: 'G. B. 12/11/2020 01:41:28'!
checkWeightAdding: aPortableObject tolerating: aThreshold

	(self totalWeight + aPortableObject weight - weightCapacity) > aThreshold! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:41:32'!
ERROR!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:41:32'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:41:32'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:41:32'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:41:50'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:41:50'!
ERROR!
!Backpack methodsFor: 'adding - private' stamp: 'G. B. 12/11/2020 01:42:12' prior: 50966581!
checkCanAddNoPointsPortableObject: aNoPointsPortableObject 
	
	self checkWeightAdding: aNoPointsPortableObject tolerating: 0.
	! !
!Backpack methodsFor: 'adding - private' stamp: 'G. B. 12/11/2020 01:42:24' prior: 50966588!
checkCanAddPointPortableObject: aPointsPortableObject 
	
	self checkWeightAdding: aPointsPortableObject tolerating: 5.
	self checkPointsAdding: aPointsPortableObject.
	! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:42:27'!
ERROR!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:42:27'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:42:27'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:42:27'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:42:33'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:42:33'!
ERROR!
!Backpack methodsFor: 'assertions' stamp: 'G. B. 12/11/2020 01:43:06' prior: 50966602!
checkWeightAdding: aPortableObject tolerating: aThreshold

	^(self totalWeight + aPortableObject weight - weightCapacity) > aThreshold! !
!Backpack methodsFor: 'assertions' stamp: 'G. B. 12/11/2020 01:43:11' prior: 50966596!
checkPointsAdding: aPointsPortableObject

	^(self totalPoints + aPointsPortableObject points) > gamePointsCapacity! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:43:13'!
ERROR!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:43:13'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:43:13'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:43:13'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:43:17'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:43:17'!
ERROR!
!Backpack methodsFor: 'adding - private' stamp: 'G. B. 12/11/2020 01:43:41' prior: 50966670!
checkCanAddNoPointsPortableObject: aNoPointsPortableObject 
	
	^self checkWeightAdding: aNoPointsPortableObject tolerating: 0.
	! !
!Backpack methodsFor: 'adding - private' stamp: 'G. B. 12/11/2020 01:44:11' prior: 50966677!
checkCanAddPointPortableObject: aPointsPortableObject 
	
	^self checkWeightAdding: aPointsPortableObject tolerating: 5.
	! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:44:22'!
FAILURE!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:44:22'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:44:22'!
FAILURE!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:44:22'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:44:30'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:44:30'!
ERROR!
!RoomTest methodsFor: 'take tests' stamp: 'G. B. 12/11/2020 01:47:21' prior: 50966507!
test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit

	| room playableCharacter cajon_1 cajon_2 nonPortableObject bufanda llave_1 llave_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	llave_1 _ NoPointsPortableObject named: 'llave magica 1' weighing: 50.
	llave_2 _ NoPointsPortableObject named: 'llave magica 2' weighing: 50.
	cajon_1 add: llave_1.
	cajon_2 add: llave_2.
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	bufanda _ NoPointsPortableObject named: 'bufanda' weighing: 300.
	nonPortableObject add: 	bufanda.

	room _ Room withN: 5 AndM: 5.
	
	room insert: nonPortableObject at: 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 3@2 heading: #North.

	playableCharacter moveInto: room.
	'''playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: llave_1).
	self assert: (playableCharacter backpackIncludes: llave_2).
	self assert: (playableCharacter backpackIncludes: bufanda) not.'''
! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:47:24'!
FAILURE!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:47:24'!
FAILURE!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:47:24'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:47:33'!
FAILURE!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:47:33'!
FAILURE!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:48:06'!
FAILURE!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:48:06'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:49:04' prior: 50966550!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	(aStageObject  isKindOf: NonPortableObject) ifTrue: [aStageObject portableObjectsInside do: [:portableObject | (portableObject assertCanAddTo: backpack) ifTrue:[
																							backpack add: portableObject.
																							aStageObject removePortableObject: portableObject]]]
										  
										ifFalse: [
											(aStageObject assertCanAddTo: backpack) ifTrue: [
											backpack add: aStageObject. currentRoom removeStageObject: aStageObject.]].
	! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:49:06'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:49:06'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:49:06'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:49:06'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:49:07'!
ERROR!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:49:07'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:49:07'!
PASSED!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:49:39' prior: 50967002!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	(aStageObject  isKindOf: NonPortableObject) ifTrue: [aStageObject portableObjectsInside do: [:portableObject | portableObject assertCanAddTo: backpack
																							backpack add: portableObject.
																							aStageObject removePortableObject: portableObject]]
										  
										ifFalse: [
											aStageObject assertCanAddTo: backpack.
											backpack add: aStageObject. currentRoom removeStageObject: aStageObject.].
	! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:49:42'!
ERROR!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:49:42'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:49:42'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'G. B. 12/11/2020 01:50:08' prior: 50967074!
take: aStageObject
	self assertCanTakeObject: aStageObject.
	(aStageObject  isKindOf: NonPortableObject) ifTrue: [aStageObject portableObjectsInside do: [:portableObject | portableObject assertCanAddTo: backpack.
																							backpack add: portableObject.
																							aStageObject removePortableObject: portableObject]]
										  
										ifFalse: [
											aStageObject assertCanAddTo: backpack.
											backpack add: aStageObject. currentRoom removeStageObject: aStageObject.].
	! !

!testRun: #RoomTest #test01_canNotCreateRoomWithNLessthan1 stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test02_canNotCreateRoomWithMLessthan1 stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test03_canNotCreateRoomWithNonIntegerLimit stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test04_canNotPutItemInInvalidPosition stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test05_canPutItemInValidPosition stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test06_canNotPutItemInOccupiedPosition stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test07_canNotInsertplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterIntoOccupiedPosition stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test11_playableCharacterCanTakePortableObjectInFrontOfHim stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test12_playableCharacterCanNotTakePortableObjectOutOfReach stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test13_playableCharacterCanTakeAllObjectsOfNonPortableObjectIftheyFit stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!

!testRun: #RoomTest #test14_playableCharacterCanTakeAllObjectsOfNonPortableObjectUntilTheyDontFit stamp: 'G. B. 12/11/2020 01:50:13'!
PASSED!
!RoomTest methodsFor: 'room limits tests' stamp: 'G. B. 12/11/2020 01:52:39'!
test09_canNotMoveplayableCharacterOutOfRoomLimits

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room cantMoveOffLimitsErrorDescription.
		! !

!methodRemoval: RoomTest #test08_canNotMoveplayableCharacterOutOfRoomLimits stamp: 'G. B. 12/11/2020 01:52:39'!
test08_canNotMoveplayableCharacterOutOfRoomLimits

	| item playableCharacter room |

	item := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.

	room _ Room withN: 2 AndM: 2.
	
	room insert: item at: 0@1.

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North.

	playableCharacter moveInto: room.
		
	self
		should: [ playableCharacter moveForward	. ]
		raise: Error
		withMessageText: Room cantMoveOffLimitsErrorDescription.
		!
!RoomTest methodsFor: 'empty/occupied positions tests' stamp: 'G. B. 12/11/2020 01:52:59'!
test10_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		! !

!methodRemoval: RoomTest #test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject stamp: 'G. B. 12/11/2020 01:52:59'!
test08_canPutNonPortableObjectWithManyItemsInsideThePortableObject

	| room nonPortableObject cajon_1 cajon_2 |

	nonPortableObject _ NonPortableObject named: 'armario'.
	cajon_1 _ NonPortableObject named: 'cajon 1'.
	cajon_2 _ NonPortableObject named: 'cajon 2'.
	cajon_1 add: (NoPointsPortableObject named: 'llave magica 1' weighing: 10).
	cajon_2 add: (NoPointsPortableObject named: 'llave magica 2' weighing: 5).
	
	nonPortableObject add: cajon_1.
	nonPortableObject add: cajon_2.
	
	nonPortableObject add: 	(NoPointsPortableObject named: 'bufanda' weighing: 3).

	room _ Room withN: 2 AndM: 2.
	
	room insert: nonPortableObject at: 1@1.

	self assert: (room contentAt: 1@1) equals: nonPortableObject.
		!

----QUIT----(11 December 2020 01:57:39) CuisUniversity-4383.image priorSource: 20023512!