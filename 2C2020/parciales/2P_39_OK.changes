----STARTUP---- (10 December 2020 17:15:16) as /home/fede/Escritorio/cuis-segundo-parcial/CuisUniversity-4384.image!


----End fileIn of /home/fede/Escritorio/cuis-segundo-parcial/ISW1-2020-2C-2doParcial.st----!

headings!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:35:32'!
test11

	| playableCharacter paper key |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West .
	paper := NoPointsPortableObject named: 'Paper' weighing: 100.
	key := NoPointsPortableObject named: 'Key' weighing: 1.
	
	playableCharacter take: paper.
	self 
		should: [ playableCharacter take: key ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Backpack maxWeightExceededErrorDescription equals: anError messageText.
			self assert: (playableCharacter backpackIncludes: paper).
			self deny: (playableCharacter backpackIncludes: key) ]
	
	! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 17:42:52'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:42:46' prior: 50868645!
test11

	| room |
	
	room _ Room withDimensions: 1@1.
	
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:43:11'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:43:21'!
withDimensions: aPoint 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithDimensions: aPoint ! !
!Room class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:43:41' prior: 50868691!
withDimensions: roomDimensions 
	
	^self new initializeWithDimensions: roomDimensions ! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:44:03'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 17:44:10'!
Object subclass: #Room
	instanceVariableNames: 'roomDimensions_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'fr 12/10/2020 17:44:10'!
initializeWithDimensions: roomDimensions 
	self shouldBeImplemented.
	roomDimensions_CHANGE_ME := roomDimensions.! !
!Room methodsFor: 'initialization' stamp: 'fr 12/10/2020 17:44:14' prior: 50868716!
initializeWithDimensions: roomDimensions 
	
	roomDimensions_CHANGE_ME := roomDimensions.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 17:44:25'!
Object subclass: #Room
	instanceVariableNames: 'roomPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 17:44:25' prior: 50868723!
initializeWithDimensions: roomDimensions 
	
	roomPositions := roomDimensions.! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:45:09'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:45:14'!
named: aString using: aBackpack at: aPoint heading: aSymbol into: aRoom 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString using: aBackpack at: aPoint heading: aSymbol into: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:45:17' prior: 50868745!
named: aString using: aBackpack at: aPoint heading: aSymbol into: aRoom 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	
	^self new initializeNamed: aString using: aBackpack at: aPoint heading: aSymbol into: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:47:15' prior: 50868757!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom 
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:48:02' prior: 50868768!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom 
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	aRoom place: self at: aPosition.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom ! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:48:18'!
ERROR!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 17:48:33'!
place: aClass at: aPoint 
	self shouldBeImplemented.! !

!methodRemoval: Room #place:at: stamp: 'fr 12/10/2020 17:48:56'!
place: aClass at: aPoint 
	self shouldBeImplemented.!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:49:19'!
ERROR!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:49:19'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:49:51' prior: 50868780!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom 
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	aRoom assertCanBePlacedAt: aPosition.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:49:55' prior: 50868808!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom 
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom ! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:50:11' prior: 50868675!
test11

	| room |
	
	room _ Room withDimensions: 1@1.
	
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: PlayableCharacter playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:50:13'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:50:20' prior: 50868832!
test11

	| room |
	
	room _ Room withDimensions: 1@1.
	
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:50:22'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:50:31' prior: 50868821!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom 
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	aRoom assertCanBePlacedAt: aPosition.

	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 17:51:09' prior: 50868866!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint into: aRoom 
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	aRoom assertCanBePlacedAt: aPosition.

	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom ! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:51:11'!
ERROR!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 17:51:22'!
assertCanBePlacedAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 17:51:47' prior: 50868893!
assertCanBePlacedAt: aPoint 
	
	self error: self class playerPositionOutOfBoundsErrorDescription! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:51:50'!
ERROR!
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 17:52:01'!
playerPositionOutOfBoundsErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 17:52:10' prior: 50868907!
playerPositionOutOfBoundsErrorDescription
	
	^'Player position is out of bounds'! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 17:52:11'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 17:52:11'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:52:22'!
test12

	| room |
	
	room _ Room withDimensions: 1@1.
	
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:52:27' prior: 50868962!
test12

	| room |
	
	room _ Room withDimensions: 1@1.
	
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:55:30' prior: 50868976!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #West into: room.
	self should: [playableCharacter ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:56:15' prior: 50868990!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #West into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:56:42' prior: 50869006!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 2@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:57:15' prior: 50869022!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:59:29' prior: 50869038!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North into: room.
	playableCharacter moveForward.
	self assert: playableCharacter 
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 17:59:55' prior: 50869054!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 1@2 heading: #North)
	

	
	! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 17:59:56'!
ERROR!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:00:03'!
ERROR!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:00:12' prior: 50868898!
assertCanBePlacedAt: aPoint 
	
	! !
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:03:15' prior: 50869083!
assertCanBePlacedAt: aPoint 
	
	(aPoint = 2@2) ifTrue: [self error: self class playerPositionOutOfBoundsErrorDescription]! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:03:17'!
ERROR!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:03:26' prior: 50869087!
assertCanBePlacedAt: aPoint 
	
	(aPoint = (2@2)) ifTrue: [self error: self class playerPositionOutOfBoundsErrorDescription]! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:03:27'!
ERROR!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 18:03:36'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name newHeading_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 18:03:37'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name newHeading_CHANGE_ME room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'initialization' stamp: 'fr 12/10/2020 18:03:37'!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom 
	self shouldBeImplemented.
	name := aName.
	backpack := aBackpack.
	position := aPosition.
	newHeading_CHANGE_ME := newHeading.
	room := aRoom.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'fr 12/10/2020 18:03:40' prior: 50869125!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom 
	
	name := aName.
	backpack := aBackpack.
	position := aPosition.
	newHeading_CHANGE_ME := newHeading.
	room := aRoom.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'fr 12/10/2020 18:04:17' prior: 50869136!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom 
	
	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := newHeading.
	room := aRoom.! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:04:19'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:04:19'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:04:46' prior: 50869066!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 1@2 heading: #North)
	

	
	! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:04:46'!
FAILURE!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:05:00' prior: 50869202!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North)
	

	
	! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:05:00'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:05:01'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:05:32' prior: 50869217!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayerAt: 0@1)
	

	
	! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:05:34'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:05:56' prior: 50869276!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:05:59'!
ERROR!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:06:07'!
hasPlayableCharacterAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:06:10' prior: 50869308!
hasPlayableCharacterAt: aPoint 
	
	^true! !

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:06:11'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:06:11'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:06:42' prior: 50868849!
test11

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:06:54'!
test13

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:07:46' prior: 50869378!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:07:52' prior: 50869392!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:08:23' prior: 50869406!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: []
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:09:25' prior: 50869420!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:09:32' prior: 50869364!
test11

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:09:34'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:09:34'!
FAILURE!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:09:34'!
FAILURE!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:09:39'!
FAILURE!

----SNAPSHOT----(10 December 2020 18:09:43) CuisUniversity-4384.image priorSource: 17155771!
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 18:12:20' prior: 50868356!
moveForward
	
	| newPosition |
	newPosition _ position + heading forwardPoint.
	room assertCanBePlacedAt: newPosition.
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:12:47'!
FAILURE!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:13:42' prior: 50869096!
assertCanBePlacedAt: aPosition 
	
	(self positionInbounds: aPosition) ifFalse: [self error: self class playerPositionOutOfBoundsErrorDescription]! !
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:13:52' prior: 50869532!
assertCanBePlacedAt: aPosition 
	
	(self isPositionInbounds: aPosition) ifFalse: [self error: self class playerPositionOutOfBoundsErrorDescription]! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:13:56'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:13:56'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:13:56'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:13:56'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:13:56'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:13:56'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:13:56'!
ERROR!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:14:00'!
ERROR!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:14:06'!
isPositionInbounds: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:14:29' prior: 50869596!
isPositionInbounds: aPoint 
	
	aPoint y < roomPositions y! !

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:14:30'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:14:54' prior: 50869601!
isPositionInbounds: aPoint 
	
	^aPoint y < roomPositions y! !

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:14:55'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:14:55'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:14:55'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:14:55'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:14:55'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:14:55'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:17:31'!
test14

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:17:42' prior: 50869661!
test14

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #South into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:22:06' prior: 50869679!
test14

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:22:08'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 18:22:52' prior: 50868351!
moveBackward

	| newPosition |
	newPosition _ position - heading forwardPoint.
	room assertCanBePlacedAt: newPosition.
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:23:08'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:23:38' prior: 50869608!
isPositionInbounds: aPoint 
	
	^aPoint y between: 0 and: roomPositions y! !

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:23:44'!
FAILURE!

aPoint y between: 0 and: roomPositions!

aPoint y between: 0 and: roomPositions y!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:24:52'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:24:52'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:24:52'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:24:52'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:24:52'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:24:52'!
FAILURE!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:24:52'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:24:58'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:24:58'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:24:58'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:24:58'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:24:58'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:24:58'!
FAILURE!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:24:58'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:25:05'!
FAILURE!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:25:05'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:25:23' prior: 50869728!
isPositionInbounds: aPoint 
	
	^aPoint y between: 0 and: roomPositions y - 1! !

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:25:24'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:25:26'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:25:26'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:25:26'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:25:26'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:25:26'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:25:26'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:25:26'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:25:39' prior: 50869433!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:25:42' prior: 50869903!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:25:45'!
test15

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:25:48' prior: 50869939!
test15

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:25:55' prior: 50869957!
test15

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:26:01'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:26:42' prior: 50869843!
isPositionInbounds: aPoint 
	
	^(aPoint y between: 0 and: roomPositions y - 1) and: [aPoint x < roomPositions x]! !

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:26:44'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:26:44'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:26:44'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:26:44'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:26:44'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:26:44'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:26:47'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:26:47'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:26:47'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:26:47'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:26:47'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:26:47'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:26:47'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:26:51'!
test16

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:26:56' prior: 50870109!
test16

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:26:57'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:27:29' prior: 50869995!
isPositionInbounds: aPoint 
	
	^(aPoint y between: 0 and: roomPositions y - 1) and: [aPoint x between: 0 and: roomPositions x - 1]! !

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:27:30'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:27:30'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:27:30'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:27:30'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:27:30'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:27:30'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:27:36'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:27:38'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:27:38'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:27:38'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:27:38'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:27:38'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:27:38'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:28:11'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:28:11'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:28:42' prior: 50867996!
test01_forwardWhenHeadingNorthIncrementsYCoordinate

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North into: (Room withDimensions: 5@5).

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:28:43'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:28:43'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:28:43'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:28:43'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:28:43'!
PASSED!

----SNAPSHOT----(10 December 2020 18:29:02) CuisUniversity-4384.image priorSource: 17211763!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:16' prior: 50868008!
test02_backwardWhenHeadingNorthDecrementsYCoordinate

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North into: (Room withDimensions: 5@5).

	playableCharacter moveBackward.

	self assert: (playableCharacter isAt: 1@1 heading: #North)! !

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:29:27'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:29:27'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:29:27'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:29:27'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:29:27'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:33' prior: 50868020!
test03_rotateRightWhenHeadingNorthHeadsEast

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North into: (Room withDimensions: 5@5).

	playableCharacter rotateRight.

	self assert: (playableCharacter isAt: 1@2 heading: #East)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:41' prior: 50868031!
test04_rotateLeftWhenHeadingNorthHeadsWest

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North into: (Room withDimensions: 5@5).

	playableCharacter rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #West)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:44' prior: 50868042!
test05_movingWhenHeadingEastWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #East into: (Room withDimensions: 5@5).

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 2@2 heading: #North)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:48' prior: 50868056!
test06_movingWhenHeadingSouthWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #South into: (Room withDimensions: 5@5).

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@1 heading: #East)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:52' prior: 50868070!
test07_movingWhenHeadingWestWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: (Room withDimensions: 5@5).

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #South)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:29:57' prior: 50868084!
test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid

	self
		should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #X into: (Room withDimensions: 5@5)]
		raise: Error
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidCardinalPointErrorDescription equals: anError messageText ]! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:30:01' prior: 50868097!
test09_canTakePortableObjects

	| playableCharacter paper |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: (Room withDimensions: 5@5).
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:30:05' prior: 50868110!
test10_canNotTakeMoreObjectsThanTheBackpackCanCarry

	| playableCharacter paper key |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West into: (Room withDimensions: 5@5).
	paper := NoPointsPortableObject named: 'Paper' weighing: 100.
	key := NoPointsPortableObject named: 'Key' weighing: 1.
	
	playableCharacter take: paper.
	self 
		should: [ playableCharacter take: key ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Backpack maxWeightExceededErrorDescription equals: anError messageText.
			self assert: (playableCharacter backpackIncludes: paper).
			self deny: (playableCharacter backpackIncludes: key) ]
	
	! !

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:30:06'!
PASSED!

!testRun: #PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:30:06'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:30:35'!
test11_CanNotPlacePlayableCharacterOutsideTheRoom

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test11 stamp: 'fr 12/10/2020 18:30:36'!
test11

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:31:01'!
test12_PlayableCharacterMovesNormallyWhileStayingInbounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	! !

!methodRemoval: PlayableCharacterTest #test12 stamp: 'fr 12/10/2020 18:31:01'!
test12

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:31:17'!
test13_CanNotMoveNorthOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test13 stamp: 'fr 12/10/2020 18:31:17'!
test13

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:31:31'!
test14_CanNotMoveSouthOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test14 stamp: 'fr 12/10/2020 18:31:31'!
test14

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:31:41'!
test15_CanNotMoveEastOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test15 stamp: 'fr 12/10/2020 18:31:41'!
test15

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:32:11'!
test16_PlayableCharacterCanNotMoveWestOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test16 stamp: 'fr 12/10/2020 18:32:12'!
test16

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:32:18'!
test15_PlayableCharacterCanNotMoveEastOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test15_CanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 18:32:18'!
test15_CanNotMoveEastOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:32:25'!
test14_PlayableCharacterCanNotMoveSouthOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test14_CanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 18:32:25'!
test14_CanNotMoveSouthOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:32:30'!
test13_PlayableCharacterCanNotMoveNorthOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test13_CanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 18:32:30'!
test13_CanNotMoveNorthOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #North)			
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:33:49' prior: 50870771!
test16_PlayableCharacterCanNotMoveWestOutOfBounds

	
	
	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:33:53' prior: 50870923!
test16_PlayableCharacterCanNotMoveWestOutOfBounds

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:34:07' prior: 50870933!
test16_PlayableCharacterCanNotMoveWestOutOfBounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:34:11'!
test17

	| room playableCharacter |
	
	room _ Room withDimensions: 1@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #East into: room.
	self should: [playableCharacter moveBackward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription.			
			self assert: (playableCharacter isAt: 0@0 	heading: #East)			
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:34:14' prior: 50870962!
test17

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescript
	

	
	! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:34:18'!
ERROR!
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 18:34:32'!
invalidDimensionsErrorDescript
	self shouldBeImplemented.! !
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 18:34:49' prior: 50870990!
invalidDimensionsErrorDescript
	
	^'Room dimensions must be strictly positive'! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:34:51'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 18:35:20' prior: 50868700!
withDimensions: roomDimensions 
	
	self validateDimensions: roomDimensions.
	
	^self new initializeWithDimensions: roomDimensions ! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:35:23'!
ERROR!
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:35:29'!
validateDimensions: aPoint 
	self shouldBeImplemented.! !
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:35:32' prior: 50871013!
validateDimensions: aPoint 
	
	! !
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:35:37' prior: 50871018!
validateDimensions: roomDimensions 
	
	! !
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:35:57' prior: 50871022!
validateDimensions: roomDimensions 
	
	(roomDimensions x >0) ifFalse: [self error: self class invalidDimensionsErrorDescript]! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:36:01'!
ERROR!

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:36:07'!
ERROR!

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:36:19'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:36:25' prior: 50870980!
test17

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:36:25'!
ERROR!
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 18:36:34'!
invalidDimensionsErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 18:36:44' prior: 50871052!
invalidDimensionsErrorDescription
	
	^'Dimensions must be strictly positive'! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:36:46'!
ERROR!
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:36:52' prior: 50871027!
validateDimensions: roomDimensions 
	
	(roomDimensions x >0) ifFalse: [self error: self class invalidDimensionsErrorDescription]! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:36:53'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:37:01' prior: 50871042!
test17

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room  invalidDimensionsErrorDescription
	

	
	! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:37:02'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:37:06' prior: 50871075!
test17

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:37:10'!
ERROR!
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:37:14' prior: 50871065!
validateDimensions: roomDimensions 
	
	(roomDimensions x >0) ifFalse: [self error: self invalidDimensionsErrorDescription]! !

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 18:37:15'!
PASSED!

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:37:15'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:37:22' prior: 50871086!
test17

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:37:26' prior: 50871172!
test17

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:37:28'!
test18

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:37:32' prior: 50871188!
test18

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !

!testRun: #PlayableCharacterTest #test18 stamp: 'fr 12/10/2020 18:37:32'!
FAILURE!
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:38:10' prior: 50871097!
validateDimensions: roomDimensions 
	
	(roomDimensions x >0 or: [roomDimensions y > 0]) ifFalse: [self error: self invalidDimensionsErrorDescription]! !
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:38:28' prior: 50871207!
validateDimensions: roomDimensions 
	
	(roomDimensions x >0 or: [roomDimensions y > 0]) ifFalse: [self error: self invalidDimensionsErrorDescription]! !
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:38:30' prior: 50871215!
validateDimensions: roomDimensions 
	
	(roomDimensions x > 0 or: [roomDimensions y > 0]) ifFalse: [self error: self invalidDimensionsErrorDescription]! !

!testRun: #PlayableCharacterTest #test18 stamp: 'fr 12/10/2020 18:38:32'!
FAILURE!
!Room class methodsFor: 'validation' stamp: 'fr 12/10/2020 18:38:55' prior: 50871223!
validateDimensions: roomDimensions 
	
	(roomDimensions x > 0 and: [roomDimensions y > 0]) ifFalse: [self error: self invalidDimensionsErrorDescription]! !

!testRun: #PlayableCharacterTest #test18 stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:38:57'!
PASSED!

!testRun: #PlayableCharacterTest #test18 stamp: 'fr 12/10/2020 18:38:57'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:39:17'!
test17_RoomMustHaveAPositiveAmountOfRows

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !

!methodRemoval: PlayableCharacterTest #test17 stamp: 'fr 12/10/2020 18:39:17'!
test17

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:39:30'!
test18_RoomMustHaveAPositiveAmountOfColumns

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !

!methodRemoval: PlayableCharacterTest #test18 stamp: 'fr 12/10/2020 18:39:30'!
test18

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:40:31'!
test19

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:40:47' prior: 50871344!
test19

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:42:15' prior: 50871352!
test19

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:44:15' prior: 50871366!
test19

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 100.
	room place: portableObject at: 0@1.
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:44:52' prior: 50871377!
test19

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 100.
	room place: portableObject at: 0@1.
	
	self assert: room has: portableObject at: 0@1. 
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:44:57' prior: 50871386!
test19

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 100.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	! !

!testRun: #PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 18:45:02'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:45:14' prior: 50871397!
test19

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	! !

!testRun: #PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 18:45:16'!
ERROR!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:45:40'!
place: aNoPointsPortableObject at: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:45:42' prior: 50871422!
place: aNoPointsPortableObject at: aPoint 
	
	! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:45:51' prior: 50871427!
place: anObject at: aPoint 
	
	! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:46:00' prior: 50871431!
place: something at: aPoint 
	
	
	! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:46:14' prior: 50871435!
place: something at: aPoint 
	
	roomPositions 
	! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 18:46:32'!
Object subclass: #Room
	instanceVariableNames: 'dimensions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 18:46:32' prior: 50870148!
isPositionInbounds: aPoint 
	
	^(aPoint y between: 0 and: dimensions y - 1) and: [aPoint x between: 0 and: dimensions x - 1]! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 18:46:32' prior: 50868737!
initializeWithDimensions: roomDimensions 
	
	dimensions := roomDimensions.! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:47:12' prior: 50871439!
place: something at: aPoint 
	
	 
	! !

!testRun: #PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 18:47:15'!
ERROR!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:47:40'!
has: aNoPointsPortableObject at: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:47:47' prior: 50871469!
has: something at: aPoint 
	
	! !
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 18:47:50' prior: 50871474!
has: something at: aPoint 
	
	^true! !

!testRun: #PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 18:47:52'!
PASSED!

!testRun: #PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 18:47:52'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:49:55'!
test20

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 18:52:37' prior: 50871557!
test20

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:52:41'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:52:45'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:52:55'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:53:01'!
FAILURE!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:53:45' prior: 50871463!
place: something at: aPoint 
	
	self assertCanBePlacedAt: aPoint
	! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:54:06'!
FAILURE!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:54:33'!
failIfPositionOutOfBounds: aPosition

	^ (self isPositionInbounds: aPosition) ifFalse: [self error: self class playerPositionOutOfBoundsErrorDescription]! !
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:54:33' prior: 50869540!
assertCanBePlacedAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition! !
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 18:54:55' prior: 50871614!
assertCanBePlacedAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionIsAlreadyOccupied: aPosition.! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:54:57'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 18:55:09'!
failIfPositionIsAlreadyOccupied: aPoint 
	self shouldBeImplemented.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 18:56:39'!
Object subclass: #Room
	instanceVariableNames: 'dimensions roomPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 18:56:47' prior: 50871628!
failIfPositionIsAlreadyOccupied: aPoint 
	
	(roomPositions includesKey: aPoint) ifTrue: [self error: self class positionIsAlreadyOccupiedErrorDescription]! !

----SNAPSHOT----(10 December 2020 18:56:50) CuisUniversity-4384.image priorSource: 17238353!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:56:53'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'fr 12/10/2020 18:57:31' prior: 50871458!
initializeWithDimensions: roomDimensions 
	
	dimensions _ roomDimensions.
	roomPositions _ Dictionary new! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:57:34'!
FAILURE!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 18:58:32' prior: 50871599!
place: something at: aPoint 
	
	self assertCanBePlacedAt: aPoint.
	roomPositions at: aPoint put: something
	! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:58:33'!
FAILURE!

roomPositions!

roomPositions includesKey: aPoint!

self class positionIsAlreadyOccupiedErrorDescription!
!Room class methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 18:59:32'!
positionIsAlreadyOccupiedErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 18:59:41' prior: 50871676!
positionIsAlreadyOccupiedErrorDescription
	
	^'Position already occupied'! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:59:47'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:59:50'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 18:59:50'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:00:34'!
FAILURE!

room!

(roomPositions includesKey: aPoint)!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:02:21'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:02:32'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:02:32'!
FAILURE!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:02:39' prior: 50871568!
test20

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:02:40'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:02:51'!
FAILURE!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:02:51'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 19:03:17' prior: 50871478!
has: something at: aPoint 
	
	^(roomPositions at: aPoint) = something! !

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:03:18'!
PASSED!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 19:03:22'!
PASSED!

!testRun: #PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:03:22'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:03:39'!
test19_CanPlaceAnObjectInARoom

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	! !

!methodRemoval: PlayableCharacterTest #test19 stamp: 'fr 12/10/2020 19:03:39'!
test19

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:03:53'!
test20_CanNotPlaceTwoObjectsAtTheSameSpot

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test20 stamp: 'fr 12/10/2020 19:03:54'!
test20

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:04:03'!
test20_CanNotPlaceTwoObjectsOnTheSameSpot

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	! !

!methodRemoval: PlayableCharacterTest #test20_CanNotPlaceTwoObjectsAtTheSameSpot stamp: 'fr 12/10/2020 19:04:03'!
test20_CanNotPlaceTwoObjectsAtTheSameSpot

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:04:32' prior: 50871884!
test20_CanNotPlaceTwoObjectsOnTheSameSpot "DE ROOM"

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	! !

----SNAPSHOT----(10 December 2020 19:04:34) CuisUniversity-4384.image priorSource: 17279933!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:04:40' prior: 50871821!
test19_CanPlaceAnObjectInARoom "DE ROOM"

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:04:43' prior: 50871328!
test18_RoomMustHaveAPositiveAmountOfColumns "DE ROOM"

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:04:45' prior: 50871312!
test17_RoomMustHaveAPositiveAmountOfRows "DE ROOM"

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:05:03'!
test21

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:05:33' prior: 50871984!
test21

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room hasPlayableCharacterAt: 0@1)
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:07:36' prior: 50871998!
test21

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:08:00' prior: 50871928!
test20_CanNotPlaceTwoObjectsOnTheSameSpot "DE ROOM"

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1).
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	! !

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:08:00'!
PASSED!

!methodRemoval: PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:08:35'!
test21

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	
	!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 19:09:18' prior: 50871619!
assertCanBePlacedAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:09:33' prior: 50871664!
place: something at: aPoint 
	
	self assertCanBePlacedAt: aPoint.
	self failIfPositionIsAlreadyOccupied: aPoint.
	roomPositions at: aPoint put: something
	! !

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:09:35'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:09:37'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:09:37'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:09:51'!
test21

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	! !

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:09:53'!
FAILURE!
!Room methodsFor: 'assertions' stamp: 'fr 12/10/2020 19:11:01' prior: 50872156!
assertCanBePlacedAt: aPosition 
	
	self failIfPositionOutOfBounds: aPosition.
	self failIfPositionIsAlreadyOccupied: aPosition
	! !

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:11:02'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:11:02'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:11:27' prior: 50870607!
test11_CanNotPlacePlayableCharacterOutsideTheRoom

	| room |
	
	room _ Room withDimensions: 1@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room playerPositionOutOfBoundsErrorDescription	.
		]
	

	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:11:42' prior: 50870635!
test12_PlayableCharacterMovesNormallyWhileStayingInbounds

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter moveForward.
	self assert: (playableCharacter isAt: 0@1 heading: #North).
	self assert: (room has: playableCharacter at: 0@1)
	

	
	! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:11:47'!
ERROR!
!PlayableCharacter methodsFor: 'initialization' stamp: 'fr 12/10/2020 19:12:52' prior: 50869146!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading into: aRoom 
	
	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := newHeading.
	room := aRoom.
	room place: self at: position! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:13:16'!
ERROR!
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 19:13:44' prior: 50869522!
moveForward
	
	| newPosition |
	newPosition _ position + heading forwardPoint.
	room place: self at: newPosition.
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:13:46'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:13:46'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:13:46'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:13:46'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:13:46'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:13:47'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:13:47'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:13:47'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:13:47'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:14:03'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 19:14:39' prior: 50869718!
moveBackward

	| newPosition |
	newPosition _ position - heading forwardPoint.
	room place: self at: newPosition.
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:14:40'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:14:44'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:14:44'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:14:44'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:14:44'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:15:42'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:15:42'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:15:42'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:15:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:15:59'!
ERROR!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:15:59'!
ERROR!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:16:22'!
ERROR!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:16:22'!
ERROR!
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 19:16:46' prior: 50872414!
moveForward
	
	| newPosition |
	newPosition _ position + heading forwardPoint.
	room move: self from: position to: newPosition.
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:16:49'!
ERROR!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:16:57'!
move: aPlayableCharacter from: aPoint to: aPoint3 
	self shouldBeImplemented.! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:17:57' prior: 50872713!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self place: aPlayableCharacter at: aNewPosition.
	roomPositions removeKey: aPosition.
	! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:17:58' prior: 50872718!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self place: aPlayableCharacter at: aNewPosition.
	roomPositions removeKey: aPosition
	! !

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:18:11'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:18:15'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:18:17'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:18:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:18:20'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:18:21'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:18:21'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 19:19:09'!
moveTo: newPosition

	room move: self from: position to: newPosition.
	position := newPosition.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 19:19:32' prior: 50872702!
moveForward

	self moveTo: position + heading forwardPoint.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fr 12/10/2020 19:19:43' prior: 50872509!
moveBackward

	self moveTo: position - heading forwardPoint.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:19:43'!
PASSED!

!testRun: #PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:19:43'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:20:57'!
test21_CanNotPlacePlayerOnAnOccupiedSpot

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	! !

!methodRemoval: PlayableCharacterTest #test21 stamp: 'fr 12/10/2020 19:20:57'!
test21

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:21:07'!
test22

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:21:11' prior: 50872969!
test22

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:22:00' prior: 50872988!
test22

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
			self assert: (room has: playableCharacter at: 0@0)
		]
	

	! !

!testRun: #PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!testRun: #PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:22:08'!
PASSED!

!methodRemoval: PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:22:31'!
test22

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
			self assert: (room has: playableCharacter at: 0@0)
		]
	

	!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:24:20' prior: 50872726!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self assertCanBePlacedAt: aPosition.
	self failIfPositionIsAlreadyOccupied: aPosition.
	roomPositions at: aPosition put: aPlayableCharacter.
	roomPositions removeKey: aPosition
	! !
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:24:24' prior: 50873138!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self assertCanBePlacedAt: aPosition.
	roomPositions at: aPosition put: aPlayableCharacter.
	roomPositions removeKey: aPosition
	! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:24:38'!
ERROR!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:24:46'!
ERROR!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:25:27'!
ERROR!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:25:32'!
ERROR!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:25:32'!
ERROR!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:26:19' prior: 50873149!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self failIfPositionOutOfBounds: aNewPosition.
	roomPositions at: aNewPosition put: aPlayableCharacter.
	roomPositions removeKey: aPosition
	! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:26:20'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:26:22'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:26:22'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:26:33'!
	test22

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
			self assert: (room has: playableCharacter at: 0@0)
		]
	! !

!testRun: #PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:26:35'!
FAILURE!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 19:27:08' prior: 50873179!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self failIfPositionOutOfBounds: aNewPosition.
	self failIfPositionIsAlreadyOccupied: aNewPosition.
	roomPositions at: aNewPosition put: aPlayableCharacter.
	roomPositions removeKey: aPosition
	! !

!testRun: #PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:27:09'!
PASSED!

!testRun: #PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:27:09'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:27:28'!
test22_PlayableCharacterCanNotMoveToAnOccupiedSpot

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
			self assert: (room has: playableCharacter at: 0@0)
		]
	! !

!methodRemoval: PlayableCharacterTest #test22 stamp: 'fr 12/10/2020 19:27:28'!
test22

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
			self assert: (room has: playableCharacter at: 0@0)
		]
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:28:27'!
test23

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter moveForward]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
			self assert: (room has: playableCharacter at: 0@0)
		]
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:29:50' prior: 50873444!
test23

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:32:09' prior: 50873467!
test23

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:34:47' prior: 50873480!
test23

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter )
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:35:34' prior: 50873494!
test23

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)
	! !

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:35:37'!
ERROR!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 19:35:51'!
take
	self shouldBeImplemented.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 19:36:19' prior: 50873529!
take
	
	room takeFrom: position + heading forwardPoint ! !

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:36:25'!
ERROR!
!Room methodsFor: 'player interaction' stamp: 'fr 12/10/2020 19:37:09'!
takeFrom: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'player interaction' stamp: 'fr 12/10/2020 19:37:23' prior: 50873541!
takeFrom: aPosition 
	
	! !
!Room methodsFor: 'player interaction' stamp: 'fr 12/10/2020 19:38:39' prior: 50873546!
takeFrom: aPosition 
	
	self error: self class canNotGrabFromEmptyPositionErrorDescription! !

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:38:43'!
ERROR!
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 19:38:54'!
canNotGrabFromEmptyPositionErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error description' stamp: 'fr 12/10/2020 19:39:21' prior: 50873558!
canNotGrabFromEmptyPositionErrorDescription
	
	^'Can not grab something from an empty position'! !

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:39:22'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:39:30'!
test24

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:39:37' prior: 50873573!
test24

	"| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)"
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:40:22' prior: 50873509!
test23

	| room playableCharacter |
	
	room _ Room withDimensions: 1@2.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: []
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:41:31' prior: 50873609!
test23

	| room playableCharacter backpack |
	
	room _ Room withDimensions: 1@2.
	backpack _ self defaultBackpack.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room canNotGrabFromEmptyPositionErrorDescription.
			self assert: backpack isEmpty	
		]
	! !

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:41:33'!
PASSED!

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:41:33'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:41:41' prior: 50873591!
test24

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)
	! !

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:41:47'!
ERROR!
!Room methodsFor: 'player interaction' stamp: 'fr 12/10/2020 19:43:35' prior: 50873550!
takeFrom: aPosition 
	
	^roomPositions at: aPosition ifAbsent:  [self error: self class canNotGrabFromEmptyPositionErrorDescription].
	! !

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:43:43'!
FAILURE!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 19:44:24' prior: 50873534!
take
	
	| objectToTake |
	objectToTake _ room takeFrom: position + heading forwardPoint.
	self take: objectToTake! !

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:44:45'!
FAILURE!
!Room methodsFor: 'player interaction' stamp: 'fr 12/10/2020 19:45:54' prior: 50873752!
takeFrom: aPosition 
	
	| objectToTake |
	objectToTake _ roomPositions at: aPosition ifAbsent:  [self error: self class canNotGrabFromEmptyPositionErrorDescription].
	roomPositions removeKey: aPosition.
	^objectToTake! !

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:45:57'!
ERROR!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 19:47:03' prior: 50871736!
has: something at: aPoint 
	
	| objectAtPosition |
	objectAtPosition _ roomPositions at: aPoint.
	
	^objectAtPosition = something! !
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 19:47:23' prior: 50873785!
has: something at: aPoint 
	
	| objectAtPosition |
	objectAtPosition _ roomPositions at: aPoint ifAbsent: [^false].
	^objectAtPosition = something! !

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:47:42'!
PASSED!

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:47:45'!
PASSED!

!testRun: #PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:47:45'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:48:20'!
test23_CanNotTakeAnythingFromAnEmptySpot

	| room playableCharacter backpack |
	
	room _ Room withDimensions: 1@2.
	backpack _ self defaultBackpack.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room canNotGrabFromEmptyPositionErrorDescription.
			self assert: backpack isEmpty	
		]
	! !

!methodRemoval: PlayableCharacterTest #test23 stamp: 'fr 12/10/2020 19:48:20'!
test23

	| room playableCharacter backpack |
	
	room _ Room withDimensions: 1@2.
	backpack _ self defaultBackpack.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room canNotGrabFromEmptyPositionErrorDescription.
			self assert: backpack isEmpty	
		]
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:48:45'!
test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)
	! !

!methodRemoval: PlayableCharacterTest #test24 stamp: 'fr 12/10/2020 19:48:45'!
test24

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:48:54'!
test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot

	| room playableCharacter backpack |
	
	room _ Room withDimensions: 1@2.
	backpack _ self defaultBackpack.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room canNotGrabFromEmptyPositionErrorDescription.
			self assert: backpack isEmpty	
		]
	! !

!methodRemoval: PlayableCharacterTest #test23_CanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 19:48:54'!
test23_CanNotTakeAnythingFromAnEmptySpot

	| room playableCharacter backpack |
	
	room _ Room withDimensions: 1@2.
	backpack _ self defaultBackpack.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room canNotGrabFromEmptyPositionErrorDescription.
			self assert: backpack isEmpty	
		]
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:49:04'!
test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	! !

!methodRemoval: PlayableCharacterTest #test21_CanNotPlacePlayerOnAnOccupiedSpot stamp: 'fr 12/10/2020 19:49:04'!
test21_CanNotPlacePlayerOnAnOccupiedSpot

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	self should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@1 heading: #North into: room]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Room positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1	).
		]
	

	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:49:40'!
test25

	| room portableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room has: portableObject at: 0@1)
	! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 19:51:36'!
Object subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:51:30' prior: 50874134!
test25

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject named: 'wardrobe' weighing: 80.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 19:51:48'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 19:52:13'!
ERROR!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 19:52:19'!
ERROR!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 19:52:29'!
ERROR!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 19:52:29'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:52:49' prior: 50874160!
test25

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 19:54:00' prior: 50874201!
test25

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 19:54:27'!
ERROR!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 19:55:26' prior: 50873763!
take
	
	| objectToTake |
	objectToTake _ room takeFrom: position + heading forwardPoint.
	objectToTake toBeTakenBy: self.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:00:49' prior: 50874238!
take
	
	| objectToTake |
	objectToTake _ room takeFrom: position + heading forwardPoint.
	objectToTake toBeTakenBy: self. "LO HAGO DESDE AC� O DESDE ROOM?"! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:01:59'!
ERROR!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:02:17'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:02:29'!
toBeTakenBy: aPlayableCharacter 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:02:34' prior: 50874259!
toBeTakenBy: aPlayableCharacter 
	
	! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:02:39'!
FAILURE!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:02:46'!
FAILURE!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:06:02' prior: 50874246!
take
	
	| objectToTake |
	objectToTake _ room takeFrom: position + heading forwardPoint.
	objectToTake toBeTakenBy: self. "LO HAGO DESDE AC� O DESDE ROOM?"! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:06:15'!
FAILURE!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:06:42' prior: 50874275!
take
	
	room takeFrom: position + heading forwardPoint.
	! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:06:47' prior: 50874286!
take
	
	room takeFrom: position + heading forwardPoint for: self.
	! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:06:59'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:07:06'!
takeFrom: aPoint for: aPlayableCharacter 
	self shouldBeImplemented.! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:07:57' prior: 50874300!
takeFrom: aPosition for: aPlayableCharacter 
	
	| objectToTake |
	objectToTake _ roomPositions at: aPosition ifAbsent:  [self error: self class canNotGrabFromEmptyPositionErrorDescription].
	objectToTake toBeTakenBy: self. "LO HAGO DESDE AC� O DESDE ROOM?"! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:08:12' prior: 50874306!
takeFrom: aPosition for: aPlayableCharacter 
	
	| objectToTake |
	objectToTake _ roomPositions at: aPosition ifAbsent:  [self error: self class canNotGrabFromEmptyPositionErrorDescription].
	objectToTake toBeTakenBy: self from: aPosition. "LO HAGO DESDE AC� O DESDE ROOM?"! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:08:28' prior: 50874317!
takeFrom: aPosition for: aPlayableCharacter 
	
	| objectToTake |
	objectToTake _ roomPositions at: aPosition ifAbsent:  [self error: self class canNotGrabFromEmptyPositionErrorDescription].
	objectToTake toBeTakenBy: self from: aPosition. ! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:08:39'!
objectAt: aPosition

	^ roomPositions at: aPosition ifAbsent:  [self error: self class canNotGrabFromEmptyPositionErrorDescription]! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:08:39' prior: 50874329!
takeFrom: aPosition for: aPlayableCharacter 
	
	| objectToTake |
	objectToTake _ self objectAt: aPosition.
	objectToTake toBeTakenBy: self from: aPosition. ! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:09:04' prior: 50874346!
takeFrom: aPosition for: aPlayableCharacter 
	
	(self objectAt: aPosition) toBeTakenBy: self from: aPosition. ! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:09:26'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:09:49'!
toBeTakenBy: aRoom from: aPoint 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:09:54' prior: 50874363!
toBeTakenBy: aRoom from: aPoint 
	
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:10:27' prior: 50874354!
takeFrom: aPosition for: aPlayableCharacter 
	
	(self objectAt: aPosition) toBeTakenBy: aPlayableCharacter from: self at: aPosition. ! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:10:42'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:10:48'!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPoint 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:10:52' prior: 50874384!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPoint 
	
	! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:10:55' prior: 50874390!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 
	
	! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:11:14' prior: 50874396!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 

	aRoom finishNonPortableTakeFrom: aPosition	
	! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:11:20'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:11:29'!
finishNonPortableTakeFrom: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:11:36' prior: 50874411!
finishNonPortableTakeFrom: aPosition 
	
	! !

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:11:37'!
ERROR!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:11:37'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:11:37'!
ERROR!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:11:53'!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPoint 
	self shouldBeImplemented.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:12:23' prior: 50874523!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPoint 
	
	aPlayableCharacter take: self.
	aRoom finishPortableObjectTakeFrom: aPoint.! !

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:12:26'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:12:32'!
finishPortableObjectTakeFrom: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:12:41' prior: 50874540!
finishPortableObjectTakeFrom: aPoint 
	
	roomPositions removeKey: aPoint! !

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:12:42'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:12:45'!
PASSED!

!testRun: #PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:12:45'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:13:35'!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBakcpack

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

!methodRemoval: PlayableCharacterTest #test25 stamp: 'fr 12/10/2020 20:13:35'!
test25

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:17:43'!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

!methodRemoval: PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBakcpack stamp: 'fr 12/10/2020 20:17:43'!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBakcpack

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:17:56'!
test26

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject new.
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:18:17' prior: 50874779!
test26

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: '').
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:19:49' prior: 50874796!
test26

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: (NoPointsPortableObject named: 'Paper' weighing: 10)).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:20:23'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 20:20:28'!
including: anOrderedCollection 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeIncluding: anOrderedCollection ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 20:20:32' prior: 50874836!
including: anOrderedCollection 
	
	^self new initializeIncluding: anOrderedCollection ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'fr 12/10/2020 20:20:48' prior: 50874846!
including: aStageObjectCollection 
	
	^self new initializeIncluding: aStageObjectCollection ! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:20:50'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 20:20:58'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjectCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'fr 12/10/2020 20:20:58'!
initializeIncluding: aStageObjectCollection 
	self shouldBeImplemented.
	stageObjectCollection := aStageObjectCollection.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'fr 12/10/2020 20:21:00' prior: 50874870!
initializeIncluding: aStageObjectCollection 
	
	stageObjectCollection := aStageObjectCollection.! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 20:21:04'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'objects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:21:04' prior: 50874877!
initializeIncluding: aStageObjectCollection 
	
	objects := aStageObjectCollection.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'fr 12/10/2020 20:21:06' prior: 50874892!
initializeIncluding: aStageObjectCollection 
	
	objects _ aStageObjectCollection.! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:21:09'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:21:10'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:21:10'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:21:10'!
PASSED!

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:21:10'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:22:42' prior: 50874814!
test26

	| room nonPortableObject letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:22:54' prior: 50875007!
test26

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:23:22'!
ERROR!
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:23:30'!
includes: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:23:41' prior: 50875032!
includes: anObject 
	
	objects includes: anObject! !
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:23:44' prior: 50875037!
includes: anObject 
	
	^objects includes: anObject! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:23:45'!
PASSED!

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:23:45'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:24:19' prior: 50875019!
test26

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	self assert: (nonPortableObject includes: letter)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:25:57' prior: 50875150!
test26

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: letter)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:26:00' prior: 50875167!
test26

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject)
	! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:26:01'!
PASSED!

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:26:01'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:26:04' prior: 50875185!
test26

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:26:05'!
FAILURE!
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:27:27' prior: 50875042!
includes: anObject 
	
	^(objects includes: anObject) or: [objects anySatisfy: [:anohterObject | anohterObject includes: anObject]]! !
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:27:35' prior: 50875326!
includes: anObject 
	
	^(objects includes: anObject) or: [objects anySatisfy: [:anotherObject | anotherObject includes: anObject]]! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:27:39'!
ERROR!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:27:53'!
includes: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:27:58' prior: 50875343!
includes: aNoPointsPortableObject 
	
	^false! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:28:03' prior: 50875349!
includes: anObject 
	
	^false! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:28:04'!
PASSED!

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:28:04'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:28:50'!
test27

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:29:04' prior: 50875306!
test26

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:29:07'!
PASSED!

!testRun: #PlayableCharacterTest #test27 stamp: 'fr 12/10/2020 20:29:07'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:29:49'!
test26_NonPortableObjectIncludesPortableObjects

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !

!methodRemoval: PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:29:49'!
test26

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:30:30'!
test27_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !

!methodRemoval: PlayableCharacterTest #test27 stamp: 'fr 12/10/2020 20:30:30'!
test27

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:30:44' prior: 50875617!
test27_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:31:12'!
test26

	| nonPortableObject |
	
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	self assert: (nonPortableObject isEmpty)
	! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:31:15'!
ERROR!
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:31:24'!
isEmpty
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'testing' stamp: 'fr 12/10/2020 20:31:33' prior: 50875686!
isEmpty
	
	^objects isEmpty! !

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:31:34'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:31:34'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:31:57'!
test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt

	| nonPortableObject |
	
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	self assert: (nonPortableObject isEmpty)
	! !

!methodRemoval: PlayableCharacterTest #test26 stamp: 'fr 12/10/2020 20:31:57'!
test26

	| nonPortableObject |
	
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	self assert: (nonPortableObject isEmpty)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:32:04'!
test27_NonPortableObjectIncludesPortableObjects

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !

!methodRemoval: PlayableCharacterTest #test26_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:32:04'!
test26_NonPortableObjectIncludesPortableObjects

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:32:10'!
test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !

!methodRemoval: PlayableCharacterTest #test27_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:32:10'!
test27_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:32:43' prior: 50875846!
test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes "DE NONPORTABLE TESTS"

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !

----SNAPSHOT----(10 December 2020 20:32:45) CuisUniversity-4384.image priorSource: 17289567!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:32:56' prior: 50875822!
test27_NonPortableObjectIncludesPortableObjects"DE NONPORTABLE TESTS"

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:32:59' prior: 50875805!
test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt"DE NONPORTABLE TESTS"

	| nonPortableObject |
	
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	self assert: (nonPortableObject isEmpty)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:33:49' prior: 50874740!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:33:49' prior: 50875940!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:34:11' prior: 50875961!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:34:16'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:34:16'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:34:23' prior: 50875982!
test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:34:24'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:34:24'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:34:29'!
test29

	| room nonPortableObject playableCharacter |
	
	room _ Room withDimensions: 1@2.
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:34:42' prior: 50876251!
test29

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:35:12' prior: 50876269!
test29

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (playableCharacter backpackIncludes: nonPortableObject).
	self assert: (room has: nonPortableObject at: 0@1)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:35:57' prior: 50876287!
test29

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	! !

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:36:01'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:37:01' prior: 50874402!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 

	aPlayableCharacter take: objects first.

	aRoom finishNonPortableTakeFrom: aPosition	
	! !

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:37:03'!
ERROR!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:37:03'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:37:03'!
ERROR!

objects!

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:37:19'!
PASSED!

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:37:22'!
ERROR!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:37:22'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:37:22'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:38:38' prior: 50876330!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 

	
	objects isEmpty ifFalse: [aPlayableCharacter take: objects first].

	aRoom finishNonPortableTakeFrom: aPosition	
	! !

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:38:39'!
PASSED!

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:38:41'!
PASSED!

!testRun: #PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:38:41'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:39:04'!
test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	! !

!methodRemoval: PlayableCharacterTest #test29 stamp: 'fr 12/10/2020 20:39:04'!
test29

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:39:28'!
test30

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:39:42' prior: 50876747!
test30

	| room nonPortableObject playableCharacter letter anotherNonPortableObject scarf |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:39:55' prior: 50876766!
test30

	| room nonPortableObject playableCharacter letter anotherNonPortableObject scarf |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	self assert: (playableCharacter backpackIncludes: scarf).
	! !

!testRun: #PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:39:58'!
FAILURE!

col _ OrderedCollection with: 2 with: 3 with: 1. !

col remove: 1 !

col !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:48:27' prior: 50876581!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 

	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter. objects remove: anObject].

	aRoom finishNonPortableTakeFrom: aPosition	
	! !

!testRun: #PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:48:33'!
ERROR!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:49:00'!
toBeTakenBy: aPlayableCharacter 
	self shouldBeImplemented.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:49:06' prior: 50876837!
toBeTakenBy: aPlayableCharacter 
	
	aPlayableCharacter take: self! !

!testRun: #PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:49:07'!
FAILURE!

playableCharacter!

self first !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:50:20' prior: 50876825!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 

	
	self toBeTakenBy: aPlayableCharacter.

	aRoom finishNonPortableTakeFrom: aPosition	
	! !

!testRun: #PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:50:21'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:51:02' prior: 50874265!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter]! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:51:16' prior: 50876864!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter from: self]! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:53:24' prior: 50876871!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter]! !

!testRun: #PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:53:25'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 20:53:26'!
PASSED!

!testRun: #PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:53:26'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:54:22'!
test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject

	| room nonPortableObject playableCharacter letter anotherNonPortableObject scarf |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	self assert: (playableCharacter backpackIncludes: scarf).
	! !

!methodRemoval: PlayableCharacterTest #test30 stamp: 'fr 12/10/2020 20:54:22'!
test30

	| room nonPortableObject playableCharacter letter anotherNonPortableObject scarf |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	self assert: (playableCharacter backpackIncludes: scarf).
	!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:54:31'!
test31

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self assert: (playableCharacter backpackIncludes: letter).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 20:54:41' prior: 50877060!
test31

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: letter).
	! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:54:42'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:55:47' prior: 50876878!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter from: self]! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:55:48'!
ERROR!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:55:57'!
toBeTakenBy: aPlayableCharacter from: aNonPortableObject 
	self shouldBeImplemented.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:56:29' prior: 50877109!
toBeTakenBy: aPlayableCharacter from: aNonPortableObject 
	
	aNonPortableObject remove: self.
	self toBeTakenBy: aPlayableCharacter! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:56:32'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:56:41'!
remove: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 20:56:50' prior: 50877125!
remove: aNoPointsPortableObject 
	
	objects remove: aNoPointsPortableObject ! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 20:56:53'!
FAILURE!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:56:53'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 20:56:53'!
FAILURE!

!methodRemoval: NonPortableObject #toBeTakenBy:from: stamp: 'fr 12/10/2020 20:57:39'!
toBeTakenBy: aRoom from: aPoint 
	
	!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 20:57:42'!
FAILURE!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:57:42'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 20:57:42'!
FAILURE!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 20:58:40'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 20:58:43'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 20:58:44'!
FAILURE!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 20:58:44'!
FAILURE!

playableCharacter!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:01:17' prior: 50877100!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter]! !

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:01:19'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:01:21'!
PASSED!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:01:23'!
FAILURE!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:01:23'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:07:47' prior: 50876853!
toBeTakenBy: aPlayableCharacter from: aRoom at: aPosition 

	self toBeTakenBy: aPlayableCharacter.

	aRoom finishNonPortableTakeFrom: aPosition	
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:08:21' prior: 50874545!
finishPortableObjectTakeFrom: aPosition 
	
	roomPositions removeKey: aPosition! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:09:27' prior: 50877418!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter]! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:14:31' prior: 50877455!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter]! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:14:41'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:15:15' prior: 50877462!
toBeTakenBy: aPlayableCharacter 
	
	objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter from: self]! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:16:09' prior: 50877115!
toBeTakenBy: aPlayableCharacter from: aNonPortableObject 
	
	aNonPortableObject toBeRemoved: self.
	self toBeTakenBy: aPlayableCharacter! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:16:12'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:16:18'!
toBeRemoved: aNoPointsPortableObject 
	self shouldBeImplemented.! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 21:16:27'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'objects removable'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:16:26' prior: 50877489!
toBeRemoved: aNoPointsPortableObject 
	
	removable add: aNoPointsPortableObject ! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:16:33'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'fr 12/10/2020 21:17:02' prior: 50874898!
initializeIncluding: aStageObjectCollection 
	
	objects _ aStageObjectCollection.
	removable _ OrderedCollection new! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:17:04'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:18:23' prior: 50877472!
toBeTakenBy: aPlayableCharacter 
	
	[objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter from: self]] ensure: [self removeTaken]! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:18:28'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:18:39'!
removeTaken
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:19:02' prior: 50877532!
removeTaken
	
	removable do: [:anObject | objects remove: anObject]! !

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:19:04'!
ERROR!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:19:04'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:19:04'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:19:20'!
toBeTakenBy: aPlayableCharacter from: aNonPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:19:32' prior: 50877673!
toBeTakenBy: aPlayableCharacter from: aNonPortableObject 
	
	self toBeTakenBy: aPlayableCharacter ! !

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:19:33'!
PASSED!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:19:35'!
PASSED!

!testRun: #PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:19:35'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:20:15'!
test31_TakenPortableObjectsAreRemovedFromNonPortableObjects

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: letter).
	! !

!methodRemoval: PlayableCharacterTest #test31 stamp: 'fr 12/10/2020 21:20:15'!
test31

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: letter).
	!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:21:45'!
objectsTakenBy: aPlayableCharacter

	^ objects do: [:anObject | anObject toBeTakenBy: aPlayableCharacter from: self]! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:21:45' prior: 50877522!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] ensure: [self removeTaken]! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:22:14'!
test32

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: letter).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:22:41' prior: 50877867!
test32

	| room nonPortableObject playableCharacter letter |
	
	room _ Room withDimensions: 1@2.
	letter _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: letter).
	! !

----SNAPSHOT----(10 December 2020 21:22:55) CuisUniversity-4384.image priorSource: 17416395!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:23:36' prior: 50877885!
test32

	| room nonPortableObject playableCharacter ball |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: ball).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:24:35' prior: 50877906!
test32

	| room nonPortableObject playableCharacter ball |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: ball).
	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:24:36'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:24:36'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:25:21' prior: 50877924!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 20).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 50).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: ball).
	! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:29:23' prior: 50877861!
toBeTakenBy: aPlayableCharacter 
	
	self objectsTakenBy: aPlayableCharacter
	self removeTaken! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:29:27' prior: 50878092!
toBeTakenBy: aPlayableCharacter 
	
	self objectsTakenBy: aPlayableCharacter.
	self removeTaken! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:29:30'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:29:40' prior: 50878072!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 50).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: ball).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:30:05' prior: 50878237!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: ball).
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:30:50' prior: 50878257!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	playableCharacter take.
	self deny: (nonPortableObject includes: ball).
	self assert: (playableCharacter backpackIncludes: ball)
	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:30:51'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:31:59' prior: 50878277!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	
		].
	self deny: (nonPortableObject includes: ball).
	self assert: (playableCharacter backpackIncludes: ball)
	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:33:06' prior: 50878302!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		].

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:33:07'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:33:44' prior: 50878099!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] ensure: [	self removeTaken]
! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:33:46'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:33:48'!
FAILURE!

----SNAPSHOT----(10 December 2020 21:34:00) CuisUniversity-4384.image priorSource: 17480065!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:34:03'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:34:03'!
FAILURE!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:34:17' prior: 50878329!
test32

	"| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		]."

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:34:18'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:34:23' prior: 50878380!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		].

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:34:24'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:35:06' prior: 50878360!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] on: Error - MessageNotUnderstood do: [	self removeTaken]
! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:35:07'!
FAILURE!

nonPortableObject!

anObject!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:36:42'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:36:42'!
FAILURE!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:38:07' prior: 50877479!
toBeTakenBy: aPlayableCharacter from: aNonPortableObject 
	
	self toBeTakenBy: aPlayableCharacter.
	aNonPortableObject toBeRemoved: self! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:38:08'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:38:11'!
FAILURE!

nonPortableObject!

self first!

nonPortableObject includes: ball!

self deny: (nonPortableObject includes: ball).!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:39:23'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:39:23'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:39:57' prior: 50878568!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] ensure: [	self removeTaken]
! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:40:00'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:40:06'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:40:06'!
FAILURE!

nonPortableObject includes: ball!

nonPortableObject!

playableCharacter!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:40:42'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:40:42'!
FAILURE!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 21:41:45'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

TestCase subclass: #NonPortableObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObjectTest category: 'ISW1-2020-2C-2doParcial' stamp: 'fr 12/10/2020 21:41:52'!
TestCase subclass: #NonPortableObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'no messages' stamp: 'fr 12/10/2020 21:42:27'!
test17_RoomMustHaveAPositiveAmountOfRows "DE ROOM"

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:42:45'!
test18_RoomMustHaveAPositiveAmountOfColumns "DE ROOM"

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:42:57'!
test19_CanPlaceAnObjectInARoom "DE ROOM"

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:43:14'!
test20_CanNotPlaceTwoObjectsOnTheSameSpot "DE ROOM"

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1).
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	! !

!methodRemoval: PlayableCharacterTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:43:44'!
test17_RoomMustHaveAPositiveAmountOfRows "DE ROOM"

	self should: [Room withDimensions: -1@1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	!

!methodRemoval: PlayableCharacterTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:43:45'!
test18_RoomMustHaveAPositiveAmountOfColumns "DE ROOM"

	self should: [Room withDimensions: 1@-1] 
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidDimensionsErrorDescription
	

	
	!

!methodRemoval: PlayableCharacterTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:43:47'!
test19_CanPlaceAnObjectInARoom "DE ROOM"

	| room portableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	room place: portableObject at: 0@1.
	
	self assert: (room has: portableObject at: 0@1). 
	

	
	!

!methodRemoval: PlayableCharacterTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:43:49'!
test20_CanNotPlaceTwoObjectsOnTheSameSpot "DE ROOM"

	| room portableObject anotherPortableObject |
	
	room _ Room withDimensions: 1@2.
	portableObject _ NoPointsPortableObject named: 'key' weighing: 10.
	anotherPortableObject _ NoPointsPortableObject named: 'scarf' weighing: 12.
	room place: portableObject at: 0@1.
	self should: [room place: anotherPortableObject at: 0@1]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |
			self assert: anError messageText equals: Room  positionIsAlreadyOccupiedErrorDescription.
			self assert: (room has: portableObject at: 0@1).
			self deny: (room has: anotherPortableObject at: 0@1)
		]
	

	
	!
!NonPortableObjectTest methodsFor: 'no messages' stamp: 'fr 12/10/2020 21:44:22'!
test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt"DE NONPORTABLE TESTS"

	| nonPortableObject |
	
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	self assert: (nonPortableObject isEmpty)
	! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:44:36'!
test27_NonPortableObjectIncludesPortableObjects"DE NONPORTABLE TESTS"

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'fr 12/10/2020 21:44:46'!
test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes "DE NONPORTABLE TESTS"

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	! !

!methodRemoval: PlayableCharacterTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:44:56'!
test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt"DE NONPORTABLE TESTS"

	| nonPortableObject |
	
	nonPortableObject _ NonPortableObject including: (OrderedCollection new).
	self assert: (nonPortableObject isEmpty)
	!

!methodRemoval: PlayableCharacterTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:45:00'!
test27_NonPortableObjectIncludesPortableObjects"DE NONPORTABLE TESTS"

	| nonPortableObject letter |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter).
	self assert: (nonPortableObject includes: letter)
	!

!methodRemoval: PlayableCharacterTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:45:04'!
test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes "DE NONPORTABLE TESTS"

	| nonPortableObject letter anotherNonPortableObject scarf |
	
	letter _ (NoPointsPortableObject named: 'Letter' weighing: 10).
	scarf _ (NoPointsPortableObject named: 'Scarf' weighing: 12).
	anotherNonPortableObject _ NonPortableObject including: (OrderedCollection with: scarf).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: letter with: anotherNonPortableObject).
	self assert: (nonPortableObject includes: anotherNonPortableObject).
	self assert: (nonPortableObject includes: scarf)
	!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 21:46:17' prior: 50873302!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self failIfPositionOutOfBounds: aNewPosition.
	self failIfPositionIsAlreadyOccupied: aNewPosition.
	roomPositions at: aNewPosition put: aPlayableCharacter.
	roomPositions removeKey: aPosition
	! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:46:18'!
FAILURE!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:46:18'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:46:18'!
FAILURE!
!Room methodsFor: 'placing' stamp: 'fr 12/10/2020 21:46:37' prior: 50878855!
move: aPlayableCharacter from: aPosition to: aNewPosition 
	
	self place: aPlayableCharacter at: aNewPosition.
	roomPositions removeKey: aPosition
	! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:46:38'!
FAILURE!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:46:38'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:46:38'!
FAILURE!

!methodRemoval: Room #hasPlayableCharacterAt: stamp: 'fr 12/10/2020 21:46:56'!
hasPlayableCharacterAt: aPoint 
	
	^true!
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 21:47:05' prior: 50873792!
has: someObject at: aPoint 
	
	| objectAtPosition |
	objectAtPosition _ roomPositions at: aPoint ifAbsent: [^false].
	^objectAtPosition = someObject! !
!Room methodsFor: 'testing' stamp: 'fr 12/10/2020 21:47:11' prior: 50879243!
has: anObject at: aPoint 
	
	| objectAtPosition |
	objectAtPosition _ roomPositions at: aPoint ifAbsent: [^false].
	^objectAtPosition = anObject! !
!NonPortableObject methodsFor: 'take and remove' stamp: 'fr 12/10/2020 21:52:48' prior: 50877537!
removeTaken
	self halt.
	removable do: [:anObject | objects remove: anObject]! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:52:51'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:52:51'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:53:05'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:53:21'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:53:28'!
FAILURE!

----SNAPSHOT----(10 December 2020 21:53:41) CuisUniversity-4384.image priorSource: 17495061!
!NonPortableObject methodsFor: 'take and remove' stamp: 'fr 12/10/2020 21:54:07' prior: 50878607!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] on: Error do: [	self removeTaken]
! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:54:25'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:54:25'!
FAILURE!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:54:40'!
FAILURE!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:54:40'!
FAILURE!
!NonPortableObject methodsFor: 'take and remove' stamp: 'fr 12/10/2020 21:55:12' prior: 50879357!
toBeTakenBy: aPlayableCharacter 
	
	self objectsTakenBy: aPlayableCharacter.
		
	self removeTaken
! !

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:55:25'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:56:22' prior: 50878537!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
		].

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:56:23'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:56:23'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:56:32' prior: 50879481!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		].

	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 21:56:39' prior: 50879589!
test32

	"| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		]."

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:56:39'!
PASSED!

----SNAPSHOT----(10 December 2020 21:57:12) CuisUniversity-4384.image priorSource: 17526482!

----QUIT----(10 December 2020 21:57:42) CuisUniversity-4384.image priorSource: 17538476!

----STARTUP---- (10 December 2020 21:57:59) as /home/fede/Escritorio/cuis-vacio/CuisUniversity-4384.image!


----SNAPSHOT----(10 December 2020 21:58:03) CuisUniversity-4384.image priorSource: 17155564!

----End fileIn of /home/fede/Escritorio/cuis-segundo-parcial/ISW1-2020-2C-2doParcial.st----!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:58:38'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:58:39'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:58:39'!
PASSED!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:58:39'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:58:39'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:58:39'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:58:39'!
PASSED!
!NonPortableObject methodsFor: 'take and remove' stamp: 'fr 12/10/2020 21:59:15' prior: 50869161!
removeTaken

	removable do: [:anObject | objects remove: anObject]! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 21:59:16'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 21:59:16'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:00:27' prior: 50868475!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		].

	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:00:30' prior: 50869723!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
		].

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:00:31'!
PASSED!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:00:31'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:00:37' prior: 50869751!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball)
		].

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:00:38'!
FAILURE!
!NonPortableObject methodsFor: 'take' stamp: 'fr 12/10/2020 22:02:11' prior: 50869173!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] on: Error do: [removable do: [:anObject | objects remove: anObject]]
! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:02:14'!
FAILURE!

nonPortableObject!

nonPortableObject includes: ball!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:02:37'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:02:37'!
FAILURE!

nonPortableObject!

nonPortableObject includes: ball!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:03:37'!
FAILURE!

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:03:37'!
FAILURE!

nonPortableObject includes: ball!

playableCharacter backpackIncludes: ball!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:04:57' prior: 50869878!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball)
		].

	! !

!testRun: #PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:04:58'!
FAILURE!

nonPortableObject includes: ball!

playableCharacter backpackIncludes: ball!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:06:46' prior: 50869934!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball) "En el debugger lo que aparece luego del deny es falso y luego del assert es verdadero"
		].

	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:07:19'!
test32_ObjectsAreProperlyHandledWhenAnErrorHappens

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball) "En el debugger lo que aparece luego del deny es falso y luego del assert es verdadero"
		].

	! !

!methodRemoval: PlayableCharacterTest #test32 stamp: 'fr 12/10/2020 22:07:19'!
test32

	| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball) "En el debugger lo que aparece luego del deny es falso y luego del assert es verdadero"
		].

	!

----SNAPSHOT----(10 December 2020 22:08:08) CuisUniversity-4384.image priorSource: 17155761!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:08:51' prior: 50869997!
test32_ObjectsAreProperlyHandledWhenAnErrorHappens

	"| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball) 
		]."
	
	"En el debugger lo que aparece luego del deny es falso y luego del assert es verdadero"

	! !

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 22:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 22:08:52'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 22:08:52'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:08:52'!
FAILURE!

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:08:52'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:08:52'!
FAILURE!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:08:58'!
FAILURE!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:08:58'!
FAILURE!
!NonPortableObject methodsFor: 'take' stamp: 'fr 12/10/2020 22:09:13' prior: 50869907!
toBeTakenBy: aPlayableCharacter 
	
	[self objectsTakenBy: aPlayableCharacter] ensure: [removable do: [:anObject | objects remove: anObject]]
! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 22:09:15'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 22:09:18'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 22:09:18'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'fr 12/10/2020 22:09:49' prior: 50870062!
test32_ObjectsAreProperlyHandledWhenAnErrorHappens

	"| room nonPortableObject playableCharacter ball bed |
	
	room _ Room withDimensions: 1@2.
	ball _ (NoPointsPortableObject named: 'Ball' weighing: 50).
	bed _ (NoPointsPortableObject named: 'Bed' weighing: 70).
	nonPortableObject _ NonPortableObject including: (OrderedCollection with: ball with: bed).
	room place: nonPortableObject at: 0@1.
	playableCharacter _ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North into: room.
	self should: [playableCharacter take]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: Backpack 	maxWeightExceededErrorDescription.
			self deny: (nonPortableObject includes: ball).
			self assert: (playableCharacter backpackIncludes: ball) 
		]."
	
	"En el debugger con on: do: para asegurar el borrado lo que aparece luego del deny es falso y luego del assert es verdadero. Con el ensure: no funciona"

	! !

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:09:51'!
PASSED!

----SNAPSHOT----(10 December 2020 22:09:59) CuisUniversity-4384.image priorSource: 17229039!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #NonPortableObjectTest #test26_NonPortableObjectIsCreatedWithoutOtherObjectsInIt stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #NonPortableObjectTest #test27_NonPortableObjectIncludesPortableObjects stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #NonPortableObjectTest #test28_NonPortableObjectIncludesNonPortableObjectsAndEveryObjectItIncludes stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test11_CanNotPlacePlayableCharacterOutsideTheRoom stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterMovesNormallyWhileStayingInbounds stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCanNotMoveNorthOutOfBounds stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterCanNotMoveSouthOutOfBounds stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanNotMoveEastOutOfBounds stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCanNotMoveWestOutOfBounds stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test21_CanNotPlacePlayableCharacterOnAnOccupiedSpot stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test22_PlayableCharacterCanNotMoveToAnOccupiedSpot stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test23_PlayableCharacterCanNotTakeAnythingFromAnEmptySpot stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test24_PlayableCharacterCanTakeAPortableObjectFromTheRoom stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test25_PlayableCharacterDoesNotPutNonPortableObjectsInTheBackpack stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test29_PlayableCharacterCanTakePortableObjectsFromANonPortableObject stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test30_PlayableCharacterCanTakePortableObjectsFromNonPortableObjectsInsideANonPortableObject stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test31_TakenPortableObjectsAreRemovedFromNonPortableObjects stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #PlayableCharacterTest #test32_ObjectsAreProperlyHandledWhenAnErrorHappens stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #RoomTest #test17_RoomMustHaveAPositiveAmountOfRows stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #RoomTest #test18_RoomMustHaveAPositiveAmountOfColumns stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #RoomTest #test19_CanPlaceAnObjectInARoom stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

!testRun: #RoomTest #test20_CanNotPlaceTwoObjectsOnTheSameSpot stamp: 'fr 12/10/2020 22:13:44'!
PASSED!

----QUIT----(10 December 2020 22:14:33) CuisUniversity-4384.image priorSource: 17250237!