----STARTUP---- (10 December 2020 16:07:17) as /home/rodrigo/Documents/uba/ing1/cuis-linux64-parcial2/CuisUniversity-4384.image!


----End fileIn of /home/rodrigo/Documents/uba/ing1/cuis-linux64-parcial2/ISW1-2020-2C-2doParcial.st----!

Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 17:41:40'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Object subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 17:41:52'!
Object subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 17:41:58'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'nil' stamp: 'RL 12/10/2020 17:43:24'!
test01CantCreateRoomWithNegativeNumberOfColumns! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:43:53'!
test02CantCreateRoomWithNegativeNumberOfRows! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:44:03' prior: 50868674!
test01CantCreateRoomWithNegativeNumberOfColumns
	self! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:46:47' prior: 50868683!
test01CantCreateRoomWithNegativeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:47:39'!
test03CantCreateRoomWithNonWholeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:47:50'!
test04CantCreateRoomWithNonWholeNumberOfRows
	self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:48:21' prior: 50868678!
test02CantCreateRoomWithNegativeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:48:34' prior: 50868698!
test03CantCreateRoomWithNonWholeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: 1.0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:48:55' prior: 50868708!
test04CantCreateRoomWithNonWholeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:50:15'!
ERROR!

!testRun: #RoomTest #test01CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:50:15'!
ERROR!
!Room class methodsFor: 'no messages' stamp: 'RL 12/10/2020 17:51:11'!
withRows: numberOfRows byColumns: numberOfColumns! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:52:00'!
test00CantCreateRoomWithNegativeNumberOfRows
	"self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]"! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:52:13'!
test00CantCreateRoomWithNegativeNumberOfColumns
	"self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]"! !

!methodRemoval: RoomTest #test01CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:52:22'!
test01CantCreateRoomWithNegativeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]!

!methodRemoval: RoomTest #test02CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 17:52:26'!
test02CantCreateRoomWithNegativeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:52:38'!
test00CantCreateRoomWithNonWholeNumberOfColumns
	"self
		should: [Room withRows: 5 byColumns: 1.0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]"! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:52:47'!
test00CantCreateRoomWithNonWholeNumberOfRows
	"self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]"! !

!methodRemoval: RoomTest #test03CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 17:52:52'!
test03CantCreateRoomWithNonWholeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: 1.0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]!

!methodRemoval: RoomTest #test04CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 17:52:54'!
test04CantCreateRoomWithNonWholeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:53:23'!
test01CantCreateRoomWithZeroColumns
	self
		should: [Room withRows: 5 byColumns: 0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 17:53:46'!
FAILURE!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 17:53:46'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:54:25' prior: 50868757!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [  ]! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:55:45' prior: 50868861!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [ ^self error: '' ]! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:56:15'!
invalidNumberOfColumnsErrorMessage
	^'Invalid number of columns'! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:56:28' prior: 50868867!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 17:56:35'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:56:38'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 17:56:38'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 17:56:38'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 17:56:38'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 17:56:38'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:57:00'!
test01CantCreateRoomWithZeroRows
	self
		should: [Room withRows: 0 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test00CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:57:08'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 17:57:08'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 17:57:08'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 17:57:08'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 17:57:08'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 17:57:08'!
FAILURE!

!testRun: #RoomTest #test01CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 17:57:08'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:57:15'!
test02CantCreateRoomWithZeroRows
	self
		should: [Room withRows: 0 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test01CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 17:57:15'!
test01CantCreateRoomWithZeroRows
	self
		should: [Room withRows: 0 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:57:46' prior: 50868879!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows = 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:57:55'!
invalidNumberOfRowsErrorMessage
	^'Invalid number of rows'! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:58:04' prior: 50868958!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows = 0 ifTrue: [ ^self error: self invalidNumberOfRowsErrorMessage ].! !

!testRun: #RoomTest #test00CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:58:10'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 17:58:10'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 17:58:10'!
PASSED!

!testRun: #RoomTest #test00CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 17:58:10'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 17:58:10'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 17:58:10'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:58:32'!
test03CantCreateRoomWithNegativeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:58:36'!
FAILURE!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:58:36'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:59:37' prior: 50868973!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows = 0 ifTrue: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns < 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].! !

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:59:43'!
PASSED!

!methodRemoval: RoomTest #test00CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 17:59:52'!
test00CantCreateRoomWithNegativeNumberOfColumns
	"self
		should: [Room withRows: 5 byColumns: -1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]"!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 17:59:58'!
test04CantCreateRoomWithNegativeNumberOfRows
	"self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]"! !

!methodRemoval: RoomTest #test00CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 17:59:58'!
test00CantCreateRoomWithNegativeNumberOfRows
	"self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]"!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:00:04' prior: 50869048!
test04CantCreateRoomWithNegativeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:00:17'!
test05CantCreateRoomWithNonWholeNumberOfColumns
	"self
		should: [Room withRows: 5 byColumns: 1.0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]"! !

!methodRemoval: RoomTest #test00CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:00:17'!
test00CantCreateRoomWithNonWholeNumberOfColumns
	"self
		should: [Room withRows: 5 byColumns: 1.0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]"!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:00:22'!
test06CantCreateRoomWithNonWholeNumberOfRows
	"self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]"! !

!methodRemoval: RoomTest #test00CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:00:22'!
test00CantCreateRoomWithNonWholeNumberOfRows
	"self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]"!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:00:33' prior: 50869079!
test05CantCreateRoomWithNonWholeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: 1.0 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:00:37' prior: 50869100!
test06CantCreateRoomWithNonWholeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:00:40'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:00:40'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:00:40'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:00:40'!
FAILURE!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:00:40'!
FAILURE!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:00:40'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:01:47' prior: 50869021!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns = 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows = 0 ifTrue: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns < 0 ifTrue: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows < 0 ifTrue: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:01:52'!
PASSED!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:04:46' prior: 50869162!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:04:56'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:04:56'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:04:56'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:04:56'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:04:56'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:04:56'!
PASSED!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:05:21' prior: 50869203!
withRows: numberOfRows byColumns: numberOfColumns

	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:05:27' prior: 50869240!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:20:09'!
test07CantPlacePlayableCharacterOnLowerColumnThan0
	| player room |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:21:25' prior: 50869273!
test07CantPlacePlayableCharacterOnLowerColumnThan0
	| player room |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

Object subclass: #TestObjectFactory
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #TestObjectFactory category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:21:41'!
Object subclass: #TestObjectFactory
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!TestObjectFactory methodsFor: 'nil' stamp: 'RL 12/10/2020 18:21:58'!
defaultBackpack! !
!TestObjectFactory methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:22:23'!
defaultRoom
	^Room withRows: 5 byColumns: 5.! !

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:22:58'!
TestCase subclass: #RoomTest
	instanceVariableNames: 'testObjectFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:22:55' overrides: 16927572!
setUp
	testObjectFactory := TestObjectFactory new.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:23:11' prior: 50869285!
test07CantPlacePlayableCharacterOnLowerColumnThan0
	| player room |
	room := testObjectFactory defaultRoom.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!TestObjectFactory methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:23:35' prior: 50869311!
defaultBackpack
	^Backpack containingUpTo: 100 limitingPointsTo: 100 ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:25:04' prior: 50869333!
test07CantPlacePlayableCharacterOnLowerColumnThan0
	| player room |
	room := testObjectFactory defaultRoom.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:26:34'!
test07CantPlacePlayableCharacterOnYCoordinateLowerThan0
	| player room |
	room := testObjectFactory defaultRoom.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test07CantPlacePlayableCharacterOnLowerColumnThan0 stamp: 'RL 12/10/2020 18:26:42'!
test07CantPlacePlayableCharacterOnLowerColumnThan0
	| player room |
	room := testObjectFactory defaultRoom.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:32:39' prior: 50869368!
test07CantPlacePlayableCharacterOnYCoordinateLowerThan0
	| player |
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:34:50'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

----End fileIn of /home/rodrigo/Documents/uba/ing1/2020-2c/19-Portfolio2/Portfolio2-Solucion.st----!

----End fileIn of /home/rodrigo/Documents/uba/ing1/2020-2c/19-Portfolio2/Portfolio2-Solucion-Tests.st----!

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:38:46'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:40:23'!
test07CantPlacePortableObjectOnYCoordinateLowerThan0
	| object room |
	room := testObjectFactory defaultRoom.
	object := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:40:41' prior: 50871347!
test07CantPlacePortableObjectOnYCoordinateLowerThan0
	| object room |
	room := testObjectFactory defaultRoom.
	object := ''
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test07CantPlacePlayableCharacterOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:42:10'!
test07CantPlacePlayableCharacterOnYCoordinateLowerThan0
	| player |
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@1 heading: #North. 
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:44:16'!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := testObjectFactory defaultRoom.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room placeObjectOn: 1@-1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:44:36' prior: 50871387!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := testObjectFactory defaultRoom.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 1@-1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test07CantPlacePortableObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:44:44'!
test07CantPlacePortableObjectOnYCoordinateLowerThan0
	| object room |
	room := testObjectFactory defaultRoom.
	object := ''
	self
		should: []
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]!
!Room methodsFor: 'nil' stamp: 'RL 12/10/2020 18:45:25'!
place: anObject on: aPosition
	! !

1@2!

self first!

self first!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:47:50'!
invalidYCoordinateErrorMessage
	^'Invalid Y coordinate'! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:47:57'!
invalidXCoordinateErrorMessage
	^'Invalid X coordinate'! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:48:57' prior: 50871426!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].! !

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:49:01'!
FAILURE!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:49:01'!
FAILURE!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:50:00'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:50:00'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:50:00'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:50:00'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:50:00'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:50:00'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:50:00'!
FAILURE!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:50:00'!
FAILURE!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:50:19'!
FAILURE!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:50:19'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:51:06' prior: 50871401!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 1@-1 ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:51:26'!
FAILURE!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:51:26'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:51:43' prior: 50871488!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 1@-1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:51:46'!
ERROR!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:51:46'!
ERROR!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:52:28' prior: 50869257!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	^Room new.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:52:33'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:52:40'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:52:40'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:52:40'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:52:40'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:52:40'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:52:40'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:52:40'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:52:57'!
test07CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:53:08'!
test08CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test07CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:53:08'!
test07CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:53:12'!
FAILURE!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:53:12'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:53:31' prior: 50871441!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:54:52'!
test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 1@-1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:55:06' prior: 50871656!
test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 1@6 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:55:15' prior: 50871609!
test08CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:55:21' prior: 50871646!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 18:55:25'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 18:55:25'!
FAILURE!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 18:55:25'!
FAILURE!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:56:27'!
Object subclass: #Room
	instanceVariableNames: 'numberOfRows'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:56:28'!
Object subclass: #Room
	instanceVariableNames: 'numberOfRows numberOfColumns'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:56:24' prior: 50871703!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	aPosition y > numberOfRows-1 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x > numberOfColumns-1 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 18:56:59'!
ERROR!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 18:56:59'!
ERROR!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:57:46' prior: 50871531!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:58:43'!
Object subclass: #Room
	instanceVariableNames: 'rows numberOfColumns'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:58:43' prior: 50871763!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	aPosition y > rows-1 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x > numberOfColumns-1 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 18:58:52'!
Object subclass: #Room
	instanceVariableNames: 'rows columns'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:58:52' prior: 50871814!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	aPosition y > rows-1 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x > columns-1 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:59:32'!
initializewithRows: numberOfRows byColumns: numberOfColumns
	rows := numberOfRows.
	columns := numberOfColumns.! !

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 18:59:41'!
ERROR!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 18:59:41'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 18:59:56' prior: 50871838!
place: anObject on: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	aPosition y > (rows-1) ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x > (columns-1) ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:00:06'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:00:09'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:00:09'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:00:29'!
test09CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 6@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:00:37'!
test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 6@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test09CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:00:37'!
test09CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object on: 6@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:00:45'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:00:45'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:02:20' prior: 50871868!
place: anObject on: aPosition
	"aPosition y < 0 ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	aPosition y > (rows-1) ifTrue: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	aPosition x > (columns-1) ifTrue: [ ^self class error: self class invalidXCoordinateErrorMessage ]."
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:02:23'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:02:23'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:03:04' prior: 50871999!
place: anObject on: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:07:53'!
test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object on: 2@2.
	
	self assert: (room has: object at: 2@2).
	self assert: (room objectAt: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:08:15' prior: 50872068!
test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object on: 2@2.
	
	self assert: (room hasObjectAt: 2@2).
	self assert: (room objectAt: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:09:51' prior: 50872082!
test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object on: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:09:55'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:09:55'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 19:10:44'!
Object subclass: #Room
	instanceVariableNames: 'rows columns objects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:10:42' prior: 50872057!
place: anObject on: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	objects add: aPosition->anObject.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:11:02' prior: 50871854!
initializewithRows: numberOfRows byColumns: numberOfColumns
	rows := numberOfRows.
	columns := numberOfColumns.
	objects := Dictionary new.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:11:47'!
objectAt: aPosition
	^objects at: aPosition.! !

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:11:53'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:11:56'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:11:56'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:14:56'!
test11CantPlaceObjectOverAnotherObject
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object on: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:16' prior: 50872191!
test11CantPlaceObjectOverAnotherObject
	| object1 room object |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 on: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42'!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	objects add: aPosition->anObject.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42' prior: 50871688!
test08CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42' prior: 50871933!
test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 6@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42' prior: 50871672!
test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 1@6 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42' prior: 50871509!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 1@-1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42' prior: 50872096!
test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:15:42' prior: 50872202!
test11CantPlaceObjectOverAnotherObject
	| object1 room object |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !

!methodRemoval: Room #place:on: stamp: 'RL 12/10/2020 19:15:42'!
place: anObject on: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	objects add: aPosition->anObject.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:16:42'!
test12CantPlaceObjectOverAnotherObject
	| object1 room object |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !

!methodRemoval: RoomTest #test11CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:16:42'!
test11CantPlaceObjectOverAnotherObject
	| object1 room object |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:18:22' prior: 50872323!
test12CantPlaceObjectOverAnotherObject
	| object1 room object object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	room place: object2 at: 2@2.
	
	self assert: (room objectAt: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:20:50' prior: 50872346!
test12CantPlaceObjectOverAnotherObject
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	room place: object2 at: 2@2.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room objectAt: 2@2) equals: object1. ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:21:25'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:21:25'!
FAILURE!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:21:25'!
FAILURE!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:21:51'!
FAILURE!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:21:51'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:22:20'!
takenPositionErrorMessage
	^'Position is taken'! !

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:22:32'!
FAILURE!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:22:32'!
FAILURE!

room place: object2 at: 2@2.!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:23:53' prior: 50872213!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	(objects keys includes: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	objects add: aPosition->anObject.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:24:01'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:24:01'!
ERROR!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:24:01'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:24:24' prior: 50872361!
test12CantPlaceObjectOverAnotherObject
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room objectAt: 2@2) equals: object1. ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:24:27'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:24:27'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:26:00' overrides: 16880774!
at: aPosition
	^objects at: aPosition.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:26:00' prior: 50872288!
test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns
	| object room |
	room := Room withRows: 5 byColumns: 5.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 2@2.
	
	self assert: (room at: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:26:00' prior: 50872506!
test12CantPlaceObjectOverAnotherObject
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room at: 2@2) equals: object1. ]! !

!methodRemoval: Room #objectAt: stamp: 'RL 12/10/2020 19:26:00'!
objectAt: aPosition
	^objects at: aPosition.!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 19:26:35'!
Object subclass: #Room
	instanceVariableNames: 'rows columns takenPositions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:26:35' prior: 50872568 overrides: 16880774!
at: aPosition
	^takenPositions at: aPosition.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:26:35' prior: 50872445!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	(takenPositions keys includes: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	takenPositions add: aPosition->anObject.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:26:35' prior: 50872137!
initializewithRows: numberOfRows byColumns: numberOfColumns
	rows := numberOfRows.
	columns := numberOfColumns.
	takenPositions := Dictionary new.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 19:29:03'!
Object subclass: #Room
	instanceVariableNames: 'rows columns objects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:29:03' prior: 50872617 overrides: 16880774!
at: aPosition
	^objects at: aPosition.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:29:03' prior: 50872622!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	(objects keys includes: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	objects add: aPosition->anObject.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:29:03' prior: 50872639!
initializewithRows: numberOfRows byColumns: numberOfColumns
	rows := numberOfRows.
	columns := numberOfColumns.
	objects := Dictionary new.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 19:29:24'!
Object subclass: #Room
	instanceVariableNames: 'rows columns roomObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:29:24' prior: 50872655 overrides: 16880774!
at: aPosition
	^roomObjects at: aPosition.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:29:24' prior: 50872660!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	(roomObjects keys includes: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	roomObjects add: aPosition->anObject.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:29:24' prior: 50872676!
initializewithRows: numberOfRows byColumns: numberOfColumns
	rows := numberOfRows.
	columns := numberOfColumns.
	roomObjects := Dictionary new.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:33:19'!
test13CantMovePlayerXCoordinateLowerThan0
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room at: 2@2) equals: object1. ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:33:54'!
test13CantMovePlayerYCoordinateLowerThan0
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room at: 2@2) equals: object1. ]! !

!methodRemoval: RoomTest #test13CantMovePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:33:54'!
test13CantMovePlayerXCoordinateLowerThan0
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room at: 2@2) equals: object1. ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:36:25' prior: 50872740!
test13CantMovePlayerYCoordinateLowerThan0
	| object1 room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 2@2.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room at: 2@2) equals: object1. ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:38:41' prior: 50872780!
test13CantMovePlayerYCoordinateLowerThan0
	| room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 0@0.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText. ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:49:50'!
test13PlayerPositionAndHeadingRemainCorrectAfterPlacement
	| room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 0@0.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText. ]! !

!methodRemoval: RoomTest #test13CantMovePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:49:50'!
test13CantMovePlayerYCoordinateLowerThan0
	| room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 0@0.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText. ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:51:19' prior: 50872813!
test13PlayerPositionAndHeadingRemainCorrectAfterPlacement
	| room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 0@0.
	
	self assert: (room playerAt: 0@0 heading: #West).! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:51:57'!
playerAt: aPosition heading: aDirection! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'RL 12/10/2020 19:52:22'!
Object subclass: #Room
	instanceVariableNames: 'rows columns roomObjects player'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:52:21' prior: 50872857!
playerAt: aPosition heading: aCardinalPoint
	^player! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:52:44' prior: 50872870!
playerAt: aPosition heading: aCardinalPoint
	^player isAt: aPosition heading: aCardinalPoint! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:56:18'!
PASSED!

!testRun: #RoomTest #test13PlayerPositionAndHeadingRemainCorrectAfterPlacement stamp: 'RL 12/10/2020 19:56:18'!
ERROR!

!testRun: #RoomTest #test13PlayerPositionAndHeadingRemainCorrectAfterPlacement stamp: 'RL 12/10/2020 19:56:18'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:56:29' prior: 50872845!
test13PlayerPositionAndHeadingRemainCorrectAfterPlacement
	"| room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 0@0.
	
	self assert: (room playerAt: 0@0 heading: #West)."! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 19:56:32'!
PASSED!

!testRun: #RoomTest #test13PlayerPositionAndHeadingRemainCorrectAfterPlacement stamp: 'RL 12/10/2020 19:56:32'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 19:59:32'!
test13CantInitializePlayerYCoordinateLowerThan0
	| room player |
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@-1 heading: #West.
	room := Room withRows: 5 byColumns: 5 with: player.
	
	self assert: (room playerAt: 0@0 heading: #West).! !

!methodRemoval: RoomTest #test13PlayerPositionAndHeadingRemainCorrectAfterPlacement stamp: 'RL 12/10/2020 19:59:37'!
test13PlayerPositionAndHeadingRemainCorrectAfterPlacement
	"| room player |
	room := Room withRows: 5 byColumns: 5.
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West.
	room place: player at: 0@0.
	
	self assert: (room playerAt: 0@0 heading: #West)."!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:00:57' prior: 50872988!
test13CantInitializePlayerYCoordinateLowerThan0
	| player |
	player := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@-1 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:02:13'!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns.! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:03:51' prior: 50873027!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	aPlayer 
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:04:08' prior: 50873047!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	aPlayer yIsLowerThan0.
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:04:19'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:19'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:19'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:38'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:38'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:04:51' prior: 50873013!
test13CantInitializePlayerYCoordinateLowerThan0
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@-1 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:55'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:04:55'!
ERROR!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:05:17'!
invalidPlayerPositionErrorMessage
	^'Invalid player position'! !

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:05:26'!
FAILURE!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:05:26'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:05:39' prior: 50873144!
test13CantInitializePlayerYCoordinateLowerThan0
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@-1 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:05:41'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:05:41'!
ERROR!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:05:56'!
yIsLowerThan0
	self shouldBeImplemented.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:06:46' prior: 50873199!
yIsLowerThan0
	^position y < 0! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:06:59'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:06:59'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:06:59'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:07:39'!
initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	rows := numberOfRows.
	columns := numberOfColumns.
	roomObjects := Dictionary new.
	player := aPlayer.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:07:42'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:07:42'!
FAILURE!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:07:42'!
FAILURE!

aPlayer!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:09:01' prior: 50873068!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	aPlayer yIsLowerThan0 ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:09:05'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:09:23'!
test14CantInitializePlayerXCoordinateLowerThan0
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: -1@1 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:09:26'!
FAILURE!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:09:26'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:11:31' prior: 50873314!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	aPlayer yIsLowerThan: 0 ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	aPlayer xIsLowerThan: 0 ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	aPlayer yIsBiggerThan: numberOfRows-1 ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	aPlayer xIsBiggerThan: numberOfColumns-1 ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:12:06' prior: 50873363!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	(aPlayer yIsLowerThan: 0) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer xIsLowerThan: 0) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer yIsBiggerThan: numberOfRows-1) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer xIsBiggerThan: numberOfColumns-1) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:12:43'!
yIsLowerThan: aYCoordinate
	^position y < aYCoordinate! !

!methodRemoval: PlayableCharacter #yIsLowerThan0 stamp: 'RL 12/10/2020 20:12:47'!
yIsLowerThan0
	^position y < 0!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:12:58'!
xIsLowerThan: aXCoordinate
	^position x < aXCoordinate! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:13:16'!
xIsBiggerThan: aXCoordinate
	^position x > aXCoordinate! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:13:26'!
yIsBiggerThan: aYCoordinate
	^position y > aYCoordinate! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:14:25'!
test15CantInitializePlayerYCoordinateHigherThanNumberOfRows
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@-1 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:14:41' prior: 50873451!
test15CantInitializePlayerYCoordinateHigherThanNumberOfRows
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@6 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:14:55'!
test15CantInitializePlayerXCoordinateHigherThanNumberOfColumns
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 6@0 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:15:03'!
test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 6@0 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test15CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:15:03'!
test15CantInitializePlayerXCoordinateHigherThanNumberOfColumns
	| player |
	player := PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 6@0 heading: #West.
	
	self
		should: [ Room withRows: 5 byColumns: 5 with: player ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:15:26'!
xIsHigherThan: aXCoordinate
	^position x > aXCoordinate! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:15:26' prior: 50873395!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	(aPlayer yIsLowerThan: 0) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer xIsLowerThan: 0) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer yIsBiggerThan: numberOfRows-1) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer xIsHigherThan: numberOfColumns-1) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !

!methodRemoval: PlayableCharacter #xIsBiggerThan: stamp: 'RL 12/10/2020 20:15:26'!
xIsBiggerThan: aXCoordinate
	^position x > aXCoordinate!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:15:38'!
yIsHigherThan: aYCoordinate
	^position y > aYCoordinate! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:15:38' prior: 50873536!
withRows: numberOfRows byColumns: numberOfColumns with: aPlayer
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	(aPlayer yIsLowerThan: 0) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer xIsLowerThan: 0) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer yIsHigherThan: numberOfRows-1) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	(aPlayer xIsHigherThan: numberOfColumns-1) ifTrue: [ ^self error: self invalidPlayerPositionErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns with: aPlayer.! !

!methodRemoval: PlayableCharacter #yIsBiggerThan: stamp: 'RL 12/10/2020 20:15:38'!
yIsBiggerThan: aYCoordinate
	^position y > aYCoordinate!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:15:46'!
PASSED!

!methodRemoval: Room #initializewithRows:byColumns: stamp: 'RL 12/10/2020 20:15:59'!
initializewithRows: numberOfRows byColumns: numberOfColumns
	rows := numberOfRows.
	columns := numberOfColumns.
	roomObjects := Dictionary new.!

!methodRemoval: Room class #withRows:byColumns: stamp: 'RL 12/10/2020 20:16:06'!
withRows: numberOfRows byColumns: numberOfColumns
	numberOfColumns strictlyPositive ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows strictlyPositive ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	numberOfColumns isInteger ifFalse: [ ^self error: self invalidNumberOfColumnsErrorMessage ].
	numberOfRows isInteger ifFalse: [ ^self error: self invalidNumberOfRowsErrorMessage ].
	
	^Room new initializewithRows: numberOfRows byColumns: numberOfColumns.!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:16:15'!
FAILURE!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:16:15'!
FAILURE!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:16:15'!
FAILURE!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:16:15'!
FAILURE!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:16:15'!
FAILURE!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:16:15'!
FAILURE!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:16:15'!
ERROR!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:16:15'!
ERROR!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:16:15'!
ERROR!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:16:15'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:16:15'!
ERROR!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:16:15'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:16:15'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:16:15'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:16:15'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:16:15'!
PASSED!
!TestObjectFactory methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:16:48'!
defaultPlayer
	^PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #West! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:07' prior: 50868844!
test01CantCreateRoomWithZeroColumns
	self
		should: [Room withRows: 5 byColumns: 0 with: testObjectFactory defaultPlayer ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:12' prior: 50868938!
test02CantCreateRoomWithZeroRows
	self
		should: [Room withRows: 0 byColumns: 5 with: testObjectFactory defaultPlayer ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:16' prior: 50869003!
test03CantCreateRoomWithNegativeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: -1 with: testObjectFactory defaultPlayer ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:20' prior: 50869069!
test04CantCreateRoomWithNegativeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 with: testObjectFactory defaultPlayer ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:23' prior: 50869121!
test05CantCreateRoomWithNonWholeNumberOfColumns
	self
		should: [Room withRows: 5 byColumns: 1.0 with: testObjectFactory defaultPlayer ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfColumnsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:26' prior: 50869132!
test06CantCreateRoomWithNonWholeNumberOfRows
	self
		should: [Room withRows: -1 byColumns: 5 with: testObjectFactory defaultPlayer ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: Room invalidNumberOfRowsErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:34' prior: 50872273!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 1@-1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:40' prior: 50872226!
test08CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:51' prior: 50872257!
test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 1@6 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidYCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:54' prior: 50872241!
test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 6@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidXCoordinateErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:17:57' prior: 50872573!
test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 2@2.
	
	self assert: (room at: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:18:02' prior: 50872585!
test12CantPlaceObjectOverAnotherObject
	| object1 room object2 |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object1 := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object1 at: 2@2.
	object2 := NoPointsPortableObject named: 'left-handed hammer' weighing: 40.
	
	self
		should: [ room place: object2 at: 2@2. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText.
			self assert: (room at: 2@2) equals: object1. ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:18:08'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:18:08'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:19:44'!
test17CantPlaceObjectOverPlayer
	| room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	
	self
		should: [ ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:20:28' prior: 50873986!
test17CantPlaceObjectOverPlayer
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	
	self
		should: [ room place: object at: 0@0 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidPlayerPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:20:40' prior: 50873999!
test17CantPlaceObjectOverPlayer
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	
	self
		should: [ room place: object at: 0@0 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:20:45'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:20:45'!
FAILURE!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:20:45'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:21:40' prior: 50872697!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	(player isAt: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	(roomObjects keys includes: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	roomObjects add: aPosition->anObject.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:21:50'!
ERROR!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:21:50'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:21:50'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:21:50'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:22:07'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:22:07'!
ERROR!
!PlayableCharacter methodsFor: 'testing' stamp: 'RL 12/10/2020 20:22:27'!
isAt: aPosition

	^position = aPosition! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:22:34'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:22:34'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:23:49' prior: 50872692 overrides: 16880774!
at: aPosition
	(player isAt: aPosition) ifTrue: [^player].
	^roomObjects at: aPosition.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:26:38'!
test17CantMovePlayerOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:26:43'!
test18CantMovePlayerOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test17CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:26:43'!
test17CantMovePlayerOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [  ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText ]!
!TestObjectFactory methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:26:51' prior: 50873753!
defaultPlayer
	^PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:26:57'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:26:57'!
FAILURE!

!testRun: #RoomTest #test18CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:26:57'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:27:22' prior: 50874264!
test18CantMovePlayerOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room takenPositionErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:27:36' prior: 50874368!
test18CantMovePlayerOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test18CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:27:47'!
ERROR!

!testRun: #RoomTest #test18CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:27:47'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:28:00'!
movePlayerForward
	self shouldBeImplemented.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:31:11' prior: 50874407!
movePlayerForward
	roomObjects includesKey: ''! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:31:21' prior: 50874093!
place: anObject at: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].
	
	(player isAt: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	roomObjects add: aPosition->anObject.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:32:31' prior: 50874412!
movePlayerForward
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class  ]! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:33:05'!
cantMovePlayerErrorMessage
	^'Cannot move player in that direction'! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:33:25' prior: 50874436!
movePlayerForward
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:33:51' prior: 50874448!
movePlayerForward
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !
!PlayableCharacter methodsFor: 'nil' stamp: 'RL 12/10/2020 20:34:02'!
nextForwardPosition! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:34:31' prior: 50874464!
nextForwardPosition
	^position + heading forwardPoint! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'RL 12/10/2020 20:34:40'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:34:50'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:34:50'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:35:27'!
test18CantMovePlayerForwardOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test18CantMovePlayerOverObject stamp: 'RL 12/10/2020 20:35:27'!
test18CantMovePlayerOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:35:44'!
test19CantMovePlayerBackwardsOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:36:28' prior: 50874605!
test19CantMovePlayerBackwardsOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: (PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@2 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:37:21'!
movePlayerBackwards
	(roomObjects includesKey: player nextBackwardsPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveBackward.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:37:33'!
nextBackwardsPosition
	^position + heading forwardPoint! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:37:47' prior: 50874649!
nextBackwardsPosition
	^position - heading forwardPoint ! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:37:56'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:37:56'!
ERROR!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:37:56'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:38:12' prior: 50874622!
test19CantMovePlayerBackwardsOverObject
	| room object |
	room := Room withRows: 5 byColumns: 5 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@2 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:38:15'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:38:15'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:42:04'!
test20CantMovePlayerForwardYCoordinateLowerThan0
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #South).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:42:53' prior: 50874456!
movePlayerForward
	player nextForwardPosition y > 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:43:05'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:05'!
FAILURE!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:05'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:43:27' prior: 50874813!
test20CantMovePlayerForwardYCoordinateLowerThan0
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #South).
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:30'!
FAILURE!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:30'!
FAILURE!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:41'!
FAILURE!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:43:41'!
FAILURE!

room!

room!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:44:31' prior: 50874829!
movePlayerForward
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:44:39'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:45:07'!
test21CantMovePlayerForwardXCoordinateLowerThan0
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #West).
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:46:41'!
test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:46:58'!
test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #East).
	
	self
		should: [ room movePlayerForward ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:47:36' prior: 50874944!
movePlayerForward
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y < rows-1 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < columns-1 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:47:40'!
ERROR!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:40'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:47:40'!
ERROR!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:47:40'!
ERROR!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:47:45'!
ERROR!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:47:45'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:47:45'!
ERROR!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:47:45'!
ERROR!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:47:52'!
ERROR!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:47:52'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:48:08' prior: 50875071!
movePlayerForward
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y < (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:48:11'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:11'!
FAILURE!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:48:11'!
FAILURE!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:17'!
FAILURE!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:17'!
FAILURE!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:33'!
FAILURE!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:48:33'!
FAILURE!

room!

player nextForwardPosition y !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:49:44' prior: 50875260!
movePlayerForward
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:49:48'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:49:48'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:50:36'!
test24CantMovePlayerBackwardsYCoordinateLowerThan0
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:51:01'!
test25CantMovePlayerBackwardsXCoordinateLowerThan0
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #East).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:51:15'!
test22CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #South).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:51:22'!
test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #South).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test22CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:51:23'!
test22CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #South).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:51:39'!
test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #West).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:51:51'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
FAILURE!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:51:51'!
FAILURE!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:51:51'!
FAILURE!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:51:51'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:52:16' prior: 50874640!
movePlayerBackwards
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextBackwardsPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveBackward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 20:52:19'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 20:52:19'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:57:06'!
test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #West).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:02:24'!
validatePosition: aPosition
	aPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	aPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	aPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:02:51' prior: 50875674!
movePlayerBackwards
	self validatePosition: player nextForwardPosition.
	player moveBackward.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:03:07' prior: 50875379!
movePlayerForward
	self validatePosition: player nextBackwardsPosition.
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:03:12'!
FAILURE!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:03:12'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:03:12'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:52:16' prior: 50875826!
movePlayerBackwards
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextBackwardsPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveBackward.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 20:49:44' prior: 50875832!
movePlayerForward
	player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveForward.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:04:09' prior: 50875941!
movePlayerBackwards
	player nextBackwardsPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextBackwardsPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextBackwardsPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextBackwardsPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextBackwardsPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player moveBackward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:13'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:04:51' prior: 50875963!
movePlayerForward
	self validatePosition: player nextForwardPosition.
	"player nextForwardPosition y < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition y > (rows-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	player nextForwardPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: player nextForwardPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ]."
	player moveForward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:04:55'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:05:09' prior: 50876107!
movePlayerForward
	self validatePosition: player nextForwardPosition.
	player moveForward.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:05:19' prior: 50875985!
movePlayerBackwards
	self validatePosition: player nextBackwardsPosition.
	player moveBackward.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:05:22'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:06:47' prior: 50875807!
validatePosition: aPosition
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	aPosition x < 0 ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	aPosition x > (columns-1) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:06:50'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:07:09' prior: 50876342!
validatePosition: aPosition
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:07:13'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:07:52'!
validatePositionForPlayerMovement: aPosition
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:07:52' prior: 50876236!
movePlayerBackwards
	self validatePositionForPlayerMovement: player nextBackwardsPosition.
	player moveBackward.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:07:52' prior: 50876230!
movePlayerForward
	self validatePositionForPlayerMovement: player nextForwardPosition.
	player moveForward.! !

!methodRemoval: Room #validatePosition: stamp: 'RL 12/10/2020 21:07:52'!
validatePosition: aPosition
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:10:00'!
validatePositionForObjectPlacement: aPosition
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidYCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidXCoordinateErrorMessage ].

	(player isAt: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:10:50'!
validatePositionOnRoom: aPosition ifFalse: aBlock
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: aBlock value.
	(aPosition x between: 0 and: (columns-1)) ifFalse: aBlock value.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:11:03'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:11:45' prior: 50876572!
validatePositionForPlayerMovement: aPosition
	self validatePositionOnRoom: aPosition ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:12:26' prior: 50876614!
validatePositionForObjectPlacement: aPosition
	self validatePositionOnRoom: aPosition ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ ^self class error: self class invalidCoordinateErrorMessage ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ ^self class error: self class invalidCoordinateErrorMessage ].

	(player isAt: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:12:45'!
invalidCoordinatesErrorMessage
	^'Invalid coordinates'! !

!methodRemoval: Room class #invalidXCoordinateErrorMessage stamp: 'RL 12/10/2020 21:12:50'!
invalidXCoordinateErrorMessage
	^'Invalid X coordinate'!

!methodRemoval: Room class #invalidYCoordinateErrorMessage stamp: 'RL 12/10/2020 21:12:54'!
invalidYCoordinateErrorMessage
	^'Invalid Y coordinate'!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:13:23' prior: 50876753!
validatePositionForObjectPlacement: aPosition

	self validatePositionOnRoom: aPosition ifFalse: [ ^self class error: self class invalidCoordinatesErrorMessage ].
	(player isAt: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class takenPositionErrorMessage ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:13:30' prior: 50876741!
validatePositionForPlayerMovement: aPosition

	self validatePositionOnRoom: aPosition ifFalse: [ ^self class error: self class cantMovePlayerErrorMessage ].
	(roomObjects includesKey: aPosition) ifTrue: [ ^self class error: self class cantMovePlayerErrorMessage ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
ERROR!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
ERROR!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:13:39'!
ERROR!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:13:39'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:13:49' prior: 50873830!
test07CantPlaceObjectOnYCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 1@-1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidCoordinatesErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:13:51' prior: 50873846!
test08CantPlaceObjectOnXCoordinateLowerThan0
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: -1@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidCoordinatesErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:13:54' prior: 50873862!
test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 1@6 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidCoordinatesErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:13:57' prior: 50873879!
test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns
	| object room |
	room := Room withRows: 5 byColumns: 5 with: testObjectFactory defaultPlayer.
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	self
		should: [ room place: object at: 6@1 ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room invalidCoordinatesErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
ERROR!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
ERROR!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:00'!
ERROR!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:00'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
ERROR!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
ERROR!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:17'!
ERROR!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:14:17'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:24'!
ERROR!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:24'!
ERROR!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:37'!
ERROR!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:14:37'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:15:21' prior: 50874417!
place: anObject at: aPosition
	
	self validatePositionForObjectPlacement: aPosition.
	
	roomObjects add: aPosition->anObject.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:15:24' prior: 50877193!
place: anObject at: aPosition
	
	self validatePositionForObjectPlacement: aPosition.	
	roomObjects add: aPosition->anObject.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:15:26'!
ERROR!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:15:26'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:15:26'!
FAILURE!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:15:26'!
ERROR!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:15:26'!
ERROR!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:15:26'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:15:42'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:15:42'!
ERROR!

rows!

(aPosition y between: 0 and: (rows-1))!

rows!

aPosition y!

aPosition y between: 0 and: (rows-1)!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:18:16'!
ERROR!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:18:16'!
ERROR!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:18:16'!
FAILURE!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:18:16'!
ERROR!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:18:16'!
ERROR!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:18:16'!
PASSED!

testObjectFactory defaultPlayer!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:19:55'!
ERROR!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:19:55'!
ERROR!

aPosition!

2 between: 0 and: (rows-1)!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:21:51' prior: 50876632!
validatePositionOnRoom: aPosition ifFalse: aBlock
	
	(aPosition y between: 0 and: (rows-1)) ifFalse: [ aBlock value ].
	(aPosition x between: 0 and: (columns-1)) ifFalse: [ aBlock value ].! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!

!testRun: #RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:21:55'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:23:42'!
test28PlayerTakesPortableObjectFacingToIt
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:23:47'!
test28CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns
	| room |
	room := Room withRows: 1 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #West).
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:24:04' prior: 50877537!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	self
		should: [ room movePlayerBackwards ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room cantMovePlayerErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:25:47' prior: 50877570!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	room makePlayerPickObject.
	self assert: room playerHas: object.! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:26:53'!
makePlayerPickObject
	player forwardPo! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:27:42' prior: 50877604!
makePlayerPickObject
	player take: (roomObjects at: player nextForwardPosition)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:28:03' prior: 50877589!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	room makePlayerPickObject.
	self assert: (room playerHas: object).! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:28:37'!
playerHas: anObject
	^player ! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:28:54' prior: 50877630!
playerHas: anObject
	^player backpackIncludes: anObject ! !

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:29:02'!
PASSED!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:29:27'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:29:27'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:30:30' prior: 50877615!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	room makePlayerPickObject.
	self assert: (room playerHas: object).
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:30:52' prior: 50877741!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	room makePlayerPickObject.
	self assert: (room playerHas: object).
	
	self assert: (room at: 2@2) equals: object.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:31:58' prior: 50877756!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	room makePlayerPickObject.
	self assert: (room playerHas: object).
	
	self
		should: [ self assert: (room at: 0@1) equals: object. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyPositionErrorMessage equals: anError messageText ]! !

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:32:07'!
FAILURE!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:32:07'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:32:32'!
emptyPositionErrorMessage
	^'There is nothing here'! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:33:37' prior: 50874243 overrides: 16880774!
at: aPosition
	(player isAt: aPosition) ifTrue: [^player].
	^roomObjects at: aPosition ifAbsent: [^self class error: self class emptyPositionErrorMessage ] .! !
!Room class methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:33:53'!
emptyCellErrorMessage
	^'There is nothing here'! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:33:53' prior: 50877807 overrides: 16880774!
at: aPosition
	(player isAt: aPosition) ifTrue: [^player].
	^roomObjects at: aPosition ifAbsent: [^self class error: self class emptyCellErrorMessage ] .! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:33:53' prior: 50877773!
test28PlayerTakesPortableObjectFacingToIt
	| room object |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	object := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	room place: object at: 0@1.
	
	room makePlayerPickObject.
	self assert: (room playerHas: object).
	
	self
		should: [ self assert: (room at: 0@1) equals: object. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !

!methodRemoval: Room class #emptyPositionErrorMessage stamp: 'RL 12/10/2020 21:33:53'!
emptyPositionErrorMessage
	^'There is nothing here'!

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:33:57'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:33:57'!
FAILURE!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:33:57'!
FAILURE!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:34:19'!
FAILURE!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:34:19'!
FAILURE!

room!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:35:51' prior: 50877609!
makePlayerPickObject
	| objectToPick |
	objectToPick := roomObjects at: player nextForwardPosition.
	player take: objectToPick.
	roomObjects remove: objectToPick.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:36:00'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:36:00'!
ERROR!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:36:00'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:37:58' prior: 50877963!
makePlayerPickObject
	| facingPosition |
	facingPosition := player nextForwardPosition.
	player take: (roomObjects at: facingPosition).
	roomObjects removeKey: facingPosition.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:38:11'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:38:11'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:39:56'!
test28PlayerTakesNothingIfHeIsNotFacingAnything
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:40:03'!
test29PlayerTakesNothingIfHeIsNotFacingAnything
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test28PlayerTakesNothingIfHeIsNotFacingAnything stamp: 'RL 12/10/2020 21:40:03'!
test28PlayerTakesNothingIfHeIsNotFacingAnything
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]!

!testRun: #RoomTest #test29PlayerTakesNothingIfHeIsNotFacingAnything stamp: 'RL 12/10/2020 21:40:06'!
FAILURE!

!testRun: #RoomTest #test29PlayerTakesNothingIfHeIsNotFacingAnything stamp: 'RL 12/10/2020 21:40:06'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:40:46' prior: 50878073!
makePlayerPickObject
	| facingPosition |
	facingPosition := player nextForwardPosition.
	player take: (roomObjects at: facingPosition ifAbsent: [ ^ self class error: self class emptyCellErrorMessage ]).
	roomObjects removeKey: facingPosition.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:40:51'!
PASSED!

!testRun: #RoomTest #test29PlayerTakesNothingIfHeIsNotFacingAnything stamp: 'RL 12/10/2020 21:40:51'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:41:04'!
test29PlayerTakesNothingIfItIsNotFacingAnything
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !

!methodRemoval: RoomTest #test29PlayerTakesNothingIfHeIsNotFacingAnything stamp: 'RL 12/10/2020 21:41:04'!
test29PlayerTakesNothingIfHeIsNotFacingAnything
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:43:47'!
test30PlayerTakesPortableObjectFromNonPortableObject
	| room |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:44:16' prior: 50878377!
test30PlayerTakesPortableObjectFromNonPortableObject
	| room nonPortableObject |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	nonPortableObject := NonPortableObject new.
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:45:03' prior: 50878393!
test30PlayerTakesPortableObjectFromNonPortableObject
	| room nonPortableObject portableObject |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	nonPortableObject := NonPortableObject new.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	nonPortableObject  add: portableObject.
	room place: nonPortableObject at: 0@1.
	
	self
		should: [ room makePlayerPickObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Room emptyCellErrorMessage equals: anError messageText ]! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:45:40' prior: 50878411!
test30PlayerTakesPortableObjectFromNonPortableObject
	| room nonPortableObject portableObject |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	nonPortableObject := NonPortableObject new.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	nonPortableObject add: portableObject.
	room place: nonPortableObject at: 0@1.
	room makePlayerPickObject.
	
	self assert: ''! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:46:42'!
test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom
	| room nonPortableObject portableObject |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	nonPortableObject := NonPortableObject new.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	nonPortableObject add: portableObject.
	room place: nonPortableObject at: 0@1.
	room makePlayerPickObject.
	
	self assert: (room playerHas: portableObject).
	self assert: (room at: 0@1) equals: nonPortableObject.! !

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:46:44'!
ERROR!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:46:44'!
ERROR!
!NonPortableObject methodsFor: 'nil' stamp: 'RL 12/10/2020 21:47:23'!
add: aStageObject
	stageObjects add: aStageObject ! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:47:44' overrides: 16896425!
initialize
	stageObjects := OrderedCollection new.! !

!methodRemoval: RoomTest #test30PlayerTakesPortableObjectFromNonPortableObject stamp: 'RL 12/10/2020 21:47:58'!
test30PlayerTakesPortableObjectFromNonPortableObject
	| room nonPortableObject portableObject |
	room := Room withRows: 2 byColumns: 1 with: (PlayableCharacter named: 'Luigi' using: testObjectFactory defaultBackpack at: 0@0 heading: #North).
	nonPortableObject := NonPortableObject new.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 10.
	nonPortableObject add: portableObject.
	room place: nonPortableObject at: 0@1.
	room makePlayerPickObject.
	
	self assert: ''!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:48:00'!
ERROR!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:48:00'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:50:09' prior: 50878233!
makePlayerPickObject
	| facingPosition facingObject |
	facingPosition := player nextForwardPosition.
	facingObject := roomObjects at: facingPosition ifAbsent: [ ^ self class error: self class emptyCellErrorMessage ].
	player take: facingObject.
	roomObjects removeKey: facingPosition.! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test29PlayerTakesNothingIfItIsNotFacingAnything stamp: 'RL 12/10/2020 21:50:19'!
PASSED!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:50:19'!
ERROR!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:50:19'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:52:31' prior: 50878522!
makePlayerPickObject
	| facingPosition facingObject |
	facingPosition := player nextForwardPosition.
	facingObject := roomObjects at: facingPosition ifAbsent: [ ^ self class error: self class emptyCellErrorMessage ].
	(facingObject isKindOf: PortableObject) ifTrue: [
			player take: facingObject.
			roomObjects removeKey: facingPosition.
		].
	(facingObject isKindOf: NonPortableObject) ifTrue: [
			facingObject := self firstPortableObject: facingObject.
			player take: facingObject.
		]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:52:45' prior: 50878645!
makePlayerPickObject
	| facingPosition facingObject |
	facingPosition := player nextForwardPosition.
	facingObject := roomObjects at: facingPosition ifAbsent: [ ^ self class error: self class emptyCellErrorMessage ].
	(facingObject isKindOf: PortableObject) ifTrue: [
			player take: facingObject.
			roomObjects removeKey: facingPosition.
		].
	(facingObject isKindOf: NonPortableObject) ifTrue: [
			facingObject := facingObject firstPortableObject.
			player take: facingObject.
		]! !
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:53:16' prior: 50878664!
makePlayerPickObject
	| facingPosition facingObject |
	facingPosition := player nextForwardPosition.
	facingObject := roomObjects at: facingPosition ifAbsent: [ ^ self class error: self class emptyCellErrorMessage ].
	(facingObject isKindOf: PortableObject) ifTrue: [
			player take: facingObject.
			roomObjects removeKey: facingPosition.
		].
	(facingObject isKindOf: NonPortableObject) ifTrue: [
			facingObject := facingObject firstPortableObjectAndRemove.
		]! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:54:31'!
firstPortableObjectAndRemove
	| object |
	object := stageObjects first.
	stageObjects removeLast.
	^object! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test29PlayerTakesNothingIfItIsNotFacingAnything stamp: 'RL 12/10/2020 21:54:37'!
PASSED!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:54:37'!
FAILURE!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:54:37'!
FAILURE!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:54:42'!
FAILURE!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:54:42'!
FAILURE!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:54:55'!
FAILURE!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:54:55'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'RL 12/10/2020 21:55:25' prior: 50878683!
makePlayerPickObject
	| facingPosition facingObject |
	facingPosition := player nextForwardPosition.
	facingObject := roomObjects at: facingPosition ifAbsent: [ ^ self class error: self class emptyCellErrorMessage ].
	(facingObject isKindOf: PortableObject) ifTrue: [
			player take: facingObject.
			roomObjects removeKey: facingPosition.
		].
	(facingObject isKindOf: NonPortableObject) ifTrue: [
			facingObject := facingObject firstPortableObjectAndRemove.
			player take: facingObject .
		]! !

!testRun: #RoomTest #test01CantCreateRoomWithZeroColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test02CantCreateRoomWithZeroRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test03CantCreateRoomWithNegativeNumberOfColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test04CantCreateRoomWithNegativeNumberOfRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test05CantCreateRoomWithNonWholeNumberOfColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test06CantCreateRoomWithNonWholeNumberOfRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test07CantPlaceObjectOnYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test08CantPlaceObjectOnXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test09CantPlaceObjectOnYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test10CantPlaceObjectOnXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test11CanPlaceObjectWithCoordinatesBetween0AndTheNumberOfRowsAndColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test12CantPlaceObjectOverAnotherObject stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test13CantInitializePlayerYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test14CantInitializePlayerXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test15CantInitializePlayerYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test16CantInitializePlayerXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test17CantPlaceObjectOverPlayer stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test18CantMovePlayerForwardOverObject stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test19CantMovePlayerBackwardsOverObject stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test20CantMovePlayerForwardYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test21CantMovePlayerForwardXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test22CantMovePlayerForwardYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test23CantMovePlayerForwardXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test24CantMovePlayerBackwardsYCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test25CantMovePlayerBackwardsXCoordinateLowerThan0 stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test26CantMovePlayerBackwardsYCoordinateHigherThanNumberOfRows stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test27CantMovePlayerBackwardsXCoordinateHigherThanNumberOfColumns stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test28PlayerTakesPortableObjectFacingToIt stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test29PlayerTakesNothingIfItIsNotFacingAnything stamp: 'RL 12/10/2020 21:55:30'!
PASSED!

!testRun: #RoomTest #test30PlayerTakesPortableObjectFromNonPortableObjectAndNonPortableRemainsOnRoom stamp: 'RL 12/10/2020 21:55:30'!
PASSED!