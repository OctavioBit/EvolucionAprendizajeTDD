

----STARTUP---- (10 December 2020 17:11:09) as /home/diego/Documents/Ingenieria1/2doParcial/CuisUniversity-2doParcial/CuisUniversity-4384.image!


----End fileIn of /home/diego/Documents/Ingenieria1/2doParcial/ISW1-2020-2C-2doParcial.st----!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 17:11:30'!
PASSED!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 17:35:53'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 17:40:11'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'no messages' stamp: 'DS 12/10/2020 17:40:06'!
test01

	" El width tiene que ser mayor a cero "

	self should: [ Room with: 0 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:40:12'!
ERROR!
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 17:40:20'!
invalidWidthRoomErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 17:40:40' prior: 50869805!
invalidWidthRoomErrorDescription

	^'width room must be greather than 0'.! !

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:40:55'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:41:00'!
with: aSmallInteger and: aSmallInteger2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aSmallInteger and: aSmallInteger2 ! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:41:47' prior: 50869817!
with: aWidth and: aHigth

	aWidth < 1 ifTrue: [ self error: self invalidWidthRoomErrorDescription ].! !

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:41:48'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:41:48'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:41:58'!
test02

	" El width tiene que ser entero "

	self should: [ Room with: 2.0 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:42:00' prior: 50869838!
test02

	" El width tiene que ser entero "

	self should: [ Room with: 2.3 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:42:01'!
FAILURE!

1.2 isInteger!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:42:38' prior: 50869827!
with: aWidth and: aHigth

	(aWidth < 1 or: [ aWidth isInteger not]) ifTrue: [ self error: self invalidWidthRoomErrorDescription ].! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:42:48' prior: 50869859!
with: aWidth and: aHigth

	(aWidth > 0 or: [ aWidth isInteger]) ifFalse: [ self error: self invalidWidthRoomErrorDescription ].! !

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:42:49'!
FAILURE!

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:42:52'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:43:04' prior: 50869867!
with: aWidth and: aHigth

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self error: self invalidWidthRoomErrorDescription ].! !

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:43:05'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:43:05'!
PASSED!

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:43:05'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:43:41'!
test03

	" El hight tiene que ser mayor a 0 "

	self should: [ Room with: 10 and: 0 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!testRun: #RoomTest #test03 stamp: 'DS 12/10/2020 17:43:41'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:44:20' prior: 50869893!
test03

	" El hight tiene que ser mayor a 0 "

	self should: [ Room with: 10 and: 0 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.! !

!testRun: #RoomTest #test03 stamp: 'DS 12/10/2020 17:44:22'!
ERROR!
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 17:44:28'!
invalidHightRoomErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 17:44:44' prior: 50869915!
invalidHightRoomErrorDescription

	^'hight room must be greather than 0'.! !

!testRun: #RoomTest #test03 stamp: 'DS 12/10/2020 17:44:46'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:45:11' prior: 50869879!
with: aWidth and: aHight

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self error: self invalidWidthRoomErrorDescription ].
	(aHight > 0) ifFalse: [ self error: self invalidHightRoomErrorDescription ].! !

!testRun: #RoomTest #test03 stamp: 'DS 12/10/2020 17:45:12'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:45:12'!
PASSED!

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:45:12'!
PASSED!

!testRun: #RoomTest #test03 stamp: 'DS 12/10/2020 17:45:12'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:45:21'!
test04

	" El hight tiene que ser entero "

	self should: [ Room with: 10 and: 10.2 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.! !

!testRun: #RoomTest #test04 stamp: 'DS 12/10/2020 17:45:22'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:45:37' prior: 50869928!
with: aWidth and: aHight

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self error: self invalidWidthRoomErrorDescription ].
	(aHight > 0 and: [ aHight isInteger]) ifFalse: [ self error: self invalidHightRoomErrorDescription ].! !

!testRun: #RoomTest #test04 stamp: 'DS 12/10/2020 17:45:38'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'DS 12/10/2020 17:45:38'!
PASSED!

!testRun: #RoomTest #test02 stamp: 'DS 12/10/2020 17:45:38'!
PASSED!

!testRun: #RoomTest #test03 stamp: 'DS 12/10/2020 17:45:38'!
PASSED!

!testRun: #RoomTest #test04 stamp: 'DS 12/10/2020 17:45:38'!
PASSED!

----SNAPSHOT----(10 December 2020 17:45:49) CuisUniversity-4384.image priorSource: 17188936!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:46:30'!
test01WidthRoomShouldBeGreatherThanZero

	" El width tiene que ser mayor a cero "

	self should: [ Room with: 0 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!methodRemoval: RoomTest #test01 stamp: 'DS 12/10/2020 17:46:30'!
test01

	" El width tiene que ser mayor a cero "

	self should: [ Room with: 0 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:46:42'!
test02WidthRoomShouldBeInteger

	" El width tiene que ser entero "

	self should: [ Room with: 2.3 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!methodRemoval: RoomTest #test02 stamp: 'DS 12/10/2020 17:46:42'!
test02

	" El width tiene que ser entero "

	self should: [ Room with: 2.3 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:46:57'!
test03HightRoomShouldBeGreatherThanZero

	" El hight tiene que ser mayor a 0 "

	self should: [ Room with: 10 and: 0 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.! !

!methodRemoval: RoomTest #test03 stamp: 'DS 12/10/2020 17:46:57'!
test03

	" El hight tiene que ser mayor a 0 "

	self should: [ Room with: 10 and: 0 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:47:09'!
test04HightRoomShouldBeInteger

	" El hight tiene que ser entero "

	self should: [ Room with: 10 and: 10.2 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.! !

!methodRemoval: RoomTest #test04 stamp: 'DS 12/10/2020 17:47:09'!
test04

	" El hight tiene que ser entero "

	self should: [ Room with: 10 and: 10.2 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:47:12'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 17:47:12'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:47:12'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 17:47:12'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:52:39'!
test05

	" la habitacion empieza con todas las celdas vacias "

	| room |

	room := Room with: 2 and: 1.

	self assert: (room isEmptyAt: 0@0).
	self assert: (room isEmptyAt: 1@0).

	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:52:43' prior: 50870061!
test05

	" la habitacion empieza con todas las celdas vacias "

	| room |

	room := Room with: 2 and: 1.

	self assert: (room isEmptyAt: 0@0).
	self assert: (room isEmptyAt: 1@0).
	! !

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 17:52:45'!
ERROR!
!Room class methodsFor: 'testing' stamp: 'DS 12/10/2020 17:52:51'!
isEmptyAt: aPoint 
	self shouldBeImplemented.! !
!Room class methodsFor: 'testing' stamp: 'DS 12/10/2020 17:53:07' prior: 50870081!
isEmptyAt: aPoint 

	^true.! !

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 17:53:08'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:53:08'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 17:53:08'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:53:08'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 17:53:08'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 17:53:08'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 17:55:05'!
test06

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	room put: portableObject at: 0@0.

	self assert: portableObject equals: (room at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:55:06'!
ERROR!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:55:20'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 17:55:36' prior: 50869957!
with: aWidth and: aHight

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self error: self invalidWidthRoomErrorDescription ].
	(aHight > 0 and: [ aHight isInteger]) ifFalse: [ self error: self invalidHightRoomErrorDescription ].

	^self new initializeWIth: aWidth and: aHight.! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:55:38'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 17:55:42'!
Object subclass: #Room
	instanceVariableNames: 'width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 17:55:42'!
Object subclass: #Room
	instanceVariableNames: 'width hight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'DS 12/10/2020 17:55:42'!
initializeWIth: aWidth and: aHight 
	self shouldBeImplemented.
	width := aWidth.
	hight := aHight.! !
!Room methodsFor: 'initialization' stamp: 'DS 12/10/2020 17:55:44' prior: 50870152!
initializeWIth: aWidth and: aHight 

	width := aWidth.
	hight := aHight.! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:55:46'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:55:52'!
put: aNoPointsPortableObject at: aPoint 
	self shouldBeImplemented.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 17:56:37'!
Object subclass: #Room
	instanceVariableNames: 'width hight celds'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:56:36' prior: 50870165!
put: aPortableObject at: aPoint 

	celds := aPoint -> aPortableObject.! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:56:38'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:57:25' overrides: 16880774!
at: aPoint

	^celds at: aPoint.! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:57:28'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:57:49' prior: 50870178!
put: aPortableObject at: aPoint 

	celds at: aPoint put: aPortableObject.! !
!Room methodsFor: 'initialization' stamp: 'DS 12/10/2020 17:58:01' prior: 50870158!
initializeWIth: aWidth and: aHight 

	width := aWidth.
	hight := aHight.
	celds := Dictionary new.! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:58:04'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:58:28'!
isEmptyAt: aPoint 

	^true.! !

!methodRemoval: Room class #isEmptyAt: stamp: 'DS 12/10/2020 17:58:34'!
isEmptyAt: aPoint 

	^true.!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:58:36'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 17:58:36'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:58:36'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 17:58:36'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 17:58:36'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:58:36'!
FAILURE!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:58:36'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 17:59:28' prior: 50870207!
isEmptyAt: aPoint 

	celds at: aPoint ifAbsent: [^true].

	^false.! !

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:59:29'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 17:59:33'!
PASSED!

----SNAPSHOT----(10 December 2020 17:59:38) CuisUniversity-4384.image priorSource: 17226472!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:02:23'!
test07

	" no puedo colocar un objeto en una celda ocupada "

	| room aPortableObject anotherPortableObject |

	room := Room with: 2 and: 1.
	aPortableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.
	anotherPortableObject := NoPointsPortableObject named: 'key' weighing: 1.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: aPortableObject equals: (room at: 0@0).
		].	! !

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:02:24'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:03:33' prior: 50870193!
put: aPortableObject at: aPoint 

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:03:34'!
ERROR!
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:03:39'!
cannotPutTwoObjectsInSameCeldErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:03:51' prior: 50870298!
cannotPutTwoObjectsInSameCeldErrorDescription

	^'cannot put two objects in same celd'.! !

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 18:03:52'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:03:52'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:05:11'!
test08

	" no puedo colocar un objeto fuera de los limites "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:05:17'!
ERROR!
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:05:25'!
outOfBoundaryErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:05:44' prior: 50870346!
outOfBoundaryErrorDescription

	^'cannot put an objects out of rooms boundary'.! !

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:05:44'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:06:52' prior: 50870330!
test08

	" no puedo colocar un objeto fuera del limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:07:03'!
FAILURE!

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:07:19'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:08:11' prior: 50870287!
put: aPortableObject at: aPoint 

	aPoint x >= width ifTrue: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:08:12'!
PASSED!

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:08:12'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:08:22'!
test09

	" no puedo colocar un objeto fuera del limite hight "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test09 stamp: 'DS 12/10/2020 18:08:23'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:09:03' prior: 50870378!
put: aPortableObject at: aPoint 

	(aPoint x >= width or: [aPoint y >= hight]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test09 stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:09:04'!
PASSED!

!testRun: #RoomTest #test09 stamp: 'DS 12/10/2020 18:09:04'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:09:22' prior: 50870359!
test08

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:09:31' prior: 50870412!
test09

	" no puedo colocar un objeto igual o superior al limite hight "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:09:42'!
test10

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test10 stamp: 'DS 12/10/2020 18:09:43'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:10:21' prior: 50870428!
put: aPortableObject at: aPoint 

	(aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test10 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test09 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!

!testRun: #RoomTest #test10 stamp: 'DS 12/10/2020 18:10:23'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:10:46' prior: 50870494!
test10

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:11:05'!
test11

	" no puedo colocar un objeto en un punto con y menor a 0 "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@-2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test11 stamp: 'DS 12/10/2020 18:11:06'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:11:24' prior: 50870511!
put: aPortableObject at: aPoint 

	(aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPortableObject y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test11 stamp: 'DS 12/10/2020 18:11:25'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:11:34' prior: 50870582!
put: aPortableObject at: aPoint 

	(aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test11 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test05 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test06 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test08 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test09 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test10 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

!testRun: #RoomTest #test11 stamp: 'DS 12/10/2020 18:11:36'!
PASSED!

----SNAPSHOT----(10 December 2020 18:11:39) CuisUniversity-4384.image priorSource: 17235463!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:11:52'!
test05RoomStartWithEmptyCelds

	" la habitacion empieza con todas las celdas vacias "

	| room |

	room := Room with: 2 and: 1.

	self assert: (room isEmptyAt: 0@0).
	self assert: (room isEmptyAt: 1@0).
	! !

!methodRemoval: RoomTest #test05 stamp: 'DS 12/10/2020 18:11:52'!
test05

	" la habitacion empieza con todas las celdas vacias "

	| room |

	room := Room with: 2 and: 1.

	self assert: (room isEmptyAt: 0@0).
	self assert: (room isEmptyAt: 1@0).
	!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:12:00'!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	room put: portableObject at: 0@0.

	self assert: portableObject equals: (room at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	! !

!methodRemoval: RoomTest #test06 stamp: 'DS 12/10/2020 18:12:01'!
test06

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	room put: portableObject at: 0@0.

	self assert: portableObject equals: (room at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:12:16'!
test07CannotPutAnObjectInNotEmptyCeld

	" no puedo colocar un objeto en una celda ocupada "

	| room aPortableObject anotherPortableObject |

	room := Room with: 2 and: 1.
	aPortableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.
	anotherPortableObject := NoPointsPortableObject named: 'key' weighing: 1.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: aPortableObject equals: (room at: 0@0).
		].	! !

!methodRemoval: RoomTest #test07 stamp: 'DS 12/10/2020 18:12:16'!
test07

	" no puedo colocar un objeto en una celda ocupada "

	| room aPortableObject anotherPortableObject |

	room := Room with: 2 and: 1.
	aPortableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.
	anotherPortableObject := NoPointsPortableObject named: 'key' weighing: 1.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: aPortableObject equals: (room at: 0@0).
		].	!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:12:45'!
test08CannotPutAtPointGreatherThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test08 stamp: 'DS 12/10/2020 18:12:45'!
test08

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:13:16'!
test09CannotPutAtPointGreatherThanHight

	" no puedo colocar un objeto igual o superior al limite hight "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test09 stamp: 'DS 12/10/2020 18:13:16'!
test09

	" no puedo colocar un objeto igual o superior al limite hight "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:13:35'!
test10CannotPutAtPointWithXLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test10 stamp: 'DS 12/10/2020 18:13:35'!
test10

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:13:51'!
test08CannotPutAtPointWithXAxiGreatherThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test08CannotPutAtPointGreatherThanWidth stamp: 'DS 12/10/2020 18:13:51'!
test08CannotPutAtPointGreatherThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:13:57'!
test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test08CannotPutAtPointWithXAxiGreatherThanWidth stamp: 'DS 12/10/2020 18:13:57'!
test08CannotPutAtPointWithXAxiGreatherThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:14:14'!
test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight

	" no puedo colocar un objeto igual o superior al limite hight "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test09CannotPutAtPointGreatherThanHight stamp: 'DS 12/10/2020 18:14:14'!
test09CannotPutAtPointGreatherThanHight

	" no puedo colocar un objeto igual o superior al limite hight "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:14:22'!
test10CannotPutAtPointWithXAxiLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test10CannotPutAtPointWithXLessThanZero stamp: 'DS 12/10/2020 18:14:22'!
test10CannotPutAtPointWithXLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:14:35'!
test11CannotPutAtPointWithYAxiLessThanZero

	" no puedo colocar un objeto en un punto con y menor a 0 "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@-2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!methodRemoval: RoomTest #test11 stamp: 'DS 12/10/2020 18:14:35'!
test11

	" no puedo colocar un objeto en un punto con y menor a 0 "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	self should: [ room put: portableObject at: 0@-2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:14:37'!
PASSED!

----SNAPSHOT----(10 December 2020 18:14:39) CuisUniversity-4384.image priorSource: 17247686!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:28:57'!
test12

	" Un jugador no puede empezar en una posicion invalida "

	| room backpack playableCharacter |

	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North.

	self should: [ room := Room with: 2 with: 2 andPlayer: playableCharacter ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room playerInvalidPosition.

	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:30:55' prior: 50870661!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	room put: portableObject at: 0@0.

	self assert: (room is: portableObject at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:31:43'!
is: aPortableObject at: aPoint 

	
	
	^(celds at: aPoint ifAbsent: [^false]) = aPortableObject.! !

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:31:46'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:31:46'!
ERROR!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:31:46'!
ERROR!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:31:50'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:32:01' prior: 50870687!
test07CannotPutAnObjectInNotEmptyCeld

	" no puedo colocar un objeto en una celda ocupada "

	| room aPortableObject anotherPortableObject |

	room := Room with: 2 and: 1.
	aPortableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.
	anotherPortableObject := NoPointsPortableObject named: 'key' weighing: 1.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: (room is: aPortableObject at: 0@0).
		].	! !

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:32:04'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:33:19' prior: 50871034!
is: aPortableObject at: aPoint 
	
	^(celds at: aPoint ifAbsent: [^false]) = aPortableObject.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:36:36' prior: 50871003!
test12

	" Un jugador no puede empezar en una posicion invalida "

	| room backpack playableCharacter |

	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North.

	self should: [ room := Room with: 2 with: 2 andPlayer: playableCharacter ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room playerOutOfBoundaryErrorDescription.	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:36:51' prior: 50871119!
test12

	" Un jugador no puede empezar en una posicion invalida "

	| backpack playableCharacter |

	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North.

	self should: [ Room with: 2 with: 2 andPlayer: playableCharacter ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room playerOutOfBoundaryErrorDescription.	! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:36:52'!
ERROR!
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:36:58'!
playerOutOfBoundaryErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:37:10' prior: 50871155!
playerOutOfBoundaryErrorDescription

	^'player out of room boundaries'.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:37:10'!
ERROR!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:37:13'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 18:37:16'!
with: aSmallInteger with: aSmallInteger2 andPlayer: aPlayableCharacter 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aSmallInteger with: aSmallInteger2 andPlayer: aPlayableCharacter ! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 18:37:50' prior: 50871170!
with: aWidth with: aHight andPlayer: aPlayableCharacter

	

	^self new initializeWith: aWidth with: aHight andPlayer: aPlayableCharacter.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:46:30' prior: 50871136!
test12

	" Un jugador no puede empezar en una posicion invalida "

	| room backpack |

	room := Room with: 2 with: 2.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoom.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:46:34'!
ERROR!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:46:42' prior: 50871189!
test12

	" Un jugador no puede empezar en una posicion invalida "

	| room backpack |

	room := Room with: 2 and: 2.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoom.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:46:43'!
ERROR!
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:46:56'!
cannotInitInThisRoom
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:47:04' prior: 50871223!
cannotInitInThisRoom

	^'cannot init in this room'.! !
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 18:47:12'!
cannotInitInThisRoomErrorDescription

	^'cannot init in this room'.! !

!methodRemoval: PlayableCharacter class #cannotInitInThisRoom stamp: 'DS 12/10/2020 18:47:12'!
cannotInitInThisRoom

	^'cannot init in this room'.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:47:23' prior: 50871206!
test12

	" Un jugador no puede empezar en una posicion invalida "

	| room backpack |

	room := Room with: 2 and: 2.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:47:24'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 18:47:28'!
named: aString using: aBackpack at: aPoint heading: aSymbol in: aRoom 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString using: aBackpack at: aPoint heading: aSymbol in: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 18:48:44' prior: 50871261!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	(aRoom canInitPlayerInPosition: aPosition) ifFalse: [ self error: self cannotInitInThisRoomErrorDescription ].

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:48:47'!
ERROR!
!Room methodsFor: 'testing' stamp: 'DS 12/10/2020 18:48:55'!
canInitPlayerInPosition: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'DS 12/10/2020 18:48:58' prior: 50871289!
canInitPlayerInPosition: aPoint 

	! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:49:29'!
isInBoundaries: aPoint

	^ (aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:49:29' prior: 50870598!
put: aPortableObject at: aPoint 

	self isInBoundaries: aPoint.

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:49:56'!
assertIsInBoundaries: aPoint

	^ (aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:49:56' prior: 50871307!
put: aPortableObject at: aPoint 

	self assertIsInBoundaries: aPoint.

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!methodRemoval: Room #isInBoundaries: stamp: 'DS 12/10/2020 18:49:56'!
isInBoundaries: aPoint

	^ (aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ]!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 18:50:14' prior: 50871273!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	(aRoom assertIsInBoundaries: aPosition) ifFalse: [ self error: self cannotInitInThisRoomErrorDescription ].

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 18:50:21' prior: 50871343!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	(aRoom canInitPlayerInPosition: aPosition) ifFalse: [ self error: self cannotInitInThisRoomErrorDescription ].

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !
!Room methodsFor: 'testing' stamp: 'DS 12/10/2020 18:50:34' prior: 50871294!
canInitPlayerInPosition: aPoint

	^self assertIsInBoundaries: aPoint.

	! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:50:51' prior: 50871316!
assertIsInBoundaries: aPoint

	^ (aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:50:58'!
isInBoundaries: aPoint

	^ (aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:50:58' prior: 50871325!
put: aPortableObject at: aPoint 

	self isInBoundaries: aPoint.

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:50:58' prior: 50871372!
canInitPlayerInPosition: aPoint

	^self isInBoundaries: aPoint.

	! !

!methodRemoval: Room #assertIsInBoundaries: stamp: 'DS 12/10/2020 18:50:58'!
assertIsInBoundaries: aPoint

	^ (aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]) ifTrue: [ self error: self class outOfBoundaryErrorDescription ]!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:51:04' prior: 50871387!
isInBoundaries: aPoint

	^(aPoint x >= width or: [ aPoint x < 0 or: [aPoint y >= hight or: [aPoint y < 0]]]).! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:51:13' prior: 50871396!
put: aPortableObject at: aPoint 

	(self isInBoundaries: aPoint) ifTrue: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:51:15'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:51:15'!
ERROR!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:51:15'!
ERROR!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 18:51:45'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'initialization' stamp: 'DS 12/10/2020 18:51:44'!
initializeNamed: aName using: aBackpack at: aPosition heading: aMarsRoverHeading in: aRoom

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aMarsRoverHeading.
	room := aRoom.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'DS 12/10/2020 18:51:57' prior: 50871487!
initializeNamed: aName using: aBackpack at: aPosition heading: aPlayableCharacterHeading in: aRoom

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aPlayableCharacterHeading.
	room := aRoom.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:52:03'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:52:03'!
FAILURE!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:52:03'!
FAILURE!

aRoom canInitPlayerInPosition: aPosition!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:53:00' prior: 50871427!
put: aPortableObject at: aPoint 

	(self isInBoundaries: aPoint) ifFalse: [ self error: self class outOfBoundaryErrorDescription ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 18:53:11'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:53:15'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:53:15'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:53:15'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:53:15'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:53:15'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:53:15'!
ERROR!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:53:15'!
ERROR!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:53:15'!
FAILURE!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:53:15'!
FAILURE!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:53:15'!
FAILURE!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:53:15'!
FAILURE!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:53:15'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 18:55:39' prior: 50871420!
isInBoundaries: aPoint

	^ aPoint < (width@hight) and: [ aPoint >= (0@0)].! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:55:40'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:55:40'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:55:55' prior: 50871243!
test12

	" Un jugador no puede empezar en una posicion fuera de limites "

	| room backpack |

	room := Room with: 2 and: 2.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:56:02' prior: 50871679!
test12

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room backpack |

	room := Room with: 2 and: 2.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 1@2 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:56:31' prior: 50871695!
test12

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room backpack portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.
	room put: portableObject at: 0@0.

	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:56:35'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'DS 12/10/2020 18:57:07' prior: 50871406!
canInitPlayerInPosition: aPoint

	^(self isInBoundaries: aPoint) and: [ self isEmptyAt: aPoint ].
	! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:57:09'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 18:57:13'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:57:13'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:58:29'!
test13

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room backpack portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.

	room put: portableObject at: 0@0.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:58:56'!
defaultBackPack

	^Backpack containingUpTo: 100 limitingPointsTo: 100.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:59:07' prior: 50871711!
test12

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room portableObject |

	room := Room with: 2 and: 2.
	portableObject := NoPointsPortableObject named: 'help-wanted sign' weighing: 1.
	room put: portableObject at: 0@0.

	self should: [ PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 18:59:11'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:59:27'!
defaultPortableObject

	^NoPointsPortableObject named: 'help-wanted sign' weighing: 1.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:59:43' prior: 50871020!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := self defaultBackPack.

	room put: portableObject at: 0@0.

	self assert: (room is: portableObject at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:59:46' prior: 50871868!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := self defaultPortableObject .

	room put: portableObject at: 0@0.

	self assert: (room is: portableObject at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:59:48' prior: 50871880!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := self defaultPortableObject.

	room put: portableObject at: 0@0.

	self assert: (room is: portableObject at: 0@0).
	self deny: (room isEmptyAt: 0@0).
	! !

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 18:59:50'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 18:59:55' prior: 50871086!
test07CannotPutAnObjectInNotEmptyCeld

	" no puedo colocar un objeto en una celda ocupada "

	| room aPortableObject anotherPortableObject |

	room := Room with: 2 and: 1.
	aPortableObject := self defaultPortableObject.
	anotherPortableObject := NoPointsPortableObject named: 'key' weighing: 1.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: (room is: aPortableObject at: 0@0).
		].	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:00:03' prior: 50870846!
test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room |

	room := Room with: 2 and: 2.

	self should: [ room put: self defaultPortableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:00:07'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:00:11' prior: 50870877!
test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight

	" no puedo colocar un objeto igual o superior al limite hight "

	| room |

	room := Room with: 2 and: 2.

	self should: [ room put: self defaultPortableObject at: 0@2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:00:13'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:00:21' prior: 50870907!
test10CannotPutAtPointWithXAxiLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room portableObject |

	room := Room with: 2 and: 2.

	self should: [ room put: self defaultPortableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:00:26' prior: 50871966!
test10CannotPutAtPointWithXAxiLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	| room |

	room := Room with: 2 and: 2.

	self should: [ room put: self defaultPortableObject at: -2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:00:27'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:00:29'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:00:33' prior: 50870937!
test11CannotPutAtPointWithYAxiLessThanZero

	" no puedo colocar un objeto en un punto con y menor a 0 "

	| room |

	room := Room with: 2 and: 2.

	self should: [ room put: self defaultPortableObject at: 0@-2]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:00:37'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:00:46' prior: 50871842!
test12

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@0.

	self should: [ PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 19:00:48'!
PASSED!

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:00:48'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:01:01' prior: 50871818!
test13

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room backpack |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@0.
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.

	self should: [ PlayableCharacter named: 'Mario' using: backpack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:05:09' prior: 50872071!
test13

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room playableCharacter |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@1.
	playableCharacter := PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@1 heading: #North in: room.

	self should: []
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0).
		].! !

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:05:10'!
ERROR!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:05:57' prior: 50872088!
test13

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room playableCharacter |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@1.
	playableCharacter := PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room.

	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0).
		].! !

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:06:05'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'DS 12/10/2020 19:07:30'!
canMoveToPosition: aPoint

	^(self isInBoundaries: aPoint) and: [ self isEmptyAt: aPoint ].
	! !
!PlayableCharacter class methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:07:30' prior: 50871358!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	(aRoom canMoveToPosition: aPosition) ifFalse: [ self error: self cannotInitInThisRoomErrorDescription ].

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !

!methodRemoval: Room #canInitPlayerInPosition: stamp: 'DS 12/10/2020 19:07:30'!
canInitPlayerInPosition: aPoint

	^(self isInBoundaries: aPoint) and: [ self isEmptyAt: aPoint ].
	!
!PlayableCharacter methodsFor: 'moving' stamp: 'DS 12/10/2020 19:08:43' prior: 50869394!
moveForward

	| aTargetPosition |

	aTargetPosition := position + heading forwardPoint.

	(room canMoveToPosition: aTargetPosition) ifFalse: [ self error: self class notFreePositionErrorDescription ].

	position := aTargetPosition.! !

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:08:44'!
ERROR!
!PlayableCharacter class methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:08:50'!
notFreePositionErrorDescription
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:09:28' prior: 50872173!
notFreePositionErrorDescription

	^'not free position in room'.! !

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:09:34'!
ERROR!

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:09:34'!
ERROR!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:09:55' prior: 50872110!
test13

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room playableCharacter |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@1.
	playableCharacter := PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room.

	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test12 stamp: 'DS 12/10/2020 19:09:56'!
PASSED!

!testRun: #RoomTest #test13 stamp: 'DS 12/10/2020 19:09:56'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:10:49'!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@0.

	self should: [ PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!methodRemoval: RoomTest #test12 stamp: 'DS 12/10/2020 19:10:49'!
test12

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@0.

	self should: [ PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:11:25'!
test13PlayerCannotMoveToAnOccupiedPosition

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room playableCharacter |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@1.
	playableCharacter := PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room.

	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !

!methodRemoval: RoomTest #test13 stamp: 'DS 12/10/2020 19:11:25'!
test13

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| room playableCharacter |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@1.
	playableCharacter := PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: room.

	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].!

----SNAPSHOT----(10 December 2020 19:13:18) CuisUniversity-4384.image priorSource: 17259189!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:15:08'!
defaultPlayerCharacterIn: aRoom

	^PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: aRoom.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:17:44'!
test14

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@0.
	playableCharacter := self defaultPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 1@0).! !

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:17:45'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:19:24' prior: 50869408!
take: aPortableObject

	room takeAt: heading forwardPoint.

	backpack add: aPortableObject.! !

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:19:27'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:19:32'!
takeAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:19:45' prior: 50872361!
takeAt: aPoint 

	celds removeKey: aPoint.! !

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:19:47'!
ERROR!

heading forwardPoint!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:20:31' prior: 50872333!
test14

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@0.
	playableCharacter := self defaultPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).! !

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:20:41'!
ERROR!

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:20:44'!
ERROR!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:20:58' prior: 50872373!
test14

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 0@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).! !

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:21:01'!
PASSED!

----SNAPSHOT----(10 December 2020 19:21:05) CuisUniversity-4384.image priorSource: 17301538!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:29:52' prior: 50872394!
test14

	" Un player no puede tomar un objeto que no este en su forward position "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	self should: [ playableCharacter take: portableObject ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:30:05'!
test15

	" Un player no puede tomar un objeto que no este en su forward position "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	self should: [ playableCharacter take: portableObject ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:20:58' prior: 50872460!
test14

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 0@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).! !

!testRun: #RoomTest #test15 stamp: 'DS 12/10/2020 19:30:22'!
ERROR!
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 19:30:29'!
cannotTakeObjectErrorDescription
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'DS 12/10/2020 19:30:38' prior: 50872527!
cannotTakeObjectErrorDescription

	^'cannot take this object'.! !

!testRun: #RoomTest #test15 stamp: 'DS 12/10/2020 19:30:39'!
FAILURE!

!testRun: #RoomTest #test15 stamp: 'DS 12/10/2020 19:30:45'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:32:08' prior: 50872353!
take: aPortableObject

	(room is: aPortableObject at: heading forwardPoint) ifFalse: [ self error: self class cannotTakeObjectErrorDescription ].

	room takeAt: heading forwardPoint.

	backpack add: aPortableObject.! !

!testRun: #RoomTest #test15 stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

!testRun: #RoomTest #test15 stamp: 'DS 12/10/2020 19:32:09'!
PASSED!

----SNAPSHOT----(10 December 2020 19:32:29) CuisUniversity-4384.image priorSource: 17305802!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:33:34'!
signalOutOfBoundary

	^ self error: self class outOfBoundaryErrorDescription! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:33:34' prior: 50871548!
put: aPortableObject at: aPoint 

	(self isInBoundaries: aPoint) ifFalse: [ self signalOutOfBoundary ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self error: self class cannotPutTwoObjectsInSameCeldErrorDescription.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:33:54'!
signalPuttingTwoObjects

	^ self error: self class cannotPutTwoObjectsInSameCeldErrorDescription! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:33:55' prior: 50872610!
put: aPortableObject at: aPoint 

	(self isInBoundaries: aPoint) ifFalse: [ self signalOutOfBoundary ].

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self signalPuttingTwoObjects.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:34:26'!
assertIsInBoundaries: aPoint

	^ (self isInBoundaries: aPoint) ifFalse: [ self signalOutOfBoundary ]! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:34:26' prior: 50872627!
put: aPortableObject at: aPoint 

	self assertIsInBoundaries: aPoint.

	celds at: aPoint ifAbsent: [ ^celds at: aPoint put: aPortableObject. ].

	self signalPuttingTwoObjects.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:34:33' prior: 50872643!
put: aPortableObject at: aPoint 

	self assertIsInBoundaries: aPoint.

	celds at: aPoint ifAbsent: [ 
		^celds at: aPoint put: aPortableObject.
	].

	self signalPuttingTwoObjects.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:36:22'!
signalCannotTakeObject

	^ self error: self class cannotTakeObjectErrorDescription! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:36:22' prior: 50872543!
take: aPortableObject

	(room is: aPortableObject at: heading forwardPoint) ifFalse: [ self signalCannotTakeObject ].

	room takeAt: heading forwardPoint.

	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:36:35'!
assertCanTake: aPortableObject

	^ (room is: aPortableObject at: heading forwardPoint) ifFalse: [ self signalCannotTakeObject ]! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:36:35' prior: 50872667!
take: aPortableObject

	self assertCanTake: aPortableObject.

	room takeAt: heading forwardPoint.

	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:36:39' prior: 50872684!
take: aPortableObject

	self assertCanTake: aPortableObject.

	room takeAt: heading forwardPoint.
	backpack add: aPortableObject.! !

----SNAPSHOT----(10 December 2020 19:37:03) CuisUniversity-4384.image priorSource: 17310410!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 19:40:00' prior: 50869434!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint 
	
	^self named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: self defaultRoom.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 19:40:13'!
defaultRoom

	^Room with: 10 and: 10.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 19:40:14'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 19:40:14'!
ERROR!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 19:40:14'!
ERROR!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 19:40:27'!
ERROR!

!methodRemoval: PlayableCharacter class #defaultRoom stamp: 'DS 12/10/2020 19:40:58'!
defaultRoom

	^Room with: 10 and: 10.!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'HAW 12/9/2020 19:36:13' prior: 50872703!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint 
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test14 stamp: 'DS 12/10/2020 19:41:12'!
PASSED!

!testRun: #RoomTest #test15 stamp: 'DS 12/10/2020 19:41:12'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:41:45'!
test14TakedObjectDesapierOfRoom

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 0@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).! !

!methodRemoval: RoomTest #test14 stamp: 'DS 12/10/2020 19:41:45'!
test14

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 0@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:42:14'!
test15CannotTakeObjectNotInForwardPosition

	" Un player no puede tomar un objeto que no este en su forward position "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	self should: [ playableCharacter take: portableObject ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !

!methodRemoval: RoomTest #test15 stamp: 'DS 12/10/2020 19:42:14'!
test15

	" Un player no puede tomar un objeto que no este en su forward position "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self defaultPlayerCharacterIn: room.

	self should: [ playableCharacter take: portableObject ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].!

----SNAPSHOT----(10 December 2020 19:42:17) CuisUniversity-4384.image priorSource: 17313540!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 19:50:06'!
ProtoObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:49:54'!
test16

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject new.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (room is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 19:50:15'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:50:23'!
ERROR!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 19:51:51'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:51:51'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:51:51'!
ERROR!
!NonPortableObject methodsFor: 'testing' stamp: 'DS 12/10/2020 19:52:00'!
assertCanAddTo: aBackpack 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'testing' stamp: 'DS 12/10/2020 19:52:05' prior: 50872996!
assertCanAddTo: aBackpack 

	^true.! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:52:07'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:53:14' prior: 50872692!
take: aStageObject

	self assertCanTake: aStageObject.

	room takeAt: heading forwardPoint.
	backpack add: aStageObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:54:53' prior: 50873008!
take: aStageObject

	self assertCanTake: aStageObject.

	room takeAt: heading forwardPoint.
	aStageObject addTo: backpack.! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:54:56'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:55:14'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:55:14'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:55:18'!
addTo: aBackpack 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:55:23' prior: 50873029!
addTo: aBackpack 

! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:55:24'!
FAILURE!
!Room methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:57:51' prior: 50872366!
takeAt: aPoint 

	"tiene que ser private"
	| aStageObject |
	
	aStageObject := celds at: aPoint.
	aStageObject removeTo: self.! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:57:54'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:58:01'!
removeTo: aRoom 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:58:09' prior: 50873049!
removeTo: aRoom 

	! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:58:11'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:58:14'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 19:58:15'!
ERROR!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 19:58:15'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 19:58:15'!
ERROR!
!PortableObject methodsFor: 'room removing' stamp: 'DS 12/10/2020 19:58:58'!
removeTo: aRoom

	aRoom removePortableObject: self.! !
!Room methodsFor: 'taking objects' stamp: 'DS 12/10/2020 19:59:34' prior: 50873040!
takeAt: aPoint 

	"tiene que ser private"
	| aStageObject |
	
	aStageObject := celds at: aPoint.
	aStageObject removeTo: self at: aPoint.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 19:59:42'!
removeTo: aRoom at: aPoint

	! !

!methodRemoval: NonPortableObject #removeTo: stamp: 'DS 12/10/2020 19:59:46'!
removeTo: aRoom 

	!
!PortableObject methodsFor: 'room removing' stamp: 'DS 12/10/2020 19:59:59'!
removeTo: aRoom at: aPoint

	aRoom removePortableObject: self at: aPoint.! !

!methodRemoval: PortableObject #removeTo: stamp: 'DS 12/10/2020 20:00:01'!
removeTo: aRoom

	aRoom removePortableObject: self.!
!PortableObject methodsFor: 'room removing' stamp: 'DS 12/10/2020 20:00:31' prior: 50873135!
removeTo: aRoom at: aPoint

	aRoom removePortableObjectAt: aPoint.! !
!Room methodsFor: 'taking objects' stamp: 'DS 12/10/2020 20:00:45'!
removePortableObjectAt: aPoint

	celds removeKey: aPoint.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:00:45'!
ERROR!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:00:45'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:00:45'!
ERROR!
!PortableObject methodsFor: 'accessing' stamp: 'DS 12/10/2020 20:01:44'!
addTo: aBackpack 

	aBackpack add: self.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:01:47'!
PASSED!

----SNAPSHOT----(10 December 2020 20:01:50) CuisUniversity-4384.image priorSource: 17319944!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:03:24' prior: 50872910!
test16

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: portableObject.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: nonPortableObject).
	self deny: (nonPortableObject includes: portableObject).	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:03:29'!
test17

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: portableObject.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: nonPortableObject).
	self deny: (nonPortableObject includes: portableObject).	! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 19:49:54' prior: 50873266!
test16

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject new.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (room is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:03:41'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:03:41'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 20:03:46'!
with: aNoPointsPortableObject 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aNoPointsPortableObject ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 20:04:04' prior: 50873332!
with: aStageObject

	^self new initializeWith: aStageObject.! !

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:04:06'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 20:04:09'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'DS 12/10/2020 20:04:09'!
initializeWith: aStageObject 
	self shouldBeImplemented.
	stageObject := aStageObject.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'DS 12/10/2020 20:04:12' prior: 50873357!
initializeWith: aStageObject 

	stageObject := aStageObject.! !

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:04:14'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:04:47' prior: 50873034!
addTo: aBackpack 

	aBackpack add: stageObject.! !

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:04:49'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:05:29' prior: 50873286!
test17

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: portableObject.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	! !

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:05:30'!
ERROR!
!NonPortableObject methodsFor: 'testing' stamp: 'DS 12/10/2020 20:05:37'!
includes: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'testing' stamp: 'DS 12/10/2020 20:05:47' prior: 50873401!
includes: aStageObject

	^false.
! !

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:05:48'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:05:49'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:05:49'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:05:49'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:05:52'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:05:52'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:05:52'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:06:21'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:06:24'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:06:24'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:06:24'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:06:31'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:06:31'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:06:31'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:06:55'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:07:03'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:07:03'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:07:36' prior: 50873371!
addTo: aBackpack 

	stageObject ifNotNil: [	aBackpack add: stageObject ].! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:07:38'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:07:38'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:09:49'!
test18

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| room aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:09:50'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 20:10:20' prior: 50873341!
with: aStageObjectCollection

	^self new initializeWith: aStageObjectCollection.! !

o := OrderedCollection withAll: {1. 2}!

o!
!NonPortableObject methodsFor: 'initialization' stamp: 'DS 12/10/2020 20:11:11' prior: 50873363!
initializeWith: aStageObjectCollection 

	stageObject := OrderedCollection withAll: aStageObjectCollection.! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 20:11:15'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:11:15' prior: 50873746!
initializeWith: aStageObjectCollection 

	stageObjects := OrderedCollection withAll: aStageObjectCollection.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:11:15' prior: 50873649!
addTo: aBackpack 

	stageObjects ifNotNil: [	aBackpack add: stageObjects ].! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:11:19'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:11:42' prior: 50873769!
addTo: aBackpack 

	stageObjects do: [ :stageObject | aBackpack add: stageObject ].! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:11:43'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:11:43'!
ERROR!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:11:43'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:11:45'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:12:00'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:12:06'!
ERROR!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:12:13' prior: 50873378!
test17

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	! !

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:12:13'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:12:18' prior: 50873307!
test16

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject with: {}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (room is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:12:20'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:15:15'!
test19

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| room rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: rootNonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (rootNonPortableObject includes: anotherPortableObject).	! !
!NonPortableObject methodsFor: 'testing' stamp: 'DS 12/10/2020 20:15:34' prior: 50873406!
includes: aStageObject

	^stageObjects includes: aStageObject.! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:15:38'!
FAILURE!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:15:38'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:16:15' prior: 50873777!
addTo: aBackpack 

	stageObjects do: [ :stageObject | 
		aBackpack add: stageObject.
		stageObject removeFrom: self.
	].! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:16:28'!
ERROR!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:16:35'!
removeFrom: aNonPortableObject 
	self shouldBeImplemented.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:17:09' prior: 50873944!
removeFrom: aNonPortableObject

	aNonPortableObject removePortableObject: self.! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:17:11'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:17:17'!
removePortableObject: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:17:35' prior: 50873958!
removePortableObject: aPortableObject

	stageObjects remove: aPortableObject.! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:17:36'!
FAILURE!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:17:40'!
FAILURE!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:18:42'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:18:45'!
FAILURE!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:18:45'!
FAILURE!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:18:55'!
FAILURE!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:21:22'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:21:22'!
FAILURE!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:21:22'!
ERROR!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:21:24'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:23:04' prior: 50873935!
addTo: aBackpack 

	stageObjects do: [ :stageObject | 
		aBackpack add: stageObject.
	].
	stageObjects removeAll.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:23:08' prior: 50874043!
addTo: aBackpack 

	stageObjects do: [ :stageObject | 
		aBackpack add: stageObject.
	].
"stageObject removeFrom: self."
	stageObjects removeAll.! !

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:23:09'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:23:10'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:23:47' prior: 50874050!
addTo: aBackpack 

	stageObjects do: [ :stageObject | 
		stageObject addTo: aBackpack.
	].
"stageObject removeFrom: self."
	stageObjects removeAll.! !

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:23:49'!
ERROR!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:23:58'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:24:00'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:24:35' prior: 50873889!
test19

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| room rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: rootNonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (rootNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject).! !

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:24:36'!
FAILURE!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:25:58' prior: 50874063!
addTo: aBackpack 

	stageObjects copy do: [ :stageObject | 
		stageObject addTo: aBackpack.
		stageObject removeFrom: self.
	].! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:25:58'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:25:58'!
ERROR!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:25:58'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:26:21'!
removeFrom: aNonPortableObject! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:26:22'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:26:22'!
PASSED!
!PortableObject methodsFor: 'room removing' stamp: 'DS 12/10/2020 20:27:57'!
removeFromRoom: aRoom at: aPoint

	aRoom removePortableObjectAt: aPoint.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:27:57'!
removeFromRoom: aRoom at: aPoint

	! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:27:57' prior: 50873120!
takeAt: aPoint 

	"tiene que ser private"
	| aStageObject |
	
	aStageObject := celds at: aPoint.
	aStageObject removeFromRoom: self at: aPoint.! !

!methodRemoval: PortableObject #removeTo:at: stamp: 'DS 12/10/2020 20:27:58'!
removeTo: aRoom at: aPoint

	aRoom removePortableObjectAt: aPoint.!

!methodRemoval: NonPortableObject #removeTo:at: stamp: 'DS 12/10/2020 20:27:58'!
removeTo: aRoom at: aPoint

	!
!PortableObject methodsFor: 'room removing' stamp: 'DS 12/10/2020 20:28:24'!
removeFromNonPortableObject: aNonPortableObject

	aNonPortableObject removePortableObject: self.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:28:24'!
removeFromNonPortableObject: aNonPortableObject! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:28:24' prior: 50874117!
addTo: aBackpack 

	stageObjects copy do: [ :stageObject | 
		stageObject addTo: aBackpack.
		stageObject removeFromNonPortableObject: self.
	].! !

!methodRemoval: PortableObject #removeFrom: stamp: 'DS 12/10/2020 20:28:24'!
removeFrom: aNonPortableObject

	aNonPortableObject removePortableObject: self.!

!methodRemoval: NonPortableObject #removeFrom: stamp: 'DS 12/10/2020 20:28:24'!
removeFrom: aNonPortableObject!
!NonPortableObject methodsFor: 'removing' stamp: 'DS 12/10/2020 20:30:29' prior: 50874250!
removeFromRoom: aRoom at: aPoint

	aRoom removeNonPortableObjectAt: aPoint.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:30:55'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:30:55'!
ERROR!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:30:55'!
ERROR!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:30:55'!
ERROR!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:30:55'!
ERROR!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:30:57'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:31:01'!
removeNonPortableObjectAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:31:04' prior: 50874361!
removeNonPortableObjectAt: aPoint ! !

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:31:05'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:31:05'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:31:06'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:31:07'!
PASSED!

----SNAPSHOT----(10 December 2020 20:31:10) CuisUniversity-4384.image priorSource: 17331576!
!StageObject methodsFor: 'removing - room' stamp: 'DS 12/10/2020 20:32:35'!
removeFromRoom: aRoom at: aPoint

	self subclassResponsibility.! !
!StageObject methodsFor: 'removing - private' stamp: 'DS 12/10/2020 20:32:55'!
removeFromNonPortableObject: aNonPortableObject

	self subclassResponsibility.! !
!StageObject methodsFor: 'adding' stamp: 'DS 12/10/2020 20:33:38'!
assertCanAddTo: aBackpack

	self subclassResponsibility	! !

!methodRemoval: PortableObject #assertCanAddTo: stamp: 'DS 12/10/2020 20:33:43'!
assertCanAddTo: aBackpack

	self subclassResponsibility	!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:34:07'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:34:07'!
PASSED!
!Room methodsFor: 'taking objects - private' stamp: 'DS 12/10/2020 20:35:05' prior: 50874254!
takeAt: aPoint 

	| aStageObject |
	
	aStageObject := celds at: aPoint.
	aStageObject removeFromRoom: self at: aPoint.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test16 stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test17 stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test18 stamp: 'DS 12/10/2020 20:35:33'!
PASSED!

!testRun: #RoomTest #test19 stamp: 'DS 12/10/2020 20:35:33'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:36:04'!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject with: {}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (room is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).! !

!methodRemoval: RoomTest #test16 stamp: 'DS 12/10/2020 20:36:04'!
test16

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject with: {}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (room is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:36:44'!
test17TakenNonPortableObjectWithAStageObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	! !

!methodRemoval: RoomTest #test17 stamp: 'DS 12/10/2020 20:36:44'!
test17

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:37:19'!
test18TakenNonPortableObjectShouldRemoveAllStageObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| room aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	! !

!methodRemoval: RoomTest #test18 stamp: 'DS 12/10/2020 20:37:19'!
test18

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| room aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:37:53'!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| room rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: rootNonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (rootNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject).! !

!methodRemoval: RoomTest #test19 stamp: 'DS 12/10/2020 20:37:53'!
test19

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| room rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: rootNonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (rootNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject).!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:38:01'!
test18TakenNonPortableObjectShouldRemoveAllPortableObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| room aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	! !

!methodRemoval: RoomTest #test18TakenNonPortableObjectShouldRemoveAllStageObjects stamp: 'DS 12/10/2020 20:38:01'!
test18TakenNonPortableObjectShouldRemoveAllStageObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| room aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.

	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:38:09'!
test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	! !

!methodRemoval: RoomTest #test17TakenNonPortableObjectWithAStageObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 20:38:09'!
test17TakenNonPortableObjectWithAStageObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self defaultPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 20:38:11'!
PASSED!

----SNAPSHOT----(10 December 2020 20:38:13) CuisUniversity-4384.image priorSource: 17367293!
!NonPortableObject methodsFor: 'testing' stamp: 'DS 12/10/2020 20:44:35' prior: 50873001 overrides: 50874392!
assertCanAddTo: aBackpack 

	^aBackpack assertCanAddNonPortableObject: self.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 20:44:39'!
PASSED!

!methodRemoval: NonPortableObject #assertCanAddTo: stamp: 'DS 12/10/2020 20:45:08'!
assertCanAddTo: aBackpack 

	^aBackpack assertCanAddNonPortableObject: self.!
!PortableObject methodsFor: 'adding' stamp: 'DS 12/10/2020 20:45:21' overrides: 50874392!
assertCanAddTo: aBackpack

	self subclassResponsibility	! !

!methodRemoval: StageObject #assertCanAddTo: stamp: 'DS 12/10/2020 20:45:25'!
assertCanAddTo: aBackpack

	self subclassResponsibility	!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 20:45:26'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:47:01'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 20:47:01'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 20:47:01'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 20:47:01'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 20:47:01'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 20:47:01'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 20:47:01'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 20:47:01'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:47:01'!
ERROR!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 20:47:01'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 20:48:27' prior: 50872140!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869135!
test09_canTakePortableObjects

	| playableCharacter paper |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West in: self defaultRoom .
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869046!
test02_backwardWhenHeadingNorthDecrementsYCoordinate

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North in: self defaultRoom .

	playableCharacter moveBackward.

	self assert: (playableCharacter isAt: 1@1 heading: #North)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869080!
test05_movingWhenHeadingEastWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #East in: self defaultRoom .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 2@2 heading: #North)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869069!
test04_rotateLeftWhenHeadingNorthHeadsWest

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North in: self defaultRoom .

	playableCharacter rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #West)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869108!
test07_movingWhenHeadingWestWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West in: self defaultRoom .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #South)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869094!
test06_movingWhenHeadingSouthWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #South in: self defaultRoom .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@1 heading: #East)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869058!
test03_rotateRightWhenHeadingNorthHeadsEast

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North in: self defaultRoom .

	playableCharacter rotateRight.

	self assert: (playableCharacter isAt: 1@2 heading: #East)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869122!
test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid

	self
		should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #X in: self defaultRoom ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidCardinalPointErrorDescription equals: anError messageText ]! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869148!
test10_canNotTakeMoreObjectsThanTheBackpackCanCarry

	| playableCharacter paper key |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West in: self defaultRoom .
	paper := NoPointsPortableObject named: 'Paper' weighing: 100.
	key := NoPointsPortableObject named: 'Key' weighing: 1.
	
	playableCharacter take: paper.
	self 
		should: [ playableCharacter take: key ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Backpack maxWeightExceededErrorDescription equals: anError messageText.
			self assert: (playableCharacter backpackIncludes: paper).
			self deny: (playableCharacter backpackIncludes: key) ]
	
	! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:48:27' prior: 50869034!
test01_forwardWhenHeadingNorthIncrementsYCoordinate

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North in: self defaultRoom .

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)! !

!methodRemoval: PlayableCharacter class #named:using:at:heading: stamp: 'DS 12/10/2020 20:48:27'!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint 
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 20:48:35' prior: 50875099!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	(aRoom canMoveToPosition: aPosition) ifFalse: [ self error: self cannotInitInThisRoomErrorDescription ].

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 20:48:38'!
FAILURE!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:48:38'!
ERROR!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 20:48:38'!
ERROR!
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:49:14'!
defaultRoom

	^ Room with: 2 and: 2.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:49:18'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:49:18'!
ERROR!
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:49:35' prior: 50875324!
defaultRoom

	^ Room with: 3 and: 3.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:49:37'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:49:37'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:49:54'!
ERROR!

self isInBoundaries: aPoint!

aPoint >= (0@0)!

aPoint < (width@hight)!
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 20:51:03' prior: 50875337!
defaultRoom

	^ Room with: 10 and: 10.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 20:51:05'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:51:05'!
ERROR!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 20:51:05'!
ERROR!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:51:07'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:52:52' prior: 50875110!
test09_canTakePortableObjects

	| playableCharacter room paper |

	room := self defaultRoom.
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West in: room.
	
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	room put: paper at: 1@2.
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:52:53'!
ERROR!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:53:04'!
ERROR!

heading forwardPoint!

heading!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:54:55' prior: 50875402!
test09_canTakePortableObjects

	| playableCharacter room paper |

	room := self defaultRoom.
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North in: room.
	
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	room put: paper at: 0@1.
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:54:55'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'DS 12/10/2020 20:56:07' prior: 50875223!
test10_canNotTakeMoreObjectsThanTheBackpackCanCarry

	| playableCharacter room paper key |

	room := self defaultRoom.
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 0@0 heading: #North in: room.
	paper := NoPointsPortableObject named: 'Paper' weighing: 100.
	key := NoPointsPortableObject named: 'Key' weighing: 1.

	room put: paper at: 0@1.
	playableCharacter take: paper.
	room put: key at: 0@1.
	self 
		should: [ playableCharacter take: key ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Backpack maxWeightExceededErrorDescription equals: anError messageText.
			self assert: (playableCharacter backpackIncludes: paper).
			self deny: (playableCharacter backpackIncludes: key) ]
	
	! !

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 20:56:08'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 20:56:14'!
PASSED!

----SNAPSHOT----(10 December 2020 20:56:29) CuisUniversity-4384.image priorSource: 17384212!
!Room methodsFor: 'testing' stamp: 'DS 12/10/2020 20:56:51' prior: 50872133!
canMoveToPosition: aPoint

	^(self isInBoundaries: aPoint) and: [ self isEmptyAt: aPoint ].! !

!methodRemoval: Room #at: stamp: 'DS 12/10/2020 20:58:11'!
at: aPoint

	^celds at: aPoint.!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 20:58:12'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 20:58:12'!
PASSED!
!Room methodsFor: 'accesing' stamp: 'DS 12/10/2020 20:59:18' prior: 50872652!
put: aPortableObject at: aPoint 

	self assertIsInBoundaries: aPoint.

	celds at: aPoint ifAbsent: [
		^celds at: aPoint put: aPortableObject.
	].

	self signalPuttingTwoObjects.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:01:14' prior: 50871893!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| room portableObject |

	room := Room with: 2 and: 1.
	portableObject := self defaultPortableObject.

	room put: portableObject at: 0@0.

	self assert: (room is: portableObject at: 0@0).! !

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:01:16'!
PASSED!

!methodRemoval: RoomTest #test05RoomStartWithEmptyCelds stamp: 'DS 12/10/2020 21:01:18'!
test05RoomStartWithEmptyCelds

	" la habitacion empieza con todas las celdas vacias "

	| room |

	room := Room with: 2 and: 1.

	self assert: (room isEmptyAt: 0@0).
	self assert: (room isEmptyAt: 1@0).
	!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:13:11'!
shouldRaiseOutOfBoundaryErrorWhenPut: aPortableObject at: aPosition

	| room |

	room := Room with: 10 and: 10.

	self should: [ room put: aPortableObject at: aPosition]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: Room outOfBoundaryErrorDescription.
		].! !
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:13:44' prior: 50871932!
test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	| room |
	
	self shouldRaiseOutOfBoundaryErrorWhenPut: self defaultPortableObject at: 12@0.

	room := Room with: 2 and: 2.

	self should: [ room put: self defaultPortableObject at: 2@0]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room outOfBoundaryErrorDescription.! !

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:13:45'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:13:45'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:13:57' prior: 50875700!
test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth

	" no puedo colocar un objeto igual o superior al limite width "

	self
		shouldRaiseOutOfBoundaryErrorWhenPut: self defaultPortableObject
		at: 12@0.! !

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:13:58'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:13:58'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:14:18' prior: 50875686!
shouldRaiseOutOfBoundaryErrorWhenPut: aPortableObject at: aPosition

	| room |

	room := Room with: 10 and: 10.

	self should: [ room put: aPortableObject at: aPosition]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: Room outOfBoundaryErrorDescription.
			self deny: ( room is: aPortableObject at: aPosition).
		].! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:14:19'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:14:19'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:15:10' prior: 50871949!
test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight

	" no puedo colocar un objeto igual o superior al limite hight "

	self
		shouldRaiseOutOfBoundaryErrorWhenPut: self defaultPortableObject
		at: 0@12.! !

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:15:11'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:15:11'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:15:36' prior: 50871979!
test10CannotPutAtPointWithXAxiLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	self
		shouldRaiseOutOfBoundaryErrorWhenPut: self defaultBackPack
		at: -2@0.! !

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:15:37'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:15:37'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:16:03' prior: 50871998!
test11CannotPutAtPointWithYAxiLessThanZero

	" no puedo colocar un objeto en un punto con y menor a 0 "

	self
		shouldRaiseOutOfBoundaryErrorWhenPut: self defaultPortableObject 
		at: 0@-2.! !

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:16:04'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:16:04'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:16:18' prior: 50876008!
test10CannotPutAtPointWithXAxiLessThanZero

	" no puedo colocar un objeto en un punto con x menor a 0"

	self
		shouldRaiseOutOfBoundaryErrorWhenPut: self defaultPortableObject
		at: -2@0.! !
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:16:40' prior: 50871909!
test07CannotPutAnObjectInNotEmptyCeld

	" no puedo colocar un objeto en una celda ocupada "

	| room aPortableObject anotherPortableObject |

	room := Room with: 2 and: 1.
	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: (room is: aPortableObject at: 0@0).
		].	! !

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:16:41'!
PASSED!

----SNAPSHOT----(10 December 2020 21:17:20) CuisUniversity-4384.image priorSource: 17403596!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:18:01' prior: 50872251!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room |

	room := Room with: 2 and: 2.
	room put: self defaultPortableObject at: 0@0.

	self should: [ self defaultPlayerCharacterIn: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:18:01'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:18:01'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:18:20' prior: 50876255!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	| room |

	room := Room with: 10 and: 10.
	room put: self defaultPortableObject at: 0@0.

	self should: [ self defaultPlayerCharacterIn: room ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:18:20'!
PASSED!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 21:19:00'!
TestCase subclass: #RoomTest
	instanceVariableNames: 'defaultRoom'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'setup' stamp: 'DS 12/10/2020 21:19:04' overrides: 16927572!
setUp

	defaultRoom := Room with: 10 and: 10.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:19:22' prior: 50876334!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	defaultRoom put: self defaultPortableObject at: 0@0.

	self should: [ self defaultPlayerCharacterIn: defaultRoom ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:19:49'!
createPlayerCharacterIn: aRoom

	^PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: aRoom.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50874660!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| room rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: rootNonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: room.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (rootNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50874735!
test18TakenNonPortableObjectShouldRemoveAllPortableObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| room aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50872819!
test14TakedObjectDesapierOfRoom

	" Cuando un player toma un objeto este desaparece de la room "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50876425!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	defaultRoom put: self defaultPortableObject at: 0@0.

	self should: [ self createPlayerCharacterIn: defaultRoom ]
		raise: Error - MessageNotUnderstood
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50872852!
test15CannotTakeObjectNotInForwardPosition

	" Un player no puede tomar un objeto que no este en su forward position "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self createPlayerCharacterIn: room.

	self should: [ playableCharacter take: portableObject ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50874522!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| room nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject with: {}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self createPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (room is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:19:49' prior: 50874797!
test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| room portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	room := Room with: 2 and: 2.
	room put: nonPortableObject at: 0@1.
	
	playableCharacter := self createPlayerCharacterIn: room.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	! !

!methodRemoval: RoomTest #defaultPlayerCharacterIn: stamp: 'DS 12/10/2020 21:19:49'!
defaultPlayerCharacterIn: aRoom

	^PlayableCharacter named: 'Mario' using: self defaultBackPack at: 0@0 heading: #North in: aRoom.!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:20:50' prior: 50872281!
test13PlayerCannotMoveToAnOccupiedPosition

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| playableCharacter |

	playableCharacter := self createPlayerCharacterIn: defaultRoom.

	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:20:51'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:21:12' prior: 50876624!
test13PlayerCannotMoveToAnOccupiedPosition

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| playableCharacter |

	playableCharacter := self createPlayerCharacterIn: defaultRoom.

	defaultRoom put: self defaultPortableObject at: 0@1.


	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:21:13'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:21:13'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:21:17' prior: 50876646!
test13PlayerCannotMoveToAnOccupiedPosition

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| playableCharacter |

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	defaultRoom put: self defaultPortableObject at: 0@1.

	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:22:23'!
functionalException

	^ Error - MessageNotUnderstood! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:22:23' prior: 50876730!
test13PlayerCannotMoveToAnOccupiedPosition

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| playableCharacter |

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	defaultRoom put: self defaultPortableObject at: 0@1.

	self should: [ playableCharacter moveForward ]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:23:31' prior: 50876517!
test14TakedObjectDesapierOfRoom

	" Cuando un player toma un objeto este desaparece de la room "

	| portableObject playableCharacter |

	portableObject := self defaultPortableObject.
	defaultRoom put: portableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: defaultRoom .

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (defaultRoom is: portableObject at: 0@1).! !

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:23:32'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:23:32'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:23:33' prior: 50876775!
test14TakedObjectDesapierOfRoom

	" Cuando un player toma un objeto este desaparece de la room "

	| portableObject playableCharacter |

	portableObject := self defaultPortableObject.
	defaultRoom put: portableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: defaultRoom.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (defaultRoom is: portableObject at: 0@1).! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:24:52' prior: 50876535!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	defaultRoom put: self defaultPortableObject at: 0@0.

	self should: [ self createPlayerCharacterIn: defaultRoom ]
		raise: self functionalException
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:25:57' prior: 50876549!
test15CannotTakeObjectNotInForwardPosition

	" Un player no puede tomar un objeto que no este en su forward position "

	| room portableObject playableCharacter |

	room := Room with: 2 and: 2.
	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self createPlayerCharacterIn: room.

	self should: [ playableCharacter take: portableObject ]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:27:17' prior: 50876887!
test15CannotTakeObjectNotInForwardPosition

	" Un player no puede tomar un objeto que no este en su forward position "

	| portableObject playableCharacter |

	portableObject := self defaultPortableObject.
	defaultRoom put: portableObject at: 1@1.
	playableCharacter := self createPlayerCharacterIn: defaultRoom .

	self should: [ playableCharacter take: portableObject ]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (defaultRoom is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:27:18'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:27:18'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:27:31' prior: 50876574!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| nonPortableObject playableCharacter |

	nonPortableObject := NonPortableObject with: {}.
	defaultRoom put: nonPortableObject at: 0@1.
	
	playableCharacter := self createPlayerCharacterIn: defaultRoom .
	playableCharacter take: nonPortableObject.

	self assert: (defaultRoom is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject).! !

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:27:32'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:27:32'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:27:44' prior: 50876594!
test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| portableObject nonPortableObject playableCharacter |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	defaultRoom put: nonPortableObject at: 0@1.
	
	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	! !

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:27:44'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:27:44'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:27:58' prior: 50876486!
test18TakenNonPortableObjectShouldRemoveAllPortableObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.
	defaultRoom put: nonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	! !

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:27:58'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:27:58'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:28:13' prior: 50876446!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	defaultRoom put: rootNonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (rootNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject).! !

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:28:14'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:28:14'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:28:58' prior: 50877265!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	defaultRoom put: rootNonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (aNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject).! !

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:28:59'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:28:59'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'DS 12/10/2020 21:30:57'!
playableCharacterShouldTake: aStageObject asserting: anAssertingBlock

	| playableCharacter |

	playableCharacter := self createPlayerCharacterIn: defaultRoom .
	playableCharacter take: aStageObject.

	anAssertingBlock value.
	! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:32:18' prior: 50877471!
playableCharacterShouldTake: aStageObject asserting: anAssertingBlock

	| playableCharacter |

	defaultRoom put: aStageObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: defaultRoom .
	playableCharacter take: aStageObject.

	anAssertingBlock value.
	! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:32:28' prior: 50877482!
playableCharacterShouldTake: aNonPortableObject asserting: anAssertingBlock

	| playableCharacter |

	defaultRoom put: aNonPortableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: defaultRoom .
	playableCharacter take: aNonPortableObject.

	anAssertingBlock value.
	! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:34:14' prior: 50876999!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| nonPortableObject |

	nonPortableObject := NonPortableObject with: {}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (defaultRoom is: nonPortableObject at: 0@1).
			self deny: (aPlayableCharacter backpackIncludes: nonPortableObject).
		].
"
	nonPortableObject := NonPortableObject with: {}.
	defaultRoom put: nonPortableObject at: 0@1.
	
	playableCharacter := self createPlayerCharacterIn: defaultRoom .
	playableCharacter take: nonPortableObject.

	self assert: (defaultRoom is: nonPortableObject at: 0@1).
	self deny: (playableCharacter backpackIncludes: nonPortableObject)."! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:34:25' prior: 50877494!
playableCharacterShouldTake: aNonPortableObject asserting: anAssertingBlock

	| playableCharacter |

	defaultRoom put: aNonPortableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: defaultRoom .
	playableCharacter take: aNonPortableObject.

	anAssertingBlock value: playableCharacter.
	! !

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:34:27'!
PASSED!
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:34:33' prior: 50877507!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| nonPortableObject |

	nonPortableObject := NonPortableObject with: {}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (defaultRoom is: nonPortableObject at: 0@1).
			self deny: (aPlayableCharacter backpackIncludes: nonPortableObject).
		].! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:34:53' prior: 50877552!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| nonPortableObject |

	nonPortableObject := NonPortableObject with: {}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (defaultRoom is: nonPortableObject at: 0@1).
			self deny: (aPlayableCharacter backpackIncludes: nonPortableObject).
		].! !

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:34:54'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:34:54'!
PASSED!
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:35:53' prior: 50877083!
test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| portableObject nonPortableObject |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	self
		playableCharacterShouldTake: nonPortableObject 
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: portableObject).
			self deny: (nonPortableObject includes: portableObject).	
		].
"
	defaultRoom put: nonPortableObject at: 0@1.
	
	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (nonPortableObject includes: portableObject).	"! !

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:35:54'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:35:54'!
PASSED!
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:35:59' prior: 50877652!
test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt

	" Cuando un player toma un no portable object con un objeto, toma el objeto contenido "

	| portableObject nonPortableObject |

	portableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {portableObject}.

	self
		playableCharacterShouldTake: nonPortableObject 
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: portableObject).
			self deny: (nonPortableObject includes: portableObject).	
		].! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:36:47' prior: 50877170!
test18TakenNonPortableObjectShouldRemoveAllPortableObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| aPortableObject anotherPortableObject nonPortableObject playableCharacter |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (playableCharacter backpackIncludes: aPortableObject).
			self assert: (playableCharacter backpackIncludes: anotherPortableObject).
			self deny: (nonPortableObject includes: aPortableObject).	
			self deny: (nonPortableObject includes: anotherPortableObject).	
		].
"	
	defaultRoom put: nonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	"! !

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:36:49'!
ERROR!
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:37:04' prior: 50877768!
test18TakenNonPortableObjectShouldRemoveAllPortableObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| aPortableObject anotherPortableObject nonPortableObject |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: aPortableObject).
			self assert: (aPlayableCharacter backpackIncludes: anotherPortableObject).
			self deny: (nonPortableObject includes: aPortableObject).	
			self deny: (nonPortableObject includes: anotherPortableObject).	
		].
"	
	defaultRoom put: nonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: nonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (nonPortableObject includes: aPortableObject).	
	self deny: (nonPortableObject includes: anotherPortableObject).	"! !

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:37:05'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:37:05'!
PASSED!
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:37:12' prior: 50877815!
test18TakenNonPortableObjectShouldRemoveAllPortableObjects

	" Cuando un player toma un no portable object con mas de un objeto y todos entran en el backpack, toma todos "

	| aPortableObject anotherPortableObject nonPortableObject |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	nonPortableObject := NonPortableObject with: {aPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: aPortableObject).
			self assert: (aPlayableCharacter backpackIncludes: anotherPortableObject).
			self deny: (nonPortableObject includes: aPortableObject).	
			self deny: (nonPortableObject includes: anotherPortableObject).	
		].! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:38:17' prior: 50877368!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: rootNonPortableObject 
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: aPortableObject).
			self assert: (aPlayableCharacter backpackIncludes: anotherPortableObject).
			self deny: (rootNonPortableObject includes: aPortableObject).	
			self deny: (aNonPortableObject includes: anotherPortableObject).	
			self assert: (rootNonPortableObject includes: aNonPortableObject).
		].
"
	defaultRoom put: rootNonPortableObject at: 0@1.

	playableCharacter := self createPlayerCharacterIn: defaultRoom.
	playableCharacter take: rootNonPortableObject.

	self assert: (playableCharacter backpackIncludes: aPortableObject).
	self assert: (playableCharacter backpackIncludes: anotherPortableObject).
	self deny: (rootNonPortableObject includes: aPortableObject).	
	self deny: (aNonPortableObject includes: anotherPortableObject).	
	self assert: (rootNonPortableObject includes: aNonPortableObject)."! !

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:38:19'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:38:19'!
PASSED!
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:38:24' prior: 50877951!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: rootNonPortableObject 
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: aPortableObject).
			self assert: (aPlayableCharacter backpackIncludes: anotherPortableObject).
			self deny: (rootNonPortableObject includes: aPortableObject).	
			self deny: (aNonPortableObject includes: anotherPortableObject).	
			self assert: (rootNonPortableObject includes: aNonPortableObject).
		].! !
!RoomTest methodsFor: 'tests - non portable objects' stamp: 'DS 12/10/2020 21:38:43'!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: rootNonPortableObject 
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: aPortableObject).
			self assert: (aPlayableCharacter backpackIncludes: anotherPortableObject).
			self deny: (rootNonPortableObject includes: aPortableObject).	
			self deny: (aNonPortableObject includes: anotherPortableObject).	
			self assert: (rootNonPortableObject includes: aNonPortableObject).
		].! !

!methodRemoval: RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels stamp: 'DS 12/10/2020 21:38:43'!
test19TakenNonPortableObjectShouldRemovePortableObjectsInAlllevels

	" Tomar un nonportable object con un nonportable object toma todos los del 'arbol' "
	"	rootNonPortableObject
			->aNonPortableObject
				->aPortableObject
			-> anotherPortableObject
	"

	| rootNonPortableObject aNonPortableObject aPortableObject anotherPortableObject  |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	aNonPortableObject := NonPortableObject with: {aPortableObject}.
	rootNonPortableObject := NonPortableObject with: {aNonPortableObject. anotherPortableObject}.

	self
		playableCharacterShouldTake: rootNonPortableObject 
		asserting: [ :aPlayableCharacter |
			self assert: (aPlayableCharacter backpackIncludes: aPortableObject).
			self assert: (aPlayableCharacter backpackIncludes: anotherPortableObject).
			self deny: (rootNonPortableObject includes: aPortableObject).	
			self deny: (aNonPortableObject includes: anotherPortableObject).	
			self assert: (rootNonPortableObject includes: aNonPortableObject).
		].!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:39:28' prior: 50875856!
shouldRaiseOutOfBoundaryErrorWhenPut: aPortableObject at: aPosition

	self should: [ defaultRoom put: aPortableObject at: aPosition]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: Room outOfBoundaryErrorDescription.
			self deny: ( defaultRoom is: aPortableObject at: aPosition).
		].! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:39:29'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:39:29'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:39:42' prior: 50875598!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| portableObject |

	portableObject := self defaultPortableObject.

	defaultRoom put: portableObject at: 0@0.

	self assert: (defaultRoom is: portableObject at: 0@0).! !

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:39:42'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:39:42'!
PASSED!
!RoomTest methodsFor: 'tests - putting objects in room' stamp: 'DS 12/10/2020 21:40:30' prior: 50876166!
test07CannotPutAnObjectInNotEmptyCeld

	" no puedo colocar un objeto en una celda ocupada "

	| aPortableObject anotherPortableObject |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	defaultRoom put: aPortableObject at: 0@0.

	self should: [ defaultRoom put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: (defaultRoom is: aPortableObject at: 0@0).
		].	! !

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:40:30'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:40:30'!
PASSED!
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:41:41'!
shouldRaise: anErrorMessage whenCreateARoomWith: aWidth and: aHight

	self should: [ Room with: aWidth and: aHight ]
		raise: self functionalException
		withMessageText: anErrorMessage.! !
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:05' prior: 50869981!
test01WidthRoomShouldBeGreatherThanZero

	" El width tiene que ser mayor a cero "

	self
		shouldRaise: Room invalidWidthRoomErrorDescription
		whenCreateARoomWith: 0 and: 10.

	self should: [ Room with: 0 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:42:05'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:42:05'!
PASSED!
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:07' prior: 50878425!
test01WidthRoomShouldBeGreatherThanZero

	" El width tiene que ser mayor a cero "

	self
		shouldRaise: Room invalidWidthRoomErrorDescription
		whenCreateARoomWith: 0 and: 10.! !
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:22' prior: 50869998!
test02WidthRoomShouldBeInteger

	" El width tiene que ser entero "

	self
		shouldRaise: Room invalidWidthRoomErrorDescription
		whenCreateARoomWith: 2.3 and: 10.

	self should: [ Room with: 2.3 and: 10 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidWidthRoomErrorDescription.! !

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:42:23'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:42:23'!
PASSED!
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:25' prior: 50878511!
test02WidthRoomShouldBeInteger

	" El width tiene que ser entero "

	self
		shouldRaise: Room invalidWidthRoomErrorDescription
		whenCreateARoomWith: 2.3 and: 10.! !
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:41' prior: 50870015!
test03HightRoomShouldBeGreatherThanZero

	" El hight tiene que ser mayor a 0 "

	self
		shouldRaise: Room invalidHightRoomErrorDescription
		whenCreateARoomWith: 10 and: 0.

	self should: [ Room with: 10 and: 0 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.! !

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:42:42'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:42:42'!
PASSED!
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:43' prior: 50878597!
test03HightRoomShouldBeGreatherThanZero

	" El hight tiene que ser mayor a 0 "

	self
		shouldRaise: Room invalidHightRoomErrorDescription
		whenCreateARoomWith: 10 and: 0.! !
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:42:59' prior: 50870032!
test04HightRoomShouldBeInteger

	" El hight tiene que ser entero "

	self
		shouldRaise: Room invalidHightRoomErrorDescription
		whenCreateARoomWith: 10 and: 2.2.

	self should: [ Room with: 10 and: 10.2 ]
		raise: Error - MessageNotUnderstood
		withMessageText: Room invalidHightRoomErrorDescription.! !

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:43:00'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:43:00'!
PASSED!
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:43:02' prior: 50878683!
test04HightRoomShouldBeInteger

	" El hight tiene que ser entero "

	self
		shouldRaise: Room invalidHightRoomErrorDescription
		whenCreateARoomWith: 10 and: 2.2.! !
!RoomTest methodsFor: 'tests - boundaries' stamp: 'DS 12/10/2020 21:43:08' prior: 50878760!
test04HightRoomShouldBeInteger

	" El hight tiene que ser entero "

	self
		shouldRaise: Room invalidHightRoomErrorDescription
		whenCreateARoomWith: 10 and: 2.3.! !

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'DS 12/10/2020 21:43:17'!
TestCase subclass: #RoomTest
	instanceVariableNames: 'room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50876856!
test14TakedObjectDesapierOfRoom

	" Cuando un player toma un objeto este desaparece de la room "

	| portableObject playableCharacter |

	portableObject := self defaultPortableObject.
	room put: portableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: room.

	playableCharacter take: portableObject.

	self assert: (playableCharacter backpackIncludes: portableObject).
	self deny: (room is: portableObject at: 0@1).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50878331!
test07CannotPutAnObjectInNotEmptyCeld

	" no puedo colocar un objeto en una celda ocupada "

	| aPortableObject anotherPortableObject |

	aPortableObject := self defaultPortableObject.
	anotherPortableObject := self defaultPortableObject.
	room put: aPortableObject at: 0@0.

	self should: [ room put: anotherPortableObject at: 0@0]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException |
			self assert: (anException messageText) equals: Room cannotPutTwoObjectsInSameCeldErrorDescription.
			self assert: (room is: aPortableObject at: 0@0).
		].	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50876873!
test12PlayerCannotStartInOccupiedPosition

	" Un jugador no puede empezar en una posicion que tenga un objeto "

	room put: self defaultPortableObject at: 0@0.

	self should: [ self createPlayerCharacterIn: room ]
		raise: self functionalException
		withMessageText: PlayableCharacter cannotInitInThisRoomErrorDescription.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50876421 overrides: 16927572!
setUp

	room := Room with: 10 and: 10.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50878180!
shouldRaiseOutOfBoundaryErrorWhenPut: aPortableObject at: aPosition

	self should: [ room put: aPortableObject at: aPosition]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: Room outOfBoundaryErrorDescription.
			self deny: ( room is: aPortableObject at: aPosition).
		].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50877535!
playableCharacterShouldTake: aNonPortableObject asserting: anAssertingBlock

	| playableCharacter |

	room put: aNonPortableObject at: 0@1.
	playableCharacter := self createPlayerCharacterIn: room .
	playableCharacter take: aNonPortableObject.

	anAssertingBlock value: playableCharacter.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50876911!
test15CannotTakeObjectNotInForwardPosition

	" Un player no puede tomar un objeto que no este en su forward position "

	| portableObject playableCharacter |

	portableObject := self defaultPortableObject.
	room put: portableObject at: 1@1.
	playableCharacter := self createPlayerCharacterIn: room .

	self should: [ playableCharacter take: portableObject ]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter cannotTakeObjectErrorDescription.
			self assert: (room is: portableObject at: 1@1).
			self deny: (playableCharacter backpackIncludes: portableObject).
		].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50878256!
test06CanPutAnObjectAtEmptyCeld

	" puedo colocar un objeto en una celda vacia "

	| portableObject |

	portableObject := self defaultPortableObject.

	room put: portableObject at: 0@0.

	self assert: (room is: portableObject at: 0@0).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50876755!
test13PlayerCannotMoveToAnOccupiedPosition

	" Un jugador no se puede mover a una celda que tiene un objeto "

	| playableCharacter |

	playableCharacter := self createPlayerCharacterIn: room.
	room put: self defaultPortableObject at: 0@1.

	self should: [ playableCharacter moveForward ]
		raise: self functionalException
		withExceptionDo: [ :anException |
			self assert: anException messageText equals: PlayableCharacter notFreePositionErrorDescription.
			self assert: (playableCharacter isAt: 0@0 heading: #North).
		].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:43:17' prior: 50877570!
test16TakenNonPortableObjectShouldNotDesapier

	" Cuando un player toma un no portable object este no desaparece ni se a grega al backpack "

	| nonPortableObject |

	nonPortableObject := NonPortableObject with: {}.

	self
		playableCharacterShouldTake: nonPortableObject
		asserting: [ :aPlayableCharacter |
			self assert: (room is: nonPortableObject at: 0@1).
			self deny: (aPlayableCharacter backpackIncludes: nonPortableObject).
		].! !

----SNAPSHOT----(10 December 2020 21:45:35) CuisUniversity-4384.image priorSource: 17427228!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:45:44'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:45:45'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:45:45'!
PASSED!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:47:21'!
signalInvalidWidthRoom

	^ self error: self invalidWidthRoomErrorDescription! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:47:21' prior: 50870124!
with: aWidth and: aHight

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self signalInvalidWidthRoom ].
	(aHight > 0 and: [ aHight isInteger]) ifFalse: [ self error: self invalidHightRoomErrorDescription ].

	^self new initializeWIth: aWidth and: aHight.! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:47:30'!
signalInvalidHeightRoom

	^ self error: self invalidHightRoomErrorDescription! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:47:30' prior: 50879164!
with: aWidth and: aHight

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self signalInvalidWidthRoom ].
	(aHight > 0 and: [ aHight isInteger]) ifFalse: [ self signalInvalidHeightRoom ].

	^self new initializeWIth: aWidth and: aHight.! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:47:39'!
signalInvalidHightRoom

	^ self error: self invalidHightRoomErrorDescription! !
!Room class methodsFor: 'as yet unclassified' stamp: 'DS 12/10/2020 21:47:39' prior: 50879181!
with: aWidth and: aHight

	(aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self signalInvalidWidthRoom ].
	(aHight > 0 and: [ aHight isInteger]) ifFalse: [ self signalInvalidHightRoom ].

	^self new initializeWIth: aWidth and: aHight.! !

!methodRemoval: Room class #signalInvalidHeightRoom stamp: 'DS 12/10/2020 21:47:39'!
signalInvalidHeightRoom

	^ self error: self invalidHightRoomErrorDescription!

!methodRemoval: Room class #with:with:andPlayer: stamp: 'DS 12/10/2020 21:47:43'!
with: aWidth with: aHight andPlayer: aPlayableCharacter

	

	^self new initializeWith: aWidth with: aHight andPlayer: aPlayableCharacter.!
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:48:07'!
assertRightWidth: aWidth

	^ (aWidth > 0 and: [ aWidth isInteger]) ifFalse: [ self signalInvalidWidthRoom ]! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:48:07' prior: 50879197!
with: aWidth and: aHight

	self assertRightWidth: aWidth.
	(aHight > 0 and: [ aHight isInteger]) ifFalse: [ self signalInvalidHightRoom ].

	^self new initializeWIth: aWidth and: aHight.! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:48:15'!
assertRightHight: aHight

	^ (aHight > 0 and: [ aHight isInteger]) ifFalse: [ self signalInvalidHightRoom ]! !
!Room class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:48:15' prior: 50879226!
with: aWidth and: aHight

	self assertRightWidth: aWidth.
	self assertRightHight: aHight.

	^self new initializeWIth: aWidth and: aHight.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:49:25'!
signalCannotInitInThisRoom

	^ self error: self cannotInitInThisRoomErrorDescription! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:49:25' prior: 50875272!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	(aRoom canMoveToPosition: aPosition) ifFalse: [ self signalCannotInitInThisRoom ].

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:49:36'!
assertCanInitIn: aPosition at: aRoom

	^ (aRoom canMoveToPosition: aPosition) ifFalse: [ self signalCannotInitInThisRoom ]! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'DS 12/10/2020 21:49:36' prior: 50879257!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint in: aRoom 
	
	| newHeading |

	self assertCanInitIn: aPosition at: aRoom.

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading in: aRoom.! !

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:49:57'!
PASSED!

----SNAPSHOT----(10 December 2020 21:50:01) CuisUniversity-4384.image priorSource: 17513274!

----SNAPSHOT----(10 December 2020 21:50:33) CuisUniversity-4384.image priorSource: 17526429!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test01WidthRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test02WidthRoomShouldBeInteger stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test03HightRoomShouldBeGreatherThanZero stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test04HightRoomShouldBeInteger stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test06CanPutAnObjectAtEmptyCeld stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test07CannotPutAnObjectInNotEmptyCeld stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test08CannotPutAtPointWithXAxiGreatherOrEqualThanWidth stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test09CannotPutAtPointWithYAxiGreatherOrEqualThanHight stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test10CannotPutAtPointWithXAxiLessThanZero stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test11CannotPutAtPointWithYAxiLessThanZero stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotStartInOccupiedPosition stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotMoveToAnOccupiedPosition stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test14TakedObjectDesapierOfRoom stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test15CannotTakeObjectNotInForwardPosition stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test16TakenNonPortableObjectShouldNotDesapier stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test17TakenNonPortableObjectWithAPortableObjectShouldShouldRemoveFromIt stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test18TakenNonPortableObjectShouldRemoveAllPortableObjects stamp: 'DS 12/10/2020 21:52:30'!
PASSED!

!testRun: #RoomTest #test19TakenNonPortableObjectShouldRemovePortableObjectsInAllLevels stamp: 'DS 12/10/2020 21:52:30'!
PASSED!