----STARTUP---- (10 December 2020 10:54:06) as D:\facultad\Smalltalk\VM-2doParcial\windows64\CuisUniversity-4384.image!


----End fileIn of D:\facultad\Smalltalk\VM-2doParcial\windows64\ISW1-2020-2C-2doParcial.st----!

----End fileIn of D:\facultad\Smalltalk\Parciales Viejos\2020-1c\2doParcial\ISW1-2020-1C-2doParcial-SolucionDeVideo.st----!

----End fileIn of D:\facultad\Smalltalk\Parciales Viejos\2019-2c\2doParcial\MarsRover-IS1-2Parcial-2c2019-Solucion-Video.st----!

Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 17:25:16'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fsabatini 12/10/2020 17:25:36'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fsabatini 12/10/2020 17:25:39'!
PASSED!

----End fileIn of D:\facultad\Smalltalk\ingenieria1-exactas-master\18-Portfolio\Portfolio-Ejercicio.st----!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 17:30:00'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'no messages' stamp: 'fsabatini 12/10/2020 17:39:35'!
test01
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWifth: 1.
	
	self assert: room characterIsAt: 0@0 facing: #North.! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:39:43'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:39:51'!
forCharacter: aPlayableCharacter withLength: aSmallInteger andWifth: aSmallInteger3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeForCharacter: aPlayableCharacter withLength: aSmallInteger andWifth: aSmallInteger3 ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:40:46' prior: 50872974!
test01
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self assert: room characterIsAt: 0@0 facing: #North.! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:40:48'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:40:55'!
forCharacter: aPlayableCharacter withLength: aSmallInteger andWidth: aSmallInteger3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeForCharacter: aPlayableCharacter withLength: aSmallInteger andWidth: aSmallInteger3 ! !
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:41:17' prior: 50873019!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:41:18'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 17:41:48'!
Object subclass: #Room
	instanceVariableNames: 'playableCharacter'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 17:41:48'!
Object subclass: #Room
	instanceVariableNames: 'playableCharacter length'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 17:41:48'!
Object subclass: #Room
	instanceVariableNames: 'playableCharacter length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 17:41:48'!
initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 
	self shouldBeImplemented.
	playableCharacter := aPlayableCharacter.
	length := aLength.
	width := aWidth.! !
!Room methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 17:41:57' prior: 50873067!
initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	playableCharacter := aPlayableCharacter.
	length := aLength.
	width := aWidth.! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:41:58'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:42:19' prior: 50873003!
test01
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self assert: (room characterIsAt: 0@0 facing: #North).! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:42:22'!
ERROR!
!Room methodsFor: 'testing' stamp: 'fsabatini 12/10/2020 17:42:34'!
characterIsAt: aPoint facing: aSymbol 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'fsabatini 12/10/2020 17:43:16' prior: 50873103!
characterIsAt: aPoint facing: aDirection
	^playableCharacter isAt: aPoint heading: aDirection.! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:43:19'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:43:19'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:43:28'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:43:28'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:45:40' prior: 50873087!
test01
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.

	self assert: (room characterIsAt: 0@0 facing: #North).! !

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:46:29'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:46:30'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:46:33'!
PASSED!

!testRun: #RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:46:33'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:47:04'!
test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.

	self assert: (room characterIsAt: 0@0 facing: #North).! !

!methodRemoval: RoomTest #test01 stamp: 'fsabatini 12/10/2020 17:47:04'!
test01
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.

	self assert: (room characterIsAt: 0@0 facing: #North).!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:47:47'!
test02CannotCreateRoomWhenLenghtIsLesserThanOne
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 0 andWidth: 1.

	self assert: (room characterIsAt: 0@0 facing: #North).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:52:02' prior: 50873177!
test02CannotCreateRoomWhenLenghtIsLesserThanOne
	
	| playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	
	self
		should: [ Room forCharacter: playableCharacter withLength: 0 andWidth: 1. ]
		raise: Error
		withMessageText: Room invalidLenghtForRoomErrorDescription. ! !

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:52:07'!
ERROR!

!methodRemoval: Room class #forCharacter:withLength:andWifth: stamp: 'fsabatini 12/10/2020 17:52:52'!
forCharacter: aPlayableCharacter withLength: aSmallInteger andWifth: aSmallInteger3 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeForCharacter: aPlayableCharacter withLength: aSmallInteger andWifth: aSmallInteger3 !
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:54:18' prior: 50873032!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	(aLength > 0) ifFalse: [self error invalidLenghtForRoomErrorDescription].
	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:54:25'!
ERROR!
!Room class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 17:54:40'!
invalidLenghtForRoomErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 17:55:12' prior: 50873240!
invalidLenghtForRoomErrorDescription
	
	^'Lenght should be greater than 0'! !

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:55:18'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:56:09' prior: 50873226!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	(aLength > 0) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth ! !
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:56:15' prior: 50873256!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	(aLength strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:56:20'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 17:56:20'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:56:20'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:56:39'!
test03CannotCreateRoomWhenWidthIsLesserThanOne
	
	| playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	
	self
		should: [ Room forCharacter: playableCharacter withLength: 1 andWidth: 0. ]
		raise: Error
		withMessageText: Room invalidWidthForRoomErrorDescription. ! !
!Room class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 17:56:49'!
invalidWidthForRoomErrorDescription
	
	^'Width should be greater than 0'! !
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:56:59' prior: 50873267!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	(aLength strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	(aWidth strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	
	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:57:04'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 17:57:29' prior: 50873312!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	(aLength strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	(aWidth strictlyPositive) ifFalse: [self error: self invalidWidthForRoomErrorDescription].
	
	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:57:33'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 17:57:33'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:57:33'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 17:57:33'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 17:59:49'!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	
	self
		should: [ Room forCharacter: playableCharacter withLength: 1 andWidth: 0. ]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:02:50' prior: 50873359!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	
	
	self
		should: [ Room forCharacter: playableCharacter withLength: 1 andWidth: 0. ]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:03:17' prior: 50873376!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ Room  ]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:06:14' prior: 50873393!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ Room moveCharacterForward]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:06:18'!
ERROR!
!Room class methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:06:29'!
invalidMovementForCharacterInRoom
	self shouldBeImplemented.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:06:39' prior: 50873410!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:06:40'!
ERROR!
!Room class methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:07:14' prior: 50873431!
invalidMovementForCharacterInRoom
	^'Invalid movement for character'! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:07:28'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:08:37'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:09:05'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:09:17'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:09:54' prior: 50873437!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	room moveCharacterForward
	self
		should: [ room moveCharacterForward]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:09:55'!
ERROR!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:10:08'!
moveCharacterForward
	self shouldBeImplemented.! !
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:10:32' prior: 50873503!
moveCharacterForward

	playableCharacter moveForward.! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:10:37'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:10:46' prior: 50873481!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error
		withMessageText: Room invalidMovementForCharacterInRoom. ! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:10:47'!
FAILURE!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:13:16' prior: 50873508!
moveCharacterForward

	playableCharacter affectForwardPosition: self.
	
	playableCharacter moveForward.! !
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:13:21' prior: 50873539!
moveCharacterForward

	playableCharacter affectForwardPosition: self.! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:14:01'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:14:12'!
FAILURE!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 18:14:59'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 18:14:59'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 18:14:59'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:14:59'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:14:59'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 18:17:08'!
affectForwardPosition: aRoom
	
	! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 18:18:31' prior: 50873579!
affectForwardPosition: aRoom
	
	aRoom isRoomPositionValid: position +	 heading forwardPoint.
	self moveForward.! !
!Room methodsFor: 'nil' stamp: 'fsabatini 12/10/2020 18:20:05'!
isRoomPositionValid: aPosition
	
	! !

----End fileIn of D:\facultad\Smalltalk\VM-2doParcial\windows64\Packages\TerseGuide.pck.st----!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:24:15' prior: 50873590!
isRoomPositionValid: aPosition
	
	(aPosition y > width) ifTrue: [self error: self invalidMovementForCharacterInRoom ]. ! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:24:25'!
FAILURE!

aPosition y!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:25:41' prior: 50876531!
isRoomPositionValid: aPosition
	
	(aPosition y < width) ifFalse: [self error: self invalidMovementForCharacterInRoom ]. ! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:25:49' prior: 50876543!
isRoomPositionValid: aPosition
	
	(aPosition y < width) ifFalse: [self error: self invalidMovementForCharacterInRoom ].! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 18:26:42' prior: 50873584!
affectForwardPosition: aRoom
	
	aRoom isRoomPositionValid: (position +	 heading forwardPoint).
	self moveForward.! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:26:48'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:26:57'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:27:09'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:27:18'!
FAILURE!

aPosition y!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:28:22' prior: 50876550!
isRoomPositionValid: aPosition
	
	(aPosition y >= width) ifFalse: [self error: self invalidMovementForCharacterInRoom ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:28:30' prior: 50876581!
isRoomPositionValid: aPosition
	
	(aPosition y > width - 1) ifFalse: [self error: self invalidMovementForCharacterInRoom ].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:28:31'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:28:41'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:29:24' prior: 50876588!
isRoomPositionValid: aPosition
	
	(aPosition y > width - 1) ifTrue: [self error: self invalidMovementForCharacterInRoom ].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:29:31'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:30:11' prior: 50876603!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [self error: self invalidMovementForCharacterInRoom ].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:30:14'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:30:40' prior: 50876614!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [self error: self invalidMovementForCharacterInRoom ].! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:30:47' prior: 50876625!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [self error: self invalidMovementForCharacterInRoom ].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:30:50'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:31:34'!
FAILURE!

self invalidMovementForCharacterInRoom!

self class!

self error: self invalidMovementForCharacterInRoom!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:32:46'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:33:00' prior: 50876632!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [^self error: self invalidMovementForCharacterInRoom ].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:33:03'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:34:51'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:34:59'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:36:07' prior: 50876655!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [self error: self invalidMovementForCharacterInRoom ].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:36:11'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 18:37:32' prior: 50876557!
affectForwardPosition: aRoom
	
	aRoom isRoomPositionValid: (position +	 heading forwardPoint).
	self moveForward.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:39:35' prior: 50873517!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error
		withExceptionDo: [:anError |
			self assert: true ].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:40:37' prior: 50876693!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error
		withExceptionDo: [:anError |
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:40:39'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 18:40:39'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 18:40:39'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 18:40:39'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:40:39'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:41:25' prior: 50876711!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: (room characterIsAt: 0@0 facing: #North)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:42:13' prior: 50876749!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: (Room invalidMovementForCharacterInRoom equals: anError messageText).
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:42:17'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:42:24' prior: 50876768!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoom equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:42:25'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:42:44' prior: 50873459!
invalidMovementForCharacterInRoom

	^'Invalid movement for character'! !
!Room class methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:42:50' prior: 50876820!
invalidMovementForCharacterInRoom

	^'Invalid movement for character in room'! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:42:56'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:43:17'!
FAILURE!

	self error: self invalidMovementForCharacterInRoom!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:44:20' prior: 50876675!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self invalidMovementForCharacterInRoom ].
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:44:39' prior: 50876842!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self invalidMovementForCharacterInRoom ].
	! !

	self error: self invalidMovementForCharacterInRoom!

	self error: self invalidWidthForRoomErrorDescription !
!Room class methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:45:39'!
invalidMovementForCharacterInRoomErrorDescription

	^'Invalid movement for character in room'! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:45:39' prior: 50876850!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self invalidMovementForCharacterInRoomErrorDescription ].
	! !

!methodRemoval: Room class #invalidMovementForCharacterInRoom stamp: 'fsabatini 12/10/2020 18:45:39'!
invalidMovementForCharacterInRoom

	^'Invalid movement for character in room'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:45:51' prior: 50876794!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:45:52'!
FAILURE!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:47:32' prior: 50873546!
moveCharacterForward

	playableCharacter affectForwardPosition: self.! !

!methodRemoval: PlayableCharacter #affectForwardPosition: stamp: 'fsabatini 12/10/2020 18:48:01'!
affectForwardPosition: aRoom
	
	aRoom isRoomPositionValid: (position +	 heading forwardPoint).
	self moveForward.!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:49:35' prior: 50876908!
moveCharacterForward

	playableCharacter affectForwardPosition: self.! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:49:39'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 18:51:59'!
affectForwardPosition: aRoom
	
	aRoom isPositionValid: (position + heading forwardPoint)! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:52:10'!
isPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self invalidMovementForCharacterInRoomErrorDescription ].
	! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:52:13'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:52:26' prior: 50876882!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:52:27'!
FAILURE!

aPosition y > (width - 1)!

self error: self invalidMovementForCharacterInRoomErrorDescription!

!testRun: #RobotTest #test09CanNotCloseOrderWhenOutOfOrder stamp: 'fsabatini 12/10/2020 18:55:36'!
PASSED!

!testRun: #RobotTest #test01ShouldReceiveAnEmptyTrailer stamp: 'fsabatini 12/10/2020 18:55:36'!
PASSED!

!testRun: #RobotTest #test02ShouldTakeProductsWhenWorkingNormal stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test03ShouldTakeProductsWhenWorkingWithSensorsFailures stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test04ShouldTakeProductsWhenWorkingWithMechanicalFailures stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test05ShouldNotTakeProductsWhenOutOfOrder stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test06CanCloseOrderWhenWorkingNormal stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test07CanNotCloseOrderWhenWorkingWithSensorsFailures stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test08CanCloseOrderWhenWorkingWithMechanicalFailures stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RobotTest #test09CanNotCloseOrderWhenOutOfOrder stamp: 'fsabatini 12/10/2020 18:55:37'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:56:45'!
FAILURE!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:57:12' prior: 50876920!
moveCharacterForward

self error: self invalidMovementForCharacterInRoomErrorDescription.
	playableCharacter affectForwardPosition: self.! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:57:15'!
FAILURE!

self error: self invalidMovementForCharacterInRoomErrorDescription!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:58:48' prior: 50876947!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withMessageText: Room invalidMovementForCharacterInRoomErrorDescription .
		"
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError.
			self assert: (room characterIsAt: 0@0 facing: #North)]."! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 18:58:50' prior: 50877030!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withMessageText: Room invalidMovementForCharacterInRoomErrorDescription.
		"
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError.
			self assert: (room characterIsAt: 0@0 facing: #North)]."! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:58:50'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 18:59:00'!
FAILURE!

----SNAPSHOT----(10 December 2020 18:59:06) CuisUniversity-4384.image priorSource: 17155564!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 18:59:22' prior: 50877016!
moveCharacterForward

	self error: self invalidMovementForCharacterInRoomErrorDescription.
	playableCharacter affectForwardPosition: self.! !

self error: self invalidMovementForCharacterInRoomErrorDescription.!

self error: self invalidLenghtForRoomErrorDescription!

!methodRemoval: Room #isRoomPositionValid: stamp: 'fsabatini 12/10/2020 19:00:08'!
isRoomPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self invalidMovementForCharacterInRoomErrorDescription ].
	!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:00:24' prior: 50876935!
isPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self class error: self invalidMovementForCharacterInRoomErrorDescription ].
	! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:00:29'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:01:06' prior: 50877108!
isPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:01:09'!
FAILURE!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 19:02:02' prior: 50877089!
moveCharacterForward

	self error: self class invalidMovementForCharacterInRoomErrorDescription.
	playableCharacter affectForwardPosition: self.! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:05'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:02:05'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:02:05'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:02:05'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:05'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:17'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:02:17'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:02:17'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:02:17'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:18'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:02:25' prior: 50877054!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:26'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:29'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:02:41' prior: 50877179!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:41'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:02:41'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:02:41'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:02:42'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:02:42'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:03:28'!
test05PlayableCharacterCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:03:32'!
test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!methodRemoval: RoomTest #test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall stamp: 'fsabatini 12/10/2020 19:03:36'!
test04PlayableCharacterCannotMoveNorthWhenFacingRoomWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:03:49'!
test05PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:03:58'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:04:06' prior: 50877316!
test05PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #East)].! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:04:08'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:04:59'!
test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].! !

!methodRemoval: RoomTest #test05PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:05:03'!
test05PlayableCharacterCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].!

!methodRemoval: RoomTest #test05PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:05:06'!
test05PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #East)].!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:05:07'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:05:07'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:05:07'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:05:07'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:05:07'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:05:07'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:06:33' prior: 50877120!
isPositionValid: aPosition
	
	(aPosition y > (width - 1)) and: [aPosition x > (length -1)] ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:06:42' prior: 50877482!
isPositionValid: aPosition
	
	((aPosition y > (width - 1)) and: [aPosition x > (length -1)]) ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:07:03'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:07:03'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:07:03'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:07:03'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:07:04'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:07:04'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:07:14' prior: 50877491!
isPositionValid: aPosition
	
	((aPosition y > (width - 1)) or: [aPosition x > (length -1)]) ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	! !
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 19:07:34' prior: 50877132!
moveCharacterForward

	playableCharacter affectForwardPosition: self.! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:07:35'!
FAILURE!

	aPosition x > (length -1)!

	aPosition x!

	aPosition y > (width - 1)!

	aPosition y > width!

	width!

	length!

	aPosition!
!Room methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:09:22' prior: 50873076!
initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	playableCharacter := aPlayableCharacter.
	length := aLength.
	width := aWidth.! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:10:26' prior: 50877524!
isPositionValid: aPosition
	
	(aPosition y > (width - 1)) ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ]
	! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:29'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:33'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:10:33'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:10:33'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:10:33'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:33'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:33'!
FAILURE!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:33'!
FAILURE!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:39'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:41'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:10:44'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:11:16' prior: 50877556!
isPositionValid: aPosition
	
	((aPosition y > (width - 1))
		or: [aPosition y < 0])
		
		 ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ]
	! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:11:17'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:11:17'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:11:17'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:11:18'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:11:18'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:11:18'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:11:46'!
test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].! !

!methodRemoval: RoomTest #test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:11:50'!
test05PlayableCharacterCannotMoveBackwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:12:07'!
test06PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:12:15' prior: 50877640!
test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].! !

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:12:18'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:12:18'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:12:18'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:12:19'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:12:19'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:12:19'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:12:19'!
FAILURE!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:12:19'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:12:28' prior: 50877684!
test06PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #East)].! !

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:12:33'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:13:21' prior: 50877608!
isPositionValid: aPosition
	
	((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)])
		
		 ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ]
	! !

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:13:23'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:13:30' prior: 50877760!
test06PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:13:36'!
test07PlayableCharacterCannotMoveForwardWestWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:13:37'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:14:09' prior: 50877786!
isPositionValid: aPosition
	
	((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0])
		
		 ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ]
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:14:12' prior: 50877872!
isPositionValid: aPosition
	
	((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0])
		 ifTrue: [ self error: self class invalidMovementForCharacterInRoomErrorDescription ]
	! !

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:14:13'!
PASSED!

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:14:14'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:15:20'!
test08PlayableCharacterCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:15:26' prior: 50877925!
test08PlayableCharacterCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:15:40' prior: 50877939!
test08PlayableCharacterCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterForward
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:15:56' prior: 50877953!
test08PlayableCharacterCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterForward.
	
	self assert: (room characterIsAt: 0@1 facing: #North)! !

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:15:57'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:16:51' prior: 50876929!
affectForwardPosition: aRoom
	
	aRoom isPositionValid: (position + heading forwardPoint)
	self moveForward. ! !

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:17:02'!
ERROR!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:17:16' prior: 50877989!
affectForwardPosition: aRoom
	
	aRoom isPositionValid: (position + heading forwardPoint).
	self moveForward. ! !

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:17:19'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:18:21'!
test09PlayableCharacterCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:18:24'!
FAILURE!
!Room methodsFor: 'character actions' stamp: 'fsabatini 12/10/2020 19:18:46'!
moveCharacterBackward

	playableCharacter affectBackwardPosition: self.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:19:06'!
affectBackwardPosition: aRoom
	
	aRoom isPositionValid: (position - heading forwardPoint).
	self moveForward. ! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:19:14' prior: 50878072!
affectBackwardPosition: aRoom
	
	aRoom isPositionValid: (position - heading forwardPoint).
	self moveBackward. ! !

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:26'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:19:47' prior: 50878042!
test09PlayableCharacterCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 2 andWidth: 1.
	
	self
		should: [ room moveCharacterBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 1@0 facing: #West)].! !

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:49'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:19:59' prior: 50878125!
test09PlayableCharacterCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:19:59'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:20:13'!
test10PlayableCharacterCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:20:42' prior: 50878212!
test10PlayableCharacterCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)! !

!testRun: #RoomTest #test10PlayableCharacterCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!

!testRun: #RoomTest #test10PlayableCharacterCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 19:20:43'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:11'!
test11PlayerCannotMoveForwardFacingStageObjects
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:18'!
test10PlayerCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)! !

!methodRemoval: RoomTest #test10PlayableCharacterCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 19:22:18'!
test10PlayableCharacterCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:25'!
test09PlayerCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!methodRemoval: RoomTest #test09PlayableCharacterCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:22:25'!
test09PlayableCharacterCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:32'!
test08PlayerCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterForward.
	
	self assert: (room characterIsAt: 0@1 facing: #North)! !

!methodRemoval: RoomTest #test08PlayableCharacterCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:22:32'!
test08PlayableCharacterCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterForward.
	
	self assert: (room characterIsAt: 0@1 facing: #North)!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:38'!
test07PlayerCannotMoveForwardWestWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!methodRemoval: RoomTest #test07PlayableCharacterCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:22:38'!
test07PlayableCharacterCannotMoveForwardWestWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:45'!
test06PlayerCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!methodRemoval: RoomTest #test06PlayableCharacterCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:22:45'!
test06PlayableCharacterCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:22:54'!
test05PlayerCannotMoveForwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].! !

!methodRemoval: RoomTest #test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:22:54'!
test05PlayableCharacterCannotMoveForwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #South)].!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:23:05'!
test04PlayerCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!methodRemoval: RoomTest #test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:23:05'!
test04PlayableCharacterCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ room moveCharacterForward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].!

sarasa := Dictionary new.!

sarasa at: 0@0 put: 'hola' !

sarasa at: 0@0!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:27:13'!
test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject
	
	| room playableCharacter backpack stageObjects |
	
	stageObjects := Dictionary new.
	stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 100).
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)! !

!methodRemoval: RoomTest #test11PlayerCannotMoveForwardFacingStageObjects stamp: 'fsabatini 12/10/2020 19:27:18'!
test11PlayerCannotMoveForwardFacingStageObjects
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)!

Object subclass: #PlayableCharacter
	instanceVariableNames: 'room position heading backpack name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 19:36:16'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'room position heading backpack name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:39:50' prior: 50873148!
test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.

	self assert: (room characterIsAt: 0@0 facing: #North).! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:40:00'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:40:04' prior: 50878650!
test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.

	self assert: (playableCharacter characterIsAt: 0@0 facing: #North).! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:40:05'!
ERROR!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:40:21'!
ERROR!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:40:26'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:40:31'!
withLength: aSmallInteger andWidth: aSmallInteger2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithLength: aSmallInteger andWidth: aSmallInteger2 ! !
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:40:46' prior: 50878696!
withLength: aLength andWidth: aWidth 

	^self new initializeWithLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:40:48'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:40:55'!
initializeWithLength: aLength andWidth: aWidth 
	self shouldBeImplemented.
	length := aLength.
	width := aWidth.! !
!Room methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:40:58' prior: 50878717!
initializeWithLength: aLength andWidth: aWidth 

	length := aLength.
	width := aWidth.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:41:03' prior: 50878669!
test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.

	self assert: (playableCharacter characterIsAt: 0@0 facing: #North).! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:41:04'!
ERROR!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:41:23'!
ERROR!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:41:28'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:41:33'!
named: aString using: aBackpack at: aPoint heading: aSymbol withRoom: aRoom 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString using: aBackpack at: aPoint heading: aSymbol withRoom: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:41:39' prior: 50878758!
named: aString using: aBackpack at: aPoint heading: aSymbol withRoom: aRoom 

	^self new initializeNamed: aString using: aBackpack at: aPoint heading: aSymbol withRoom: aRoom ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:43:45' prior: 50878771!
named: aName using: aBackpack at: aPosition heading: aSymbol withRoom: aRoom 

	| newHeading |
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:44:25' prior: 50878781!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint withRoom: aRoom 

	| newHeading |
	
	newHeading := self headingFor: aCardinalPoint.
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:44:27' prior: 50878791!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint withRoom: aRoom 

	| newHeading |
	
	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom.! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:44:40'!
ERROR!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 19:44:48'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'room position heading backpack name newHeading_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:44:49'!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom 
	self shouldBeImplemented.
	name := aName.
	backpack := aBackpack.
	position := aPosition.
	newHeading_CHANGE_ME := newHeading.
	room := aRoom.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:45:39' prior: 50878828!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom 
	self shouldBeImplemented.
	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := newHeading.
	room := aRoom.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:45:42' prior: 50878839!
initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := newHeading.
	room := aRoom.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 19:45:58' prior: 50878850!
initializeNamed: aName using: aBackpack at: aPosition heading: aHeading withRoom: aRoom 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aHeading.
	room := aRoom.! !

Object subclass: #PlayableCharacter
	instanceVariableNames: 'room position heading backpack name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 19:46:06'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'room position heading backpack name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:48:02'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:49:07' prior: 50878730!
test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.

	self assert: (playableCharacter isAt: 0@0 heading: #North ).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:49:26' prior: 50873193!
test02CannotCreateRoomWhenLenghtIsLesserThanOne
	
	| backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	self
		should: [ Room withLength: 0 andWidth: 1. ]
		raise: Error
		withMessageText: Room invalidLenghtForRoomErrorDescription. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:49:33' prior: 50878905!
test02CannotCreateRoomWhenLenghtIsLesserThanOne
	
	self
		should: [ Room withLength: 0 andWidth: 1. ]
		raise: Error
		withMessageText: Room invalidLenghtForRoomErrorDescription. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:49:43' prior: 50873290!
test03CannotCreateRoomWhenWidthIsLesserThanOne
	
	self
		should: [ Room withLength: 1 andWidth: 0. ]
		raise: Error
		withMessageText: Room invalidWidthForRoomErrorDescription. ! !

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:49:45'!
FAILURE!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:49:45'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:50:06' prior: 50878707!
withLength: aLength andWidth: aWidth 

	(aLength strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	(aWidth strictlyPositive) ifFalse: [self error: self invalidWidthForRoomErrorDescription].
	
	^self new initializeWithLength: aLength andWidth: aWidth ! !

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:50:11'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 19:50:12'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:50:40' prior: 50878551!
test04PlayerCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:50:42'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:51:05' prior: 50879000!
test04PlayerCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North.
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 1.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:51:25' prior: 50868351!
moveForward
	
	room isPositionValid: (position + heading forwardPoint).
	
	position := position + heading forwardPoint! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:51:27' prior: 50879048!
moveForward
	
	room isPositionValid: (position + heading forwardPoint).
	position := position + heading forwardPoint! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:51:34'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:51:49'!
invalidMovementForCharacterInRoomErrorDescription
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeInvalidMovementForCharacterInRoomErrorDescription! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 19:52:18' prior: 50879066!
invalidMovementForCharacterInRoomErrorDescription

	^'Invalid movement for character in room'! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:54:31' prior: 50877883!
isPositionValid: aPosition
	
	^(aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]
	! !
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:55:20' prior: 50879055!
moveForward
	
	(room isPositionValid: (position + heading forwardPoint)) ifFalse: [^self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	position := position + heading forwardPoint! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:55:29'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:56:08' prior: 50879092!
moveForward
	
	(room isPositionValid: (position + heading forwardPoint)) ifFalse: [^self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	position := position + heading forwardPoint! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:56:15'!
FAILURE!

	self error: self class invalidMovementForCharacterInRoomErrorDescription!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:57:10' prior: 50879106!
moveForward
	
	(room isPositionValid: (position + heading forwardPoint)) ifFalse: [^self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	position := position + heading forwardPoint.
	
! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:57:14'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:57:27' prior: 50879084!
isPositionValid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:57:33'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 19:58:29' prior: 50879026!
test04PlayerCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #North)].! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:58:31'!
FAILURE!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:58:51'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 19:59:05' prior: 50879122!
moveForward
	
	(room isPositionValid: (position + heading forwardPoint)) ifFalse: [self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	position := position + heading forwardPoint.
	
! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:59:09'!
FAILURE!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 19:59:28'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 20:00:13' prior: 50879177!
moveForward
	
	(room isPositionValid: (position + heading forwardPoint)) ifTrue: [self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	position := position + heading forwardPoint.
	
! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:18'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:00:39' prior: 50879148!
test04PlayerCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #North)].! !

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:40'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:00:40'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:00:40'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:00:40'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:40'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:40'!
FAILURE!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:40'!
FAILURE!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:40'!
FAILURE!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:00:40'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:40'!
FAILURE!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:00:41'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 20:00:41'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:48'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:00:48'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:00:48'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:00:48'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:49'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:49'!
FAILURE!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:49'!
FAILURE!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:49'!
FAILURE!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:00:49'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:00:49'!
FAILURE!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:00:49'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 20:00:49'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:01:12'!
isPositioninvalid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	! !

!methodRemoval: Room #isPositionValid: stamp: 'fsabatini 12/10/2020 20:01:13'!
isPositionValid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:01:21'!
isPositionInvalid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	! !

!methodRemoval: Room #isPositioninvalid: stamp: 'fsabatini 12/10/2020 20:01:21'!
isPositioninvalid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 20:01:29' prior: 50879195!
moveForward
	
	(room isPositionInvalid: (position + heading forwardPoint)) ifTrue: [self error: self class invalidMovementForCharacterInRoomErrorDescription ].
	position := position + heading forwardPoint.
	
! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:02:03' prior: 50878507!
test05PlayerCannotMoveForwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #South)].! !

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:05'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:02:05'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:02:05'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:02:05'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:05'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:05'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:05'!
FAILURE!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:05'!
FAILURE!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:02:05'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:05'!
FAILURE!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:02:05'!
ERROR!

!testRun: #RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 20:02:05'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:02:21' prior: 50878463!
test06PlayerCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #West)].! !

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:22'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:22'!
FAILURE!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:02:22'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:02:22'!
FAILURE!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:02:22'!
ERROR!

!testRun: #RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 20:02:22'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:02:39' prior: 50879427!
test06PlayerCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #East)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:02:46' prior: 50878419!
test07PlayerCannotMoveForwardWestWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #West)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:03:14' prior: 50878386!
test08PlayerCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter moveForward.
	
	self assert: (room characterIsAt: 0@1 facing: #North)! !

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:03:15'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:03:31' prior: 50879537!
test08PlayerCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter moveForward.
	
	self assert: (room isAt: 0@1 heading: #North)! !

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:03:32'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:03:38' prior: 50879556!
test08PlayerCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := Room withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter moveForward.
	
	self assert: (playableCharacter isAt: 0@1 heading: #North)! !

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:03:40'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:03:40'!
FAILURE!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:03:40'!
ERROR!

!testRun: #RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 20:03:40'!
ERROR!
!PlayableCharacter methodsFor: 'moving' stamp: 'fsabatini 12/10/2020 20:04:18' prior: 50868346!
moveBackward

	(room isPositionInvalid: (position - heading forwardPoint)) ifTrue: [self error: self class invalidMovementForCharacterInRoomErrorDescription ].	
	position := position - heading forwardPoint ! !

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:04:57'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:05:30' prior: 50878343!
test09PlayerCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (room characterIsAt: 0@0 facing: #West)].! !

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:05:31'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:05:43' prior: 50879649!
test09PlayerCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := Room withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: Room invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #West)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:06:07' prior: 50878310!
test10PlayerCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := Room withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:06:21' prior: 50879696!
test10PlayerCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := Room withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
	
	room moveCharacterBackward.
	
	self assert: (playableCharacter isAt: 0@1 heading: #South)! !

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:06:23'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:06:32' prior: 50879712!
test10PlayerCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := Room withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
	
	playableCharacter moveBackward.
	
	self assert: (playableCharacter isAt: 0@1 heading: #South)! !

!methodRemoval: RoomTest #test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject stamp: 'fsabatini 12/10/2020 20:06:42'!
test11PlayerCannotCreateRoomWithPlayerLocatedAtStageObject
	
	| room playableCharacter backpack stageObjects |
	
	stageObjects := Dictionary new.
	stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 100).
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South.
	
	
	room := Room forCharacter: playableCharacter withLength: 1 andWidth: 2.
	
	room moveCharacterBackward.
	
	self assert: (room characterIsAt: 0@1 facing: #South)!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:06:47'!
PASSED!

!methodRemoval: Room class #forCharacter:withLength:andWidth: stamp: 'fsabatini 12/10/2020 20:07:00'!
forCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	(aLength strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	(aWidth strictlyPositive) ifFalse: [self error: self invalidWidthForRoomErrorDescription].
	
	^self new initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth !

!methodRemoval: Room #initializeForCharacter:withLength:andWidth: stamp: 'fsabatini 12/10/2020 20:07:07'!
initializeForCharacter: aPlayableCharacter withLength: aLength andWidth: aWidth 

	playableCharacter := aPlayableCharacter.
	length := aLength.
	width := aWidth.!

Object subclass: #Room
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:07:10'!
Object subclass: #Room
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!methodRemoval: Room #moveCharacterBackward stamp: 'fsabatini 12/10/2020 20:07:14'!
moveCharacterBackward

	playableCharacter affectBackwardPosition: self.!

!methodRemoval: Room #moveCharacterForward stamp: 'fsabatini 12/10/2020 20:07:17'!
moveCharacterForward

	playableCharacter affectForwardPosition: self.!

!methodRemoval: Room #characterIsAt:facing: stamp: 'fsabatini 12/10/2020 20:07:21'!
characterIsAt: aPoint facing: aDirection
	^playableCharacter isAt: aPoint heading: aDirection.!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:07:52'!
PASSED!

!methodRemoval: PlayableCharacter #affectForwardPosition: stamp: 'fsabatini 12/10/2020 20:07:59'!
affectForwardPosition: aRoom
	
	aRoom isPositionValid: (position + heading forwardPoint).
	self moveForward. !

!methodRemoval: PlayableCharacter #affectBackwardPosition: stamp: 'fsabatini 12/10/2020 20:08:01'!
affectBackwardPosition: aRoom
	
	aRoom isPositionValid: (position - heading forwardPoint).
	self moveBackward. !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fsabatini 12/10/2020 20:08:51'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fsabatini 12/10/2020 20:08:51'!
ERROR!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fsabatini 12/10/2020 20:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fsabatini 12/10/2020 20:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 20:08:51'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fsabatini 12/10/2020 20:08:51'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fsabatini 12/10/2020 20:08:51'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fsabatini 12/10/2020 20:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fsabatini 12/10/2020 20:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fsabatini 12/10/2020 20:08:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 20:09:09'!
ERROR!

Object subclass: #DefaultRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #DefaultRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:09:23'!
Object subclass: #DefaultRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Object subclass: #FixedRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #FixedRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:09:34'!
Object subclass: #FixedRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #FixedRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #FixedRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #FixedRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #FixedRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:10:35'!
Room subclass: #FixedRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #DefaultRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:10:42'!
Room subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!FixedRoom methodsFor: 'no messages' stamp: 'fsabatini 12/10/2020 20:11:19' overrides: 50879335!
isPositionInvalid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:11:38' prior: 50879335!
isPositionInvalid: aPosition
	
	self subclassResponsibility
	! !
!FixedRoom methodsFor: 'nil' stamp: 'fsabatini 12/10/2020 20:12:02' overrides: 50878724!
initializeWithLength: aLength andWidth: aWidth 

	length := aLength.
	width := aWidth.! !

!methodRemoval: FixedRoom #initializeWithLength:andWidth: stamp: 'fsabatini 12/10/2020 20:12:17'!
initializeWithLength: aLength andWidth: aWidth 

	length := aLength.
	width := aWidth.!

!classRemoval: #DefaultRoom stamp: 'fsabatini 12/10/2020 20:12:33'!
Room subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classRemoval: #FixedRoom stamp: 'fsabatini 12/10/2020 20:12:37'!
Room subclass: #FixedRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:01:21' prior: 50880019!
isPositionInvalid: aPosition
	
	^((aPosition y > (width - 1))
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	! !

Object subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #DefaultRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:14:20'!
Object subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!DefaultRoom methodsFor: 'no messages' stamp: 'fsabatini 12/10/2020 20:14:31'!
isPositionInvalid: aPosition
	
	^false.! !

!classRenamed: #Room as: #FixedRoom stamp: 'fsabatini 12/10/2020 20:14:51'!
Smalltalk renameClassNamed: #Room as: #FixedRoom!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879732!
test10PlayerCanMoveBackwardWhenInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := FixedRoom withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
	
	playableCharacter moveBackward.
	
	self assert: (playableCharacter isAt: 0@1 heading: #South)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879674!
test09PlayerCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: FixedRoom invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #West)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879209!
test04PlayerCannotMoveForwardNorthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #North)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879515!
test07PlayerCannotMoveForwardWestWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #West)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879575!
test08PlayerCanMoveForwardsInRoomBorders
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := FixedRoom withLength: 1 andWidth: 2.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter moveForward.
	
	self assert: (playableCharacter isAt: 0@1 heading: #North)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50878917!
test02CannotCreateRoomWhenLenghtIsLesserThanOne
	
	self
		should: [ FixedRoom withLength: 0 andWidth: 1. ]
		raise: Error
		withMessageText: FixedRoom invalidLenghtForRoomErrorDescription. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50878889!
test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.

	self assert: (playableCharacter isAt: 0@0 heading: #North ).! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50878926!
test03CannotCreateRoomWhenWidthIsLesserThanOne
	
	self
		should: [ FixedRoom withLength: 1 andWidth: 0. ]
		raise: Error
		withMessageText: FixedRoom invalidWidthForRoomErrorDescription. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879493!
test06PlayerCannotMoveForwardEastWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #East withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #East)].! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:14:52' prior: 50879360!
test05PlayerCannotMoveForwardSouthWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #South)].! !

Object subclass: #Room
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:15:08'!
Object subclass: #Room
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #FixedRoom
	instanceVariableNames: 'length width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #FixedRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #FixedRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:15:22'!
Room subclass: #FixedRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #DefaultRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:15:27'!
Room subclass: #DefaultRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:15:42'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:15:42'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:15:42'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:15:42'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:15:42'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:15:42'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:15:43'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:15:43'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:15:43'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:15:43'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 20:15:48'!
ERROR!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 20:15:48'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:16:37' prior: 50868391!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint 
	
	^self named: aName using: aBackpack at: aPosition heading: aCardinalPoint withRoom: DefaultRoom new.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fsabatini 12/10/2020 20:16:42'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:16:45'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:16:46'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:16:46'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:16:46'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fsabatini 12/10/2020 20:16:50'!
PASSED!

!methodRemoval: PlayableCharacter #initializeNamed:using:at:heading: stamp: 'fsabatini 12/10/2020 20:16:58'!
initializeNamed: aName using: aBackpack at: aPosition heading: aMarsRoverHeading 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aMarsRoverHeading!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:17:45'!
test11PlayerCannotStartOnStageObject! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:18:31' prior: 50880478!
test11PlayerCannotStartOnStageObject

	| room playableCharacter backpack |
		
		backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
		
		
		room := FixedRoom withLength: 1 andWidth: 2.
		playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
		
		playableCharacter moveBackward.
		
		self assert: (playableCharacter isAt: 0@1 heading: #South)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:18:39'!
defaultRoom

	^ FixedRoom withLength: 1 andWidth: 2! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:18:39' prior: 50880483!
test11PlayerCannotStartOnStageObject

	| room playableCharacter backpack |
		
		backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
		
		
		room := self defaultRoom.
		playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
		
		playableCharacter moveBackward.
		
		self assert: (playableCharacter isAt: 0@1 heading: #South)! !

!methodRemoval: RoomTest #defaultRoom stamp: 'fsabatini 12/10/2020 20:19:04'!
defaultRoom

	^ FixedRoom withLength: 1 andWidth: 2!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:19:09' prior: 50880504!
test11PlayerCannotStartOnStageObject

	| room playableCharacter backpack |
		
		backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
		
		
		room := FixedRoom withLength: 1 andWidth: 2.
		playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
		
		playableCharacter moveBackward.
		
		self assert: (playableCharacter isAt: 0@1 heading: #South)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:22:16' prior: 50880524!
test11PlayerCannotStartOnStageObject

	| room playableCharacter backpack stageObjects |
		
		backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
		
		stageObjects := Dictionary new.
		stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
		
		room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
		playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
		
		playableCharacter moveBackward.
		
		self assert: (playableCharacter isAt: 0@1 heading: #South)! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:22:17'!
ERROR!
!FixedRoom class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:22:34'!
withLength: aSmallInteger andWidth: aSmallInteger2 withStageObjects: aDictionary 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithLength: aSmallInteger andWidth: aSmallInteger2 withStageObjects: aDictionary ! !
!FixedRoom class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:23:12' prior: 50880566!
withLength: aLength andWidth: aWidth withStageObjects: stageObjects

	^self new initializeWithLength: aLength andWidth: aWidth withStageObjects: stageObjects ! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:23:14'!
ERROR!

!classDefinition: #FixedRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:23:21'!
Room subclass: #FixedRoom
	instanceVariableNames: 'stageObjects_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!FixedRoom methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 20:23:21'!
initializeWithLength: aLength andWidth: aWidth withStageObjects: stageObjects 
	self shouldBeImplemented.
	length := aLength.
	width := aWidth.
	stageObjects_CHANGE_ME := stageObjects.! !
!FixedRoom methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 20:23:26' prior: 50880599!
initializeWithLength: aLength andWidth: aWidth withStageObjects: stageObjects 

	length := aLength.
	width := aWidth.
	stageObjects_CHANGE_ME := stageObjects.! !

Room subclass: #FixedRoom
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #FixedRoom
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #FixedRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:23:58'!
Room subclass: #FixedRoom
	instanceVariableNames: 'stageObjects_CHANGE_ME stage'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!FixedRoom methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 20:23:57' prior: 50880608!
initializeWithLength: aLength andWidth: aWidth withStageObjects: stageObjects 

	length := aLength.
	width := aWidth.
	stage := stageObjects.! !

Room subclass: #FixedRoom
	instanceVariableNames: 'stage'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #FixedRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 20:24:03'!
Room subclass: #FixedRoom
	instanceVariableNames: 'stage'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!methodRemoval: FixedRoom #initializeWithLength:andWidth: stamp: 'fsabatini 12/10/2020 20:24:13'!
initializeWithLength: aLength andWidth: aWidth 

	length := aLength.
	width := aWidth.!
!FixedRoom class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:24:25' prior: 50880579!
withLength: aLength andWidth: aWidth withStageObjects: stageObjects

	(aLength strictlyPositive) ifFalse: [self error: self invalidLenghtForRoomErrorDescription].
	(aWidth strictlyPositive) ifFalse: [self error: self invalidWidthForRoomErrorDescription].
	
	^self new initializeWithLength: aLength andWidth: aWidth withStageObjects: stageObjects ! !
!FixedRoom class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:24:49' prior: 50878943!
withLength: aLength andWidth: aWidth 
	
	^self withLength: aLength andWidth: aWidth withStageObjects: Dictionary new.! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:24:56'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:26:53' prior: 50880541!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
		backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
		
		stageObjects := Dictionary new.
		stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
		
		room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
		PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:26:54' prior: 50880723!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
		backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
		
		stageObjects := Dictionary new.
		stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
		
		room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
		
		PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:27:39' prior: 50880740!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
	
	PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room.
		
	self
		should: [ FixedRoom withLength: 1 andWidth: 0. ]
		raise: Error
		withMessageText: FixedRoom invalidWidthForRoomErrorDescription. ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:28:19' prior: 50880757!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:28:27'!
ERROR!
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 20:28:46'!
invalidStartPositionForCharacter
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 20:29:15' prior: 50880803!
invalidStartPositionForCharacter
	^true! !
!PlayableCharacter class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 20:29:37' prior: 50880809!
invalidStartPositionForCharacter
	^'Invalid start position for character in room'! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:31:00' prior: 50878803!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint withRoom: aRoom 

	| newHeading |
	
	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom positionIsOcuppedByStageObject	: aPosition) ifTrue: [self error: self invalidStartPositionForCharacter ].
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom.! !

!methodRemoval: FixedRoom class #invalidMovementForCharacterInRoomErrorDescription stamp: 'fsabatini 12/10/2020 20:31:49'!
invalidMovementForCharacterInRoomErrorDescription

	^'Invalid movement for character in room'!
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:32:21'!
positionIsOcuppedByStageObject: aPosition
	
	stage includes: aPosition.
	! !
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:32:26' prior: 50880843!
positionIsOcuppedByStageObject: aPosition
	
	^stage includes: aPosition.
	! !
!DefaultRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:32:34'!
positionIsOcuppedByStageObject: aPosition
	
	^false.! !
!Room methodsFor: 'nil' stamp: 'fsabatini 12/10/2020 20:32:45'!
positionIsOcuppedByStageObject: aPosition

	self subclassResponsibility ! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:32:56'!
isPositionInvalid: aPosition

	self subclassResponsibility ! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:33:03'!
FAILURE!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:33:21'!
FAILURE!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 20:34:07' prior: 50880821!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint withRoom: aRoom 

	| newHeading |
	
	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom positionIsOcuppedByStageObject: aPosition) ifTrue: [self error: self invalidStartPositionForCharacter ].
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading withRoom: aRoom.! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:34:11'!
FAILURE!

	aRoom positionIsOcuppedByStageObject: aPosition!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:34:50' prior: 50880779!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: (0@0) put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:34:59'!
FAILURE!

sarasa := Dictionary new.!

sarasa at: 0@0 put: 'sarasa'!

sarasa at: 1@1 put: 'magia'!

sarasa at: 1@1!

aPosition := 1@1.!

sarasa at: aPosition !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:36:14' prior: 50880897!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@0 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 1 andWidth: 2 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #South withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.! !

sarasa includes: 1@1!

sarasa includes: 2@2!
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:37:33' prior: 50880849 overrides: 50880859!
positionIsOcuppedByStageObject: aPosition
	
	^stage includesKey: aPosition.
	! !

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:37:36'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:37:36'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:37:36'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:37:36'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:36'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:37'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:37'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:37'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:37:37'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:37'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:37:37'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:37:37'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:37'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:50'!
ERROR!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:58'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:37:58'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:37:58'!
ERROR!

----SNAPSHOT----(10 December 2020 20:38:18) CuisUniversity-4384.image priorSource: 17453908!

----QUIT----(10 December 2020 20:38:24) CuisUniversity-4384.image priorSource: 17580729!

----STARTUP---- (10 December 2020 20:39:05) as D:\facultad\Smalltalk\VM-2doParcial\windows64\CuisUniversity-4384.image!


!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:45:11'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:45:12'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:45:12'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:45:12'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:45:12'!
ERROR!

----STARTUP---- (10 December 2020 20:45:58) as D:\facultad\Smalltalk\VM-2doParcial\windows64\CuisUniversity-4384.image!


!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:28'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:46:29'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:29'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:46:29'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:46:29'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:29'!
ERROR!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:46:32'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:46:32'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:46:32'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:46:32'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:32'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:33'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:33'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:33'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:46:33'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:33'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:46:33'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:46:33'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:46:33'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:04'!
ERROR!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:47:09'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:47:09'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:47:09'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:10'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:47:10'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:10'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:47:29'!
ERROR!

----End fileIn of D:\facultad\Smalltalk\VM-Guia\windows64\ISW1-2020-2C-2doParcial.st----!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:49:19'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:49:19'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:49:19'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:49:19'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:19'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:20'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:20'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:20'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:49:20'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:20'!
ERROR!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:49:20'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:49:20'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:20'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:41'!
ERROR!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:49:58'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:50:08' prior: 50876372!
test09PlayerCannotMoveBackwardWhenFacingWall
	
	| room playableCharacter backpack |
	
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	
	room := FixedRoom withLength: 1 andWidth: 1.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #West withRoom: room.
	
	self
		should: [ playableCharacter moveBackward]
		raise: Error 
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription equals: anError messageText.
			self assert: (playableCharacter isAt: 0@0 heading: #West)].! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:50:11'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:50:37' prior: 50876409!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:50:57'!
test11PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:50:59'!
test12PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.! !

!methodRemoval: RoomTest #test11PlayerCannotStartOnStageObject stamp: 'fsabatini 12/10/2020 20:51:02'!
test11PlayerCannotStartOnStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:52:56' prior: 50877254!
test12PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [  ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:53:07' prior: 50877295!
test12PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .! !
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:54:45' prior: 50876901 overrides: 50876848!
isPositionInvalid: aPosition
	
	^((self positionIsOcuppedByStageObject: aPosition)
		or: [aPosition y > (width - 1)]
		or: [aPosition y < 0]
		or: [aPosition x > (length - 1)]
		or: [aPosition x < 0]).
	! !

!testRun: #RoomTest #test12PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:54:55'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:54:56'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:54:56'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:54:56'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:54:56'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:54:56'!
FAILURE!

!testRun: #RoomTest #test12PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:54:56'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:54:56'!
FAILURE!

!methodRemoval: RoomTest #test11PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:55:01'!
test11PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	
	self
		should: [ PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room. ]
		raise: Error
		withMessageText: PlayableCharacter invalidStartPositionForCharacter.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:55:11'!
test11PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .! !

!testRun: #RoomTest #test11PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:55:15'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 20:55:15'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:55:15'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 20:55:15'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:55:15'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 20:55:15'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!

!testRun: #RoomTest #test12PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:55:16'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:55:30'!
test11PlayerCannotMoveFacingStageObject

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .! !

!methodRemoval: RoomTest #test11PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:55:33'!
test11PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .!

!methodRemoval: RoomTest #test12PlayerCannotMoveForwardsFacingStageObject stamp: 'fsabatini 12/10/2020 20:55:36'!
test12PlayerCannotMoveForwardsFacingStageObject

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:57:19'!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: (PointsPortableObject named: 'key' weighing: 5 worth: 20).
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter moveForward ]
		raise: Error
		withMessageText: PlayableCharacter invalidMovementForCharacterInRoomErrorDescription .! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:58:04' prior: 50877565!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: stageObjects ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 20:58:31' prior: 50877588!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: stageObjects ! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:01:24' prior: 50876670!
take: aPortableObject

	room affectStageObjectWith: self.
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:02:38' prior: 50877629!
take: aPortableObject

	room removePortableObjectsWith: self.
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:03:47' prior: 50877636!
take: aPortableObject

	room positionIsOcuppedByStageObject: position.
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:05:52' prior: 50877643!
take: aPortableObject

	room playerIsFacingStageObject: self.
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:07:01' prior: 50877650!
take: aPortableObject

	room playerIsFacingStageObject: position.
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:07:17' prior: 50877657!
take: aPortableObject

	room playerIsFacingStageObject: position + heading forwardPoint.
	backpack add: aPortableObject.! !
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:07:47'!
playerIsFacingStageObject: aPosition
	
	^self positionIsOcuppedByStageObject: aPosition.
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:08:29'!
playerIsFacingStageObject: aPosition

	self subclassResponsibility ! !
!DefaultRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:08:55' overrides: 50877677!
playerIsFacingStageObject: aPosition

	^true! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:08:58'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:08:59'!
ERROR!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:08:59'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fsabatini 12/10/2020 21:09:12'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:09:26' prior: 50877608!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: stageObjects 
	
	! !

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:09:26'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:09:48' prior: 50877664!
take: aPortableObject

	room playerIsFacingStageObject: (position + heading forwardPoint).
	backpack add: aPortableObject.! !

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:09:49'!
ERROR!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:10:11'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:11:13' prior: 50877776!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: key 
	
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:11:52' prior: 50877815!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: key.
	
	self assert: (playableCharacter backpackIncludes: key)
	! !

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:11:53'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:12:44' prior: 50877835!
test12PlayerCanTakeStageObjectWhenFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: key.
	
	self assert: (playableCharacter backpackIncludes: key).
	self deny: (room positionIsOcuppedByStageObject: 0@1)
	! !

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:12:50'!
FAILURE!
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:13:35'!
playerCanTakeStageObject: aPosition
	
	self positionIsOcuppedByStageObject: aPosition.
	! !
!DefaultRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:13:49'!
playerCanTakeStageObject: aPosition

	^true! !

!methodRemoval: DefaultRoom #playerIsFacingStageObject: stamp: 'fsabatini 12/10/2020 21:13:53'!
playerIsFacingStageObject: aPosition

	^true!

!methodRemoval: FixedRoom #playerIsFacingStageObject: stamp: 'fsabatini 12/10/2020 21:13:57'!
playerIsFacingStageObject: aPosition
	
	^self positionIsOcuppedByStageObject: aPosition.
	!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:14:06' prior: 50877800!
take: aPortableObject

	room playerCanTakeStageObject: (position + heading forwardPoint).
	backpack add: aPortableObject.! !

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'fsabatini 12/10/2020 21:15:00'!
PASSED!
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:16:13' prior: 50877931!
playerCanTakeStageObject: aPosition
	
	(self positionIsOcuppedByStageObject: aPosition) ifFalse: [] ifTrue: [stage remove: aPosition ].
	! !
!FixedRoom class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 21:16:56'!
invalidPositionForStageObject
	
	^'the position must contain a stage object'! !
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:17:19' prior: 50877965!
playerCanTakeStageObject: aPosition
	
	(self positionIsOcuppedByStageObject: aPosition) ifFalse: [self error: self class invalidPositionForStageObject ] ifTrue: [stage remove: aPosition ].
	! !

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:17:44'!
ERROR!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:18:03'!
ERROR!
!FixedRoom methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:18:22' prior: 50877979!
playerCanTakeStageObject: aPosition
	
	(self positionIsOcuppedByStageObject: aPosition) ifFalse: [self error: self class invalidPositionForStageObject ] ifTrue: [stage removeKey: aPosition ].
	! !

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:18:26'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:18:27'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:18:48'!
test12PlayerCannotTakeStageObjectIfIsNotFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: key.
	
	self assert: (playableCharacter backpackIncludes: key).
	self deny: (room positionIsOcuppedByStageObject: 0@1)
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:18:51'!
test13PlayerCannotTakeStageObjectIfIsNotFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: key.
	
	self assert: (playableCharacter backpackIncludes: key).
	self deny: (room positionIsOcuppedByStageObject: 0@1)
	! !

!methodRemoval: RoomTest #test12PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:18:53'!
test12PlayerCannotTakeStageObjectIfIsNotFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	playableCharacter take: key.
	
	self assert: (playableCharacter backpackIncludes: key).
	self deny: (room positionIsOcuppedByStageObject: 0@1)
	!

----End fileIn of D:\facultad\Smalltalk\ingenieria1-exactas-master\18-Portfolio\Portfolio-Ejercicio.st----!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:21:32' prior: 50878076!
test13PlayerCannotTakeStageObjectIfIsNotFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: Room invalidPositionForStageObject.
	! !

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:21:33'!
ERROR!

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:21:42'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:21:55' prior: 50878932!
test13PlayerCannotTakeStageObjectIfIsNotFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 21:22:42'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:23:35'!
test14PlayerCanTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:23:51'!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:24:11'!
test15PlayerCanTakePortableObjectContainedInNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:24:23'!
test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !

!methodRemoval: RoomTest #test14PlayerCanTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:24:29'!
test14PlayerCanTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:25:49' prior: 50879022!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := NonPortableObject with: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:26:04' prior: 50879045!
test15PlayerCanTakePortableObjectContainedInNonPortableObject

	self shouldBeImplemented 
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:26:14' prior: 50879068!
test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject

	self shouldBeImplemented 
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:26:41'!
test17PlayerCannotTakeAllStageObjectsIfBackpackLimitIsExceeded

	self shouldBeImplemented 
	! !
!FixedRoom methodsFor: 'player interactions' stamp: 'fsabatini 12/10/2020 21:31:26'!
signalInvalidPosition

	^ self error: self class invalidPositionForStageObject! !
!FixedRoom methodsFor: 'player interactions' stamp: 'fsabatini 12/10/2020 21:31:27' prior: 50877996!
playerCanTakeStageObject: aPosition
	
	(self positionIsOcuppedByStageObject: aPosition) ifFalse: [self signalInvalidPosition ] ifTrue: [stage removeKey: aPosition ].
	! !

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 21:32:14'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:33:14' prior: 50879116!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := NonPortableObject named: 'box' withStageObjects: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:33:17'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 21:33:28'!
named: aString withStageObjects: anArray 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString withStageObjects: anArray ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 21:33:46' prior: 50879214!
named: aName withStageObjects: aCollectionOfStageObjects 

	^self new initializeNamed: aName withStageObjects: aCollectionOfStageObjects ! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:33:47'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 21:33:57'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'fsabatini 12/10/2020 21:33:57'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects name collectionOfStageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 21:33:57'!
initializeNamed: aName withStageObjects: aCollectionOfStageObjects 
	self shouldBeImplemented.
	name := aName.
	collectionOfStageObjects := aCollectionOfStageObjects.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'fsabatini 12/10/2020 21:34:01' prior: 50879254!
initializeNamed: aName withStageObjects: aCollectionOfStageObjects 

	name := aName.
	collectionOfStageObjects := aCollectionOfStageObjects.! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:34:12'!
FAILURE!
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:34:31' prior: 50879187!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter box |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	box := NonPortableObject named: 'box' withStageObjects: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: box.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: box ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:35:26'!
takePortableObject: aPortableObject

	room playerCanTakeStageObject: (position + heading forwardPoint).
	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:35:34' prior: 50879298!
takePortableObject: aPortableObject

	backpack add: aPortableObject.! !
!PortableObject methodsFor: 'nil' stamp: 'fsabatini 12/10/2020 21:37:26'!
affectPortableObject: aPlayer
	aPlayer takePortableObject: self.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:37:31' prior: 50879311!
affectPortableObject: aPlayer

	aPlayer takePortableObject: self.! !
!NonPortableObject methodsFor: 'nil' stamp: 'fsabatini 12/10/2020 21:37:52'!
affectPortableObject: aPlayer

	! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'fsabatini 12/10/2020 21:38:25' prior: 50877953!
take: aPortableObject

	room playerCanTakeStageObject: (position + heading forwardPoint).
	aPortableObject affectPortableObject: self.! !

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:38:31'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:38:31'!
FAILURE!

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:38:31'!
FAILURE!

!testRun: #RoomTest #test15PlayerCanTakePortableObjectContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:38:31'!
ERROR!

!testRun: #RoomTest #test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:38:32'!
ERROR!

!testRun: #RoomTest #test17PlayerCannotTakeAllStageObjectsIfBackpackLimitIsExceeded stamp: 'fsabatini 12/10/2020 21:38:32'!
ERROR!

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:38:45'!
FAILURE!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:39:31'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:39:32'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:39:32'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:39:32'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:39:32'!
FAILURE!

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:39:32'!
FAILURE!

!testRun: #RoomTest #test15PlayerCanTakePortableObjectContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:39:32'!
ERROR!

!testRun: #RoomTest #test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:39:32'!
ERROR!

!testRun: #RoomTest #test17PlayerCannotTakeAllStageObjectsIfBackpackLimitIsExceeded stamp: 'fsabatini 12/10/2020 21:39:32'!
ERROR!
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:40:36' prior: 50878962!
test13PlayerCannotTakeStageObjectIfIsNotFacingIt

	| room backpack stageObjects playableCharacter key |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	key := PointsPortableObject named: 'key' weighing: 5 worth: 20.
	
	stageObjects := Dictionary new.
	stageObjects at: 1@0 put: key.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: key ]
		raise: Error
		withMessageText: FixedRoom invalidPositionForStageObject.
	! !

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:40:37'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:40:37'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:40:37'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:40:37'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:40:37'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:40:37'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:40:38'!
PASSED!

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:40:38'!
FAILURE!

!testRun: #RoomTest #test15PlayerCanTakePortableObjectContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:40:38'!
ERROR!

!testRun: #RoomTest #test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:40:38'!
ERROR!

!testRun: #RoomTest #test17PlayerCannotTakeAllStageObjectsIfBackpackLimitIsExceeded stamp: 'fsabatini 12/10/2020 21:40:38'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'fsabatini 12/10/2020 21:42:25' prior: 50879322!
affectPortableObject: aPlayer

	stageObjects do: [ :stageObject | stageObject affectPortableObject: aPlayer ].

	! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:43:02'!
FAILURE!
!NonPortableObject methodsFor: 'affect' stamp: 'fsabatini 12/10/2020 21:44:02' prior: 50879562!
affectPortableObject: aPlayer

	stageObjects do: [ :stageObject | stageObject affectPortableObject: aPlayer ].

	! !
!NonPortableObject methodsFor: 'affect' stamp: 'fsabatini 12/10/2020 21:44:08' prior: 50879573!
affectPortableObject: aPlayer

	stageObjects ifEmpty: [].
	stageObjects do: [ :stageObject | stageObject affectPortableObject: aPlayer ].

	! !
!NonPortableObject methodsFor: 'affect' stamp: 'fsabatini 12/10/2020 21:44:15' prior: 50879580!
affectPortableObject: aPlayer

	stageObjects do: [ :stageObject | stageObject affectPortableObject: aPlayer ].

	! !
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:45:49' prior: 50879275!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter box |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	box := NonPortableObject named: 'box' withStageObjects: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: box.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: box ]
		raise: Error
		withMessageText: FixedRoom cannotTakeNonPortableObject.
	! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:45:54'!
ERROR!
!FixedRoom class methodsFor: 'instance creation' stamp: 'fsabatini 12/10/2020 21:45:59'!
cannotTakeNonPortableObject
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeCannotTakeNonPortableObject! !
!FixedRoom class methodsFor: 'error descriptions' stamp: 'fsabatini 12/10/2020 21:46:26'!
cannotTakeNonPortableObjectErrorDescription
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeCannotTakeNonPortableObject! !

!methodRemoval: FixedRoom class #cannotTakeNonPortableObject stamp: 'fsabatini 12/10/2020 21:46:26'!
cannotTakeNonPortableObject
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeCannotTakeNonPortableObject!

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:46:34'!
ERROR!
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:47:05' prior: 50879595!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter box |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	box := NonPortableObject named: 'box' withStageObjects: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: box.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self
		should: [ playableCharacter take: box ]
		raise: Error
		withMessageText: FixedRoom cannotTakeNonPortableObjectsWithNoPortableObjectsErrorDescription.
	! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:47:08'!
ERROR!
!FixedRoom class methodsFor: 'errors descriptions' stamp: 'fsabatini 12/10/2020 21:47:19'!
cannotTakeNonPortableObjectsWithNoPortableObjectsErrorDescription
	self shouldBeImplemented.! !
!FixedRoom class methodsFor: 'errors descriptions' stamp: 'fsabatini 12/10/2020 21:47:41' prior: 50879681!
cannotTakeNonPortableObjectsWithNoPortableObjectsErrorDescription
	^'cannot take non portable objects with no portable objects inside'! !
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:48:41' prior: 50879139!
test15PlayerCanTakePortableObjectContainedInNonPortableObject
	"Quiero dejar como nota que ten�a pensado algunos de los siguientes tests que seguian pero me quede sin tiempo"
	self shouldBeImplemented 
	! !
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:49:04' prior: 50879146!
test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject
	"Dejo como nota que ten�a pensado los siguientes tests que ten�a que hacer pero me quede sin tiempo"
	self shouldBeImplemented 
	! !
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:49:08' prior: 50879152!
test17PlayerCannotTakeAllStageObjectsIfBackpackLimitIsExceeded
	"Dejo como nota que ten�a pensado los siguientes tests que ten�a que hacer pero me quede sin tiempo"
	self shouldBeImplemented 
	! !
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:49:12' prior: 50879696!
test15PlayerCanTakePortableObjectContainedInNonPortableObject
	"Dejo como nota que ten�a pensado los siguientes tests que ten�a que hacer pero me quede sin tiempo"
	self shouldBeImplemented 
	! !

!methodRemoval: FixedRoom class #cannotTakeNonPortableObjectErrorDescription stamp: 'fsabatini 12/10/2020 21:49:29'!
cannotTakeNonPortableObjectErrorDescription
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeCannotTakeNonPortableObject!
!NonPortableObject methodsFor: 'affect' stamp: 'fsabatini 12/10/2020 21:50:25' prior: 50879588!
affectPortableObject: aPlayer

	stageObjects do: [ :stageObject | stageObject affectPortableObject: aPlayer ].

	! !
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:50:52' prior: 50879653!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter box |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	box := NonPortableObject named: 'box' withStageObjects: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: box.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	"me quede sin tiempo para completar el test"
	! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test01RoomIsCreatedWithPlayableCharacterAtCorrectPosition stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test02CannotCreateRoomWhenLenghtIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test03CannotCreateRoomWhenWidthIsLesserThanOne stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test04PlayerCannotMoveForwardNorthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test05PlayerCannotMoveForwardSouthWhenFacingWall stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test06PlayerCannotMoveForwardEastWhenFacingWall stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test07PlayerCannotMoveForwardWestWhenFacingWall stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test08PlayerCanMoveForwardsInRoomBorders stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test09PlayerCannotMoveBackwardWhenFacingWall stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test10PlayerCanMoveBackwardWhenInRoomBorders stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test11PlayerCannotMoveFacingStageObject stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test12PlayerCanTakeStageObjectWhenFacingIt stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test13PlayerCannotTakeStageObjectIfIsNotFacingIt stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:51:03'!
PASSED!

!testRun: #RoomTest #test15PlayerCanTakePortableObjectContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:51:03'!
ERROR!

!testRun: #RoomTest #test16PlayerCanTakeMultiplePortableObjectsContainedInNonPortableObject stamp: 'fsabatini 12/10/2020 21:51:03'!
ERROR!

!testRun: #RoomTest #test17PlayerCannotTakeAllStageObjectsIfBackpackLimitIsExceeded stamp: 'fsabatini 12/10/2020 21:51:03'!
ERROR!
!RoomTest methodsFor: 'stage objects interaction' stamp: 'fsabatini 12/10/2020 21:51:16' prior: 50879752!
test14PlayerCannotTakeStageObjectForSingleNonPortableObject

	| room backpack stageObjects playableCharacter box |
		
	backpack := Backpack containingUpTo: 100 limitingPointsTo: 100.
	
	box := NonPortableObject named: 'box' withStageObjects: {}.
		
	stageObjects := Dictionary new.
	stageObjects at: 0@1 put: box.
	
	room := FixedRoom withLength: 5 andWidth: 5 withStageObjects: stageObjects.
	playableCharacter := PlayableCharacter named: 'Federico' using: backpack at: 0@0 heading: #North withRoom: room.
	
	self shouldBeImplemented 
	"me quede sin tiempo para completar el test"
	! !

!testRun: #RoomTest #test14PlayerCannotTakeStageObjectForSingleNonPortableObject stamp: 'fsabatini 12/10/2020 21:51:18'!
ERROR!

----SNAPSHOT----(10 December 2020 21:51:34) CuisUniversity-4384.image priorSource: 17410921!