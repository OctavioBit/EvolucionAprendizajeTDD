----STARTUP---- (10 December 2020 18:03:43) as /home/pablo/Documents/Ingenieria1/cuis_parcial2/CuisUniversity-4384.image!


----End fileIn of /home/pablo/Documents/Ingenieria1/cuis_parcial2/ISW1-2020-2C-2doParcial.st----!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:04:31'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:06:38'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'no messages' stamp: 'PGTA 12/10/2020 18:06:35'!
test01_RoomCannotHaveNonIntegerWidth

	self should: [ Room width: 0.1 height: 3]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBeIntegersErrorDescription! !

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:06:43'!
ERROR!
!Room class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 18:07:07'!
dimensionsMustBeIntegersErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 18:07:31' prior: 50868670!
dimensionsMustBeIntegersErrorDescription
	^'dimensionsMustBeIntegersErrorDescription'! !

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:07:33'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:07:39'!
width: aSmallFloat64 height: aSmallInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWidth: aSmallFloat64 height: aSmallInteger ! !
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:08:30' prior: 50868684!
width: aWidth height: aHeight
	^self error: self dimensionsMustBeIntegersErrorDescription ! !

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:08:32'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:08:32'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:08:55'!
test02_RoomCannotHaveNonIntegerHeight

	self should: [ Room width: 4 height: 3.4]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBeIntegersErrorDescription! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:09:47'!
test02_RoomCannotHaveNegativeWidth

	self should: [ Room width: -4 height: 3]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBePositiveErrorDescription! !

!methodRemoval: RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:09:53'!
test02_RoomCannotHaveNegativeWidth

	self should: [ Room width: -4 height: 3]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBePositiveErrorDescription!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:10:23'!
test02_RoomCannotHaveNegativeWidth

	self should: [ Room width: 4 height: 3.4]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBeIntegersErrorDescription! !

!methodRemoval: RoomTest #test02_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:10:23'!
test02_RoomCannotHaveNonIntegerHeight

	self should: [ Room width: 4 height: 3.4]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBeIntegersErrorDescription!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:10:44' prior: 50868732!
test02_RoomCannotHaveNegativeWidth

	self should: [ Room width: -4 height: 3]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBePositiveErrorDescription! !

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:10:47'!
ERROR!
!Room class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 18:10:57'!
dimensionsMustBePositiveErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 18:11:16' prior: 50868761!
dimensionsMustBePositiveErrorDescription
	^'dimensionsMustBePositiveErrorDescription'! !

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:11:17'!
FAILURE!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:11:27'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:11:27'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:11:27'!
FAILURE!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:11:27'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:13:02' prior: 50868694!
width: aWidth height: aHeight

	aWidth isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	aWidth > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ]! !

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:13:09'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:13:10'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:13:10'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:13:30'!
test03_RoomCannotHaveNonIntegerHeight

	self should: [ Room width: 0.1 height: 3]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBeIntegersErrorDescription! !

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:13:31'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:13:31'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:13:31'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:13:31'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:13:45' prior: 50868807!
test03_RoomCannotHaveNonIntegerHeight

	self should: [ Room width: 4 height: 3.4]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBeIntegersErrorDescription! !

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:13:45'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:14:19' prior: 50868788!
width: aWidth height: aHeight

	aWidth isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	aHeight isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	
	aWidth > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ]! !

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:14:20'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:14:20'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:14:20'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:14:20'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:14:35'!
test04_RoomCannotHaveNegativeHeight

	self should: [ Room width: 4 height: -3]
		raise: Error - MessageNotUnderstood
		withMessageText: Room dimensionsMustBePositiveErrorDescription! !

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:14:37'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:15:28' prior: 50868842!
width: aWidth height: aHeight

	aWidth isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	aHeight isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	
	aWidth > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ].
	aHeight > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ]! !

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:15:30'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:15:30'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:15:30'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:15:30'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:15:30'!
PASSED!

----SNAPSHOT----(10 December 2020 18:15:34) CuisUniversity-4384.image priorSource: 17155564!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:19:01'!
test04_RoomsZeroPositionIsABorder
	
	| room originCell |
	room := Room width: 2 height: 2.
	originCell := 0@0
	
	self assert: (room isBorder: originCell)! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:19:14'!
test05_RoomsZeroPositionIsABorder
	
	| room originCell |
	room := Room width: 2 height: 2.
	originCell := 0@0
	
	self assert: (room isBorder: originCell)! !

!methodRemoval: RoomTest #test04_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:19:14'!
test04_RoomsZeroPositionIsABorder
	
	| room originCell |
	room := Room width: 2 height: 2.
	originCell := 0@0
	
	self assert: (room isBorder: originCell)!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:19:19'!
ERROR!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:19:38'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:20:45' prior: 50868879!
width: aWidth height: aHeight

	aWidth isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	aHeight isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	
	aWidth > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ].
	aHeight > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ].
	
	^self initializeWidth: aWidth height: aHeight .! !

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:20:46'!
ERROR!

!classDefinition: 'Room class' category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:20:52'!
Room class
	instanceVariableNames: 'width'!

!classDefinition: 'Room class' category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:20:52'!
Room class
	instanceVariableNames: 'width height'!
!Room class methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 18:20:52'!
initializeWidth: aWidth height: aHeight 
	self shouldBeImplemented.
	width := aWidth.
	height := aHeight.! !

!methodRemoval: Room class #initializeWidth:height: stamp: 'PGTA 12/10/2020 18:21:17'!
initializeWidth: aWidth height: aHeight 
	self shouldBeImplemented.
	width := aWidth.
	height := aHeight.!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:21:24'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 18:22:02' prior: 50868943!
width: aWidth height: aHeight

	aWidth isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	aHeight isInteger ifFalse: [ ^self error: self dimensionsMustBeIntegersErrorDescription  ].
	
	aWidth > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ].
	aHeight > 0 ifFalse: [ ^self error: self dimensionsMustBePositiveErrorDescription ].
	
	^self new initializeWidth: aWidth height: aHeight .! !

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:22:10'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:22:32'!
Object subclass: #Room
	instanceVariableNames: 'width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:22:32'!
Object subclass: #Room
	instanceVariableNames: 'width height'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 18:22:32'!
initializeWidth: aWidth height: aHeight 
	self shouldBeImplemented.
	width := aWidth.
	height := aHeight.! !
!Room methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 18:22:42' prior: 50869023!
initializeWidth: aWidth height: aHeight 

	width := aWidth.
	height := aHeight.! !

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:22:43'!
ERROR!

Room width: 2 height: 2.!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:23:27' prior: 50868921!
test05_RoomsZeroPositionIsABorder
	
	| room originCell |
	room := Room width: 2 height: 2.
	originCell := 0@0.
	
	self assert: (room isBorder: originCell)! !

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:23:28'!
ERROR!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 18:23:39'!
isBorder: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 18:23:54' prior: 50869050!
isBorder: aCell
	^true.! !

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:23:55'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:23:55'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:23:55'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:23:55'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:23:55'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:23:55'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:24:40'!
test05_RoomsCenterPositionIsntBorder
	
	| room originCell |
	room := Room width: 3 height: 3.
	originCell := 2@2.
	
	self deny: (room isBorder: originCell)! !

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:24:42'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 18:28:03' prior: 50869054!
isBorder: aCellPosition
	
	^(aCellPosition x=0 or: aCellPosition x=(width-1)) or: (aCellPosition y=0 or: aCellPosition y=(height-1))! !

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:28:04'!
FAILURE!

aCellPosition x=0!

aCellPosition x=(width-1)!

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:28:37'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:28:45' prior: 50869077!
test05_RoomsCenterPositionIsntBorder
	
	| room originCell |
	room := Room width: 3 height: 3.
	originCell := 1@1.
	
	self deny: (room isBorder: originCell)! !

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:28:45'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:29:07' prior: 50869104!
test05_RoomsCenterPositionIsntBorder
	
	| room centerCell |
	room := Room width: 3 height: 3.
	centerCell := 1@1.
	
	self deny: (room isBorder: centerCell)! !

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!

!testRun: #RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:29:08'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:29:29'!
test06_RoomsCenterPositionIsntBorder
	
	| room centerCell |
	room := Room width: 3 height: 3.
	centerCell := 1@1.
	
	self deny: (room isBorder: centerCell)! !

!methodRemoval: RoomTest #test05_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:29:29'!
test05_RoomsCenterPositionIsntBorder
	
	| room centerCell |
	room := Room width: 3 height: 3.
	centerCell := 1@1.
	
	self deny: (room isBorder: centerCell)!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:33:25'!
test07
	
	| room cell portableObject |
	room := Room width: 3 height: 3.
	cell := 1@1.
	
	portableObject := PortableObject new.
	
	room hold: portableObject at: cell.
	
	self assert: portableObject equals: (room contentAt: cell)! !

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:33:36'!
ERROR!
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 18:33:52'!
hold: aPortableObject at: aPoint 
	self shouldBeImplemented.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 18:35:36'!
Object subclass: #Room
	instanceVariableNames: 'width height content'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 18:35:32' prior: 50869193!
hold: aStageObject at: aCellCoordinate
	
	content at: aCellCoordinate put: aStageObject.! !

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:35:42'!
ERROR!

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:36:04'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 18:36:35' prior: 50869030!
initializeWidth: aWidth height: aHeight 

	width := aWidth.
	height := aHeight.
	content := Dictionary new.! !

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:36:36'!
ERROR!
!Room methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 18:36:55'!
contentAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 18:37:15' prior: 50869224!
contentAt: aCellCoordinate
	content at: aCellCoordinate! !

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:37:16'!
FAILURE!

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:37:38'!
FAILURE!

aStageObject!

aCellCoordinate!

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:38:24'!
FAILURE!

room!

room contentAt: cell!
!Room methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 18:39:16' prior: 50869229!
contentAt: aCellCoordinate
	^content at: aCellCoordinate! !

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:39:17'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test06_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:39:20'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:42:09'!
test08
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := PortableObject new.
	stageObject2 := PlayableCharacter new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription! !

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:42:13'!
ERROR!

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:42:46'!
ERROR!
!Room class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 18:42:59'!
cannotHoldMoreThanOneStageObjectErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 18:43:12' prior: 50869294!
cannotHoldMoreThanOneStageObjectErrorDescription
	^'cannotHoldMoreThanOneStageObject'! !

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:43:13'!
FAILURE!
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 18:46:48' prior: 50869206!
hold: aStageObject at: aCellCoordinate
	
	(self hasContentAt: aCellCoordinate) ifTrue: [^self error: self class cannotHoldMoreThanOneStageObjectErrorDescription ].
	content at: aCellCoordinate put: aStageObject.! !

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:46:51'!
ERROR!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 18:47:02'!
hasContentAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 18:47:35' prior: 50869319!
hasContentAt: aCellCoordinate 
	content includesKey: aCellCoordinate.! !

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:47:37'!
FAILURE!

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:48:05'!
ERROR!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 18:48:16' prior: 50869324!
hasContentAt: aCellCoordinate 
	^content includesKey: aCellCoordinate.! !

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test06_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test07 stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!

!testRun: #RoomTest #test08 stamp: 'PGTA 12/10/2020 18:48:20'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:50:58'!
test07_CellInRoomCanHoldAPortableObject
	
	| room cell portableObject |
	room := Room width: 3 height: 3.
	cell := 1@1.
	
	portableObject := PortableObject new.
	
	room hold: portableObject at: cell.
	
	self assert: portableObject equals: (room contentAt: cell)! !

!methodRemoval: RoomTest #test07 stamp: 'PGTA 12/10/2020 18:51:05'!
test07
	
	| room cell portableObject |
	room := Room width: 3 height: 3.
	cell := 1@1.
	
	portableObject := PortableObject new.
	
	room hold: portableObject at: cell.
	
	self assert: portableObject equals: (room contentAt: cell)!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:51:31'!
test08_CannotHoldMoreThanOneStageObjectInRoom
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := PortableObject new.
	stageObject2 := PlayableCharacter new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription! !

!methodRemoval: RoomTest #test08 stamp: 'PGTA 12/10/2020 18:51:31'!
test08
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := PortableObject new.
	stageObject2 := PlayableCharacter new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 18:51:56'!
test08_CannotHoldMoreThanOneStageObjectInCell
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := PortableObject new.
	stageObject2 := PlayableCharacter new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription! !

!methodRemoval: RoomTest #test08_CannotHoldMoreThanOneStageObjectInRoom stamp: 'PGTA 12/10/2020 18:51:56'!
test08_CannotHoldMoreThanOneStageObjectInRoom
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := PortableObject new.
	stageObject2 := PlayableCharacter new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription!

----SNAPSHOT----(10 December 2020 18:52:00) CuisUniversity-4384.image priorSource: 17192289!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:01:25'!
test09_CellsInRoomCanHoldANewStageObjectAfterBeingEmpty
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := StageObject new.
	stageObject2 := PlayableCharacter new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:02:14' prior: 50869418!
test08_CannotHoldMoreThanOneStageObjectInCell
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := StageObject new.
	stageObject2 := StageObject new.
	
	room hold: stageObject1 at: cellCoordinate.
	self should: [room hold: stageObject2 at: cellCoordinate]
		raise: Error - MessageNotUnderstood 
		withMessageText: Room cannotHoldMoreThanOneStageObjectErrorDescription! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:05:39' prior: 50869456!
test09_CellsInRoomCanHoldANewStageObjectAfterBeingEmpty
	
	| room cellCoordinate stageObject1 stageObject2 |
	room := Room width: 3 height: 3.
	cellCoordinate := 1@1.
	
	stageObject1 := StageObject new.
	stageObject2 := StageObject new.
	
	room hold: stageObject1 at: cellCoordinate.
	room removeContentAt: cellCoordinate.
	
	self deny: (room hasContentAt: cellCoordinate).
	
	room hold: stageObject2 at: cellCoordinate.
	self assert: stageObject2 equals: (room contentAt: cellCoordinate).! !

!testRun: #RoomTest #test09_CellsInRoomCanHoldANewStageObjectAfterBeingEmpty stamp: 'PGTA 12/10/2020 19:05:42'!
ERROR!
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 19:05:53'!
removeContentAt: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 19:07:04' prior: 50869513!
removeContentAt: aCellCoordinate 
	content removeKey: aCellCoordinate .! !

!testRun: #RoomTest #test09_CellsInRoomCanHoldANewStageObjectAfterBeingEmpty stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test06_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test07_CellInRoomCanHoldAPortableObject stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test08_CannotHoldMoreThanOneStageObjectInCell stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

!testRun: #RoomTest #test09_CellsInRoomCanHoldANewStageObjectAfterBeingEmpty stamp: 'PGTA 12/10/2020 19:07:05'!
PASSED!

----SNAPSHOT----(10 December 2020 19:08:42) CuisUniversity-4384.image priorSource: 17209659!
!PlayableCharacter methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 19:18:57' prior: 50868326!
initializeNamed: aName using: aBackpack at: aPosition heading: aHeading 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aHeading! !

----SNAPSHOT----(10 December 2020 19:27:40) CuisUniversity-4384.image priorSource: 17212979!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:29:24'!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: inRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:24' prior: 50868104!
test10_canNotTakeMoreObjectsThanTheBackpackCanCarry

	| playableCharacter paper key |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West inRoom: room .
	paper := NoPointsPortableObject named: 'Paper' weighing: 100.
	key := NoPointsPortableObject named: 'Key' weighing: 1.
	
	playableCharacter take: paper.
	self 
		should: [ playableCharacter take: key ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Backpack maxWeightExceededErrorDescription equals: anError messageText.
			self assert: (playableCharacter backpackIncludes: paper).
			self deny: (playableCharacter backpackIncludes: key) ]
	
	! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868078!
test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid

	self
		should: [PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #X inRoom: room ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidCardinalPointErrorDescription equals: anError messageText ]! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868014!
test03_rotateRightWhenHeadingNorthHeadsEast

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North inRoom: room .

	playableCharacter rotateRight.

	self assert: (playableCharacter isAt: 1@2 heading: #East)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868025!
test04_rotateLeftWhenHeadingNorthHeadsWest

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North inRoom: room .

	playableCharacter rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #West)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868050!
test06_movingWhenHeadingSouthWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #South inRoom: room .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@1 heading: #East)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50867990!
test01_forwardWhenHeadingNorthIncrementsYCoordinate

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North inRoom: room .

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868002!
test02_backwardWhenHeadingNorthDecrementsYCoordinate

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North inRoom: room .

	playableCharacter moveBackward.

	self assert: (playableCharacter isAt: 1@1 heading: #North)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868036!
test05_movingWhenHeadingEastWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 1@2 heading: #East inRoom: room .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 2@2 heading: #North)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868091!
test09_canTakePortableObjects

	| playableCharacter paper |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West inRoom: room .
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:29:25' prior: 50868064!
test07_movingWhenHeadingWestWorksAsExpected

	| playableCharacter |

	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West inRoom: room .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #South)! !

!methodRemoval: PlayableCharacter class #named:using:at:heading: stamp: 'PGTA 12/10/2020 19:29:25'!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint 
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading !

!classDefinition: #PlayableCharacterTest category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 19:30:26'!
TestCase subclass: #PlayableCharacterTest
	instanceVariableNames: 'room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 19:30:23' overrides: 16927572!
setUp

	room := Room width: 5 height: 5. ! !

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 19:30:46'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 19:37:48'!
test11_PlayableCharacterCannotBePlacedInOccupiedCell

	| roomWithStageObject stageObjectPosition |
	
	stageObjectPosition := 2@2.
	
	roomWithStageObject := Room width: 5 height: 5.
	roomWithStageObject hold: StageObject new at: stageObjectPosition.
	
	self should: [ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: stageObjectPosition heading: #West inRoom: roomWithStageObject ]
		raise: Error - MessageNotUnderstood 
		withMessageText: PlayableCharacter cannotPositionIntoAnOccupiedCellErrorDescription.! !

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:37:52'!
ERROR!
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 19:38:14'!
cannotPositionIntoAnOccupiedCellErrorDescription
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 19:38:32' prior: 50869823!
cannotPositionIntoAnOccupiedCellErrorDescription
	^'cannotPositionIntoAnOccupiedCell'! !

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:38:33'!
FAILURE!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:39:30' prior: 50869571!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:43:03' prior: 50869840!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	[ room hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^ self error].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:43:04'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:43:40' prior: 50869851!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	[ room hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^ self error: self class cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:43:52'!
ERROR!

room hold: self at: aPosition!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:45:28' prior: 50869871!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	[ room hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self class error: self class cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:45:35'!
ERROR!

self class cannotPositionIntoAnOccupiedCellErrorDescription!

(self class) cannotPositionIntoAnOccupiedCellErrorDescription!

!methodRemoval: PlayableCharacter class #cannotPositionIntoAnOccupiedCellErrorDescription stamp: 'PGTA 12/10/2020 19:47:51'!
cannotPositionIntoAnOccupiedCellErrorDescription
	^'cannotPositionIntoAnOccupiedCell'!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 19:47:59'!
cannotPositionIntoAnOccupiedCellErrorDescription
	^'cannotPositionIntoAnOccupiedCell'! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:48:51' prior: 50869894!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	[ room hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 19:48:59'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:48:59'!
ERROR!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:48:59'!
ERROR!
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 19:50:02'!
cannotPositionIntoAnOccupiedCellErrorDescription
	^'cannotPositionIntoAnOccupiedCell'! !

!methodRemoval: PlayableCharacter #cannotPositionIntoAnOccupiedCellErrorDescription stamp: 'PGTA 12/10/2020 19:50:15'!
cannotPositionIntoAnOccupiedCellErrorDescription
	^'cannotPositionIntoAnOccupiedCell'!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 19:50:57'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:50:57'!
FAILURE!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:50:57'!
FAILURE!

PlayableCharacter named: 'Luigi' using: self defaultBackpack at: stageObjectPosition heading: #West inRoom: roomWithStageObject!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:51:30' prior: 50869933!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	[ room hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 19:51:36'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 19:54:06'!
test12_PlayableCharacterCannotBePlacedOutsideRoom

	| roomWithStageObject stageObjectPosition |
	
	stageObjectPosition := 5@5.
	
	roomWithStageObject := Room width: 5 height: 5.
	roomWithStageObject hold: StageObject new at: stageObjectPosition.
	
	self should: [ PlayableCharacter named: 'Luigi' using: self defaultBackpack at: stageObjectPosition heading: #West inRoom: roomWithStageObject ]
		raise: Error - MessageNotUnderstood 
		withMessageText: PlayableCharacter cannotPositionOutsideRoomErrorDescription.! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 19:54:10'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:56:50' prior: 50870069!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: room  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	(room assertValidCoordinate: aPosition) ifFalse: [^self error: self cannotPositionOutsideRoomErrorDescription ].
	
	[ room hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:57:02' prior: 50870157!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: aRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom assertValidCoordinate: aPosition) ifFalse: [^self error: self cannotPositionOutsideRoomErrorDescription ].
	
	[ aRoom hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 19:57:30' prior: 50870179!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: aRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom assertValidCoordinate: aPosition) ifFalse: [^self error: self cannotPositionOutsideRoomErrorDescription ].
	
	[ aRoom hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 20:01:41'!
test10_RoomKnowsItsInsidePositions
	
	| room insideCoordinate outsideCoordinate |
	
	room := Room width: 3 height: 3.
	insideCoordinate := 1@1.
	outsideCoordinate := 3@3.
	
	self assert: (room assertInside: insideCoordinate).
	self deny: (room assertInside: outsideCoordinate).! !

!testRun: #RoomTest #test10_RoomKnowsItsInsidePositions stamp: 'PGTA 12/10/2020 20:01:52'!
ERROR!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 20:02:01'!
assertInside: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 20:02:27' prior: 50870236!
assertInside: aCellCoordinate
	
	^true! !

!testRun: #RoomTest #test10_RoomKnowsItsInsidePositions stamp: 'PGTA 12/10/2020 20:02:28'!
FAILURE!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 20:06:47' prior: 50870241!
assertInside: aCellCoordinate
	
	^(aCellCoordinate x >=0 and: aCellCoordinate x >=(width-1))
		and: (aCellCoordinate y >=0 and: aCellCoordinate y >=(height-1))! !

!testRun: #RoomTest #test10_RoomKnowsItsInsidePositions stamp: 'PGTA 12/10/2020 20:07:00'!
FAILURE!

room assertInside: insideCoordinate!

aCellCoordinate x!

width-1!
!Room methodsFor: 'testing' stamp: 'PGTA 12/10/2020 20:07:56' prior: 50870248!
assertInside: aCellCoordinate
	
	^(aCellCoordinate x >=0 and: aCellCoordinate x < width )
		and: (aCellCoordinate y >=0 and: aCellCoordinate y < height)! !

!testRun: #RoomTest #test10_RoomKnowsItsInsidePositions stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test01_RoomCannotHaveNonIntegerWidth stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test02_RoomCannotHaveNegativeWidth stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test03_RoomCannotHaveNonIntegerHeight stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test04_RoomCannotHaveNegativeHeight stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test05_RoomsZeroPositionIsABorder stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test06_RoomsCenterPositionIsntBorder stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test07_CellInRoomCanHoldAPortableObject stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test08_CannotHoldMoreThanOneStageObjectInCell stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test09_CellsInRoomCanHoldANewStageObjectAfterBeingEmpty stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!

!testRun: #RoomTest #test10_RoomKnowsItsInsidePositions stamp: 'PGTA 12/10/2020 20:07:57'!
PASSED!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 20:08:19' prior: 50870201!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: aRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom assertInside: aPosition) ifFalse: [^self error: self cannotPositionOutsideRoomErrorDescription ].
	
	[ aRoom hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading ! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:08:26'!
ERROR!
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 20:08:42'!
cannotPositionOutsideRoomErrorDescription
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 20:08:57' prior: 50870330!
cannotPositionOutsideRoomErrorDescription
	^'cannotPositionOutsideRoomErrorDescription'! !

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:08:58'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:13:33'!
test13_PlayableCharacterCannotMoveOutsideRoom

	| playableCharacter startPosition |
	
	startPosition  := 4@4.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood 
		withMessageText: PlayableCharacter cannotPositionOutsideRoomErrorDescription.! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:14:41' prior: 50870393!
test13_PlayableCharacterCannotMoveOutsideRoom

	| playableCharacter startPosition |
	
	startPosition  := 4@4.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood 
		withMessageText: PlayableCharacter cannotPositionOutsideRoomErrorDescription.! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:19:02'!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 4@4).
	self assert: playableCharacter equals: (room contentAt: 4@4).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:19:56' prior: 50870426!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 4@4).
	self assert: (playableCharacter isAt: 4@4).! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:19:58'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:20:09'!
ERROR!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:20:16'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:20:25'!
ERROR!

aRoom assertInside: aPosition!

aRoom hold: self at: aPosition!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:21:52'!
ERROR!

aRoom hold: self at: aPosition!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:22:58'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterCannotMoveOutsideRoom stamp: 'PGTA 12/10/2020 20:22:58'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:22:58'!
FAILURE!

!methodRemoval: PlayableCharacterTest #test13_PlayableCharacterCannotMoveOutsideRoom stamp: 'PGTA 12/10/2020 20:23:20'!
test13_PlayableCharacterCannotMoveOutsideRoom

	| playableCharacter startPosition |
	
	startPosition  := 4@4.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self should: [ playableCharacter moveForward ]
		raise: Error - MessageNotUnderstood 
		withMessageText: PlayableCharacter cannotPositionOutsideRoomErrorDescription.!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:23:22'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:23:39'!
ERROR!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:23:56'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:24:12'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:24:35' prior: 50870444!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := Room width: 5 height: 5. 
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 4@4).
	self assert: (playableCharacter isAt: 4@4).! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:24:35'!
FAILURE!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 20:30:24'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'moving' stamp: 'PGTA 12/10/2020 20:30:15' prior: 50868350!
moveForward
	
	| forwardPoint |
	forwardPoint := position + heading forwardPoint.
	
	[ room displaceContentFrom: position to: forwardPoint ]
		on: Error
		do: [^self].
		
	position := position + heading forwardPoint! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:31:14'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'PGTA 12/10/2020 20:31:33' prior: 50870610!
moveForward
	
	| forwardPoint |
	forwardPoint := position + heading forwardPoint.
	
	[ room displaceContentFrom: position to: forwardPoint ]
		on: Error - MessageNotUnderstood 
		do: [^self].
		
	position := position + heading forwardPoint! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:31:36'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 20:32:27' prior: 50870305!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: aRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom assertInside: aPosition) ifFalse: [^self error: self cannotPositionOutsideRoomErrorDescription ].
	
	[ aRoom hold: self at: aPosition ]
		on: [ :anError | anError messageText = Room cannotHoldMoreThanOneStageObjectErrorDescription ]
		do: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading inRoom: aRoom! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 20:32:53'!
initializeNamed: aName using: aBackpack at: aPosition heading: aHeading inRoom: aRoom

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aHeading.
	
	room := aRoom.! !

!methodRemoval: PlayableCharacter #initializeNamed:using:at:heading: stamp: 'PGTA 12/10/2020 20:32:57'!
initializeNamed: aName using: aBackpack at: aPosition heading: aHeading 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aHeading!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:33:04'!
ERROR!
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 20:33:15'!
displaceContentFrom: aPoint to: aPoint2 
	self shouldBeImplemented.! !
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 20:36:25' prior: 50870683!
displaceContentFrom: anInitialCoordinate to: aFinalCoordinate
	
	| cellContent |
	cellContent := self contentAt: anInitialCoordinate.
	
	[ self hold: cellContent at: aFinalCoordinate ]
		on: Error
		do: [^self].
	
	self removeContentAt: anInitialCoordinate.! !

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:36:40'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:36:40'!
ERROR!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:36:40'!
ERROR!

anInitialCoordinate!

aFinalCoordinate!

self!

self hold: cellContent at: aFinalCoordinate!

room!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:38:47'!
FAILURE!

room!

room hasContentAt: startPosition!

self hold: cellContent at: aFinalCoordinate!

self!
!Room methodsFor: 'operations' stamp: 'PGTA 12/10/2020 20:41:43' prior: 50870688!
displaceContentFrom: anInitialCoordinate to: aFinalCoordinate
	
	| cellContent |
	cellContent := self contentAt: anInitialCoordinate.
	
	[ self hold: cellContent at: aFinalCoordinate ]
		on: Error
		do: [:anError | ^self].
	
	self removeContentAt: anInitialCoordinate.! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:42:01'!
ERROR!

room!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:42:51' prior: 50870578!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := Room width: 5 height: 5. 
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@4).
	self assert: (playableCharacter isAt: 3@4).! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:42:52'!
FAILURE!

room!

room contentAt: 3@4!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:43:22'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:43:47' prior: 50870786!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := Room width: 5 height: 5. 
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@4).
	self assert: (playableCharacter isAt: 3@4 heading: #North).! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:43:49'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:44:04'!
FAILURE!

room contentAt: 3@4!

playableCharacter!

room contentAt: 3@4!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:44:46'!
FAILURE!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:45:00'!
FAILURE!

playableCharacter!

room!

room!

room!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 20:48:11' prior: 50870641!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: aRoom  
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	(aRoom assertInside: aPosition) ifFalse: [^self error: self cannotPositionOutsideRoomErrorDescription ].
	(aRoom hasContentAt: aPosition) ifTrue: [^self error: self cannotPositionIntoAnOccupiedCellErrorDescription ].
		
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading inRoom: aRoom! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 20:48:39' prior: 50870662!
initializeNamed: aName using: aBackpack at: aPosition heading: aHeading inRoom: aRoom

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aHeading.
	
	room := aRoom.
	room hold: self at: aPosition.! !

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:48:45'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:49:39'!
test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := Room width: 5 height: 5. 
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveBackward .
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 20:49:41'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'PGTA 12/10/2020 20:51:01' prior: 50868345!
moveBackward
	
	| backwardPoint |
	backwardPoint := position - heading forwardPoint.
	
	[ room displaceContentFrom: position to: backwardPoint ]
		on: Error - MessageNotUnderstood 
		do: [^self].
	
	position := backwardPoint.! !

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 20:51:02'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'PGTA 12/10/2020 20:51:09' prior: 50870625!
moveForward
	
	| forwardPoint |
	forwardPoint := position + heading forwardPoint.
	
	[ room displaceContentFrom: position to: forwardPoint ]
		on: Error - MessageNotUnderstood 
		do: [^self].
		
	position := forwardPoint! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:53:28'!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := Room width: 5 height: 5. 
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveBackward .
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 20:54:58'!
defaultRoom

	^ Backpack containingUpTo: 100 limitingPointsTo: 100 ! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 20:55:10' prior: 50871064!
defaultRoom

	^ Room width: 5 height: 5.! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 20:55:22' prior: 50871070!
defaultRoom

	room := self defaultRoom .! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:55:44' prior: 50870815!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: self defaultRoom .
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@4).
	self assert: (playableCharacter isAt: 3@4 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:43:47' prior: 50871080!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := Room width: 5 height: 5. 
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@4).
	self assert: (playableCharacter isAt: 3@4 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:56:24' prior: 50871099!
test13_PlayableCharacterIsInForwardedPositionAfterMovingForward

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := self defaultRoom .
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveForward.
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@4).
	self assert: (playableCharacter isAt: 3@4 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:56:32' prior: 50870940!
test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := self defaultRoom .
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveBackward .
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:56:41' prior: 50871045!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter startPosition |
	
	startPosition  := 3@3.
	room := self defaultRoom .
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: startPosition heading: #North inRoom: room.
	
	playableCharacter moveBackward .
	
	self deny: (room hasContentAt: startPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 20:57:07' prior: 50871075!
defaultRoom

	^Room width: 5 height: 5. ! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 20:57:17' prior: 50869752 overrides: 16927572!
setUp

	room := self defaultRoom .! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 20:57:22'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 20:59:00' prior: 50871156!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition |
	
	playerStartPosition  := 3@3.
	portableObject := 1.
	
	room := self defaultRoom .
	
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter moveBackward .
	
	self deny: (room hasContentAt: playerStartPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:01:28' prior: 50871250!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition |
	
	portableObjectPosition := 4@4.
	portableObject := NoPointsPortableObject named: 'Key' weighing: 1.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: playerStartPosition heading: #North inRoom: room.
	
	self deny: (room hasContentAt: playerStartPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:03:39' prior: 50871272!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NoPointsPortableObject named: 'Key' weighing: 1.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomPortableObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: playableCharacter equals: (room contentAt: 3@2).
	self assert: (playableCharacter isAt: 3@2 heading: #North).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:05:53' prior: 50871297!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NoPointsPortableObject named: 'Key' weighing: 1.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomPortableObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:05:56'!
ERROR!
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 21:06:07'!
takeRoomPortableObject
	self shouldBeImplemented.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 21:08:37' prior: 50871353!
takeRoomPortableObject
	self take: (room contentAt: self frontalPosition).
	room removeContentAt: self frontalPosition.
	! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:08:40'!
ERROR!
!PlayableCharacter methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 21:08:53'!
frontalPosition
	self shouldBeImplemented.! !

!methodRemoval: PlayableCharacter #frontalPosition stamp: 'PGTA 12/10/2020 21:09:17'!
frontalPosition
	self shouldBeImplemented.!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:10:38'!
frontalPoint
	^self position + heading forwardPoint.
	! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:10:49' prior: 50871358!
takeRoomPortableObject
	self take: (room contentAt: self frontalPoint).
	room removeContentAt: self frontalPoint.
	! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:10:53'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:11:09' prior: 50871378!
frontalPoint
	^position + heading forwardPoint.
	! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:11:10'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:11:11'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:11:11'!
PASSED!

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'content'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 21:12:48'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'content'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:17:24'!
test15_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NonPortableObject named: 'Table'.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomPortableObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:17:34'!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NonPortableObject named: 'Table'.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomPortableObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.! !

!methodRemoval: PlayableCharacterTest #test15_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:17:34'!
test15_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NonPortableObject named: 'Table'.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomPortableObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:18:21' prior: 50871500!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomPortableObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:18:45'!
takeRoomObject
	self take: (room contentAt: self frontalPoint).
	room removeContentAt: self frontalPoint.
	! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 21:18:45' prior: 50871550!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.! !
!PlayableCharacterTest methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 21:18:45' prior: 50871324!
test15_PlayableCharacterCanTakePortableObjectsFromRoom

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NoPointsPortableObject named: 'Key' weighing: 1.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	playableCharacter takeRoomObject.
	
	self deny: (room hasContentAt: portableObjectPosition).
	self assert: backpack includes: portableObject.! !

!methodRemoval: PlayableCharacter #takeRoomPortableObject stamp: 'PGTA 12/10/2020 21:18:45'!
takeRoomPortableObject
	self take: (room contentAt: self frontalPoint).
	room removeContentAt: self frontalPoint.
	!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:18:56'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:22:44' prior: 50871581!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition nonPortableObject nonPortableObjectPosition backpack |
	
	nonPortableObjectPosition := 4@4.
	nonPortableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: nonPortableObject at: nonPortableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	self should: [ playableCharacter takeRoomObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: nonPortableObject equals: (room contentAt: nonPortableObjectPosition).
			self deny: (backpack includes: nonPortableObject) ]! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:22:57' prior: 50871640!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition nonPortableObject nonPortableObjectPosition backpack |
	
	nonPortableObjectPosition := 4@4.
	nonPortableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: nonPortableObject at: nonPortableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	"
	self should: [ playableCharacter takeRoomObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: nonPortableObject equals: (room contentAt: nonPortableObjectPosition).
			self deny: (backpack includes: nonPortableObject) ]"! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:23:05'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:23:22' prior: 50871668!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition nonPortableObject nonPortableObjectPosition backpack |
	
	nonPortableObjectPosition := 4@4.
	nonPortableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: nonPortableObject at: nonPortableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	self should: [ playableCharacter takeRoomObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: nonPortableObject equals: (room contentAt: nonPortableObjectPosition).
			self deny: (backpack includes: nonPortableObject) ]! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:23:22'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:24:32' prior: 50871574!
takeRoomObject

	self take: (room contentAt: self frontalPoint).
	room removeContentAt: self frontalPoint.
	! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:27:27' prior: 50871798!
takeRoomObject
	
	| roomStageObject |
	roomStageObject := room contentAt: self frontalPoint.
	
	roomStageObject takenBy: self.
	! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:27:32'!
ERROR!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 21:27:50'!
takenBy: aPlayableCharacter 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'PGTA 12/10/2020 21:28:23' prior: 50871817!
takenBy: aPlayableCharacter

	aPlayableCharacter takeNonPortableObject: self.! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:28:33'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:28:44'!
takeNonPortableObject: aNonPortableObject 
	self shouldBeImplemented.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:29:39' prior: 50871833!
takeNonPortableObject: aNonPortableObject 
	^self error: self class nonPortableObjectsCannotBeTakenByPlayerErrorDescription.! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:29:43'!
ERROR!
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 21:29:55'!
nonPortableObjectsCannotBeTakenByPlayerErrorDescription
	self shouldBeImplemented.! !
!PlayableCharacter class methodsFor: 'errors' stamp: 'PGTA 12/10/2020 21:30:08' prior: 50871850!
nonPortableObjectsCannotBeTakenByPlayerErrorDescription
	^'nonPortableObjectsCannotBeTakenByPlayer'! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:30:10'!
ERROR!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:30:10'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:30:10'!
ERROR!
!StageObject methodsFor: 'no messages' stamp: 'PGTA 12/10/2020 21:31:03'!
takenBy: aPlayableCharacter
	^self subclassResponsibility! !
!PortableObject methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 21:32:06' overrides: 50871935!
takenBy: aPlayableCharacter

	aPlayableCharacter takePortableObject: self.! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:32:19'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:32:34'!
takePortableObject: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:32:56' prior: 50871950!
takePortableObject: aPortableObject 
	
	self take: aPortableObject! !

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:32:57'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:35:54' prior: 50871805!
takeRoomObject
	
	| roomStageObject |
	roomStageObject := room contentAt: self frontalPoint.
	
	[ roomStageObject takenBy: self ]
		on: Error
		do: [:anError | anError pass ].
		
	! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:36:02'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:36:03'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:36:03'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:36:03'!
FAILURE!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:36:03'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:36:03'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:37:57' prior: 50871966!
takeRoomObject
	
	| roomStageObject |
	roomStageObject := room contentAt: self frontalPoint.
	
	[ roomStageObject takenBy: self ]
		on: Error
		do: [:anError | anError pass ].
		
	room removeContentAt: self frontalPoint.! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:38:23'!
PASSED!

----SNAPSHOT----(10 December 2020 21:38:43) CuisUniversity-4384.image priorSource: 17213345!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:44:40'!
test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection

	| playableCharacter playerStartPosition portableObject portableObjectPosition backpack |
	
	portableObjectPosition := 4@4.
	portableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: portableObject at: portableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #East inRoom: room.
	
	self should: [ playableCharacter takeRoomObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Room noObjectInPositionErrorDescription.
			self assert: portableObject equals: (room contentAt: portableObjectPosition).
			self deny: (backpack includes: portableObject) ]! !

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:44:46'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 21:45:01'!
noObjectInPositionErrorDescription
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNoObjectInPositionErrorDescription! !
!Room class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 21:45:34' prior: 50872165!
noObjectInPositionErrorDescription
	^'No object in position'! !

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:45:36'!
FAILURE!
!Room methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 21:47:26' prior: 50869243!
contentAt: aCellCoordinate
	(self hasContentAt: aCellCoordinate) ifFalse:[^ self error: self class noObjectInPositionErrorDescription ].
	
	^content at: aCellCoordinate! !

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:47:33'!
PASSED!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'PGTA 12/10/2020 21:49:43' prior: 50872048!
takeRoomObject
	
	| roomStageObject |
	
	
	[ roomStageObject := room contentAt: self frontalPoint.
	roomStageObject takenBy: self ]
		on: Error
		do: [:anError | anError pass ].
		
	room removeContentAt: self frontalPoint.! !

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:49:50'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:51:09' prior: 50871765!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition nonPortableObject nonPortableObjectPosition backpack |
	
	nonPortableObjectPosition := 4@4.
	nonPortableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: nonPortableObject at: nonPortableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	self should: [ playableCharacter takeRoomObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | PlayableCharacter nonPortableObjectsCannotBeTakenByPlayerErrorDescription.
			self assert: nonPortableObject equals: (room contentAt: nonPortableObjectPosition).
			self deny: (backpack includes: nonPortableObject) ]! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'PGTA 12/10/2020 21:51:23' prior: 50872352!
test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom

	| playableCharacter playerStartPosition nonPortableObject nonPortableObjectPosition backpack |
	
	nonPortableObjectPosition := 4@4.
	nonPortableObject := NonPortableObject new.
	
	room := self defaultRoom .
	room hold: nonPortableObject at: nonPortableObjectPosition .
	
	playerStartPosition  := 4@3.
	backpack := self defaultBackpack.
	playableCharacter := PlayableCharacter named: 'Luigi' using: backpack at: playerStartPosition heading: #North inRoom: room.
	
	self should: [ playableCharacter takeRoomObject ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: PlayableCharacter nonPortableObjectsCannotBeTakenByPlayerErrorDescription.
			self assert: nonPortableObject equals: (room contentAt: nonPortableObjectPosition).
			self deny: (backpack includes: nonPortableObject) ]! !

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test11_PlayableCharacterCannotBePlacedInOccupiedCell stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test12_PlayableCharacterCannotBePlacedOutsideRoom stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test13_PlayableCharacterIsInForwardedPositionAfterMovingForward stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test14_PlayableCharacterIsInBackwardedPositionAfterMovingBackwards stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test15_PlayableCharacterCanTakePortableObjectsFromRoom stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test16_PlayableCharacterCannotTakeANonPortableObjectFromRoom stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

!testRun: #PlayableCharacterTest #test17_PlayableCharacterCannotTakeAPortableObjectIfHeadingInWrongDirection stamp: 'PGTA 12/10/2020 21:51:25'!
PASSED!

TestCase subclass: #StageObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #StageObjectTest category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 21:52:27'!
TestCase subclass: #StageObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!StageObjectTest methodsFor: 'no messages' stamp: 'PGTA 12/10/2020 21:55:15'!
test01_NonPortableObjectsCanHoldAPortableObject
	| nonPortableObject portableObject |
	
	portableObject := PortableObject new.
	nonPortableObject := NonPortableObject with: portableObject.
	
	self assert: nonPortableObject content equals: portableObject.! !

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:55:17'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 21:55:24'!
with: aPortableObject 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aPortableObject ! !

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:55:37'!
ERROR!

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:55:48'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'PGTA 12/10/2020 21:56:11' prior: 50872515!
with: aPortableObject 

	^self new initializeWith: aPortableObject ! !

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:56:39'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'PGTA 12/10/2020 21:56:54'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'content portableObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 21:56:54'!
initializeWith: aPortableObject 
	self shouldBeImplemented.
	portableObject := aPortableObject.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'PGTA 12/10/2020 21:57:05' prior: 50872549!
initializeWith: aPortableObject 
	
	content := aPortableObject.! !

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:57:07'!
ERROR!
!NonPortableObject methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 21:57:17'!
content
	self shouldBeImplemented.
	^content! !
!NonPortableObject methodsFor: 'accessing' stamp: 'PGTA 12/10/2020 21:57:21' prior: 50872565!
content

	^content! !

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:57:23'!
PASSED!

!testRun: #StageObjectTest #test01_NonPortableObjectsCanHoldAPortableObject stamp: 'PGTA 12/10/2020 21:57:23'!
PASSED!

----SNAPSHOT----(10 December 2020 21:57:30) CuisUniversity-4384.image priorSource: 17295225!

----SNAPSHOT----(10 December 2020 22:03:45) CuisUniversity-4384.image priorSource: 17309765!

----QUIT----(10 December 2020 22:03:48) CuisUniversity-4384.image priorSource: 17309859!

----STARTUP---- (10 December 2020 22:03:54) as /home/pablo/Documents/Ingenieria1/cuis_parcial2/CuisUniversity-4384.image!


----QUIT----(10 December 2020 22:04:17) CuisUniversity-4384.image priorSource: 17309953!