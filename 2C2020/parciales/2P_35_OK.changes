----STARTUP---- (10 December 2020 13:18:09) as /Users/ilanolkies/uba/ingsoft1/segundo parcial/CuisUniversity-4384.image!


----End fileIn of /Users/ilanolkies/Downloads/ISW1-2020-2C-2doParcial.st----!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 17:06:44'!
PASSED!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 17:31:06'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'no messages' stamp: 'IO 12/10/2020 17:34:11'!
test01roomWidthIsPositive! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 17:35:47'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 17:35:41' prior: 50868743!
test01roomWidthIsPositive

	self should: [Room width: -1 height: 100] raise: Error withMessageText: Room invalidWidth.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:35:49'!
ERROR!
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:36:15'!
invalidWidth
	self shouldBeImplemented.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:36:39' prior: 50868763!
invalidWidth
	^'Width must be equal or grater than 1'.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:36:41'!
FAILURE!
!Room class methodsFor: 'nil' stamp: 'IO 12/10/2020 17:38:19'!
width: aWidth height: aHeight
	(aWidth > 0) ifFalse: [self error: self invalidWidth ].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:38:20'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:38:30'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:38:34'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:38:55'!
test02roomHeightIsPositive

	self should: [Room width: 100 height: -1] raise: Error withMessageText: Room invalidWidth.! !

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:38:56'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:39:32' prior: 50868882!
test02roomHeightIsPositive

	self should: [Room width: 100 height: -1] raise: Error withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:39:33'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:39:33'!
ERROR!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:39:33'!
ERROR!
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:39:44'!
invalidHeight
	self shouldBeImplemented.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:39:50' prior: 50868907!
invalidHeight
	^''.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:40:09' prior: 50868912!
invalidHeight
	^'Width must be an integer equal or grater than 1'.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:40:15' prior: 50868768!
invalidWidth
	^'Width must be an integer equal or grater than 1'.! !
!Room class methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 17:40:33' prior: 50868775!
width: aWidth height: aHeight
	(aWidth > 0) ifFalse: [ self error: self invalidWidth ].
	(aHeight > 0) ifFalse: [ self error: self invalidHeight ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:40:34'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:40:34'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:41:09'!
test01roomWidthIsInteger

	self should: [Room width: 1.1 height: 100] raise: Error withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:41:14'!
test03roomWidthIsInteger

	self should: [Room width: 1.1 height: 100] raise: Error withMessageText: Room invalidWidth.! !

!methodRemoval: RoomTest #test01roomWidthIsInteger stamp: 'IO 12/10/2020 17:41:14'!
test01roomWidthIsInteger

	self should: [Room width: 1.1 height: 100] raise: Error withMessageText: Room invalidWidth.!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:41:15'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 17:42:41' prior: 50868927!
width: aWidth height: aHeight
	(aWidth strictlyPositive and: aWidth isInteger ) ifFalse: [ self error: self invalidWidth ].
	(aHeight > 0) ifFalse: [ self error: self invalidHeight ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:42:42'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:42:42'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:42:42'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:43:05'!
test04roomWidthIsInteger

	self should: [Room width: 100 height: 1.1] raise: Error withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:43:06'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 17:43:24' prior: 50868962!
width: aWidth height: aHeight
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidHeight ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:43:25'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:43:25'!
FAILURE!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:43:25'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:43:25'!
FAILURE!
!Room class methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 17:43:38' prior: 50868989!
width: aWidth height: aHeight
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:43:38'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:43:38'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:43:38'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:43:38'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 17:46:32'!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:46:54' prior: 50868754!
test01roomWidthIsPositive

	self should: [Room withWidth: -1 height: 100 andObjects: Dictionary new] raise: Error withMessageText: Room invalidWidth.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:47:34'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:47:34'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:47:34'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:47:34'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:47:34'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:47:49' prior: 50868892!
test02roomHeightIsPositive

	self should: [Room withWidth: 100 height: 01 andObjects: Dictionary new] raise: Error withMessageText: Room invalidHeight.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:47:50' prior: 50869065!
test02roomHeightIsPositive

	self should: [Room withWidth: 100 height: -1 andObjects: Dictionary new] raise: Error withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:47:51'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:47:51'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:47:51'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:47:51'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:47:51'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:48:01' prior: 50868946!
test03roomWidthIsInteger

	self should: [Room withWidth: 1.1 height: 100 andObjects: Dictionary new] raise: Error withMessageText: Room invalidWidth.! !

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:01'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:48:01'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:48:01'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:01'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:01'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:48:11' prior: 50868979!
test04roomWidthIsInteger

	self should: [Room withWidth: 100 height: 1,1 andObjects: Dictionary new] raise: Error withMessageText: Room invalidHeight.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:48:12' prior: 50869117!
test04roomWidthIsInteger

	self should: [Room withWidth: 100 height: 1.1 andObjects: Dictionary new] raise: Error withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:13'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:48:13'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:48:13'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:13'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:13'!
PASSED!

!methodRemoval: Room class #width:height: stamp: 'IO 12/10/2020 17:48:26'!
width: aWidth height: aHeight
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:48:29'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:48:29'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:29'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:29'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:31'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:48:31'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:51:28'!
test05stageObjectsAreInsideTheRoomsWidth

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: (Dictionary newFromPairs: #(
				
			))]
		raise: Error
		withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:51:29'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:55:21' prior: 50869271!
test05stageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {11@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:55:22'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 17:56:43' prior: 50869032!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	(aDictionaryOfStageObjects at: (	aDictionaryOfStageObjects keys first))
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:56:46'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:56:46'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:56:46'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:56:46'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:56:46'!
FAILURE!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:56:46'!
FAILURE!

aDictionaryOfStageObjects keys first!

aDictionaryOfStageObjects keys first!

11!

11!

aDictionaryOfStageObjects keys first x !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 17:57:45' prior: 50869300!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	(aDictionaryOfStageObjects at: (	aDictionaryOfStageObjects keys first x))
! !

aDictionaryOfStageObjects keys first x <= 10!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 17:58:52' prior: 50869336!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	(aDictionaryOfStageObjects keys first x <= aWidth) ifFalse: [self error: self invalidObjectPosition].
! !

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:58:54'!
FAILURE!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:59:11'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 17:59:19' prior: 50869284!
test05stageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {11@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:59:21'!
ERROR!
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:59:30'!
invalidObjectPosition
	self shouldBeImplemented.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 17:59:45' prior: 50869388!
invalidObjectPosition
	^'The object must be inside the room'.! !

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:59:47'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:59:47'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:59:47'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:59:47'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:59:47'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:59:47'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:59:49'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 17:59:49'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 17:59:49'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 17:59:49'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 17:59:49'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 17:59:49'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:00:42'!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		11@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:00:44'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:00:55'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:01:04'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:01:04'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:01:04'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:01:04'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:04'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:04'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:15'!
PASSED!

aDictionaryOfStageObjects keys first!

aDictionaryOfStageObjects keys second!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:01:51' prior: 50869433!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		11@1. NoPointsPortableObject named: 'key' weighing: 1.
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:52'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:01:52'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:02:07' prior: 50869531!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		11@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@1. NoPointsPortableObject named: 'key' weighing: 1.}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:07'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:02:07'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:02:07'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:02:07'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:02:07'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:07'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:07'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:02:11' prior: 50869567!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		12@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@1. NoPointsPortableObject named: 'key' weighing: 1.}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:12'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:02:12'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:02:12'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:02:12'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:02:12'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:12'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:12'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:02:14' prior: 50869603!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		13@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@1. NoPointsPortableObject named: 'key' weighing: 1.}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:14'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:02:14'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:02:14'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:02:14'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:02:14'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:14'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:02:14'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:02:25' prior: 50869639!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		11@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:03:16' prior: 50869351!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (position x <= aWidth) ifFalse: [self error: self invalidObjectPosition] ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:03:16'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:03:16'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:03:16'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:03:16'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:03:16'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:03:16'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:03:45'!
test07manyStageObjectsAreInsideTheRoomsHeight
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@10. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:03:46'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:04:10' prior: 50869690!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (position x <= aWidth and: position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:04:10'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:04:10'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:04:10'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:04:10'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:04:10'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:04:10'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:04:10'!
FAILURE!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:04:10'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:04:21' prior: 50869740!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:04:22'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:04:22'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:04:22'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:04:22'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:04:22'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:04:22'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:04:22'!
FAILURE!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:04:22'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:04:32' prior: 50869722!
test07manyStageObjectsAreInsideTheRoomsHeight
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@11. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			andObjects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:04:36'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:04:36'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:04:36'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:04:36'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:04:36'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:04:36'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:04:36'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:08:25'!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:11:08' prior: 50869043!
test01roomWidthIsPositive

	self should: [
		Room withWidth: -1 height: 100 objects: Dictionary new andCharacter: (
			PlayableCharacter named: 'Ilan' using: (
			Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@1 heading: #North
		)
	] raise: Error withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:11:11' prior: 50869875!
test01roomWidthIsPositive

	self should: [
		Room withWidth: -1 height: 100 objects: Dictionary new andCharacter: (
			PlayableCharacter named: 'Ilan' using: (
			Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@1 heading: #North)
	] raise: Error withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:11:20' prior: 50869887!
test01roomWidthIsPositive

	self should: [
		Room withWidth: -1 height: 100 objects: Dictionary new andCharacter: (
			PlayableCharacter named: 'Ilan' using: (
				Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@1 heading: #North)
	] raise: Error withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:11:50'!
validCharacter

	^PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@1 heading: #North! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:12:18' prior: 50869899!
test01roomWidthIsPositive

	self
		should: [Room withWidth: -1 height: 100 objects: Dictionary new andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:12:39' prior: 50869073!
test02roomHeightIsPositive

	self
		should: [Room withWidth: 100 height: -1 objects: Dictionary new andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidHeight.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:12:51' prior: 50869125!
test04roomWidthIsInteger

	self
		should: [Room withWidth: 100 height: 1.1 objects: Dictionary new andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidHeight.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:13:10' prior: 50869372!
test05stageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {11@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:13:18' prior: 50869675!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		11@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:13:58' prior: 50869822!
test07manyStageObjectsAreInsideTheRoomsHeight
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@11. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:13:58'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:13:58'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:13:58'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:13:58'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:13:58'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:13:59'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:13:59'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:13:59'!
PASSED!

!methodRemoval: Room class #withWidth:height:andObjects: stamp: 'IO 12/10/2020 18:14:07'!
withWidth: aWidth height: aHeight andObjects: aDictionaryOfStageObjects
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:14:09'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:14:09'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:14:09'!
FAILURE!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:14:09'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:14:09'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:14:09'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:14:09'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:14:09'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:15:05' prior: 50869095!
test03roomWidthIsInteger

	self
		should: [Room withWidth: 1.1 height: 100 objects: Dictionary new andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidWidth.! !

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:15:07'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:15:11'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:15:11'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:15:41'!
test08chracterIsInTheStage
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:16:35'!
test08chracterXIsInTheStage
	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:16:40'!
ERROR!
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 18:16:48'!
invalidCharacterPosition
	self shouldBeImplemented.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 18:17:05' prior: 50870141!
invalidCharacterPosition
	^'Character initial position must be in the room'.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 18:17:09' prior: 50870146!
invalidCharacterPosition
	^'Character initial position must be inside the room'.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:17:09'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:17:09'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:17:09'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:17:09'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:17:09'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:17:10'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:17:10'!
PASSED!

!testRun: #RoomTest #test08chracterIsInTheStage stamp: 'IO 12/10/2020 18:17:10'!
FAILURE!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:17:10'!
FAILURE!

!methodRemoval: RoomTest #test08chracterIsInTheStage stamp: 'IO 12/10/2020 18:17:17'!
test08chracterIsInTheStage
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:17:48' prior: 50869858!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter x < aWidth) ifFalse: [self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:17:49'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:17:49'!
FAILURE!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:17:49'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:17:58'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:17:58'!
FAILURE!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:17:58'!
FAILURE!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:22:33'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:22:55' prior: 50870196!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x < aWidth) ifFalse: [self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:22:56'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:22:56'!
FAILURE!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:22:56'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:26:09'!
test05stageObjectsIsInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {11@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!methodRemoval: RoomTest #test05stageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:26:09'!
test05stageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {11@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:26:35'!
test08manyStageObjectsXIsInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:26:39'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:26:46' prior: 50870122!
test08chracterXIsInTheStage
"
	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition."! !

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:26:47'!
PASSED!

!testRun: #RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:26:47'!
FAILURE!

!testRun: #RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:26:47'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:26:58' prior: 50870273!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
	
	"(aPlayableCharacter position x < aWidth) ifFalse: [self error: self invalidCharacterPosition ]"
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:26:58'!
PASSED!

!testRun: #RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:26:58'!
FAILURE!

!testRun: #RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:26:58'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:27:10' prior: 50870413!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight) ifFalse: [self error: self invalidObjectPosition] ].
	
	"(aPlayableCharacter position x < aWidth) ifFalse: [self error: self invalidCharacterPosition ]"
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:27:10'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:27:10'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:27:10'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:27:10'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:27:10'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:27:11'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:27:11'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:27:11'!
PASSED!

!testRun: #RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:27:11'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:27:36'!
test10
"
	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition."! !

!methodRemoval: RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:27:36'!
test08chracterXIsInTheStage
"
	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition."!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:27:43'!
test08chracterXIsInTheStage
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!methodRemoval: RoomTest #test08manyStageObjectsXIsInteger stamp: 'IO 12/10/2020 18:27:43'!
test08manyStageObjectsXIsInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:28:04'!
test09chracterYIsInTheStage
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test09chracterYIsInTheStage stamp: 'IO 12/10/2020 18:28:06'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:28:21' prior: 50870464!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [self error: self invalidObjectPosition] ].
	
	"(aPlayableCharacter position x < aWidth) ifFalse: [self error: self invalidCharacterPosition ]"
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test09chracterYIsInTheStage stamp: 'IO 12/10/2020 18:28:23'!
PASSED!

!testRun: #RoomTest #test10 stamp: 'IO 12/10/2020 18:28:23'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:28:53'!
test08objectXAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!methodRemoval: RoomTest #test08chracterXIsInTheStage stamp: 'IO 12/10/2020 18:28:53'!
test08chracterXIsInTheStage
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:03'!
test09objectYAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!methodRemoval: RoomTest #test09chracterYIsInTheStage stamp: 'IO 12/10/2020 18:29:03'!
test09chracterYIsInTheStage
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:08'!
test08stageObjectXAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!methodRemoval: RoomTest #test08objectXAreInteger stamp: 'IO 12/10/2020 18:29:08'!
test08objectXAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:16'!
test09stageObjectYAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!methodRemoval: RoomTest #test09objectYAreInteger stamp: 'IO 12/10/2020 18:29:16'!
test09objectYAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:28'!
test10characterXIsInBounds
"
	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition."! !

!methodRemoval: RoomTest #test10 stamp: 'IO 12/10/2020 18:29:28'!
test10
"
	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition."!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:32' prior: 50870740!
test10characterXIsInBounds

	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:29:36'!
FAILURE!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:29:39'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:45' prior: 50870771!
test10characterXIsInBounds

	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:29:48'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:29:57' prior: 50870793!
test10characterXIsInBounds

	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:29:57'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:30:07' prior: 50870586!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x < aWidth) ifFalse: [self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:30:07'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:30:07'!
FAILURE!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:30:07'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:30:20'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:30:20'!
FAILURE!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:30:20'!
FAILURE!
!PlayableCharacter methodsFor: 'nil' stamp: 'IO 12/10/2020 18:31:07'!
position
	^position copy.
	! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 18:31:08'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:31:18'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:31:18'!
FAILURE!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:31:18'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:31:29' prior: 50870812!
test10characterXIsInBounds

	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.
	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:31:31'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:31:31'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:32:11' prior: 50870688!
test08stageObjectXAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'key' weighing: 1.
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:32:18' prior: 50870714!
test09stageObjectYAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'key' weighing: 1.
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:19'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:32:22'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:22'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:32:26' prior: 50870996!
test10characterXIsInBounds

	| stageObjects character |
	
	stageObjects := Dictionary newFromPairs: {}.

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:32:27'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:27'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:32:40' prior: 50871139!
test10characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:32:42'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:32:42'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:32:52'!
test11characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:32:53'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:33:36' prior: 50870831!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:33:37'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:33:37'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:33:41' prior: 50871251!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:33:43' prior: 50871307!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [ self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [ self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:33:50' prior: 50871331!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:33:51'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:33:51'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:36:04'!
validate: aCardinalPoint isPositiveAndGraterThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint >= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:36:33' prior: 50871355!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	self validate: aWidth isPositiveAndGraterThan: 0 orThrows: self invalidWidth.

	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:36:34'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:36:34'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:36:48' prior: 50871421!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	self validate: aWidth isPositiveAndGraterThan: 0 orThrows: self invalidWidth.
	self validate: aHeight isPositiveAndGraterThan: 0 orThrows: self invalidHeight.

	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:36:48'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:36:48'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:37:19'!
validate: aCardinalPoint isPositiveAndSmallerThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint >= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:37:24' prior: 50871532!
validate: aCardinalPoint isPositiveAndSmallerThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint <= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:37:25'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:37:25'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:37:44'!
validate: aCardinalPoint isPositiveAndStrictlyGraterThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint > aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:37:45'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:37:45'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:38:06' prior: 50871477!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	self validate: aWidth isPositiveAndStrictlyGraterThan: 0 orThrows: self invalidWidth.
	self validate: aHeight isPositiveAndGraterThan: 0 orThrows: self invalidHeight.

	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:38:20' prior: 50871626!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	self validate: aWidth isPositiveAndStrictlyGraterThan: 0 orThrows: self invalidWidth.
	self validate: aHeight isPositiveAndStrictlyGraterThan: 0 orThrows: self invalidHeight.
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:38:20'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:38:20'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:38:33' prior: 50869918!
test01roomWidthIsPositive

	self
		should: [Room withWidth: 0 height: 100 objects: Dictionary new andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:38:36' prior: 50869927!
test02roomHeightIsPositive

	self
		should: [Room withWidth: 100 height: 0 objects: Dictionary new andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidHeight.! !

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:38:36'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:38:36'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:39:10'!
validate: aCardinalPoint isPositiveIntegerAndSmallerThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint <= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:40:26' prior: 50871649!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:40:26'!
PASSED!

!methodRemoval: Room class #validate:isPositiveIntegerAndSmallerThan:orThrows: stamp: 'IO 12/10/2020 18:40:28'!
validate: aCardinalPoint isPositiveIntegerAndSmallerThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint <= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].!

!methodRemoval: Room class #validate:isPositiveAndStrictlyGraterThan:orThrows: stamp: 'IO 12/10/2020 18:40:29'!
validate: aCardinalPoint isPositiveAndStrictlyGraterThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint > aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].!

!methodRemoval: Room class #validate:isPositiveAndSmallerThan:orThrows: stamp: 'IO 12/10/2020 18:40:30'!
validate: aCardinalPoint isPositiveAndSmallerThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint <= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].!

!methodRemoval: Room class #validate:isPositiveAndGraterThan:orThrows: stamp: 'IO 12/10/2020 18:40:31'!
validate: aCardinalPoint isPositiveAndGraterThan: aMaximumValue orThrows: anErrorMessage
	
	(aCardinalPoint >= aMaximumValue and: aCardinalPoint isInteger) ifFalse: [
		self error: anErrorMessage ].!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:40:33'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:40:34'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:40:37'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:40:44'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:40:44'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:44'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:40:45'!
PASSED!

!testRun: #RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:40:45'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:40:53'!
test12characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test10characterXIsInBounds stamp: 'IO 12/10/2020 18:40:53'!
test10characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:40:57'!
test13characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test11characterYIsInBounds stamp: 'IO 12/10/2020 18:40:57'!
test11characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:41:00'!
test11characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:41:00'!
test12characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:41:03'!
test12characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:41:03'!
test13characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:42:03'!
test10stageObjectXIsPositive
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		-1@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:42:04'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:42:35' prior: 50871768!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x <= aWidth and: position x isInteger and:
		position y <= aHeight and: position y isInteger
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test11characterXIsInBounds stamp: 'IO 12/10/2020 18:42:37'!
PASSED!

!testRun: #RoomTest #test12characterYIsInBounds stamp: 'IO 12/10/2020 18:42:37'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:43:01'!
test11stageObjectYIsPositive
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@-1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:43:02'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:43:23' prior: 50872122!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x <= aWidth and: position x isInteger and:
		(position y >= 0 and: position y <= aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test11characterXIsInBounds stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:43:23'!
PASSED!

!testRun: #RoomTest #test12characterYIsInBounds stamp: 'IO 12/10/2020 18:43:23'!
PASSED!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:44:03'!
test12characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test11characterXIsInBounds stamp: 'IO 12/10/2020 18:44:03'!
test11characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 11@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:44:07'!
test13characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test12characterYIsInBounds stamp: 'IO 12/10/2020 18:44:07'!
test12characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@11 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:44:23'!
test12characterXIsPositive

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: -1@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test12characterXIsPositive stamp: 'IO 12/10/2020 18:44:24'!
FAILURE!
!RoomTest methodsFor: 'tests' stamp: 'IO 12/10/2020 18:44:43'!
test14characterXIsPositive

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: -1@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test12characterXIsPositive stamp: 'IO 12/10/2020 18:44:43'!
test12characterXIsPositive

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: -1@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:45:26' prior: 50872198!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x <= aWidth and: position x isInteger and:
		(position y >= 0 and: position y <= aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x >= 0 and: aPlayableCharacter position x <= aWidth and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:45:28'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:45:28'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 18:45:42'!
test15characterYIsPositive

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@-1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:45:42'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:46:13' prior: 50872363!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x <= aWidth and: position x isInteger and:
		(position y >= 0 and: position y <= aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x >= 0 and: aPlayableCharacter position x <= aWidth
		and: aPlayableCharacter position y >= 0 and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:46:16' prior: 50872448!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x < aWidth and: position x isInteger and:
		(position y >= 0 and: position y < aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x >= 0 and: aPlayableCharacter position x <= aWidth
		and: aPlayableCharacter position y >= 0 and: aPlayableCharacter position y <= aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:46:16'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:46:16'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:46:23' prior: 50872476!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x < aWidth and: position x isInteger and:
		(position y >= 0 and: position y < aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	(aPlayableCharacter position x >= 0 and: aPlayableCharacter position x < aWidth
		and: aPlayableCharacter position y >= 0 and: aPlayableCharacter position y < aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:46:23'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:46:23'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 18:46:36' prior: 50870320!
test05stageObjectsIsInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {10@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:46:37'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:46:37'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 18:46:42' prior: 50869959!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		10@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:46:43'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:46:43'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 18:46:47' prior: 50869975!
test07manyStageObjectsAreInsideTheRoomsHeight
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@10. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects
			andCharacter: self validCharacter]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:46:48'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:46:52'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:46:52'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 18:47:04' prior: 50872261!
test12characterXIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 10@1 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:47:05'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:47:05'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 18:47:10' prior: 50872289!
test13characterYIsInBounds

	| character |

	character := PlayableCharacter named: 'Ilan' using: (
		Backpack containingUpTo: 100 limitingPointsTo: 100) at: 1@10 heading: #North.

	self should: [
		Room withWidth: 10
			height: 10
			objects: (Dictionary newFromPairs: {})
			andCharacter: character]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:47:10'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:47:10'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:49:18'!
validate: aCoordinate isIntegerPositiveGraterThan: aMaximumCoordinate orThrow: anError
	(aCoordinate >= 0 and: aCoordinate < aMaximumCoordinate and: aCoordinate isInteger) ifFalse: [
		self error: anError].
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:49:20'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:49:20'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:50:33'!
validate: aCoordinate isIntegerPositiveSmallerThan: aMaximumCoordinate orThrow: anError
	(aCoordinate >= 0 and: aCoordinate < aMaximumCoordinate and: aCoordinate isInteger) ifFalse: [
		self error: anError].
! !

!methodRemoval: Room class #validate:isIntegerPositiveGraterThan:orThrow: stamp: 'IO 12/10/2020 18:50:36'!
validate: aCoordinate isIntegerPositiveGraterThan: aMaximumCoordinate orThrow: anError
	(aCoordinate >= 0 and: aCoordinate < aMaximumCoordinate and: aCoordinate isInteger) ifFalse: [
		self error: anError].
!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:51:08' prior: 50872548!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x < aWidth and: position x isInteger and:
		(position y >= 0 and: position y < aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	(aPlayableCharacter position x >= 0 and: aPlayableCharacter position x < aWidth
		and: aPlayableCharacter position y >= 0 and: aPlayableCharacter position y < aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:51:08'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:51:08'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:51:25' prior: 50873050!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x < aWidth and: position x isInteger and:
		(position y >= 0 and: position y < aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidCharacterPosition.
	(aPlayableCharacter position x >= 0 and: aPlayableCharacter position x < aWidth
		and: aPlayableCharacter position y >= 0 and: aPlayableCharacter position y < aHeight) ifFalse: [
		self error: self invalidCharacterPosition ]
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:51:26'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:51:26'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:51:29' prior: 50873126!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position | (
		position x >= 0 and: position x < aWidth and: position x isInteger and:
		(position y >= 0 and: position y < aHeight and: position y isInteger)
	) ifFalse: [
		self error: self invalidObjectPosition] ].
	
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidCharacterPosition.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:51:29'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:51:29'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:51:29'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:51:29'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:51:29'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:51:30'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:51:30'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:52:29' prior: 50873205!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	(aWidth strictlyPositive and: aWidth isInteger) ifFalse: [
		self error: self invalidWidth ].
	(aHeight strictlyPositive and: aHeight isInteger) ifFalse: [
		self error: self invalidHeight ].
	
	aDictionaryOfStageObjects keys do: [ :position |
		self validate: position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidObjectPosition.
		self validate: position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidObjectPosition.].
	
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidCharacterPosition.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:52:30'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:52:30'!
PASSED!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:53:31'!
validate: aSize isStrictPositiveIntegerOrThrow: anError
	(aSize > 0 and: aSize isInteger) ifFalse: [self error: anError].
! !
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 18:54:13' prior: 50873277!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	self validate: aWidth isStrictPositiveIntegerOrThrow: self invalidWidth.
	self validate: aHeight isStrictPositiveIntegerOrThrow: self invalidHeight.

	aDictionaryOfStageObjects keys do: [ :position |
		self validate: position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidObjectPosition.
		self validate: position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidObjectPosition.].
	
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidCharacterPosition.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:54:14'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:54:36'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 18:54:40'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 18:54:40'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:04:43' prior: 50871705!
test01roomWidthIsPositive

	self
		should: [Room withWidth: 0 height: 100 objects: Dictionary new]
		raise: Error
		withMessageText: Room invalidWidth.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:04:44'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 19:05:19'!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects
	self validate: aWidth isStrictPositiveIntegerOrThrow: self invalidWidth.
	self validate: aHeight isStrictPositiveIntegerOrThrow: self invalidHeight.

	aDictionaryOfStageObjects keys do: [ :position |
		self validate: position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidObjectPosition.
		self validate: position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidObjectPosition.].
	"
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidCharacterPosition.
	"! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:05:22'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:05:22'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:05:32' prior: 50871714!
test02roomHeightIsPositive

	self
		should: [Room withWidth: 100 height: 0 objects: Dictionary new]
		raise: Error
		withMessageText: Room invalidHeight.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:05:36' prior: 50870055!
test03roomWidthIsInteger

	self
		should: [Room withWidth: 1.1 height: 100 objects: Dictionary new]
		raise: Error
		withMessageText: Room invalidWidth.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:05:40' prior: 50869936!
test04roomWidthIsInteger

	self
		should: [Room withWidth: 100 height: 1.1 objects: Dictionary new]
		raise: Error
		withMessageText: Room invalidHeight.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:05:46' prior: 50872620!
test05stageObjectsIsInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {10@1. NoPointsPortableObject named: 'sword' weighing: 10}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:05:51' prior: 50872681!
test06manyStageObjectsAreInsideTheRoomsWidth
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		10@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:05:55' prior: 50872744!
test07manyStageObjectsAreInsideTheRoomsHeight
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		1@10. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:07:03' prior: 50871044!
test08stageObjectXAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'key' weighing: 1.
		1.1@1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:07:08' prior: 50871059!
test09stageObjectYAreInteger
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@1. NoPointsPortableObject named: 'key' weighing: 1.
		1@1.1. NoPointsPortableObject named: 'sword' weighing: 10.}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:07:12' prior: 50872105!
test10stageObjectXIsPositive
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		-1@1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:07:16' prior: 50872181!
test11stageObjectYIsPositive
	| stageObjects |
	
	stageObjects := Dictionary newFromPairs: {
		1@-1. NoPointsPortableObject named: 'key' weighing: 1}.

	self should: [
		Room withWidth: 10
			height: 10
			objects: stageObjects]
		raise: Error
		withMessageText: Room invalidObjectPosition.! !

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:07:45'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:07:45'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:09:10' prior: 50872854!
test12characterXIsInBounds

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 10@1
			heading:
			#North inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:09:21' prior: 50873764!
test12characterXIsInBounds

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 10@1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:09:22'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 19:09:53' prior: 50873525!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects
	self validate: aWidth isStrictPositiveIntegerOrThrow: self invalidWidth.
	self validate: aHeight isStrictPositiveIntegerOrThrow: self invalidHeight.

	aDictionaryOfStageObjects keys do: [ :position |
		self validate: position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidObjectPosition.
		self validate: position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidObjectPosition.].
	"
	"! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 19:10:54'!
Object subclass: #Room
	instanceVariableNames: 'width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 19:10:56'!
Object subclass: #Room
	instanceVariableNames: 'width height'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'no messages' stamp: 'IO 12/10/2020 19:10:52'!
addCharacter: aPlayableCharacter

	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: width orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: height orThrow: self invalidCharacterPosition.! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 19:11:03' prior: 50873828!
addCharacter: aPlayableCharacter

	self class validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: width orThrow: self invalidCharacterPosition.
	self class validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: height orThrow: self invalidCharacterPosition.! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'IO 12/10/2020 19:12:05'!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint inRoom: aRoom
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading inRoom: aRoom! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'IO 12/10/2020 19:12:26'!
initializeNamed: aName using: aBackpack at: aPosition heading: aMarsRoverHeading inRoom: aRoom 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aMarsRoverHeading.
	
	aRoom addCharacter: self.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:12:32'!
FAILURE!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:12:32'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:12:32'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:12:42'!
FAILURE!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:12:42'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:12:42'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:13:01'!
FAILURE!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:13:01'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:13:01'!
FAILURE!
!Room class methodsFor: 'initialization' stamp: 'IO 12/10/2020 19:13:59' prior: 50873796!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects
	self validate: aWidth isStrictPositiveIntegerOrThrow: self invalidWidth.
	self validate: aHeight isStrictPositiveIntegerOrThrow: self invalidHeight.

	aDictionaryOfStageObjects keys do: [ :position |
		self validate: position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidObjectPosition.
		self validate: position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidObjectPosition.].
	
	^self basicNew initializeWithWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 19:14:36'!
Object subclass: #Room
	instanceVariableNames: 'width height stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 19:14:33'!
initializeWithWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects

	width := aWidth.
	height := aHeight.
	stageObjects := aDictionaryOfStageObjects.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:14:46'!
FAILURE!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:14:46'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:14:46'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 19:15:22' prior: 50873840!
addCharacter: aPlayableCharacter

	self class validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	self class validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: height orThrow: self class invalidCharacterPosition.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:15:23'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:15:26'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:15:26'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:16:04' prior: 50872916!
test13characterYIsInBounds

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@11
			heading: #North
			inRoom: room.]
! !

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:16:05'!
ERROR!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:16:17' prior: 50874198!
test13characterYIsInBounds

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@11
			heading: #North
			inRoom: room.]
! !

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:16:17'!
ERROR!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:16:23'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:17:00'!
ERROR!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:17:00'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:17:00'!
ERROR!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:17:36' prior: 50874213!
test13characterYIsInBounds

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@11
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.
! !

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:17:36'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:17:36'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:17:55' prior: 50872334!
test14characterXIsPositive

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: -1@1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:17:56'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:18:06' prior: 50872430!
test15characterYIsPositive

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@-1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:18:07'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:18:39'!
PASSED!

!methodRemoval: Room class #withWidth:height:objects:andCharacter: stamp: 'IO 12/10/2020 19:24:59'!
withWidth: aWidth height: aHeight objects: aDictionaryOfStageObjects andCharacter: aPlayableCharacter
	self validate: aWidth isStrictPositiveIntegerOrThrow: self invalidWidth.
	self validate: aHeight isStrictPositiveIntegerOrThrow: self invalidHeight.

	aDictionaryOfStageObjects keys do: [ :position |
		self validate: position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidObjectPosition.
		self validate: position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidObjectPosition.].
	
	self validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: aWidth orThrow: self invalidCharacterPosition.
	self validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: aHeight orThrow: self invalidCharacterPosition.!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:25:50'!
test15characterIsNotOverAnObject

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test15characterIsNotOverAnObject stamp: 'IO 12/10/2020 19:25:51'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 19:27:09' prior: 50874097!
addCharacter: aPlayableCharacter

	self class validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	self class validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: height orThrow: self class invalidCharacterPosition.
	
	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPlayableCharacter position) ifTrue: [
			self error: self class invalidCharacterPosition]].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:27:10'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:27:11'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:27:11'!
PASSED!

!testRun: #RoomTest #test15characterIsNotOverAnObject stamp: 'IO 12/10/2020 19:27:11'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:27:11'!
PASSED!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:27:19'!
test16characterYIsPositive

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@-1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:27:19'!
test15characterYIsPositive

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@-1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:27:29'!
test15characterYIsPositive

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@-1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test16characterYIsPositive stamp: 'IO 12/10/2020 19:27:29'!
test16characterYIsPositive

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@-1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:27:32'!
test16characterIsNotOverAnObject

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test15characterIsNotOverAnObject stamp: 'IO 12/10/2020 19:27:32'!
test15characterIsNotOverAnObject

	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!RoomTest methodsFor: 'test invalid positions' stamp: 'IO 12/10/2020 19:28:01'!
test17cannotMoveACharacterOverAStageObject
"
	| room |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	self should: [
		PlayableCharacter
			named: 'Ilan'
			using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
			at: 1@1
			heading: #North
			inRoom: room.]
		raise: Error
		withMessageText: Room invalidCharacterPosition."! !
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 19:40:03' prior: 50874707!
test17cannotMoveACharacterOverAStageObject

	| room character |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@0
		heading: #North
		inRoom: room.
! !

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 19:40:07'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 19:40:07'!
PASSED!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 19:41:14' prior: 50874724!
test17cannotMoveACharacterOverAStageObject

	| room character |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@0
		heading: #North
		inRoom: room.

	
	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.! !

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 19:41:16'!
ERROR!
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 19:41:24'!
invalidCharacterMovement
	self shouldBeImplemented.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 19:41:36' prior: 50874813!
invalidCharacterMovement
	^'Invalid character movement'.! !

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 19:41:37'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 19:43:19' prior: 50868350!
moveForward

	| newPosition |
	newPosition := position + heading forwardPoint
	room moveCharacterTo: newPosition.
	position := newPosition.! !

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 19:43:49'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'initialization' stamp: 'IO 12/10/2020 19:43:47' prior: 50873863!
initializeNamed: aName using: aBackpack at: aPosition heading: aMarsRoverHeading inRoom: aRoom 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aMarsRoverHeading.
	
	room := aRoom.
	aRoom addCharacter: self.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'IO 12/10/2020 19:43:50' prior: 50874843!
initializeNamed: aName using: aBackpack at: aPosition heading: aMarsRoverHeading inRoom: aRoom 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aMarsRoverHeading.
	
	room := aRoom.
	room addCharacter: self.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 19:43:51'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 19:43:51'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 19:43:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 19:43:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 19:43:51'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 19:43:51'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 19:43:51'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 19:43:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 19:43:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 19:43:51'!
PASSED!

Room subclass: #RoomWithBounds
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomWithBounds category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 19:46:35'!
Room subclass: #RoomWithBounds
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

Room subclass: #NullRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NullRoom category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 19:46:52'!
Room subclass: #NullRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classRemoval: #NullRoom stamp: 'IO 12/10/2020 19:47:09'!
Room subclass: #NullRoom
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classRemoval: #RoomWithBounds stamp: 'IO 12/10/2020 19:48:30'!
Room subclass: #RoomWithBounds
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 19:52:10'!
FAILURE!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:02:14' prior: 50867990!
test01_forwardWhenHeadingNorthIncrementsYCoordinate

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' using: self defaultBackpack at: 1@2 heading: #North.

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:03:30'!
playableCharacterNamed: aName at: aPosition heading: aDirection

	PlayableCharacter named: aName using: self defaultBackpack at: aPosition heading: aDirection inRoom: (Room withWidth: 100 height: 100 objects: {})
! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:03:33' prior: 50874955!
playableCharacterNamed: aName at: aPosition heading: aDirection

	^PlayableCharacter named: aName using: self defaultBackpack at: aPosition heading: aDirection inRoom: (Room withWidth: 100 height: 100 objects: {})
! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:03:54' prior: 50874943!
test01_forwardWhenHeadingNorthIncrementsYCoordinate

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 1@2 heading: #North.

	playableCharacter moveForward.

	self assert: (playableCharacter isAt: 1@3 heading: #North)! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:04:05'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:05:00'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:05:22' prior: 50874965!
playableCharacterNamed: aName at: aPosition heading: aDirection

	^PlayableCharacter named: aName using: self defaultBackpack at: aPosition heading: aDirection inRoom: (Room withWidth: 100 height: 100 objects: Dictionary new)
! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:05:23'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:05:23'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:05:23'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:05:23'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:05:23'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:05:23'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:05:23'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:05:23'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:05:23'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:05:23'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:05:29'!
ERROR!
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:05:54' prior: 50874826!
moveForward

	| newPosition |
	newPosition := position + heading forwardPoint.
	"room moveCharacterTo: newPosition."
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:05:54'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:05:54'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:06:16' prior: 50868002!
test02_backwardWhenHeadingNorthDecrementsYCoordinate

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 1@2 heading: #North .

	playableCharacter moveBackward.

	self assert: (playableCharacter isAt: 1@1 heading: #North)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:06:27' prior: 50868014!
test03_rotateRightWhenHeadingNorthHeadsEast

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 1@2 heading: #North .

	playableCharacter rotateRight.

	self assert: (playableCharacter isAt: 1@2 heading: #East)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:06:41' prior: 50868025!
test04_rotateLeftWhenHeadingNorthHeadsWest

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 1@2 heading: #North .

	playableCharacter rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #West)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:06:52' prior: 50868036!
test05_movingWhenHeadingEastWorksAsExpected

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 1@2 heading: #East .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 2@2 heading: #North)! !

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:06:52'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:06:52'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:07:02' prior: 50868050!
test06_movingWhenHeadingSouthWorksAsExpected

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 1@2 heading: #South .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@1 heading: #East)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:07:11' prior: 50868064!
test07_movingWhenHeadingWestWorksAsExpected

	| playableCharacter |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 2@2 heading: #West .

	playableCharacter
		moveForward;
		moveForward;
		moveBackward;
		rotateRight;
		rotateLeft;
		rotateLeft.

	self assert: (playableCharacter isAt: 1@2 heading: #South)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:07:22' prior: 50868078!
test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid

	self
		should: [self playableCharacterNamed: 'Luigi' at: 1@2 heading: #X ]
		raise: Error
		withExceptionDo: [:anError |
			self assert: PlayableCharacter invalidCardinalPointErrorDescription equals: anError messageText ]! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:07:32' prior: 50868091!
test09_canTakePortableObjects

	| playableCharacter paper |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 2@2 heading: #West .
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:07:41' prior: 50868104!
test10_canNotTakeMoreObjectsThanTheBackpackCanCarry

	| playableCharacter paper key |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 2@2 heading: #West .
	paper := NoPointsPortableObject named: 'Paper' weighing: 100.
	key := NoPointsPortableObject named: 'Key' weighing: 1.
	
	playableCharacter take: paper.
	self 
		should: [ playableCharacter take: key ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Backpack maxWeightExceededErrorDescription equals: anError messageText.
			self assert: (playableCharacter backpackIncludes: paper).
			self deny: (playableCharacter backpackIncludes: key) ]
	
	! !

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:07:42'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:07:42'!
PASSED!
!PlayableCharacterTest methodsFor: 'utils' stamp: 'IO 12/10/2020 20:08:07' prior: 50874994!
playableCharacterNamed: aName at: aPosition heading: aDirection

	^PlayableCharacter named: aName using: self defaultBackpack at: aPosition heading: aDirection inRoom: self defaultRoom.
! !
!PlayableCharacterTest methodsFor: 'utils' stamp: 'IO 12/10/2020 20:08:15'!
defaultRoom

	^ Room withWidth: 100 height: 100 objects: Dictionary new! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:08:16'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:08:16'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:08:30' prior: 50875047!
moveForward

	| newPosition |
	newPosition := position + heading forwardPoint.
	room moveCharacterTo: newPosition.
	position := newPosition.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:08:31'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:08:31'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:08:31'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:08:31'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:08:31'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:08:31'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:08:31'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:08:31'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:08:31'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:08:31'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:08:36'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:08:36'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:08:36'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:08:36'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:08:36'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:08:36'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:08:36'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:08:36'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:08:36'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:08:36'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:08:42'!
ERROR!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:08:42'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:08:42'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:08:42'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:08:42'!
ERROR!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:08:42'!
ERROR!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:08:42'!
ERROR!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:08:42'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:08:42'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:08:42'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:08:49'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:08:49'!
FAILURE!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:08:49'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:09:10'!
moveCharacterTo: aPosition
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:09:23' prior: 50875530!
moveCharacterTo: aPosition
	
	
	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: self class invalidCharacterPosition]].! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:09:34' prior: 50875534!
moveCharacterTo: aPosition

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: self class invalidCharacterMovement ]].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:09:34'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:09:35'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:09:35'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:09:35'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:09:35'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:09:35'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:09:35'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:09:35'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:09:37' prior: 50875543!
moveCharacterTo: aPosition

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: self class invalidCharacterMovement]].! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:10:13'!
validateCMoveCharacterTo: aPosition orThorw: anError

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:10:37' prior: 50875602!
moveCharacterTo: aPosition

	self validateCMoveCharacterTo: aPosition orThorw: self class invalidCharacterMovement
! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:11:05'!
validateCanPutCharacterOn: aPosition orThorw: anError

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:11:05' prior: 50875619!
moveCharacterTo: aPosition

	self validateCanPutCharacterOn: aPosition orThorw: self class invalidCharacterMovement
! !

!methodRemoval: Room #validateCMoveCharacterTo:orThorw: stamp: 'IO 12/10/2020 20:11:05'!
validateCMoveCharacterTo: aPosition orThorw: anError

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:11:31' prior: 50874554!
addCharacter: aPlayableCharacter

	self class validate: aPlayableCharacter position x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	self class validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: height orThrow: self class invalidCharacterPosition.
	
	self validateCanPutCharacterOn: aPlayableCharacter position orThorw: self class invalidCharacterPosition.
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:11:32'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:11:32'!
PASSED!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:11:43' prior: 50874792!
test17cannotMoveACharacterOverAStageObject

	| room character |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@0
		heading: #North
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.! !
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:12:38'!
test18cannotMoveACharacterOutsideRoomDown

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.! !

!testRun: #RoomTest #test18cannotMoveACharacterOutsideRoomDown stamp: 'IO 12/10/2020 20:12:39'!
FAILURE!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:13:23'!
test18cannotMoveCharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.! !

!methodRemoval: RoomTest #test18cannotMoveCharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:13:26'!
test18cannotMoveCharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:13:34'!
test18cannotMoveACharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.! !

!methodRemoval: RoomTest #test18cannotMoveACharacterOutsideRoomDown stamp: 'IO 12/10/2020 20:13:34'!
test18cannotMoveACharacterOutsideRoomDown

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterMovement.!

!methodRemoval: PlayableCharacter class #named:using:at:heading: stamp: 'IO 12/10/2020 20:14:47'!
named: aName using: aBackpack at: aPosition heading: aCardinalPoint 
	
	| newHeading |

	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aName using: aBackpack at: aPosition heading: newHeading !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:14:50'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:14:50'!
FAILURE!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:14:50'!
FAILURE!

!methodRemoval: PlayableCharacter #initializeNamed:using:at:heading: stamp: 'IO 12/10/2020 20:15:06'!
initializeNamed: aName using: aBackpack at: aPosition heading: aMarsRoverHeading 

	name := aName.
	backpack := aBackpack.
	position := aPosition.
	heading := aMarsRoverHeading!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:15:24' prior: 50875649!
addCharacter: aPlayableCharacter


	self class validate: aPlayableCharacter position y isIntegerPositiveSmallerThan: height orThrow: self class invalidCharacterPosition.
	
	self validateCanPutCharacterOn: aPlayableCharacter position orThorw: self class invalidCharacterPosition.
! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:15:40' prior: 50875625!
validateCanPutCharacterOn: aPosition orThorw: anError

	self class validate: aPosition x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	
	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:15:41'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:15:41'!
FAILURE!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:15:41'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:15:55'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:15:55'!
FAILURE!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:15:55'!
FAILURE!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:16:41' prior: 50875716!
test17cannotMoveACharacterOverAStageObject

	| room character |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@0
		heading: #North
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:16:45' prior: 50875784!
test18cannotMoveACharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:16:50' prior: 50875996!
validateCanPutCharacterOn: aPosition orThorw: anError

	self class validate: aPosition x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	
	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:16:52' prior: 50875634!
moveCharacterTo: aPosition

	self validateCanPutCharacterOn: aPosition orThorw: self class invalidCharacterPosition
! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:16:53'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:16:53'!
FAILURE!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:16:53'!
FAILURE!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:19:02' prior: 50876140!
test18cannotMoveACharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #East
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:19:05'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:19:05'!
PASSED!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:19:18'!
test18cannotMoveACharacterOutsideOnYAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:19:19'!
FAILURE!
!RoomTest methodsFor: 'test move character' stamp: 'IO 12/10/2020 20:19:24'!
test19cannotMoveACharacterOutsideOnYAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!methodRemoval: RoomTest #test18cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:19:24'!
test18cannotMoveACharacterOutsideOnYAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:19:44' prior: 50875984!
addCharacter: aPlayableCharacter
	
	self validateCanPutCharacterOn: aPlayableCharacter position orThorw: self class invalidCharacterPosition.
! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:19:53' prior: 50876156!
validateCanPutCharacterOn: aPosition orThorw: anError

	self class validate: aPosition x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	self class validate: aPosition position y isIntegerPositiveSmallerThan: height orThrow: self class invalidCharacterPosition.

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:19:54'!
FAILURE!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:19:54'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:19:54'!
FAILURE!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:19:54'!
FAILURE!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:19:54'!
ERROR!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:19:54'!
ERROR!

!testRun: #RoomTest #test19cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:19:54'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:20:00'!
FAILURE!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:20:00'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:20:00'!
FAILURE!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:20:00'!
FAILURE!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:20:00'!
ERROR!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:20:00'!
ERROR!

!testRun: #RoomTest #test19cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:20:00'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:20:10'!
FAILURE!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:20:10'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:20:10'!
FAILURE!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:20:10'!
FAILURE!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:20:10'!
ERROR!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:20:10'!
ERROR!

!testRun: #RoomTest #test19cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:20:10'!
ERROR!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:20:14'!
ERROR!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:20:14'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:20:20' prior: 50876362!
validateCanPutCharacterOn: aPosition orThorw: anError

	self class validate: aPosition x isIntegerPositiveSmallerThan: width orThrow: self class invalidCharacterPosition.
	self class validate: aPosition y isIntegerPositiveSmallerThan: height orThrow: self class invalidCharacterPosition.

	stageObjects keys do: [ :stageObjectPosition | (stageObjectPosition = aPosition) ifTrue: [
			self error: anError]].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test19cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:20:21'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:20:36'!
PASSED!

!testRun: #RoomTest #test19cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:20:36'!
PASSED!
!RoomTest methodsFor: 'test invalid movements' stamp: 'IO 12/10/2020 20:23:49'!
test20playerCanTakeAPortableObject

	! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:26:53' prior: 50875223!
test09_canTakePortableObjects

	| paper room playableCharacter |

	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	room := Room withWidth: 100 height: 100 objects: (Dictionary newFromPairs: {3@2. paper}).
	playableCharacter := PlayableCharacter named: 'Luigi' using: self defaultBackpack at: 2@2 heading: #West inRoom: self defaultRoom.

	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:26:59'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:27:05'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:27:05'!
PASSED!
!RoomTest methodsFor: 'test taking objects' stamp: 'IO 12/10/2020 20:27:42'!
test20playerCannotTakeAPortableObjectThatIsNotInFront

	
	! !

!methodRemoval: RoomTest #test20playerCanTakeAPortableObject stamp: 'IO 12/10/2020 20:27:44'!
test20playerCanTakeAPortableObject

	!
!RoomTest methodsFor: 'test taking objects' stamp: 'IO 12/10/2020 20:29:56' prior: 50876789!
test20playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] signal: Error withMessageText: Room cannotGrabObject.
	
	
	! !
!RoomTest methodsFor: 'test taking objects' stamp: 'IO 12/10/2020 20:30:08' prior: 50876799!
test20playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
	
	
	! !

!testRun: #RoomTest #test20playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:30:10'!
ERROR!
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 20:30:20'!
cannotGrabObject
	self shouldBeImplemented.! !
!Room class methodsFor: 'error messages' stamp: 'IO 12/10/2020 20:30:31' prior: 50876840!
cannotGrabObject
	^'Cannot grab this object'.! !

!testRun: #RoomTest #test20playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:30:32'!
FAILURE!
!PlayableCharacterTest methodsFor: 'nil' stamp: 'IO 12/10/2020 20:31:13'!
test11cannotMoveACharacterOverAStageObject

	| room character |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@0
		heading: #North
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:31:41'!
test12cannotMoveACharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #East
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:32:00'!
test13cannotMoveACharacterOutsideOnYAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:32:15'!
test14playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
	
	
	! !

!methodRemoval: RoomTest #test20playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:32:21'!
test20playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
	
	
	!

!methodRemoval: RoomTest #test17cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:32:23'!
test17cannotMoveACharacterOverAStageObject

	| room character |

	room := Room withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {
			1@1. NoPointsPortableObject named: 'sword' weighing: 10.
		}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@0
		heading: #North
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!

!methodRemoval: RoomTest #test18cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:32:23'!
test18cannotMoveACharacterOutsideOnXAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #East
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!

!methodRemoval: RoomTest #test19cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:32:23'!
test19cannotMoveACharacterOutsideOnYAxis

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveForward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.!

!testRun: #PlayableCharacterTest #test14playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:32:30'!
FAILURE!
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:32:46'!
test15playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
	
	
	! !

!methodRemoval: PlayableCharacterTest #test14playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:32:46'!
test14playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
	
	
	!
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:32:50' prior: 50876991!
test15playerCannotTakeAPortableObjectThatIsNotInFront
"
	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
	
	
	"! !

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:32:51'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:32:51'!
PASSED!
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:33:06'!
test14cannotMoveACharacterOutsideMovingBackwards

	| room character |

	room := Room
		withWidth: 1
		height: 1
		objects: (Dictionary new).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #South
		inRoom: room.

	self
		should: [character moveBackward]
		raise: Error
		withMessageText: Room invalidCharacterPosition.! !

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:33:07'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:33:40' prior: 50868345!
moveBackward

	| newPosition |
	newPosition := position - heading forwardPoint.
	room moveCharacterTo: newPosition.
	position := newPosition.
! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:33:41'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:33:41'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:34:03'!
moveTo: aNewPosition

	room moveCharacterTo: aNewPosition.
	position := aNewPosition.
! !
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:34:17' prior: 50875355!
moveForward

	self moveTo: position + heading forwardPoint.
! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:34:18'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:34:18'!
PASSED!
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:34:31' prior: 50877125!
moveBackward

	self moveTo: position - heading forwardPoint.

! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:34:32'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:34:32'!
PASSED!
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:35:01' prior: 50877029!
test15playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
! !

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:35:02'!
FAILURE!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:35:04'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:37:18'!
take

	backpack add: (room take: position + heading forwardPoint).! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:37:21'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:37:21'!
FAILURE!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:37:21'!
FAILURE!
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:38:05' prior: 50877322!
test15playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take] raise: Error withMessageText: Room cannotGrabObject.
! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:40:43' prior: 50868364!
take: aPortableObject

	room take: aPortableObject.
	backpack add: aPortableObject.! !

!methodRemoval: PlayableCharacter #take stamp: 'IO 12/10/2020 20:40:50'!
take

	backpack add: (room take: position + heading forwardPoint).!
!PlayableCharacterTest methodsFor: 'room errors' stamp: 'IO 12/10/2020 20:41:04' prior: 50877415!
test15playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
! !

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:41:05'!
FAILURE!
!Room methodsFor: 'nil' stamp: 'IO 12/10/2020 20:41:26'!
take: aPortableObject
	! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 20:41:41'!
character: aCharacter take: aPortableObject
	! !

!methodRemoval: Room #take: stamp: 'IO 12/10/2020 20:41:47'!
take: aPortableObject
	!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:42:19' prior: 50877433!
take: aPortableObject

	backpack add: aPortableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:43:10'!
take

	backpack add: (room take: position + heading forwardPoint).! !
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:43:33'!
forwardPoint

	^position + heading forwardPoint.
! !
!PlayableCharacter methodsFor: 'moving' stamp: 'IO 12/10/2020 20:43:50' prior: 50877196!
moveForward

	self moveTo: self forwardPoint.
! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:44:00' prior: 50877483!
take

	backpack add: (room take: self forwardPoint).! !

!methodRemoval: Room #character:take: stamp: 'IO 12/10/2020 20:44:09'!
character: aCharacter take: aPortableObject
	!
!Room methodsFor: 'nil' stamp: 'IO 12/10/2020 20:45:20'!
takeFrom: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	stageObjects removeKey: aPosition.
	^object.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:45:35' prior: 50877498!
take

	backpack add: (room takeFrom: self forwardPoint).! !
!PlayableCharacterTest methodsFor: 'tests' stamp: 'IO 12/10/2020 20:07:32' prior: 50876689!
test09_canTakePortableObjects

	| playableCharacter paper |

	playableCharacter := self playableCharacterNamed: 'Luigi' at: 2@2 heading: #West .
	paper := NoPointsPortableObject named: 'Paper' weighing: 1.
	
	playableCharacter take: paper.
	
	self assert: (playableCharacter backpackIncludes: paper)! !

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:46:10'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:46:10'!
FAILURE!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:46:10'!
FAILURE!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:47:34'!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {0@1}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:47:35'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:48:25' prior: 50877513!
take

	| aProtableObject |
	aProtableObject := room takeFrom: self forwardPoint.
	self take: aProtableObject.! !
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:48:35' prior: 50877616!
take

	self take: (room takeFrom: self forwardPoint).! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:48:36'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:48:36'!
FAILURE!

!testRun: #PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:48:36'!
FAILURE!

!methodRemoval: PlayableCharacterTest #test15playerCannotTakeAPortableObjectThatIsNotInFront stamp: 'IO 12/10/2020 20:48:39'!
test15playerCannotTakeAPortableObjectThatIsNotInFront

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {3@3}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	self should: [character take: paper] raise: Error withMessageText: Room cannotGrabObject.
!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:48:43'!
FAILURE!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:48:43'!
FAILURE!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:49:03' prior: 50877595!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {0@1}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 0@0
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:06'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:49:11'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:11'!
ERROR!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:11'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:49:15'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:49:16'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:49:16'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:16'!
ERROR!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:16'!
ERROR!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:49:39' prior: 50877715!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@0}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:40'!
ERROR!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:49:46' prior: 50877856!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {2@1}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:47'!
ERROR!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:49:54' prior: 50877878!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@1}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:49:57' prior: 50877900!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:49:58'!
ERROR!

self forwardPoint !

stageObjects!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:50:51' prior: 50877918!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. paper.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:50:52'!
ERROR!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:51:55' prior: 50877941!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. paper.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper at: paper position).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:51:57'!
ERROR!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:52:15' prior: 50877963!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. paper.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.
		
	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:52:16'!
ERROR!
!Room methodsFor: 'testing' stamp: 'IO 12/10/2020 20:52:26'!
includes: aNoPointsPortableObject 
	self shouldBeImplemented.! !

stageObjects!
!Room methodsFor: 'testing' stamp: 'IO 12/10/2020 20:53:49' prior: 50878007!
includes: aStageObject 
	^stageObjects values includes: aStageObject. ! !

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:53:50'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:53:52'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:53:52'!
PASSED!
!PlayableCharacterTest methodsFor: 'taking' stamp: 'IO 12/10/2020 20:54:47' prior: 50877986!
test15playerCanTakeFrontObject

	| paper room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 1.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. paper.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.

	self assert: (character backpackIncludes: paper).
	self deny: (room includes: paper).
! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 20:58:28'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 20:58:17'!
test16playerTakesNothingFromEmptyNonPortableObject

	| nonPortableObject room character |
	
	nonPortableObject := NonPortableObject containing: OrderedCollection new.

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (room includes: nonPortableObject).
! !

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 20:58:31'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'IO 12/10/2020 20:58:36'!
containing: anOrderedCollection 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeContaining: anOrderedCollection ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'IO 12/10/2020 20:58:41' prior: 50878189!
containing: anOrderedCollection 

	^self new initializeContaining: anOrderedCollection ! !

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 20:58:43'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 20:59:00'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'orderedCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 20:59:00'!
initializeContaining: anOrderedCollection 
	self shouldBeImplemented.
	orderedCollection := anOrderedCollection.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 20:59:02' prior: 50878217!
initializeContaining: anOrderedCollection 

	orderedCollection := anOrderedCollection.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 20:59:14' prior: 50878224!
initializeContaining: aCollectionOfContainedObjects 

	orderedCollection := aCollectionOfContainedObjects.! !

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 20:59:15'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 20:59:29' prior: 50878230!
initializeContaining: aCollectionOfContainedObjects 

	orderedCollection := aCollectionOfContainedObjects.! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'IO 12/10/2020 20:59:35' prior: 50878199!
containing: aCollectionOfContainedObjects 

	^self new initializeContaining: aCollectionOfContainedObjects ! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 20:59:37'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 20:59:37'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 20:59:37'!
ERROR!
!NonPortableObject methodsFor: 'nil' stamp: 'IO 12/10/2020 21:00:17'!
assertCanAddTo: aBackpack
	^false.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:00:18'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:00:18'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:00:18'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 21:02:39' prior: 50877478!
take: aPortableObject

	backpack add: aPortableObject objects.! !
!StageObject methodsFor: 'no messages' stamp: 'IO 12/10/2020 21:02:57'!
objects
	self subclassResponsibility.
! !

!methodRemoval: NonPortableObject #assertCanAddTo: stamp: 'IO 12/10/2020 21:03:01'!
assertCanAddTo: aBackpack
	^false.!
!PortableObject methodsFor: 'nil' stamp: 'IO 12/10/2020 21:03:27' overrides: 50878393!
objects
	^self.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:03:40' overrides: 50878393!
objects
	^nil.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:03:41'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:03:41'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:03:41'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:04:03'!
assertCanAddTo: aBackpack
	^false! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:04:04'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:04:04'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:04:04'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:04:22'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:04:22'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:04:22'!
ERROR!

!methodRemoval: PortableObject #objects stamp: 'IO 12/10/2020 21:05:52'!
objects
	^self.!

!methodRemoval: NonPortableObject #objects stamp: 'IO 12/10/2020 21:05:55'!
objects
	^nil.!
!Backpack methodsFor: 'adding' stamp: 'IO 12/10/2020 21:06:28' prior: 50868200!
add: aPortableObject
	
	aPortableObject assertCanAddTo: self.
	aPortableObject addTo: container.

	! !
!PortableObject methodsFor: 'adding' stamp: 'IO 12/10/2020 21:06:50'!
addTo: aContainer
	aContainer add: self.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:06:57'!
ERROR!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:06:57'!
ERROR!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:06:57'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:06:57'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:06:57'!
ERROR!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:07:30'!
ERROR!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:07:30'!
ERROR!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:07:30'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:07:30'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:07:30'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:07:35'!
ERROR!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 21:07:46' prior: 50878388!
take: aPortableObject

	backpack add: aPortableObject.! !

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:07:47'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:07:50'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:07:50'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:07:50'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:07:50'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:07:50'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:07:51'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:07:51'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:07:51'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:08:07'!
addTo: aContainer
	! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:08:08'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:08:08'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:08:08'!
FAILURE!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:08:13' prior: 50878473!
assertCanAddTo: aBackpack
	^true! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:08:13'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:08:14'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:08:14'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:08:14'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 21:09:50' prior: 50877623!
take

	self take: (room takeOn: self).! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:10:17'!
takeOn: aCharacter

	| object |
	
	object := stageObjects at: aCharacter forwardPoint.
	stageObjects removeKey: aCharacter forwardPoint.
	^object.! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:10:30' prior: 50879165!
takeOn: aCharacter

	| object |
	
	object := stageObjects at: aCharacter forwardPoint.
	stageObjects removeKey: aCharacter forwardPoint.
	^object.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:10:30'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:10:35'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:10:40'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:10:40'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:10:40'!
FAILURE!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:10:45'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:10:46'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:10:46'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:10:46'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 20:48:35' prior: 50879161!
take

	self take: (room takeFrom: self forwardPoint).! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:11:17'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:11:17'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:11:17'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:11:17'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:11:17'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:11:17'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:11:18'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:11:18'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:11:18'!
FAILURE!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:11:22'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:11:22'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:11:22'!
FAILURE!

!methodRemoval: Room #takeOn: stamp: 'IO 12/10/2020 21:11:41'!
takeOn: aCharacter

	| object |
	
	object := stageObjects at: aCharacter forwardPoint.
	stageObjects removeKey: aCharacter forwardPoint.
	^object.!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:13:12' prior: 50877506!
takeFrom: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	(stageObjects isKindOf: NonPortableObject) ifFalse: [stageObjects removeKey: aPosition].
	^object.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:13:13'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:13:15'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:13:15'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:13:15'!
FAILURE!

stageObjects!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:13:56'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:13:59'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:13:59'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:13:59'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:14:51'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:14:53'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:14:53'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:14:53'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:15:17' prior: 50879748!
takeFrom: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	(object isKindOf: NonPortableObject) ifFalse: [stageObjects removeKey: aPosition].
	^object.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:15:18'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:15:20'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:15:20'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:15:42' prior: 50880396!
takeFrom: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	object removeFrom: self.
	^object.! !

!methodRemoval: StageObject #objects stamp: 'IO 12/10/2020 21:15:49'!
objects
	self subclassResponsibility.
!
!StageObject methodsFor: 'no messages' stamp: 'IO 12/10/2020 21:15:56'!
removeFrom
	self subclassResponsibility.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:16:09'!
removeFrom: aRoom
	aRoom remove: self.! !
!PortableObject methodsFor: 'nil' stamp: 'IO 12/10/2020 21:16:19'!
removeFrom: aRoom
	! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:16:33' prior: 50880632!
removeFrom: aRoom
	aRoom remove: self.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:16:37' prior: 50880628!
removeFrom: aRoom
! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:17:30'!
remove: aStageObject
	stageObjects removeKey: aStageObject position.! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:17:33'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:17:33'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:17:33'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:17:55'!
removeAt: aPosition
	stageObjects removeKey: aPosition.! !

!methodRemoval: Room #remove: stamp: 'IO 12/10/2020 21:17:57'!
remove: aStageObject
	stageObjects removeKey: aStageObject position.!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:18:19' prior: 50880614!
takeFrom: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	object removeFrom: self at: aPosition.
	^object.! !
!StageObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:18:41'!
removeFrom: aRoom at: aPosition
	self subclassResponsibility.! !

!methodRemoval: StageObject #removeFrom stamp: 'IO 12/10/2020 21:18:42'!
removeFrom
	self subclassResponsibility.!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:18:54' overrides: 50880830!
removeFrom: aRoom at: aPosition
! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:19:22' overrides: 50880830!
removeFrom: aRoom at: aPosition
	aRoom remove: self at: aPosition.
! !

!methodRemoval: PortableObject #removeFrom: stamp: 'IO 12/10/2020 21:19:29'!
removeFrom: aRoom
	aRoom remove: self.!

!methodRemoval: NonPortableObject #removeFrom: stamp: 'IO 12/10/2020 21:19:34'!
removeFrom: aRoom
!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:19:59'!
remove: aStageObject at: aPosition
	stageObjects removeKey: aPosition.! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:19:59'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:20:00'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:20:00'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:21:48'!
test16playerTakesAnObjectFromANonPortableObject

	| paper nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (room includes: nonPortableObject).
! !

!testRun: #PlayableCharacterTest #test16playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:21:49'!
FAILURE!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'IO 12/10/2020 21:22:42'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:22:42' prior: 50878241!
initializeContaining: aCollectionOfContainedObjects 

	stageObjects := aCollectionOfContainedObjects.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:26:00' prior: 50880839 overrides: 50880830!
removeFrom: aRoom at: aPosition
	stageObjects removeFrom: aRoom at: aPosition.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:26:04'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:26:04'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:26:04'!
ERROR!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:26:49' prior: 50880856!
remove: aStageObject at: aPosition
	(stageObjects at: aPosition = aStageObject) ifTrue: [stageObjects removeKey: aPosition].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:26:50'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:26:50'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:26:50'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:26:50'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:26:50'!
PASSED!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:27:05' prior: 50881138!
remove: aStageObject at: aPosition
	((stageObjects at: aPosition) = aStageObject) ifTrue: [stageObjects removeKey: aPosition].! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:27:06'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:27:06'!
PASSED!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:27:38' prior: 50881068 overrides: 50880830!
removeFrom: aRoom at: aPosition
	stageObjects first removeFrom: aRoom at: aPosition.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:27:39'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:27:39'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:27:39'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:27:51'!
test17playerTakesAnObjectFromANonPortableObject

	| paper nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (room includes: nonPortableObject).
! !

!methodRemoval: PlayableCharacterTest #test16playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:27:51'!
test16playerTakesAnObjectFromANonPortableObject

	| paper nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (room includes: nonPortableObject).
!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:27:53'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:27:54'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:27:54'!
FAILURE!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:28:24'!
FAILURE!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:28:29'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:28:29'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:28:29'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:29:00'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:29:00'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:29:22' prior: 50881366 overrides: 50880830!
removeFrom: aRoom at: aPosition
	(stageObjects size = 1) ifTrue: [stageObjects first removeFrom: aRoom at: aPosition].! !

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:29:23'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:29:25'!
FAILURE!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:29:28'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:29:28'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:29:28'!
FAILURE!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 21:31:32' prior: 50879607!
take

	room takeOn: self from: self forwardPoint.! !
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:31:51'!
takeOn: aCharacter at: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	object removeFrom: self at: aPosition.
	^object.! !

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:31:52'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:31:54'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:31:54'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:31:54'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:31:54'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:31:54'!
PASSED!
!PlayableCharacter methodsFor: 'taking objects' stamp: 'IO 12/10/2020 21:32:11' prior: 50881914!
take

	room takeOn: self at: self forwardPoint.! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:32:12'!
FAILURE!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:32:12'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:32:12'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:33:21' prior: 50881918!
takeOn: aCharacter at: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	object takeOn: aCharacter.
	object removeFrom: self at: aPosition.
	^object.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:33:35'!
takeOn: aCharacter
	aCharacter take: self.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:34:44'!
takeOn: aCharacter
	(stageObjects size = 1) ifTrue: [aCharacter take: self].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:34:46'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:34:46'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:34:46'!
FAILURE!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:34:54' prior: 50882220!
takeOn: aCharacter
	(stageObjects size = 1) ifTrue: [aCharacter take: stageObjects first].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:34:55'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:34:57'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:34:59'!
PASSED!

!methodRemoval: Room #takeFrom: stamp: 'IO 12/10/2020 21:35:38'!
takeFrom: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	object removeFrom: self at: aPosition.
	^object.!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:36:59'!
test17playerTakesMoreThanOneObjectFromANonPortableObject

	| paper scissor nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObject).
! !

!testRun: #PlayableCharacterTest #test17playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:37:00'!
FAILURE!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:37:05'!
test18playerTakesMoreThanOneObjectFromANonPortableObject

	| paper scissor nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObject).
! !

!methodRemoval: PlayableCharacterTest #test17playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:37:05'!
test17playerTakesMoreThanOneObjectFromANonPortableObject

	| paper scissor nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObject).
!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:37:38' prior: 50881729 overrides: 50880830!
removeFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject | stageObject first removeFrom: aRoom at: aPosition].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:37:57'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:37:57'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:37:57'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:37:57'!
PASSED!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:38:52' prior: 50882396!
takeOn: aCharacter
	stageObjects do: [ :stageObject | aCharacter take: stageObject].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:38:53'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:38:53'!
ERROR!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:38:53'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:39:00'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:39:00'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:39:00'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:39:22' prior: 50883076!
takeOn: aCharacter
	stageObjects do: [ :stageObject | stageObject takeOn: aCharacter].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:39:23'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:39:23'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:39:23'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:39:27' prior: 50883321!
takeOn: aCharacter
	stageObjects do: [ :stageObject | aCharacter take: stageObject].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:39:29'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:39:29'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:39:29'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:41:08' prior: 50882899 overrides: 50880830!
removeFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject | stageObject removeFrom: aRoom at: aPosition].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:41:09'!
PASSED!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:41:11'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:41:11'!
PASSED!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:42:27'!
test18playerTakesObjectsFromANonPortableObjectInsideANonPortableObject

	| paper scissor nonPortableObject nonPortableObjectContainer room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).
	nonPortableObjectContainer := NonPortableObject containing: (OrderedCollection with: nonPortableObject).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObjectContainer).
	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObjectContainer).
! !

!testRun: #PlayableCharacterTest #test18playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:42:28'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:42:35'!
FAILURE!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:42:46'!
test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject

	| paper scissor nonPortableObject nonPortableObjectContainer room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).
	nonPortableObjectContainer := NonPortableObject containing: (OrderedCollection with: nonPortableObject).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObjectContainer).
	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObjectContainer).
! !

!methodRemoval: PlayableCharacterTest #test18playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:42:48'!
test18playerTakesObjectsFromANonPortableObjectInsideANonPortableObject

	| paper scissor nonPortableObject nonPortableObjectContainer room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).
	nonPortableObjectContainer := NonPortableObject containing: (OrderedCollection with: nonPortableObject).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObjectContainer).
	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObjectContainer).
!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:43:05' prior: 50882838!
test18playerTakesMoreThanOneObjectFromANonPortableObject

	| paper scissor nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	scissor := NoPointsPortableObject named: 'scissor' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper with: scissor).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.

	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (character backpackIncludes: scissor).
	self assert: (room includes: nonPortableObject).
	self deny: (nonPortableObject includes: paper).
	self deny: (nonPortableObject includes: scissor).! !

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:43:06'!
ERROR!
!PlayableCharacterTest methodsFor: 'tests in room' stamp: 'IO 12/10/2020 21:43:14' prior: 50881436!
test17playerTakesAnObjectFromANonPortableObject

	| paper nonPortableObject room character |
	
	paper := NoPointsPortableObject named: 'paper' weighing: 10.
	nonPortableObject := NonPortableObject containing: (OrderedCollection with: paper).

	room := Room
		withWidth: 10
		height: 10
		objects: (Dictionary newFromPairs: {1@2. nonPortableObject.}).

	character := PlayableCharacter
		named: 'Ilan'
		using: (Backpack containingUpTo: 100 limitingPointsTo: 100)
		at: 1@1
		heading: #North
		inRoom: room.
		
	character take.

	self deny: (character backpackIncludes: nonPortableObject).
	self assert: (character backpackIncludes: paper).
	self assert: (room includes: nonPortableObject).
	self deny: (nonPortableObject includes: paper).
! !

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:43:14'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:43:18'!
ERROR!
!NonPortableObject methodsFor: 'tracing' stamp: 'IO 12/10/2020 21:43:29'!
includes: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'tracing' stamp: 'IO 12/10/2020 21:43:49' prior: 50883908!
includes: aStageObject 
	^stageObjects includes: aStageObject.! !

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:43:52'!
FAILURE!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:44:08'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:44:08'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:44:08'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:44:08'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:46:24' prior: 50882208!
takeOn: aCharacter at: aPosition

	| object |
	
	object := stageObjects at: aPosition.
	object takeOn: aCharacter andRemoveFrom: self at: aPosition.
	^object.! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:46:56'!
takeOn: aCharacter andRemoveFrom: aRoom atAPosition: aPosition
	aCharacter take: self.
	self removeFrom: aRoom at: aPosition.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:47:26'!
takeOn: aCharacter andRemoveFrom: aRoom atAPosition: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		self removeFrom: aRoom at: aPosition
	].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:47:26'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:47:27'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:47:27'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:47:27'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:47:27'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:47:27'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:47:27'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:47:27'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:47:27'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:47:27'!
ERROR!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:47:27'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:48:06' prior: 50884010!
takeOn: aCharacter andRemoveFrom: aRoom atAPosition: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
	].! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:48:14' prior: 50883471 overrides: 50880830!
removeFrom: aRoom at: aPosition
! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:48:15'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:48:15'!
ERROR!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:48:15'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:48:15'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:48:15'!
ERROR!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:48:15'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:48:53'!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
	].! !

!methodRemoval: NonPortableObject #takeOn:andRemoveFrom:atAPosition: stamp: 'IO 12/10/2020 21:48:55'!
takeOn: aCharacter andRemoveFrom: aRoom atAPosition: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
	].!
!PortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:49:00'!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	aCharacter take: self.
	self removeFrom: aRoom at: aPosition.! !

!methodRemoval: PortableObject #takeOn:andRemoveFrom:atAPosition: stamp: 'IO 12/10/2020 21:49:02'!
takeOn: aCharacter andRemoveFrom: aRoom atAPosition: aPosition
	aCharacter take: self.
	self removeFrom: aRoom at: aPosition.!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:49:04'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:49:04'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:49:04'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:49:04'!
FAILURE!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:49:40' prior: 50884179!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
	].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:49:53'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:49:53'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:49:53'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:49:53'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:49:53'!
PASSED!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:50:23' prior: 50884284!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
	].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:50:24'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:50:24'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:50:24'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:50:24'!
FAILURE!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:50:29'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:50:29'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:50:29'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:50:29'!
FAILURE!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:50:35'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:50:36'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:50:36'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:50:36'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:50:36'!
FAILURE!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:51:57' prior: 50884466!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
		stageObject remove: stageObject
	].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:51:58'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:51:58'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:51:58'!
ERROR!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:51:58'!
ERROR!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:52:02'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:52:02'!
ERROR!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:52:02'!
ERROR!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:52:02'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:52:04'!
ERROR!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:52:04'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:52:28' prior: 50884695!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition. 
	].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:52:29'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:52:29'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:52:29'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:52:29'!
FAILURE!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:52:59' prior: 50884859!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
		stageObjects remove: stageObject.
	].! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:53:01'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:53:01'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:53:01'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:53:01'!
PASSED!
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:53:37' prior: 50884941!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
		stageObject removeFromObject: stageObjects.
	].! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:54:03'!
removeFromObject: aStageObjects
! !
!PortableObject methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:54:16'!
removeFromObject: aStageObjects
	aStageObjects remove: self.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 21:54:32'!
remove: aStageObjects
	stageObjects remove: aStageObjects.! !

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:54:33'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:54:33'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:54:33'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:54:49'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:54:49'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:54:49'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:07'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:13'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:13'!
FAILURE!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:22'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:55:22'!
FAILURE!

!testRun: #RoomTest #test01roomWidthIsPositive stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test02roomHeightIsPositive stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test03roomWidthIsInteger stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test04roomWidthIsInteger stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test05stageObjectsIsInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test06manyStageObjectsAreInsideTheRoomsWidth stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test07manyStageObjectsAreInsideTheRoomsHeight stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test08stageObjectXAreInteger stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test09stageObjectYAreInteger stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test10stageObjectXIsPositive stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test11stageObjectYIsPositive stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test12characterXIsInBounds stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test13characterYIsInBounds stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test14characterXIsPositive stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test15characterYIsPositive stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #RoomTest #test16characterIsNotOverAnObject stamp: 'IO 12/10/2020 21:55:22'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:24'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:55:24'!
FAILURE!

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:56:31'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:56:31'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 21:56:31'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:56:35'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:56:40'!
FAILURE!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 21:56:40'!
FAILURE!
!Room methodsFor: 'as yet unclassified' stamp: 'IO 12/10/2020 21:58:04' prior: 50883995!
takeOn: aCharacter at: aPosition

	(stageObjects at: aPosition) takeOn: aCharacter andRemoveFrom: self at: aPosition.
! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 22:00:39' prior: 50885126!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		aCharacter take: stageObject.
		stageObject removeFrom: aRoom at: aPosition.
		stageObject removeFromObject: stageObjects.
	].! !
!NonPortableObject methodsFor: 'initialization' stamp: 'IO 12/10/2020 22:02:50' prior: 50885687!
takeOn: aCharacter andRemoveFrom: aRoom at: aPosition
	stageObjects do: [ :stageObject |
		stageObject takeOn: aCharacter andRemoveFrom: aRoom at: aPosition.
		stageObject removeFromObject: stageObjects.
	].! !

!testRun: #PlayableCharacterTest #test01_forwardWhenHeadingNorthIncrementsYCoordinate stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test02_backwardWhenHeadingNorthDecrementsYCoordinate stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test03_rotateRightWhenHeadingNorthHeadsEast stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test04_rotateLeftWhenHeadingNorthHeadsWest stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test05_movingWhenHeadingEastWorksAsExpected stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test06_movingWhenHeadingSouthWorksAsExpected stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test07_movingWhenHeadingWestWorksAsExpected stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test08_canNotCreatePlayableCharacterWhenHeadingIsNotValid stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test09_canTakePortableObjects stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test10_canNotTakeMoreObjectsThanTheBackpackCanCarry stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test11cannotMoveACharacterOverAStageObject stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test12cannotMoveACharacterOutsideOnXAxis stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test13cannotMoveACharacterOutsideOnYAxis stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test14cannotMoveACharacterOutsideMovingBackwards stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test15playerCanTakeFrontObject stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test16playerTakesNothingFromEmptyNonPortableObject stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test17playerTakesAnObjectFromANonPortableObject stamp: 'IO 12/10/2020 22:02:55'!
PASSED!

!testRun: #PlayableCharacterTest #test18playerTakesMoreThanOneObjectFromANonPortableObject stamp: 'IO 12/10/2020 22:02:55'!
FAILURE!

!testRun: #PlayableCharacterTest #test19playerTakesObjectsFromANonPortableObjectInsideANonPortableObject stamp: 'IO 12/10/2020 22:02:55'!
FAILURE!

----SNAPSHOT----(10 December 2020 22:03:24) CuisUniversity-4384.image priorSource: 17155564!