----STARTUP---- (10 December 2020 15:32:15) as /home/mariano/Documentos/Ing1/Practica-2-parcial/parciales/linux64/CuisUniversity-4384.image!


----End fileIn of /home/mariano/Documentos/Ing1/Practica-2-parcial/parciales/linux64/ISW1-2020-2C-2doParcial.st----!

!classRemoval: #MoveUnsafelyState stamp: 'MSM 12/10/2020 15:33:49'!
MarsRoverState subclass: #MoveUnsafelyState
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MoveSafelyState stamp: 'MSM 12/10/2020 15:33:49'!
MarsRoverState subclass: #MoveSafelyState
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverState stamp: 'MSM 12/10/2020 15:33:49'!
Object subclass: #MarsRoverState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverHeadingWest stamp: 'MSM 12/10/2020 15:33:50'!
MarsRoverHeading subclass: #MarsRoverHeadingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverHeadingSouth stamp: 'MSM 12/10/2020 15:33:50'!
MarsRoverHeading subclass: #MarsRoverHeadingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverHeadingNorth stamp: 'MSM 12/10/2020 15:33:50'!
MarsRoverHeading subclass: #MarsRoverHeadingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverHeadingEast stamp: 'MSM 12/10/2020 15:33:50'!
MarsRoverHeading subclass: #MarsRoverHeadingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverHeading stamp: 'MSM 12/10/2020 15:33:51'!
Object subclass: #MarsRoverHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRover stamp: 'MSM 12/10/2020 15:33:51'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head lastCommand groundSensor state safelyExecutedCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #RockType stamp: 'MSM 12/10/2020 15:33:52'!
GrountType subclass: #RockType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #IceGroundType stamp: 'MSM 12/10/2020 15:33:52'!
GrountType subclass: #IceGroundType
	instanceVariableNames: 'random'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #EarthGroundType stamp: 'MSM 12/10/2020 15:33:52'!
GrountType subclass: #EarthGroundType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #GrountType stamp: 'MSM 12/10/2020 15:33:53'!
Object subclass: #GrountType
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #AllwaysEarthGroundSensor stamp: 'MSM 12/10/2020 15:33:53'!
GroundSensor subclass: #AllwaysEarthGroundSensor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #GroundSensor stamp: 'MSM 12/10/2020 15:33:53'!
Object subclass: #GroundSensor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

!classRemoval: #MarsRoverTest stamp: 'MSM 12/10/2020 15:33:54'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsMap randomInteger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-IS1-2Parcial-2c2019'!

----End fileIn of /home/mariano/Documentos/Ing1/Practica-2-parcial/parciales/linux64/MarsRover-IS1-2Parcial-2c2019-Solucion-Video.st----!

TestCase subclass: #StageObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #StageObjectTest category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 17:29:24'!
TestCase subclass: #StageObjectTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!StageObjectTest methodsFor: 'no messages' stamp: 'MSM 12/10/2020 17:29:33'!
test01! !

!classRenamed: #StageObjectTest as: #NonPortableObjectTest stamp: 'MSM 12/10/2020 17:30:05'!
Smalltalk renameClassNamed: #StageObjectTest as: #NonPortableObjectTest!

TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #RoomTest category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 17:31:37'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 17:35:04'!
Object subclass: #Room
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!RoomTest methodsFor: 'no messages' stamp: 'MSM 12/10/2020 17:34:25'!
test01CannotCreateRoomWithNoSpace

	|blankRoom|

	blankRoom _ Room Heigh:0 Width: 0.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:37:21'!
test01CreateA10x10RoomHasCorrectDimension

	|room|

	room _ Room Heigh:10 Width: 10.
	
	self assert: room dimensions equals: 10@10.! !

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:37:28'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:37:47' prior: 50882459!
test01CreateA10x10RoomHasCorrectDimension

	|room|

	room _ Room withHeigh:10 andWidth: 10.
	
	self assert: room dimensions equals: 10@10.! !

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:37:50'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:38:05'!
withHeigh: aSmallInteger andWidth: aSmallInteger2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithHeigh: aSmallInteger andWidth: aSmallInteger2 ! !
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:38:44' prior: 50882481!
withHeigh: aHeight andWidth: aWidth
	
	^self new initializeWithHeigh: aHeight andWidth: aWidth.! !

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:38:49'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 17:39:04'!
Object subclass: #Room
	instanceVariableNames: 'height'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 17:39:04'!
Object subclass: #Room
	instanceVariableNames: 'height width'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 17:39:04'!
initializeWithHeigh: aHeight andWidth: aWidth 
	self shouldBeImplemented.
	height := aHeight.
	width := aWidth.! !

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 17:40:33'!
Object subclass: #Room
	instanceVariableNames: 'height width celdas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 17:40:31' prior: 50882515!
initializeWithHeigh: aHeight andWidth: aWidth 
	celdas := OrderedCollection new.
	! !

aHeight * aWidth!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:42:42'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 17:43:55' prior: 50882529!
initializeWithHeigh: aHeight andWidth: aWidth 
	celdas := OrderedCollection ofSize: (aHeight * aWidth).
	height := aHeight.
	width := aWidth.
	! !

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:43:59'!
ERROR!
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 17:44:21'!
dimensions
	self shouldBeImplemented.! !
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 17:45:35' prior: 50882549!
dimensions
	^Point x: height y: width.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:45:47' prior: 50882470!
test01CreateA10x10RoomHasCorrectDimension

	|room|

	room _ Room withHeigh:10 andWidth: 10.
	
	
	self assert: room dimensions equals: 10@10.! !

!methodRemoval: RoomTest #test01CannotCreateRoomWithNoSpace stamp: 'MSM 12/10/2020 17:45:51'!
test01CannotCreateRoomWithNoSpace

	|blankRoom|

	blankRoom _ Room Heigh:0 Width: 0.!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:45:57'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:45:57'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:47:02'!
test02CannotCreateARoomWith0Height

	|room|

	room _ Room withHeigh:0 andWidth: 10.
	
	
	self assert: room dimensions equals: 10@10.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:49:12' prior: 50882578!
test02CannotCreateARoomWith0Height

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:49:51' prior: 50882586!
test02CannotCreateARoomWith0Height

	self 
	should: [Room withHeigh:0 andWidth: 10]
	raise: Error - MessageNotUnderstood
	withMessageText: Room invalidRoomCreationDesription.

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:50:00' prior: 50882591!
test02CannotCreateARoomWith0Height

	self 
	should: [Room withHeigh:0 andWidth: 10]
	raise: Error - MessageNotUnderstood
	withMessageText: Room invalidRoomCreationDescription.

	! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:50:02'!
ERROR!
!Room class methodsFor: 'error handling' stamp: 'MSM 12/10/2020 17:50:15'!
invalidRoomCreationDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error handling' stamp: 'MSM 12/10/2020 17:50:38' prior: 50882612!
invalidRoomCreationDescription
	^'Invalid Room Instance'.! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:50:39'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:51:29' prior: 50882491!
withHeigh: aHeight andWidth: aWidth
	self validateDimension.
	^self new initializeWithHeigh: aHeight andWidth: aWidth.! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:51:31'!
ERROR!
!Room class methodsFor: 'comparing' stamp: 'MSM 12/10/2020 17:52:06'!
validateDimension
	self shouldBeImplemented.! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:52:32'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:53:05' prior: 50882625!
withHeigh: aHeight andWidth: aWidth
	self validateDimension:aHeight and:aWidth.
	^self new initializeWithHeigh: aHeight andWidth: aWidth.! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:53:09'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:53:20'!
validateDimension: aSmallInteger and: aSmallInteger2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeValidateDimension: aSmallInteger and: aSmallInteger2 ! !
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:54:53' prior: 50882653!
validateDimension: aHeight and: aWidth
	aHeight = 0 ifTrue:[self class: self error invalidRoomCreationDescription].! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:54:54'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:55:11' prior: 50882664!
validateDimension: aHeight and: aWidth
	aHeight = 0 ifTrue:[self error: self class invalidRoomCreationDescription].! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:55:12'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:55:27' prior: 50882674!
validateDimension: aHeight and: aWidth
	aHeight = 0 ifTrue:[self error: self invalidRoomCreationDescription].! !

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:55:28'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:55:28'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:55:28'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:55:54'!
test03CannotCreateARoomWith0Width

	self 
	should: [Room withHeigh:10 andWidth: 0]
	raise: Error - MessageNotUnderstood
	withMessageText: Room invalidRoomCreationDescription.

	! !

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 17:55:58'!
FAILURE!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 17:56:42' prior: 50882684!
validateDimension: aHeight and: aWidth
	((aHeight = 0) or: [aWidth = 0]) ifTrue:[self error: self invalidRoomCreationDescription].! !

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 17:56:44'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 17:56:44'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 17:56:44'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 17:56:44'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 17:58:18'!
test04PlayerStartsAt0x0

	self 
	should: [Room withHeigh:10 andWidth: 0]
	raise: Error - MessageNotUnderstood
	withMessageText: Room invalidRoomCreationDescription.

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:01:38' prior: 50882732!
test04PlayerStartsAt0x0

	|player backpack|
	
	backpack _ Backpack new.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: 0@1.

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:02:20' prior: 50882741!
test04PlayerStartsAt0x0

	|player backpack|
	
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: 0@1.

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:04:16' prior: 50882749!
test04PlayerStartsAt0x0

	|player backpack heading|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: heading.

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:05:21' prior: 50882758!
test04PlayerStartsAt0x0

	|player backpack heading room|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: heading.
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:06:08' prior: 50882770!
test04PlayerStartsAt0x0

	|player backpack heading room|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: heading.
	
	room _ Room withHeigh:0 andWidth: 10 playerAt: 0@0.
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:07:57'!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack heading room|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: heading.
	
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:09:43' prior: 50882795!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack heading room|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: heading.
	
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: room hasPlayer: player.
	self deny: room positionIsEmpty: 0@0.
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:09:52'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:10:02'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:12:12' prior: 50882809!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack heading room|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: room hasPlayer: player.
	self deny: room positionIsEmpty: 0@0.
	

	! !

!methodRemoval: RoomTest #test04PlayerStartsAt0x0 stamp: 'MSM 12/10/2020 18:12:16'!
test04PlayerStartsAt0x0

	|player backpack heading room|
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: heading.
	
	room _ Room withHeigh:0 andWidth: 10 playerAt: 0@0.
	

	!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:12:32' prior: 50882832!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack heading room|
	
	heading _ PlayableCharacterHeading for: 0@0 forwardWith: 0@1.  
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: room hasPlayer: player.
	self deny: room positionIsEmpty: 0@0.
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:12:35'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:12:54' prior: 50882862!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: room hasPlayer: player.
	self deny: room positionIsEmpty: 0@0.
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:12:54'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 18:13:02'!
withHeigh: aSmallInteger andWidth: aSmallInteger2 hasPlayer: aPlayableCharacter 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithHeigh: aSmallInteger andWidth: aSmallInteger2 hasPlayer: aPlayableCharacter ! !
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 18:13:34' prior: 50882899!
withHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 

	^self new initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter ! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:13:45'!
ERROR!

!classDefinition: #Room category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 18:13:56'!
Object subclass: #Room
	instanceVariableNames: 'height width celdas playableCharacter'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:13:56'!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	self shouldBeImplemented.
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:14:16' prior: 50882930!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:14:18'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:14:34' prior: 50882882!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: (room hasPlayer: player).
	self deny: (room positionIsEmpty: 0@0).
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:14:39'!
ERROR!
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 18:15:00'!
hasPlayer: aPlayableCharacter 
	self shouldBeImplemented.! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:16:04' prior: 50882951!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 0@0).
	self deny: (room positionIsEmpty: 0@0).
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:16:08'!
ERROR!
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 18:16:13'!
hasPlayer: aPlayableCharacter atPosition: aPoint 
	self shouldBeImplemented.! !

----End fileIn of /home/mariano/Documentos/Ing1/Practica-2-parcial/parciales/linux64/Packages/TerseGuide.pck.st----!
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 18:20:05' prior: 50882990!
hasPlayer: aPlayableCharacter atPosition: aPoint 
	|gameObject|
	gameObject _ celdas at: aPoint ifAbsent: [^False].
	^gameObject = aPlayableCharacter.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:20:07'!
ERROR!

!classDefinition: #EmptyCell category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 18:42:51'!
Object subclass: #EmptyCell
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:42:46' prior: 50882939!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	celdas _ Dictionary new.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (aHeight * aWidth) do: [ puntos add: coordenada. puntos add: EmptyCell new. coordenada:= coordenada + 1].
	celdas newFromPairs: puntos
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:43:01'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:43:39' prior: 50885951!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (aHeight * aWidth) do: [ puntos add: coordenada. puntos add: EmptyCell new. coordenada:= coordenada + 1].
	celdas _ Dictionary newFromPairs: puntos.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:43:42'!
ERROR!
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 18:44:34' prior: 50885932!
hasPlayer: aPlayableCharacter atPosition: aPoint 
	|gameObject|
	gameObject _ celdas at: aPoint ifAbsent: [^False].
	^(gameObject = aPlayableCharacter).! !

room hasPlayer: player atPosition: 0@0!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:45:26'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:45:38'!
ERROR!

room hasPlayer: player atPosition: 0@0!
!Room methodsFor: 'accessing' stamp: 'MSM 12/10/2020 18:48:02' prior: 50885989!
hasPlayer: aPlayableCharacter atPosition: aPoint 
	|gameObject|
	gameObject _ celdas at: aPoint ifAbsent: [].
	^(gameObject = aPlayableCharacter).! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:48:22'!
FAILURE!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:49:13' prior: 50885970!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (aHeight * aWidth) do: [ puntos add: coordenada. puntos add: EmptyCell new. coordenada:= coordenada + 1].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:49:15'!
ERROR!
!Room methodsFor: 'evaluating' stamp: 'MSM 12/10/2020 18:49:36'!
positionIsEmpty: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'evaluating' stamp: 'MSM 12/10/2020 18:50:06' prior: 50886037!
positionIsEmpty: aPoint 
	^celdas at: aPoint = EmptyCell.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:50:07'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:50:25'!
ERROR!

celdas at: aPoint !
!Room methodsFor: 'evaluating' stamp: 'MSM 12/10/2020 18:51:37' prior: 50886042!
positionIsEmpty: aPoint 
	^(celdas at: aPoint) = EmptyCell.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:51:41'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 18:51:41'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 18:51:41'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 18:51:41'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:51:41'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:51:45'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 18:51:45'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 18:51:45'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 18:51:45'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:51:45'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:52:16'!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	room _ Room withHeigh:0 andWidth: 10 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 1@1).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 18:52:17'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:52:36' prior: 50882973!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	room _ Room withHeigh:10 andWidth: 10 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 0@0).
	self deny: (room positionIsEmpty: 0@0).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 18:52:42' prior: 50886090!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	room _ Room withHeigh:10 andWidth: 10 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 1@1).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:52:45'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:53:04'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:53:26'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:54:09' prior: 50886017!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (aHeight * aWidth) do: [ puntos add: coordenada. puntos add: (EmptyCell new). coordenada:= coordenada + 1].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 18:54:15' prior: 50886147!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (aHeight * aWidth) do: [ puntos add: coordenada. puntos add: (EmptyCell new). coordenada:= (coordenada + 1)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:54:17'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 18:54:24'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:01:20' prior: 50886164!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight  do: [:hCoordenadas| 
	1 to: aWidth do: [:wCoordenadaspuntos| puntos add: coordenada. puntos add: (EmptyCell new). coordenada := coordenada + 0@1]. coordenada := coordenada + 1@0].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:01:24'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:07:50' prior: 50886187!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 2  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + 0@1]. coordenada := coordenada + 1@0].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:07:52'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:08:21' prior: 50886210!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 2  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + 1@0].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:08:22'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:09:06' prior: 50886235!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 2  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: 0@0 put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:09:11' prior: 50886260!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 2  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:09:12'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 19:09:12'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 19:09:12'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 19:09:12'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:09:12'!
PASSED!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:09:12'!
FAILURE!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:09:12'!
FAILURE!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:09:35'!
FAILURE!

aPoint!

celdas at: aPoint!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:10:59' prior: 50886282!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 2  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

celdas _ Dictionary newFromPairs: puntos.!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:14:04' prior: 50886330!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 19:14:06'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 19:14:06'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 19:14:06'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:14:06'!
PASSED!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:14:06'!
FAILURE!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:14:06'!
FAILURE!

celdas _ Dictionary newFromPairs: puntos.!

celdas _ Dictionary newFromPairs: puntos.!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:15:42' prior: 50886354!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	puntos _ 1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

hCoordenadas * wCoordenadas!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:17:53' prior: 50886398!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	puntos _ 1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:18:30' prior: 50886108!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	room _ Room withHeigh:2 andWidth: 2 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 0@0).
	self deny: (room positionIsEmpty: 0@0).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:18:39' prior: 50886123!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	room _ Room withHeigh:2 andWidth: 2 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 1@1).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:18:41'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:18:51' prior: 50886460!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	room _ Room withHeigh: 2 andWidth: 2 hasPlayer: player.
	
	self assert: (room hasPlayer: player atPosition: 1@1).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:18:53'!
ERROR!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:19:28'!
ERROR!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:19:36'!
ERROR!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:20:36' prior: 50886422!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	puntos _ 1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 3 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:21:31' prior: 50886502!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 3 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:22:24' prior: 50886525!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:24:36' prior: 50886547!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: aHeight by: 1  do: [:hCoordenadas| 
	1 to: aWidth by: 3 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:28:18' prior: 50886569!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (aHeight) by: 1  do: [:hCoordenadas| 
	1 to: (2*aWidth) by: 2 do: [:wCoordenadas| puntos at: (hCoordenadas * wCoordenadas) put: coordenada. puntos at: ((hCoordenadas * wCoordenadas) + 1) put: EmptyCell new. coordenada := coordenada + (0@1)]. coordenada := coordenada + (1@0)].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:32:54' prior: 50886591!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. coordenada x = aHeight ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (0@1)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:34:05' prior: 50886614!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. (coordenada x = aHeight) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (0@1)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

coordenada x = aHeight!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:34:57' prior: 50886635!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. (coordenada x = aWidth) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (0@1)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:35:26' prior: 50886657!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. (coordenada y = aWidth) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (0@1)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:36:33' prior: 50886678!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. (coordenada y > (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (0@1)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

coordenada y > (aWidth -1)!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:39:06' prior: 50886699!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) > (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (0@1)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:39:51' prior: 50886721!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) > (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:40:29' prior: 50886742!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:41:46' prior: 50886763!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := 0@0. coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:44:42' prior: 50886785!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada * (1@0). coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	celdas at: (0@0) put: aPlayableCharacter.
	! !

celdas _ Dictionary newFromPairs: puntos.!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 19:45:48'!
FAILURE!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:49:10' prior: 50886807!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	playableCharacter := aPlayableCharacter.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada * (1@0). coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:52:48' prior: 50886478!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (room hasPlayer: player atPosition: 1@1).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!methodRemoval: Room #initializeWithHeigh:andWidth: stamp: 'MSM 12/10/2020 19:53:00'!
initializeWithHeigh: aHeight andWidth: aWidth 
	celdas := OrderedCollection ofSize: (aHeight * aWidth).
	height := aHeight.
	width := aWidth.
	!

!methodRemoval: Room #hasPlayer: stamp: 'MSM 12/10/2020 19:53:04'!
hasPlayer: aPlayableCharacter 
	self shouldBeImplemented.!
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:53:58' prior: 50886834!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada * (1@0). coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	! !
!Room methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:54:08'!
initializeWithHeigh: aHeight andWidth: aWidth  
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada * (1@0). coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	! !
!Room class methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:54:08' prior: 50882911!
withHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 

	^self new initializeWithHeigh: aHeight andWidth: aWidth ! !

!methodRemoval: Room #initializeWithHeigh:andWidth:hasPlayer: stamp: 'MSM 12/10/2020 19:54:08'!
initializeWithHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	|puntos coordenada|
	height := aHeight.
	width := aWidth.
	
	puntos _ Array new: (2* (aHeight * aWidth)) .
	coordenada _ 0@0.
	1 to: (2*aHeight*aWidth) by: 2  do: [:aPosition| puntos at: aPosition put: coordenada. puntos at: aPosition+ 1 put: EmptyCell new. ((coordenada y) >= (aWidth -1)) ifFalse:[coordenada := coordenada + (0@1)] ifTrue:[coordenada := coordenada * (1@0). coordenada := coordenada + (1@0)]].
	celdas _ Dictionary newFromPairs: puntos.
	!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:55:26' prior: 50886445!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh:2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	
	self assert: (room hasPlayer: player atPosition: 0@0).
	self deny: (room positionIsEmpty: 0@0).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:56:09' prior: 50886946!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh:2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	
	self assert: (player isAt: 0@0 heading: #North).
	self deny: (room positionIsEmpty: 0@0).
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:56:10'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 19:56:17'!
named: aString using: aBackpack inRoom: aRoom at: aPoint heading: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString using: aBackpack inRoom: aRoom at: aPoint heading: aSymbol ! !
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 19:56:29' prior: 50886979!
named: aString using: aBackpack inRoom: aRoom at: aPoint heading: aSymbol 
	
	^self new initializeNamed: aString using: aBackpack inRoom: aRoom at: aPoint heading: aSymbol ! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:56:31'!
ERROR!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 19:56:39'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 19:56:39'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name string room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 19:56:39'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name string room point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 19:56:39'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name string room point symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PlayableCharacter methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:56:39'!
initializeNamed: aString using: aBackpack inRoom: aRoom at: aPoint heading: aSymbol 
	self shouldBeImplemented.
	string := aString.
	backpack := aBackpack.
	room := aRoom.
	point := aPoint.
	symbol := aSymbol.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:57:16'!
ERROR!
!PlayableCharacter methodsFor: 'initialization' stamp: 'MSM 12/10/2020 19:58:52' prior: 50887040!
initializeNamed: aName using: aBackpack inRoom: aRoom at: aPosition heading: aHeading

	name := aName.
	backpack := aBackpack.
	room := aRoom.
	position := aPosition.
	heading := aHeading.! !

Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #PlayableCharacter category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 19:58:58'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'position heading backpack name room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:59:07'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 19:59:24' prior: 50886961!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh:2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	
	self assert: (player isAt: (0@0) heading: #North).
	self deny: (room positionIsEmpty: 0@0).
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 19:59:27'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:01:13' prior: 50887080!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh:2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	
	self assert: (player isAt: 0@0 heading: #North).
	self deny: (room positionIsEmpty: 0@0).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:01:50' prior: 50887098!
test04PlayerStartsAt0x0EmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh:2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	
	self assert: (player isAt: 0@0 heading: #North).
	self deny: (room positionIsEmpty: 0@0).
	

	! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:01:50'!
ERROR!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:02:26'!
ERROR!
!PlayableCharacter class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 20:03:29' prior: 50886991!
named: aString using: aBackpack inRoom: aRoom at: aPoint heading: aCardinalPoint

	|newHeading|
	newHeading := self headingFor: aCardinalPoint.
	
	^self new initializeNamed: aString using: aBackpack inRoom: aRoom at: aPoint heading: newHeading ! !

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:03:37'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:03:58' prior: 50886856!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (player isAt: 0@0 heading: #North).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:04:06'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:04:33' prior: 50887148!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (player isAt: 1@1 heading: #North).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:04:36'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:04:36'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:04:36'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:04:36'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:04:36'!
PASSED!

!testRun: #RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:04:36'!
PASSED!

!methodRemoval: Room #hasPlayer:atPosition: stamp: 'MSM 12/10/2020 20:05:14'!
hasPlayer: aPlayableCharacter atPosition: aPoint 
	|gameObject|
	gameObject _ celdas at: aPoint ifAbsent: [].
	^(gameObject = aPlayableCharacter).!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:05:53'!
test05PlayerMovesToEmptyCell

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (player isAt: 1@1 heading: #North).
	self deny: (room positionIsEmpty: 1@1).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:06:13'!
test06PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (player isAt: 1@1 heading: #North).
	self deny: (room positionIsEmpty: 1@1).
	

	! !

!methodRemoval: RoomTest #test05PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:06:13'!
test05PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (player isAt: 1@1 heading: #North).
	self deny: (room positionIsEmpty: 1@1).
	

	!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:06:33' prior: 50887219!
test06PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@1 heading: #North).
	self deny: (room positionIsEmpty: 1@1).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:08:19' prior: 50887247!
test06PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test06PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:08:29'!
FAILURE!

celdas at: aPoint!

(celdas at: aPoint) = EmptyCell!

(celdas at: aPoint) class = EmptyCell!
!Room methodsFor: 'evaluating' stamp: 'MSM 12/10/2020 20:09:21' prior: 50886054!
positionIsEmpty: aPoint 
	^(celdas at: aPoint) class = EmptyCell.! !

!testRun: #RoomTest #test06PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:09:24'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:09:24'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:09:24'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:09:24'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:09:24'!
FAILURE!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:09:24'!
FAILURE!

!testRun: #RoomTest #test06PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:09:24'!
PASSED!

!testRun: #RoomTest #test06PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:09:27'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:09:27'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:09:27'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:09:27'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:09:27'!
FAILURE!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:09:27'!
FAILURE!

!testRun: #RoomTest #test06PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:09:27'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:09:32'!
FAILURE!
!PlayableCharacter methodsFor: 'initialization' stamp: 'MSM 12/10/2020 20:10:11' prior: 50887053!
initializeNamed: aName using: aBackpack inRoom: aRoom at: aPosition heading: aHeading
	aRoom add: self.
	name := aName.
	backpack := aBackpack.
	room := aRoom.
	position := aPosition.
	heading := aHeading.! !
!PlayableCharacter methodsFor: 'initialization' stamp: 'MSM 12/10/2020 20:10:29' prior: 50887335!
initializeNamed: aName using: aBackpack inRoom: aRoom at: aPosition heading: aHeading
	aRoom add: self at: aPosition.
	name := aName.
	backpack := aBackpack.
	room := aRoom.
	position := aPosition.
	heading := aHeading.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:10:31'!
ERROR!
!Room methodsFor: 'adding' stamp: 'MSM 12/10/2020 20:10:53'!
add: aPlayableCharacter at: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'adding' stamp: 'MSM 12/10/2020 20:12:17' prior: 50887357!
add: aPlayableCharacter at: aPoint 
	celdas at: aPoint put: aPlayableCharacter.! !

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:12:22'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:13:03'!
test06PlayerMovesToEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !

!methodRemoval: RoomTest #test06PlayerStartsAtEmptyPosition stamp: 'MSM 12/10/2020 20:13:03'!
test06PlayerStartsAtEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:13:39'!
test07PlayerStartsInFilledPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:14:11' prior: 50887400!
test07PlayerStartsInFilledPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:14:56' prior: 50887415!
test07PlayerStartsInFilledPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 0@0 heading: #North.
	room add: StageObject new at: (0@0).
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:16:43' prior: 50887430!
test07PlayerStartsInFilledPosition

	|backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	room add: StageObject new at: (0@0).
	
	self 
		should: [PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North]
		raise: Error - MessageNotUnderstood
		withMessageText: Room notEmptyCellErrorDescription.
	


	
	

	! !

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:16:48'!
ERROR!
!Room class methodsFor: 'error handling' stamp: 'MSM 12/10/2020 20:17:18'!
notEmptyCellErrorDescription
	self shouldBeImplemented.! !
!Room class methodsFor: 'error handling' stamp: 'MSM 12/10/2020 20:17:37' prior: 50887465!
notEmptyCellErrorDescription
	^'cell not empty'! !

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:17:38'!
FAILURE!
!Room methodsFor: 'adding' stamp: 'MSM 12/10/2020 20:18:40' prior: 50887362!
add: aPlayableCharacter at: aPoint 
	self validateClassName: aPoint.
	celdas at: aPoint put: aPlayableCharacter.! !
!Room methodsFor: 'adding' stamp: 'MSM 12/10/2020 20:18:48' prior: 50887478!
add: aPlayableCharacter at: aPoint 
	self validateEmptyCell: aPoint.
	celdas at: aPoint put: aPlayableCharacter.! !

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:18:51'!
ERROR!
!Room methodsFor: 'comparing' stamp: 'MSM 12/10/2020 20:18:58'!
validateEmptyCell: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'comparing' stamp: 'MSM 12/10/2020 20:20:56' prior: 50887494!
validateEmptyCell: aPoint 
	(self positionIsEmpty: aPoint) ifFalse:[self error: self class notEmptyCellErrorDescription].! !

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:20:58'!
FAILURE!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:20:58'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:20:58'!
FAILURE!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:21:10' prior: 50887205!
test05PlayerMovesToEmptyCell

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack at: 1@1 heading: #North.

	
	self assert: (player isAt: 1@1 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:21:13'!
PASSED!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:21:18'!
PASSED!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:21:40'!
test08PlayerCantMoveToFilledPosition

	|backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	room add: StageObject new at: (0@0).
	
	self 
		should: [PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North]
		raise: Error - MessageNotUnderstood
		withMessageText: Room notEmptyCellErrorDescription.
	


	
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:21:51' prior: 50887575!
test08PlayerCantMoveToFilledPosition

	|backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	room add: StageObject new at: (0@0).
	
	
	self 
		should: [PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North]
		raise: Error - MessageNotUnderstood
		withMessageText: Room notEmptyCellErrorDescription.
	


	
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:22:32' prior: 50887591!
test08PlayerCantMoveToFilledPosition

	|backpack room player|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	room add: StageObject new at: (0@1).
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	player moveForward.
	
	self 
		should: []
		raise: Error - MessageNotUnderstood
		withMessageText: Room notEmptyCellErrorDescription.
	


	
	

	! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:22:52' prior: 50887607!
test08PlayerCantMoveToFilledPosition

	|backpack room player|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	room add: StageObject new at: (0@1).
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 0@0 heading: #North.
	
	self 
		should: [player moveForward.]
		raise: Error - MessageNotUnderstood
		withMessageText: Room notEmptyCellErrorDescription.
	


	
	

	! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:22:54'!
FAILURE!
!PlayableCharacter methodsFor: 'moving' stamp: 'MSM 12/10/2020 20:24:25' prior: 50880423!
moveForward
	room move: (position + heading forwardPoint).
	position := position + heading forwardPoint.! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:24:40'!
ERROR!
!Room methodsFor: 'player' stamp: 'MSM 12/10/2020 20:24:59'!
move: aPoint 
	self shouldBeImplemented.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'MSM 12/10/2020 20:26:08' prior: 50887644!
moveForward
	room move: self at: (position + heading forwardPoint).
	position := position + heading forwardPoint.! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:26:46'!
ERROR!
!Room methodsFor: 'player' stamp: 'MSM 12/10/2020 20:26:55'!
move: aPlayableCharacter at: aPoint 
	self shouldBeImplemented.! !
!Room methodsFor: 'player' stamp: 'MSM 12/10/2020 20:27:35' prior: 50887667!
move: aPlayableCharacter at: aPoint 
	self add: aPlayableCharacter at: aPoint.
	celdas at: aPoint put: EmptyCell.! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:27:37'!
ERROR!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:27:37'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:27:37'!
ERROR!

!methodRemoval: Room #move: stamp: 'MSM 12/10/2020 20:28:05'!
move: aPoint 
	self shouldBeImplemented.!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:28:17'!
ERROR!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:28:17'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:28:17'!
ERROR!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:29:21'!
ERROR!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:29:21'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:29:21'!
ERROR!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:29:32'!
ERROR!
!PlayableCharacter methodsFor: 'moving' stamp: 'MSM 12/10/2020 20:30:26' prior: 50887658!
moveForward
	room move: self at: (position + heading forwardPoint).
	position := position + heading forwardPoint.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'MSM 12/10/2020 20:30:37' prior: 50880418!
moveBackward
	room move: self at: (position + heading forwardPoint).
	position := position - heading forwardPoint ! !
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:30:56' prior: 50887371!
test06PlayerMovesToEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 2 andWidth: 2.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:30:59'!
ERROR!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:30:59'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:30:59'!
ERROR!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:31:15'!
ERROR!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:31:15'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:31:15'!
ERROR!
!RoomTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:31:33' prior: 50887792!
test06PlayerMovesToEmptyPosition

	|player backpack room|
	 
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	room _ Room withHeigh: 10 andWidth: 10.
	player _ PlayableCharacter named: 'juan' using: backpack inRoom: room at: 1@1 heading: #North.
	player moveForward.

	
	self assert: (player isAt: 1@2 heading: #North).
	self assert: (room positionIsEmpty: 1@1).
	

	! !

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:31:34'!
FAILURE!

celdas at: aPoint!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:32:17'!
FAILURE!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:32:17'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:32:17'!
FAILURE!
!Room methodsFor: 'player' stamp: 'MSM 12/10/2020 20:33:51'!
from: aFirstPoint move: aPlayableCharacter at: aPoint 
	self add: aPlayableCharacter at: aPoint.
	celdas at: aPoint put: EmptyCell.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:33:51' prior: 50887778!
moveForward
	room from: aPosition move: self at: (position + heading forwardPoint).
	position := position + heading forwardPoint.! !
!PlayableCharacter methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:33:51' prior: 50887785!
moveBackward
	room from: aPosition move: self at: (position + heading forwardPoint).
	position := position - heading forwardPoint ! !

!methodRemoval: Room #move:at: stamp: 'MSM 12/10/2020 20:33:51'!
move: aPlayableCharacter at: aPoint 
	self add: aPlayableCharacter at: aPoint.
	celdas at: aPoint put: EmptyCell.!
!Room methodsFor: 'player' stamp: 'MSM 12/10/2020 20:34:27' prior: 50887918!
from: anInitialPosition move: aPlayableCharacter at: aPoint 
	self add: aPlayableCharacter at: aPoint.
	celdas at: anInitialPosition put: EmptyCell.! !
!PlayableCharacter methodsFor: 'moving' stamp: 'MSM 12/10/2020 20:34:37' prior: 50887934!
moveBackward
	room from: position move: self at: (position + heading forwardPoint).
	position := position - heading forwardPoint ! !
!PlayableCharacter methodsFor: 'moving' stamp: 'MSM 12/10/2020 20:34:42' prior: 50887926!
moveForward
	room from: position move: self at: (position + heading forwardPoint).
	position := position + heading forwardPoint.! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:34:48'!
FAILURE!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:34:48'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:34:48'!
FAILURE!

(celdas at: aPoint)!

(celdas at: aPoint) class = EmptyCell!

(celdas at: aPoint) class = EmptyCell!

(celdas at: aPoint) class!
!Room methodsFor: 'evaluating' stamp: 'MSM 12/10/2020 20:36:47' prior: 50887283!
positionIsEmpty: aPoint 
	^(celdas at: aPoint) = EmptyCell.! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:36:50'!
ERROR!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:37:12'!
ERROR!

celdas at: aPoint!

(celdas at: aPoint) = EmptyCell!
!Room methodsFor: 'evaluating' stamp: 'MSM 12/10/2020 20:39:29' prior: 50888004!
positionIsEmpty: aPoint 
	^(celdas at: aPoint) isKindOf: EmptyCell.! !

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:39:32'!
FAILURE!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:39:32'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:39:32'!
FAILURE!

(celdas at: aPoint)!

(celdas at: aPoint) isKindOf: EmptyCell!
!Room methodsFor: 'player' stamp: 'MSM 12/10/2020 20:40:22' prior: 50887947!
from: anInitialPosition move: aPlayableCharacter at: aPoint 
	self add: aPlayableCharacter at: aPoint.
	celdas at: anInitialPosition put: EmptyCell new.! !

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:40:23'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test01CreateA10x10RoomHasCorrectDimension stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test02CannotCreateARoomWith0Height stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test03CannotCreateARoomWith0Width stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test04PlayerStartsAt0x0EmptyPosition stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test05PlayerMovesToEmptyCell stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test06PlayerMovesToEmptyPosition stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test07PlayerStartsInFilledPosition stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!

!testRun: #RoomTest #test08PlayerCantMoveToFilledPosition stamp: 'MSM 12/10/2020 20:40:26'!
PASSED!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:47:13'!
test01EmptyNonPortableObject
! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 20:47:45'!
Object subclass: #NonPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:47:39' prior: 50888094!
test01EmptyNonPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject at: room
! !

!methodRemoval: NonPortableObjectTest #test01 stamp: 'MSM 12/10/2020 20:47:53'!
test01!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:48:46' prior: 50888107!
test01EmptyNonPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject at: room.
	
	
	self assert: NonPortableObject isEmpty.
! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:48:51'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:49:09' prior: 50888117!
test01EmptyNonPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject in: room.
	
	
	self assert: NonPortableObject isEmpty.
! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:49:11'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 20:49:20'!
in: aRoom 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeIn: aRoom ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 20:49:27' prior: 50888141!
in: aRoom 
	
	^self new initializeIn: aRoom ! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:49:31'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 20:49:43'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 20:49:43'!
initializeIn: aRoom 
	self shouldBeImplemented.
	room := aRoom.! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 20:50:50'!
in: aRoom at: aPosition  
	
	^self new initializeIn: aRoom ! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:50:50' prior: 50888129!
test01EmptyNonPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject in: room at: aPosition.
	
	
	self assert: NonPortableObject isEmpty.
! !

!methodRemoval: NonPortableObject class #in: stamp: 'MSM 12/10/2020 20:50:50'!
in: aRoom 
	
	^self new initializeIn: aRoom !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:51:03' prior: 50888176!
test01EmptyNonPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject in: room at: 0@0.
	
	
	self assert: NonPortableObject isEmpty.
! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:51:42'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 20:52:01' prior: 50888170!
in: aRoom at: aPosition  
	
	^self new initializeIn: aRoom at: aPosition! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:52:03'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 20:52:13'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'room position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 20:52:13'!
initializeIn: aRoom at: aPosition 
	self shouldBeImplemented.
	room := aRoom.
	position := aPosition.! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 20:53:12'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'room position container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 20:53:10' prior: 50888220!
initializeIn: aRoom at: aPosition 
	aRoom add: self at: aPosition.
	container := OrderedCollection new.! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:53:19'!
ERROR!
!NonPortableObject class methodsFor: 'accessing' stamp: 'MSM 12/10/2020 20:53:35'!
isEmpty
	self shouldBeImplemented.! !

Object subclass: #NonPortableObject
	instanceVariableNames: 'container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 20:54:01'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!methodRemoval: NonPortableObject #initializeIn: stamp: 'MSM 12/10/2020 20:54:10'!
initializeIn: aRoom 
	self shouldBeImplemented.
	room := aRoom.!

!classDefinition: 'NonPortableObject class' category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 20:54:29'!
NonPortableObject class
	instanceVariableNames: 'container'!
!NonPortableObject class methodsFor: 'accessing' stamp: 'MSM 12/10/2020 20:54:27' prior: 50888246!
isEmpty
	container isEmpty.! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:54:32'!
ERROR!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:54:49'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:55:02' prior: 50888190!
test01EmptyNonPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject in: room at: 0@0.
	
	
	self assert: item isEmpty.
! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:55:06'!
ERROR!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:55:15'!
ERROR!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:55:20'!
ERROR!
!NonPortableObject methodsFor: 'nil' stamp: 'MSM 12/10/2020 20:55:38'!
isEmpty
	container isEmpty.! !

!methodRemoval: NonPortableObject class #isEmpty stamp: 'MSM 12/10/2020 20:55:44'!
isEmpty
	container isEmpty.!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:56:10'!
ERROR!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:56:19'!
ERROR!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 20:56:33' prior: 50888303!
isEmpty
	^container isEmpty.! !

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:56:35'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 20:56:35'!
PASSED!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 20:59:14'!
test02NonPortableObjectCanHoldPortableObject


	|item room|
	room _ Room withHeigh: 10 andWidth: 10.
	item _ NonPortableObject in: room at: 0@0.
	
	
	self assert: item isEmpty.
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:00:33' prior: 50888328!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0.

	
	self assert: portableItem isEmpty.
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:00:43' prior: 50888337!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0.

	
	self deny: portableItem isEmpty.
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:01:43' prior: 50888350!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0.

	
	self deny: portableItem isEmpty.
	self assert: (nonPortableItem take: portableItem) equals: portableItem
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:01:56'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:02:09' prior: 50888363!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0.

	
	self deny: nonPortableItem isEmpty.
	self assert: (nonPortableItem take: portableItem) equals: portableItem
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:02:11'!
FAILURE!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:02:35' prior: 50888382!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.

	
	self deny: nonPortableItem isEmpty.
	self assert: (nonPortableItem take: portableItem) equals: portableItem
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:02:42'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 21:02:47'!
in: aRoom at: aPoint with: aNoPointsPortableObject 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeIn: aRoom at: aPoint with: aNoPointsPortableObject ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 21:02:55' prior: 50888420!
in: aRoom at: aPoint with: aNoPointsPortableObject 
	
	^self new initializeIn: aRoom at: aPoint with: aNoPointsPortableObject ! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:02:58'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:03:07'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:03:07'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container room point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:03:07'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container room point noPointsPortableObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:03:07'!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 
	self shouldBeImplemented.
	room := aRoom.
	point := aPoint.
	noPointsPortableObject := aNoPointsPortableObject.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:03:53' prior: 50888468!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 

	room add: self at: aPoint.
	container add: aNoPointsPortableObject.! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:03:55'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:04:05'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:04:42' prior: 50888477!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 

	aRoom add: self at: aPoint.
	container add: aNoPointsPortableObject.! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:04:57'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:05:03'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:05:10'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:05:17'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:05:21'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:05:28'!
ERROR!
!Room class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 21:06:27' prior: 50886919!
withHeigh: aHeight andWidth: aWidth hasPlayer: aPlayableCharacter 
	self validateDimension:aHeight and:aWidth.
	^self new initializeWithHeigh: aHeight andWidth: aWidth ! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:06:48'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:07:24' prior: 50888492!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 

	aRoom add: self at: aPoint.
	container := OrderedCollection new.
	container add: aNoPointsPortableObject.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:07:41' prior: 50888535!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 

	aRoom add: self at: aPoint.
	container := OrderedCollection with:aNoPointsPortableObject.! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:07:42'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:07:56'!
ERROR!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:08:16'!
ERROR!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:08:39'!
take: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:12:30' prior: 50888563!
take: aNoPointsPortableObject 
	^container collect:[:anObject | aNoPointsPortableObject isKindOf: PortableObject ] ! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:14:12' prior: 50888568!
take: aNoPointsPortableObject 
	|items|
	items _ container collect:[:anObject | aNoPointsPortableObject isKindOf: PortableObject ].
	container _ container reject:[:anObject | aNoPointsPortableObject isKindOf: PortableObject ].
	^items.
	
	 ! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:17:02' prior: 50888575!
take: aNoPointsPortableObject 
	|items|
	items _ container collect:[:anObject | anObject isKindOf: NoPointsPortableObject ].
	^items.
	
	 ! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:17:58' prior: 50888586!
take: aNoPointsPortableObject 
	|items|
	items _ container collect:[:anObject | anObject take ].
	^items.
	
	 ! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:18:03'!
ERROR!
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:18:16'!
take
	self shouldBeImplemented.! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:21:48' prior: 50888401!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	
	self deny: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:22:18' prior: 50888609!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self deny: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:22:19'!
ERROR!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:23:27' prior: 50888594!
take: aBackPack
	|items|
	items _ container collect:[:anObject | anObject take: aBackPack ].
	^items.
	
	 ! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:23:30'!
ERROR!
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:23:46'!
take: aBackpack 
	self shouldBeImplemented.! !
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:24:21' prior: 50888658!
take: aBackpack 
	aBackpack add: self! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:25:00'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:25:00'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:25:00'!
PASSED!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:25:50' prior: 50888648!
take: aBackPack
	|items|
	items _ container reject:[:anObject | anObject take: aBackPack ].
	^items.
	
	 ! !
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:26:03' prior: 50888663!
take: aBackpack 
	aBackpack add: self.
	^ True! !

!methodRemoval: NoPointsPortableObject #take stamp: 'MSM 12/10/2020 21:26:09'!
take
	self shouldBeImplemented.!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:26:26' prior: 50888626!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:26:29'!
FAILURE!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:27:00' prior: 50888679!
take: aBackPack
	|items|
	items _ container reject:[:anObject | anObject take: aBackPack ].
	
	 ! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:27:00' prior: 50888717!
take: aBackPack
	|items|
	items _ container reject:[:anObject | anObject take: aBackPack ].
	
	 ! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:27:09' prior: 50888724!
take: aBackPack
	
	container reject:[:anObject | anObject take: aBackPack ].
	
	 ! !
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:27:26' prior: 50888731!
take: aBackPack
	
	container reject:[:anObject | anObject take: aBackPack ].
	^False
	 ! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:27:35'!
FAILURE!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:27:41'!
FAILURE!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:27:58' prior: 50888737!
take: aBackPack
	
	container _ container reject:[:anObject | anObject take: aBackPack ].
	^False
	 ! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:27:59'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:27:59'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:27:59'!
PASSED!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:28:10'!
test02NonPortableObjectCanHoldNonPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:28:35' prior: 50888695!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self deny: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:28:47' prior: 50888786!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.

	self deny: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:28:59' prior: 50888804!
test02NonPortableObjectCanHoldPortableObject


	|portableItem nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.

	self deny: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:29:32'!
test02NonPortableObjectCanTakePortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !

!methodRemoval: NonPortableObjectTest #test02NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:29:32'!
test02NonPortableObjectCanHoldNonPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:29:40'!
test03NonPortableObjectCanTakePortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !

!methodRemoval: NonPortableObjectTest #test02NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:29:40'!
test02NonPortableObjectCanTakePortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:29:56' prior: 50888869!
test03NonPortableObjectCanTakePortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ PointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:30:27'!
test02NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:30:29'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:30:29'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:30:29'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:30:29'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:30:29'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:30:29'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:30:47' prior: 50888923!
test02NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject in: room at: 0@0.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:30:52'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:31:02'!
test04NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject in: room at: 0@0.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !

!methodRemoval: NonPortableObjectTest #test02NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:31:02'!
test02NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject in: room at: 0@0.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:31:04'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:31:30' prior: 50888976!
test04NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject new..
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:31:34' prior: 50889007!
test04NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject new.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:31:37'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:31:37'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:31:37'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:31:37'!
ERROR!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:31:37'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:31:37'!
ERROR!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:31:45'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:31:45'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:31:45'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:31:45'!
ERROR!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:31:45'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:31:45'!
ERROR!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:32:17' prior: 50888905!
test03NonPortableObjectCanTakePortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:32:20'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:32:20'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:32:20'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:32:20'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:32:20'!
PASSED!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:32:40'!
test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject


	|portableItem nonPortableItem room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: portableItem.
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:34:57' prior: 50889114!
test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject


	|portableItem nonPortableItem nonPortableItem2 room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem2 _ NonPortableObject with: portableItem.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonPortableItem2.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem2 isEmpty.
	self deny: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:34:58'!
ERROR!
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 21:35:05'!
with: aNoPointsPortableObject 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aNoPointsPortableObject ! !
!NonPortableObject class methodsFor: 'instance creation' stamp: 'MSM 12/10/2020 21:35:31' prior: 50889160!
with: aPortableObject 

	^self new initializeWith: aPortableObject ! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:35:32'!
ERROR!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:35:41'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container room point noPointsPortableObject portableObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:35:41'!
initializeWith: aPortableObject 
	self shouldBeImplemented.
	portableObject := aPortableObject.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:35:56' prior: 50889190!
initializeWith: aPortableObject 
	
	container := OrderedCollection with:aPortableObject.! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:35:57'!
FAILURE!

anObject take: aBackPack !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:37:14'!
FAILURE!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:37:23'!
FAILURE!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:37:35'!
FAILURE!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:40:00'!
FAILURE!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:41:43' prior: 50888751!
take: aBackPack
	
	container _ container select:[:anObject | anObject take: aBackPack ].
	^True
	 ! !
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:41:52' prior: 50888686!
take: aBackpack 
	aBackpack add: self.
	^ False! !
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:41:54' prior: 50889234!
take: aBackpack 
	aBackpack add: self.
	^ False.! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:41:55'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:42:01'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:42:32'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:43:57'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:45:00'!
ERROR!

!classDefinition: #NoPointsPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:45:39'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: 'parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NoPointsPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:45:38' prior: 50889239!
take: aBackpack 
	aBackpack add: self.
	parent remove: self.! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:45:54'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:46:53' prior: 50889197!
initializeWith: aPortableObject 
	
	container := OrderedCollection with:aPortableObject.
	aPortableObject defineRoot: self.! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:46:55'!
ERROR!
!NoPointsPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:47:08'!
defineRoot: aNonPortableObject 
	self shouldBeImplemented.! !
!NoPointsPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:47:27' prior: 50889296!
defineRoot: aNonPortableObject 
	parent := aNonPortableObject.! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:47:37'!
ERROR!
!NonPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:47:48'!
remove: aNoPointsPortableObject 
	self shouldBeImplemented.! !
!NonPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:48:22' prior: 50889310!
remove: aPortableObject 
	container remove: aPortableObject ! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:48:23'!
ERROR!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:48:57' prior: 50889227!
take: aBackPack
	
	container _ container collect:[:anObject | anObject take: aBackPack ].
	
	 ! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:48:58'!
ERROR!
!NonPortableObject methodsFor: 'accessing' stamp: 'MSM 12/10/2020 21:49:20' prior: 50889325!
take: aBackPack
	
	container _ container do:[:anObject | anObject take: aBackPack ].
	^True
	 ! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:49:21'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:49:21'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:49:21'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:49:21'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:49:21'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:49:21'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:49:21'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:49:36'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:49:36'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:49:36'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:49:36'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:49:36'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:49:36'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:49:36'!
ERROR!
!NonPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:49:50' prior: 50889315!
remove: aPortableObject 
	container remove: aPortableObject.! !
!NonPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:50:38' prior: 50889398!
remove: aPortableObject 
	container remove: aPortableObject ifAbsent:[].! !

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:50:45'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:50:45'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:50:45'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:50:45'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:50:45'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:50:45'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:50:45'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:50:59'!
ERROR!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:51:07'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:51:07'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:51:07'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:51:07'!
ERROR!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:51:07'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:51:07'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:51:07'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:52:30' prior: 50888544!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 

	aRoom add: self at: aPoint.
	aNoPointsPortableObject  defineRoot: self.
	container := OrderedCollection with:aNoPointsPortableObject.! !

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:52:31'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:52:37'!
ERROR!
!NonPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:52:56'!
defineRoot: aNonPortableObject 
	self shouldBeImplemented.! !

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:53:33'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container room point noPointsPortableObject portableObject parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObject methodsFor: 'binding' stamp: 'MSM 12/10/2020 21:53:31' prior: 50889484!
defineRoot: aNonPortableObject 
	parent add: aNonPortableObject.! !

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:53:34'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:53:50' prior: 50888236!
initializeIn: aRoom at: aPosition 
	aRoom add: self at: aPosition.
	container := OrderedCollection new.
	parent := OrderedCollection new.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:53:59' prior: 50889467!
initializeIn: aRoom at: aPoint with: aNoPointsPortableObject 

	aRoom add: self at: aPoint.
	aNoPointsPortableObject  defineRoot: self.
	container := OrderedCollection with:aNoPointsPortableObject.
	parent := OrderedCollection new.! !
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:54:05' prior: 50889285!
initializeWith: aPortableObject 
	
	container := OrderedCollection with:aPortableObject.
	parent := OrderedCollection new.
	aPortableObject defineRoot: self.! !
!NoPointsPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:54:12' prior: 50880625!
initializeNamed: aName weighing: aWeight
	
	parent := OrderedCollection new.
	name := aName.
	weight := aWeight.! !

!classDefinition: #PointsPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:54:21'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!PointsPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:54:20' prior: 50880675!
initializeNamed: aName weighing: aWeight worth: gamePoints
	
	parent := OrderedCollection new.
	name := aName.
	weight := aWeight.
	points := gamePoints.! !

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:54:29'!
ERROR!

Object subclass: #NonPortableObject
	instanceVariableNames: 'container room point parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:54:53'!
Object subclass: #NonPortableObject
	instanceVariableNames: 'container room point parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:55:35'!
test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject


	|portableItem nonPortableItem nonPortableItem2 room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem2 _ NonPortableObject with: portableItem.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonPortableItem2.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem2 isEmpty.
	self deny: nonPortableItem isEmpty.
 
! !

!methodRemoval: NonPortableObjectTest #test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:55:35'!
test03NonPortableObjectCanTakePortableObjectInsideNonPortableObject


	|portableItem nonPortableItem nonPortableItem2 room backpack|
	room _ Room withHeigh: 10 andWidth: 10.
	portableItem _ NoPointsPortableObject named: 'key' weighing: 1.
	nonPortableItem2 _ NonPortableObject with: portableItem.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonPortableItem2.
	backpack _ Backpack containingUpTo: 10 limitingPointsTo: 10.
	
	nonPortableItem take: backpack.

	self assert: backpack includes: portableItem.
	self assert: nonPortableItem2 isEmpty.
	self deny: nonPortableItem isEmpty.
 
!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:55:37'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:55:37'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:55:37'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:55:37'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:55:37'!
ERROR!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:55:37'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:55:37'!
ERROR!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:55:52'!
ERROR!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:55:57'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:55:57'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:55:57'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:55:57'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:55:57'!
ERROR!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:55:57'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:55:57'!
ERROR!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:56:06'!
ERROR!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:56:10'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:56:10'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:56:10'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:56:10'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:56:10'!
ERROR!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:56:10'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:56:10'!
ERROR!
!NonPortableObject methodsFor: 'initialization' stamp: 'MSM 12/10/2020 21:57:08' prior: 50889509!
initializeIn: aRoom at: aPosition 
	aRoom add: self at: aPosition.
	container := OrderedCollection new.
	parent := OrderedCollection new.! !

NonPortableObject class
	instanceVariableNames: ''!

!classDefinition: 'NonPortableObject class' category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 21:57:20'!
NonPortableObject class
	instanceVariableNames: ''!
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:59:09' prior: 50889020!
test04NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject with: NoPointsPortableObject.
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !
!NonPortableObjectTest methodsFor: 'as yet unclassified' stamp: 'MSM 12/10/2020 21:59:29' prior: 50889731!
test04NonPortableObjectCanHoldNonPortableObject


	|nonportableItem2 nonPortableItem room|
	room _ Room withHeigh: 10 andWidth: 10.
	nonportableItem2 _ NonPortableObject with: (NoPointsPortableObject named: 'key' weighing: 1).
	nonPortableItem _ NonPortableObject in: room at: 0@0 with: nonportableItem2.

	self deny: nonPortableItem isEmpty.
 
! !

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:59:32'!
PASSED!

!testRun: #NonPortableObjectTest #test01EmptyNonPortableObject stamp: 'MSM 12/10/2020 21:59:32'!
PASSED!

!testRun: #NonPortableObjectTest #test02NonPortableObjectCanHoldPortableObject stamp: 'MSM 12/10/2020 21:59:32'!
PASSED!

!testRun: #NonPortableObjectTest #test03NonPortableObjectCanTakePortableObject stamp: 'MSM 12/10/2020 21:59:32'!
PASSED!

!testRun: #NonPortableObjectTest #test04NonPortableObjectCanHoldNonPortableObject stamp: 'MSM 12/10/2020 21:59:32'!
PASSED!

!testRun: #NonPortableObjectTest #test05NonPortableObjectCanTakePortableObjectInsideNonPortableObject stamp: 'MSM 12/10/2020 21:59:32'!
PASSED!

StageObject subclass: #NonPortableObject
	instanceVariableNames: 'container room point parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

!classDefinition: #NonPortableObject category: 'ISW1-2020-2C-2doParcial' stamp: 'MSM 12/10/2020 22:00:30'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'container room point parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-2doParcial'!

----SNAPSHOT----(10 December 2020 22:01:18) CuisUniversity-4384.image priorSource: 17541893!