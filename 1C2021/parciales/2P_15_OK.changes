

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (5 July 2021 02:55:23) as /home/igna/Desktop/linux64 (2)/linux64/CuisUniversity-4532.image!


----QUIT----(5 July 2021 02:56:31) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (5 July 2021 16:19:41) as /home/igna/Desktop/linux64 (2)/linux64/CuisUniversity-4532.image!


----End fileIn of /home/igna/Desktop/linux64 (2)/linux64/ISW1-2021-1C-2doParcial.st----!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ijgt 7/5/2021 17:38:00'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ijgt 7/5/2021 17:38:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'ijgt 7/5/2021 17:38:03'!
PASSED!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 17:42:02'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 17:51:29'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 17:51:58'!
test01_playersStartWithThreeCards

	|ronda jugadorMano jugadorPie unMazo |

	ronda := RondaDeTruco with: unMazo for: jugadorMano vs: jugadorPie.
	
	self assert: jugadorMano numberOfCards equals: 3.
	self assert: jugadorPie numberOfCards equals: 3! !
!RondaDeTruco class methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 17:54:05'!
with: unMazo for: jugadorMano vs: jugadorPie

	^ self new initializeWith: unMazo for: jugadorMano vs: jugadorPie.! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 17:54:37'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 17:54:39'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 17:54:41'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 17:54:35'!
initializeWith: unMazo for: jugadorMano vs: jugadorPie

	mazo := unMazo.
	mano := jugadorMano.
	pie := jugadorPie! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 17:54:43' prior: 50860055!
initializeWith: unMazo for: jugadorMano vs: jugadorPie

	mazo := unMazo.
	mano := jugadorMano.
	pie := jugadorPie.! !

!classDefinition: #Mazo category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 17:57:46'!
Object subclass: #Mazo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 17:57:41' prior: 50860014!
test01_playersStartWithThreeCards

	|ronda jugadorMano jugadorPie unMazo |

	ronda := RondaDeTruco with: (Mazo new) for: jugadorMano vs: jugadorPie.
	
	self assert: jugadorMano numberOfCards equals: 3.
	self assert: jugadorPie numberOfCards equals: 3! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 17:58:16' prior: 50860076!
test01_playersStartWithThreeCards

	| jugadorMano jugadorPie |

	RondaDeTruco with: (Mazo new) for: jugadorMano vs: jugadorPie.
	
	self assert: jugadorMano numberOfCards equals: 3.
	self assert: jugadorPie numberOfCards equals: 3! !

!classDefinition: #Mano category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:08:57'!
Object subclass: #Mano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Pie category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:09:01'!
Object subclass: #Pie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:08:46' prior: 50860087!
test01_playersStartWithThreeCards

	| jugadorMano jugadorPie |

	jugadorMano := Mano new.
	jugadorPie := Pie new.
	RondaDeTruco with: (Mazo new) for: jugadorMano vs: jugadorPie.
	
	self assert: jugadorMano numberOfCards equals: 3.
	self assert: jugadorPie numberOfCards equals: 3! !

Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:09:11'!
Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Jugador subclass: #Mano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Mano category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:09:18'!
Jugador subclass: #Mano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Jugador subclass: #Pie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Pie category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:09:25'!
Jugador subclass: #Pie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Mano methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:11:29'!
numberOfCards

	^ 3! !
!Pie methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:11:39'!
numberOfCards

	^ 3! !
!Jugador methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:11:50'!
numberOfCards

	self subclassResponsibility ! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 18:12:23'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:20:29'!
test02_playersCanDrawCardsFromMazo

	| jugadorMano jugadorPie anchoDeEspadas |

	jugadorMano := Mano new.
	jugadorPie := Pie new.
	anchoDeEspadas := CartaDeTruco anchoDeEspada . 
	RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	self assert: jugadorMano cartas includes: anchoDeEspadas.! !

!classDefinition: #Mano category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:22:48'!
Jugador subclass: #Mano
	instanceVariableNames: 'cartas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Mano methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:22:45'!
cartas

	^ cartas! !
!Jugador methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:22:58'!
cartas

	self subclassResponsibility ! !

!classDefinition: #Pie category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:23:15'!
Jugador subclass: #Pie
	instanceVariableNames: 'cartas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Pie methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:23:13' overrides: 50860193!
cartas

	^ cartas! !

!classDefinition: #Mano category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:26:06'!
Jugador subclass: #Mano
	instanceVariableNames: 'cartas ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Mano methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 18:26:02'!
drawCards

	cartas := ronda drawCards.! !
!Jugador methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 18:26:33'!
drawCards

	self subclassResponsibility ! !
!Pie methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 18:26:47' overrides: 50860220!
drawCards

	self subclassResponsibility ! !

!classDefinition: #Pie category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:27:07'!
Jugador subclass: #Pie
	instanceVariableNames: 'cartas ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Pie methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 18:27:04' prior: 50860224 overrides: 50860220!
drawCards

	cartas := ronda drawCards! !
!Mano class methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:28:12'!
playingIn: aRonda

	^ self new initializePlayingIn: aRonda! !
!Pie class methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:28:37'!
playingIn: aRonda

	^ self new initializePlayingIn: aRonda! !
!Mano methodsFor: 'nil' stamp: 'ijgt 7/5/2021 18:29:07'!
initializePlayingIn: aRonda

	ronda := aRonda.! !
!Pie methodsFor: 'nil' stamp: 'ijgt 7/5/2021 18:29:26'!
initializePlayingIn: aRonda

	ronda := aRonda.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:31:42' prior: 50860112!
test01_playersStartWithThreeCards

	|ronda|
	
	ronda := RondaDeTruco with: (Mazo new).
	
	self assert: ronda  manoNumberOfCards equals: 3.
	self assert: ronda pieNumberOfCards equals: 3! !
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 18:32:24'!
initializeWith: unMazo

	mazo := unMazo.
	mano := Mano for: self.
	pie := Pie for: self.! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ijgt 7/5/2021 18:33:26'!
with: unMazo

	^ self new initializeWith: unMazo.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:33:47' prior: 50860171!
test02_playersCanDrawCardsFromMazo

	| jugadorMano jugadorPie anchoDeEspadas |

	jugadorMano := Mano new.
	jugadorPie := Pie new.
	anchoDeEspadas := CartaDeTruco anchoDeEspada . 
	RondaDeTruco with: self.
	
	self assert: jugadorMano cartas includes: anchoDeEspadas.! !
!Mano methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:34:39' prior: 50860158 overrides: 50860164!
numberOfCards

	^ cartas size! !
!Pie methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:34:47' prior: 50860161 overrides: 50860164!
numberOfCards

	^ cartas size! !
!RondaDeTruco methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:35:35'!
manoNumberOfCards

	^ mano numberOfCards! !
!RondaDeTruco methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:35:45'!
pieNumberOfCards

	^ pie numberOfCards! !
!Mano methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 18:37:03' prior: 50860249!
initializePlayingIn: aRonda

	ronda := aRonda.
	self drawCards.! !
!Pie methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 18:37:13' prior: 50860253!
initializePlayingIn: aRonda

	ronda := aRonda.
	self drawCards.! !
!RondaDeTruco methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 18:39:14'!
drawCards

	^ mazo drawCards! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:39:34' prior: 50860258!
test01_playersStartWithThreeCards

	|ronda|
	
	ronda := RondaDeTruco with: self.
	
	self assert: ronda  manoNumberOfCards equals: 3.
	self assert: ronda pieNumberOfCards equals: 3! !
!RondaDeTrucoTest methodsFor: 'simulating' stamp: 'ijgt 7/5/2021 18:40:56'!
drawCards

	^ {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada}! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 18:41:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 18:41:06'!
ERROR!
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 18:41:45' prior: 50860267!
initializeWith: unMazo

	mazo := unMazo.
	mano := Mano playingIn: self.
	pie := Pie playingIn: self.! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 18:41:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 18:41:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 18:41:51'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:44:42' prior: 50860278!
test02_playersCanDrawCardsFromMazo

	| ronda anchoDeEspadas |

	anchoDeEspadas := CartaDeTruco anchoDeEspada . 
	ronda := RondaDeTruco with: self.
	
	self assert: ronda manoCartas includes: anchoDeEspadas.! !
!RondaDeTruco methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:45:10'!
manoCartas

	^ mano cartas! !
!RondaDeTruco methodsFor: 'testing' stamp: 'ijgt 7/5/2021 18:45:16'!
pieCartas

	^ pie cartas! !

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 18:45:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 18:45:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 18:45:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 18:45:26'!
PASSED!

!classDefinition: #MazoRepetido category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 18:56:51'!
Mazo subclass: #MazoRepetido
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:56:40'!
test03_CanNotHaveRepeatedCardsInSameRound

	| anchoDeEspadas |

	anchoDeEspadas := CartaDeTruco anchoDeEspada . 
	self should: [RondaDeTruco with: MazoRepetido new.] 
		raise: Error 
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: RondaDeTruco cantHaveRepeatedCardsInRoundErrorDescription]! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 18:57:12' prior: 50860396!
test03_CanNotHaveRepeatedCardsInSameRound

	self should: [RondaDeTruco with: MazoRepetido new.] 
		raise: Error 
		withExceptionDo: [:anError | 
			self assert: anError messageText equals: RondaDeTruco cantHaveRepeatedCardsInRoundErrorDescription]! !
!RondaDeTruco class methodsFor: 'error handling' stamp: 'ijgt 7/5/2021 18:58:01'!
cantHaveRepeatedCardsInRoundErrorDescription

	^ 'Cant have repeated cards in the same round.'! !
!MazoRepetido class methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:58:22'!
drawCards

	! !

!methodRemoval: MazoRepetido class #drawCards stamp: 'ijgt 7/5/2021 18:58:48'!
drawCards

	!
!MazoRepetido methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 18:59:26'!
drawCards

	^ {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.
	CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}! !
!Mano methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 19:01:32'!
takeCards: aCollectionOfCards

	cartas := aCollectionOfCards .! !
!Pie methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 19:01:56'!
takeCards: aCollectionOfCards

	cartas := aCollectionOfCards! !
!Pie methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 19:01:57' prior: 50860444!
takeCards: aCollectionOfCards

	cartas := aCollectionOfCards.! !
!Pie methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:02:21' prior: 50860312!
initializePlayingIn: aRonda

	ronda := aRonda.! !
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:02:47' prior: 50860343!
initializeWith: unMazo

	mazo := unMazo.
	mano := Mano playingIn: self.
	pie := Pie playingIn: self.
	self dealCards.! !
!RondaDeTruco methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 19:04:45'!
dealCards

	|cardsInPlay|
	
	cardsInPlay := mazo drawCards.
	mano takeCards: (cardsInPlay first: 3).
	pie takeCards: (cardsInPlay last: 3)! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:05:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:05:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:05:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:05:36'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:05:36'!
FAILURE!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:05:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:05:44'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:06:09' prior: 50860321!
test01_playersStartWithThreeCards

	|ronda|
	
	ronda := RondaDeTruco with: (MazoRepetido new).
	
	self assert: ronda  manoNumberOfCards equals: 3.
	self assert: ronda pieNumberOfCards equals: 3! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:06:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:06:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:06:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:06:11'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:06:11'!
FAILURE!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:06:16'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:06:26' prior: 50860359!
test02_playersCanDrawCardsFromMazo

	| ronda anchoDeEspadas |

	anchoDeEspadas := CartaDeTruco anchoDeEspada . 
	ronda := RondaDeTruco with: MazoRepetido new.
	
	self assert: ronda manoCartas includes: anchoDeEspadas.! !

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:06:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:06:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:06:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:06:27'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:06:27'!
FAILURE!

!methodRemoval: Pie #drawCards stamp: 'ijgt 7/5/2021 19:07:02'!
drawCards

	cartas := ronda drawCards!

!methodRemoval: Mano #drawCards stamp: 'ijgt 7/5/2021 19:07:09'!
drawCards

	cartas := ronda drawCards.!
!Mano methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:07:22' prior: 50860307!
initializePlayingIn: aRonda

	ronda := aRonda.! !
!Jugador methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 19:07:57'!
takeCards

	self subclassResponsibility ! !

!methodRemoval: Jugador #drawCards stamp: 'ijgt 7/5/2021 19:08:04'!
drawCards

	self subclassResponsibility !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:08:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:08:22'!
PASSED!

!methodRemoval: RondaDeTruco #drawCards stamp: 'ijgt 7/5/2021 19:08:58'!
drawCards

	^ mazo drawCards!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:09:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:09:02'!
PASSED!
!RondaDeTruco methodsFor: 'drawCards' stamp: 'ijgt 7/5/2021 19:10:22' prior: 50860465!
dealCards

	|cardsInPlay|
	
	cardsInPlay := mazo drawCards.
	self assertCardsInPlayAreValid: cardsInPlay.
	
	mano takeCards: (cardsInPlay first: 3).
	pie takeCards: (cardsInPlay last: 3)! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'ijgt 7/5/2021 19:12:19'!
assertCardsInPlayAreValid: cardsInPlay

	cardsInPlay! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'ijgt 7/5/2021 19:14:32' prior: 50860596!
assertCardsInPlayAreValid: cardsInPlay

	cardsInPlay do: [:aCard | ]! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'ijgt 7/5/2021 19:18:30' prior: 50860601!
assertCardsInPlayAreValid: cardsInPlay

	"No encontre una funcion apropiada para verificar que no se repitan elementos."
	cardsInPlay do: [:aCard | 
		cardsInPlay do: [:aSecondCard | ( (aCard = aSecondCard) and: (aCard == aSecondCard) not ) ifTrue: [^true]]
		].
	^ false! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'ijgt 7/5/2021 19:19:00'!
thereAreRepeatedCardsIn: cardsInPlay

	"No encontre una funcion apropiada para verificar que no se repitan elementos."
	cardsInPlay do: [:aCard | 
		cardsInPlay do: [:aSecondCard | ( (aCard = aSecondCard) and: (aCard == aSecondCard) not ) ifTrue: [^true]]
		].
	^ false! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'ijgt 7/5/2021 19:20:07' prior: 50860606!
assertCardsInPlayAreValid: cardsInPlay

	(self thereAreRepeatedCardsIn: cardsInPlay) ifTrue: [self error: self class cantHaveRepeatedCardsInRoundErrorDescription ]! !

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:20:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:20:14'!
ERROR!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:20:14'!
ERROR!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:20:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:20:33'!
ERROR!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:20:33'!
ERROR!
!RondaDeTrucoTest methodsFor: 'simulating' stamp: 'ijgt 7/5/2021 19:21:22' prior: 50860330!
drawCards

	^ {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.
	CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:21:32' prior: 50860496!
test01_playersStartWithThreeCards

	|ronda|
	
	ronda := RondaDeTruco with: self.
	
	self assert: ronda  manoNumberOfCards equals: 3.
	self assert: ronda pieNumberOfCards equals: 3! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:21:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:21:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:21:33'!
ERROR!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:21:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:21:33'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:21:41' prior: 50860526!
test02_playersCanDrawCardsFromMazo

	| ronda anchoDeEspadas |

	anchoDeEspadas := CartaDeTruco anchoDeEspada . 
	ronda := RondaDeTruco with: self.
	
	self assert: ronda manoCartas includes: anchoDeEspadas.! !

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:21:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:21:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:21:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:21:44'!
PASSED!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 19:38:57'!
Object subclass: #Enfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:39:31'!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorMano := Mano withCards: {}.
	jugadorPie := Pie withCards: {}.
	ronda := RondaDeTruco with: self.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:40:16' prior: 50860723!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:41:43' prior: 50860736!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:43:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:43:24'!
PASSED!
!Mano class methodsFor: 'creation' stamp: 'ijgt 7/5/2021 19:44:04'!
withCards: aCollectionOfCards

	^ self new initializeWithCards: aCollectionOfCards ! !
!Pie class methodsFor: 'creation' stamp: 'ijgt 7/5/2021 19:44:13'!
withCards: aCollectionOfCards

	^ self new initializeWithCards: aCollectionOfCards ! !
!Pie methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:44:46'!
initializeWithCards: aCollectionOfCards

	cartas := aCollectionOfCards.! !
!Mano methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:44:53'!
initializeWithCards: aCollectionOfCards

	cartas := aCollectionOfCards.! !
!Enfrentamiento class methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 19:47:04'!
with: primerJugador vs: segundoJugador

	^ self new initializeWith: primerJugador vs: segundoJugador! !

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 19:48:30'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 19:48:32'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primero segundo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Enfrentamiento methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 19:48:27'!
initializeWith: primerJugador vs: segundoJugador

	primero := primerJugador.
	segundo := segundoJugador.! !
!Enfrentamiento methodsFor: 'decide' stamp: 'ijgt 7/5/2021 19:50:16'!
winner

	primero useCard! !
!Enfrentamiento methodsFor: 'decide' stamp: 'ijgt 7/5/2021 19:52:59' prior: 50860827!
winner

	|cartaFirst cartaSecond|
	
	cartaFirst := primero useCard.
	cartaSecond := segundo useCard.
	(cartaFirst mataA: cartaSecond) ifTrue: [^ primero].
	(cartaSecond mataA: cartaFirst) ifTrue: [^ segundo]! !
!Mano methodsFor: 'useCard' stamp: 'ijgt 7/5/2021 19:55:07'!
useCard
	
	|card|
	
	card := cartas first.
	cartas removeFirst.
	^ card! !
!Pie methodsFor: 'useCard' stamp: 'ijgt 7/5/2021 19:55:27'!
useCard
	
	|card|
	
	card := cartas first.
	cartas removeFirst.
	^ card! !

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:55:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 19:56:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 19:56:01'!
ERROR!
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 19:56:43'!
firstEncounterWinner
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 19:57:30' prior: 50860859!
firstEncounterWinner
	
	^ (Enfrentamiento with: mano vs: pie) winner.! !

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 19:57:32'!
ERROR!
!Pie methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:58:03' prior: 50860789!
initializeWithCards: aCollectionOfCards

	cartas := aCollectionOfCards asOrderedCollection.! !
!Mano methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 19:58:13' prior: 50860794!
initializeWithCards: aCollectionOfCards

	cartas := aCollectionOfCards asOrderedCollection.! !
!Mano methodsFor: 'takeCards' stamp: 'ijgt 7/5/2021 19:58:25' prior: 50860440!
takeCards: aCollectionOfCards

	cartas := aCollectionOfCards asOrderedCollection .! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:58:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:58:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:58:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 19:58:28'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 19:59:46'!
test05_enfrentamientoGanaPie

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner! !

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 19:59:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 19:59:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 19:59:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 19:59:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 19:59:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 19:59:47'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:00:31'!
test05_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:00:39'!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner! !

!methodRemoval: RondaDeTrucoTest #test05_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:00:39'!
test05_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento winner!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:01:39'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:01:39'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:02:17' prior: 50860902!
test05_enfrentamientoGanaPie

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: jugadorPie! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:02:32' prior: 50861005!
test05_enfrentamientoGanaPie

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: jugadorPie! !

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:02:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 20:02:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 20:02:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 20:02:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:02:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:02:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:02:34'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:02:34'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:06:43' prior: 50860754!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie |
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentamiento.
	
	self assert: ronda firstEncounterWinner equals: jugadorMano.! !

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:06:45'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:07:15' prior: 50861066!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie |
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstEncounterWinner equals: jugadorMano.! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:07:47'!
enfrentar
	
	^ (Enfrentamiento with: mano vs: pie) winner.! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:08:28'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstWinner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:08:27' prior: 50860864!
firstEncounterWinner
	
	^ firstWinner! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:09:30' prior: 50861102!
enfrentar
	
	firstWinner := (Enfrentamiento with: mano vs: pie) winner.! !
!Enfrentamiento methodsFor: 'decide' stamp: 'ijgt 7/5/2021 20:09:46'!
enfrentar

	|cartaFirst cartaSecond|
	
	cartaFirst := primero useCard.
	cartaSecond := segundo useCard.
	(cartaFirst mataA: cartaSecond) ifTrue: [^ primero].
	(cartaSecond mataA: cartaFirst) ifTrue: [^ segundo]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:09:46' prior: 50861121!
enfrentar
	
	firstWinner := (Enfrentamiento with: mano vs: pie) enfrentar.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:09:46' prior: 50860959!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento enfrentar! !

!methodRemoval: Enfrentamiento #winner stamp: 'ijgt 7/5/2021 20:09:46'!
winner

	|cartaFirst cartaSecond|
	
	cartaFirst := primero useCard.
	cartaSecond := segundo useCard.
	(cartaFirst mataA: cartaSecond) ifTrue: [^ primero].
	(cartaSecond mataA: cartaFirst) ifTrue: [^ segundo]!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 20:09:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:09:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:09:55'!
FAILURE!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:09:55'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:10:25' prior: 50861024!
test05_enfrentamientoGanaPie

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstEncounterWinner equals: jugadorPie! !

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:10:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 20:10:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 20:10:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 20:10:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:10:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:10:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:10:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:10:26'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:12:01' prior: 50861142!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstEncounterWinner equals: enfrentamiento enfrentar! !

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:12:02'!
FAILURE!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:12:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:12:30'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:12:30'!
FAILURE!
!Enfrentamiento methodsFor: 'decide' stamp: 'ijgt 7/5/2021 20:14:54' prior: 50861126!
enfrentar

	|cartaFirst cartaSecond|
	
	cartaFirst := primero useCard.
	cartaSecond := segundo useCard.
	(cartaFirst mataA: cartaSecond) ifTrue: [^ primero].
	(cartaSecond mataA: cartaFirst) ifTrue: [^ segundo]! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:20:37' prior: 50861226!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie enfrentamiento|
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	enfrentamiento := Enfrentamiento with: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self should: [ronda firstEncounterWinner] 
		raise: Error
		withMessageText: [ronda thereWasNoWinnerInTheFirstEncounter]! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:20:47' prior: 50861269!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self should: [ronda firstEncounterWinner] 
		raise: Error
		withMessageText: [ronda thereWasNoWinnerInTheFirstEncounter]! !
!RondaDeTruco methodsFor: 'error descriptions' stamp: 'ijgt 7/5/2021 20:21:43'!
thereWasNoWinnerInTheFirstEncounterErrorDescription

	^ 'There was no winner in the first encounter.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:21:55' prior: 50861291!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self should: [ronda firstEncounterWinner] 
		raise: Error
		withMessageText: [ronda thereWasNoWinnerInTheFirstEncounterErrorDescription]! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:26:32' prior: 50861116!
firstEncounterWinner
	
	firstWinner ifNil: [self error: self thereWasNoWinnerInTheFirstEncounterErrorDescription ].
	^ firstWinner! !

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:26:38'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:26:38'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:27:15'!
FAILURE!
!Enfrentamiento methodsFor: 'decide' stamp: 'ijgt 7/5/2021 20:35:30' prior: 50861259!
enfrentar

	|cartaFirst cartaSecond|
	
	cartaFirst := primero useCard.
	cartaSecond := segundo useCard.
	(cartaFirst mataA: cartaSecond) ifTrue: [^ primero].
	(cartaSecond mataA: cartaFirst) ifTrue: [^ segundo].
	^ #Empate! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:38:03' prior: 50861136!
enfrentar
	
	|resultado|
	
	resultado := (Enfrentamiento with: mano vs: pie) enfrentar.
	
	firstWinner := resultado! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:39:33' prior: 50861363!
enfrentar
	
	firstWinner := (Enfrentamiento with: mano vs: pie) enfrentar.! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:39:57'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstWinner firstResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:39:51' prior: 50861370!
enfrentar
	
	firstResult := (Enfrentamiento with: mano vs: pie) enfrentar.! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:40:27' prior: 50861336!
firstEncounterWinner
	
	^ firstResult! !

Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:40:38'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:41:04'!
firstResult
	
	^ firstResult! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:41:04' prior: 50861183!
test05_enfrentamientoGanaPie

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstResult equals: jugadorPie! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:41:04' prior: 50861316!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self should: [ronda firstResult] 
		raise: Error
		withMessageText: [ronda thereWasNoWinnerInTheFirstEncounterErrorDescription]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:41:04' prior: 50861086!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie |
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstResult equals: jugadorMano.! !

!methodRemoval: RondaDeTruco #firstEncounterWinner stamp: 'ijgt 7/5/2021 20:41:04'!
firstEncounterWinner
	
	^ firstResult!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 20:41:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 20:41:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 20:41:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:41:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:41:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:41:08'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:41:08'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:41:36' prior: 50861430!
test06_enfrentamientoEmparedado

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstResult equals: #Empate! !

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:41:37'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:46:01'!
test07_secondRoundWinForPreviousWinnerEndsGame

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.
	self should: [ronda enfrentar] 
		raise: Error 
		withMessageText: [ronda cantContinueAFinishedGameErrorDescription]! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:46:33'!
test07_secondRound

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.
	self should: [ronda enfrentar] 
		raise: Error 
		withMessageText: [ronda cantContinueAFinishedGameErrorDescription]! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:46:43' prior: 50861553!
test07_secondRound

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:47:35' prior: 50861574!
test07_secondRound

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 20:47:41' prior: 50861532!
test07_secondRoundWinForPreviousWinnerEndsGame

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.
	self should: [ronda enfrentar] 
		raise: Error 
		withMessageText: [ronda cantContinueAFinishedGameErrorDescription]! !

!testRun: #RondaDeTrucoTest #test01_playersStartWithThreeCards stamp: 'ijgt 7/5/2021 20:50:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test02_playersCanDrawCardsFromMazo stamp: 'ijgt 7/5/2021 20:50:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 20:50:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 20:50:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 20:50:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 20:50:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test07_secondRound stamp: 'ijgt 7/5/2021 20:50:40'!
ERROR!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 20:50:40'!
ERROR!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:51:14'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstResult secondResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'results' stamp: 'ijgt 7/5/2021 20:51:12'!
secondResult

	^ secondResult! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 20:51:49' prior: 50861384!
enfrentar
	
	(Enfrentamiento for: self with: mano vs: pie) enfrentar.! !
!Enfrentamiento class methodsFor: 'creation' stamp: 'ijgt 7/5/2021 20:52:30'!
for: aRound with: primerJugador vs: segundoJugador

	^ self new initializeWith: primerJugador vs: segundoJugador! !

!methodRemoval: Enfrentamiento class #with:vs: stamp: 'ijgt 7/5/2021 20:52:30'!
with: primerJugador vs: segundoJugador

	^ self new initializeWith: primerJugador vs: segundoJugador!
!Enfrentamiento methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 20:53:28'!
initializeFor: aRound initializeWith: primerJugador vs: segundoJugador

	primero := primerJugador.
	segundo := segundoJugador.! !
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:53:29' prior: 50861673!
for: aRound with: primerJugador vs: segundoJugador

	^ self new initializeFor: aRound initializeWith: primerJugador vs: segundoJugador! !

!methodRemoval: Enfrentamiento #initializeWith:vs: stamp: 'ijgt 7/5/2021 20:53:29'!
initializeWith: primerJugador vs: segundoJugador

	primero := primerJugador.
	segundo := segundoJugador.!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:53:55'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primero segundo round'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Enfrentamiento methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 20:53:52' prior: 50861685!
initializeFor: aRound initializeWith: primerJugador vs: segundoJugador

	primero := primerJugador.
	segundo := segundoJugador.
	round := aRound.! !
!Enfrentamiento methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 20:54:12'!
initializeFor: aRound with: primerJugador vs: segundoJugador

	primero := primerJugador.
	segundo := segundoJugador.
	round := aRound.! !
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 20:54:12' prior: 50861693!
for: aRound with: primerJugador vs: segundoJugador

	^ self new initializeFor: aRound with: primerJugador vs: segundoJugador! !

!methodRemoval: Enfrentamiento #initializeFor:initializeWith:vs: stamp: 'ijgt 7/5/2021 20:54:12'!
initializeFor: aRound initializeWith: primerJugador vs: segundoJugador

	primero := primerJugador.
	segundo := segundoJugador.
	round := aRound.!

Object subclass: #NumberOfRound
	instanceVariableNames: 'round'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #NumberOfRound category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:56:20'!
Object subclass: #NumberOfRound
	instanceVariableNames: 'round'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

NumberOfRound subclass: #First
	instanceVariableNames: 'round'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

NumberOfRound subclass: #First
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #First category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:56:40'!
NumberOfRound subclass: #First
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

NumberOfRound subclass: #Second
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Second category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:56:45'!
NumberOfRound subclass: #Second
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

NumberOfRound subclass: #Third
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Third category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 20:56:52'!
NumberOfRound subclass: #Third
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!NumberOfRound class methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 20:58:24'!
for: aRound

	^ self new initializeFor: aRound! !
!NumberOfRound methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 20:59:24'!
intitalizeFor: aRound

	round := aRound! !

Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstResult secondResult state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 21:00:57'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mazo mano pie firstResult secondResult state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Enfrentamiento methodsFor: 'decide' stamp: 'ijgt 7/5/2021 21:14:40' prior: 50861353!
enfrentar

	|cartaFirst cartaSecond|
	
	cartaFirst := primero useCard.
	cartaSecond := segundo useCard.
	(cartaFirst mataA: cartaSecond) ifTrue: [^ round registerWinFor: primero].
	(cartaSecond mataA: cartaFirst) ifTrue: [^ round registerWinFor: segundo].
	round registerTie.! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 21:16:30'!
registerWinFor: aPlayer

	state registerWinFor: aPlayer.! !
!RondaDeTruco methodsFor: 'encounters' stamp: 'ijgt 7/5/2021 21:22:55'!
registerTie

	state registerTie.! !

!classRenamed: #Third as: #Final stamp: 'ijgt 7/5/2021 21:23:07'!
Smalltalk renameClassNamed: #Third as: #Final!
!NumberOfRound methodsFor: 'nil' stamp: 'ijgt 7/5/2021 21:23:25'!
registerTie

	self subclassResponsibility! !
!NumberOfRound methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:23:38'!
registerWinFor: aPlayer

	self subclassResponsibility! !
!First methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 21:24:32' overrides: 50861843!
registerTie

	round firstRoundWasTied! !
!First methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:25:03' overrides: 50861847!
registerWinFor: aPlayer

	round firstRoundWasWonBy: aPlayer! !
!Second methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 21:25:28' overrides: 50861847!
registerWinFor: aPlayer

	round secondRoundWasWonBy: aPlayer! !
!Final methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 21:25:43' overrides: 50861847!
registerWinFor: aPlayer

	round thirdRoundWasWonBy: aPlayer! !
!Final methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:25:59' overrides: 50861843!
registerTie

	round thirdRoundWasTied! !
!Second methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:26:19' overrides: 50861843!
registerTie

	round secondRoundWasTied! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:29:48'!
firstRoundWasTied

	state := Final for: self.! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:30:28'!
secondRoundWasTied

	self error: self cantTieSecondRoundErrorDescription! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:30:40'!
thirdRoundWasTied

	self error: self cantTieThirdRoundErrorDescription! !
!RondaDeTruco methodsFor: 'error descriptions' stamp: 'ijgt 7/5/2021 21:30:57'!
cantTieThirdRoundErrorDescription

	^ 'Third round cant be tied.'! !
!RondaDeTruco methodsFor: 'error descriptions' stamp: 'ijgt 7/5/2021 21:31:05'!
cantTieSecondRoundErrorDescription

	^ 'Second round cant be tied.'! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:31:53'!
firstRoundWasWonBy: aPlayer

	state := Second for: self.! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:32:22' prior: 50861906!
firstRoundWasWonBy: aPlayer

	state := Second for: self.
	firstResult := aPlayer! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:37:58'!
secondRoundWasWonBy: aPlayer

	state := Second for: self.
	secondResult := aPlayer.
	(secondResult = firstResult) ifTrue: [self finishGame]! !
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:38:34'!
thirdRoundWasWonBy: aPlayer

	self finishGame! !

!classDefinition: #Ended category: 'ISW1-2021-1C-2doParcial' stamp: 'ijgt 7/5/2021 21:40:01'!
NumberOfRound subclass: #Ended
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'finish' stamp: 'ijgt 7/5/2021 21:39:50'!
finishGame

	state := Ended new.! !
!Ended methodsFor: 'no messages' stamp: 'ijgt 7/5/2021 21:40:36' overrides: 50861843!
registerTie

	round gameHasEnded! !
!Ended methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:40:51' overrides: 50861847!
registerWinFor: aPlayer

	round gameHasEnded! !
!RondaDeTruco methodsFor: 'finish' stamp: 'ijgt 7/5/2021 21:41:37'!
gameHasEnded

	self error: self cantHaveAnEncounterOnFinishedGameErrorDescription! !
!RondaDeTruco methodsFor: 'error descriptions' stamp: 'ijgt 7/5/2021 21:42:04'!
cantHaveAnEncounterOnFinishedGameErrorDescription

	^ 'Cant have an encounter in a finished game.'! !

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 21:42:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:42:23'!
ERROR!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:42:23'!
ERROR!
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 21:43:06' prior: 50860062!
initializeWith: unMazo for: jugadorMano vs: jugadorPie

	mazo := unMazo.
	mano := jugadorMano.
	pie := jugadorPie.
	state := First new.! !
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 21:43:13' prior: 50860459!
initializeWith: unMazo

	mazo := unMazo.
	mano := Mano playingIn: self.
	pie := Pie playingIn: self.
	state := First new.
	self dealCards.! !

!testRun: #RondaDeTrucoTest #test03_CanNotHaveRepeatedCardsInSameRound stamp: 'ijgt 7/5/2021 21:43:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:43:18'!
ERROR!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:43:18'!
ERROR!
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 21:43:44' prior: 50861980!
initializeWith: unMazo

	mazo := unMazo.
	mano := Mano playingIn: self.
	pie := Pie playingIn: self.
	state := First for: self.
	self dealCards.! !
!RondaDeTruco methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 21:43:51' prior: 50861972!
initializeWith: unMazo for: jugadorMano vs: jugadorPie

	mazo := unMazo.
	mano := jugadorMano.
	pie := jugadorPie.
	state := First for: self.! !

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:43:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:43:55'!
ERROR!
!NumberOfRound methodsFor: 'initialize' stamp: 'ijgt 7/5/2021 21:44:30' prior: 50861801!
intitalizeFor: aRound

	self subclassResponsibility ! !
!Ended methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:44:35' overrides: 50862019!
intitalizeFor: aRound

	round := aRound! !
!Final methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:44:41' overrides: 50862019!
intitalizeFor: aRound

	round := aRound! !
!First methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:44:47' overrides: 50862019!
intitalizeFor: aRound

	round := aRound! !
!Second methodsFor: 'as yet unclassified' stamp: 'ijgt 7/5/2021 21:44:52' overrides: 50862019!
intitalizeFor: aRound

	round := aRound! !

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:44:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:44:55'!
ERROR!
!NumberOfRound class methodsFor: 'creation' stamp: 'ijgt 7/5/2021 21:45:51' prior: 50861797!
for: aRound

	^ self new intitalizeFor: aRound! !

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:46:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:46:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:46:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:46:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 21:46:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 21:46:38'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 21:46:38'!
FAILURE!

!testRun: #RondaDeTrucoTest #test07_secondRound stamp: 'ijgt 7/5/2021 21:46:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:46:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:46:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:47:53'!
ERROR!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:47:53'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 21:48:10' prior: 50861608!
test07_secondRoundWinForPreviousWinnerEndsGame

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.
	self should: [ronda enfrentar] 
		raise: Error 
		withMessageText: [ronda cantHaveAnEncounterOnFinishedGameErrorDescription]! !

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:48:12'!
FAILURE!

!testRun: #RondaDeTrucoTest #test07_secondRound stamp: 'ijgt 7/5/2021 21:49:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:49:15'!
FAILURE!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:49:15'!
FAILURE!
!RondaDeTruco methodsFor: 'finish' stamp: 'ijgt 7/5/2021 21:50:16' prior: 50861937!
finishGame

	state := Ended for: self.! !

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:50:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:50:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test05_enfrentamientoGanaPie stamp: 'ijgt 7/5/2021 21:50:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 21:50:30'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 21:50:30'!
FAILURE!
!RondaDeTruco methodsFor: 'encounters - private' stamp: 'ijgt 7/5/2021 21:51:35' prior: 50861881!
firstRoundWasTied

	state := Final for: self.
	firstResult := #Empate.! !

!testRun: #RondaDeTrucoTest #test06_enfrentamientoEmparedado stamp: 'ijgt 7/5/2021 21:51:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test07_secondRound stamp: 'ijgt 7/5/2021 21:51:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:51:45'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 21:52:06'!
test07_secondRoundCanBeWon

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.! !

!methodRemoval: RondaDeTrucoTest #test07_secondRound stamp: 'ijgt 7/5/2021 21:52:06'!
test07_secondRound

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 21:52:35'!
test04_encounterCanBeWon

	| ronda jugadorMano jugadorPie |
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstResult equals: jugadorMano.! !

!methodRemoval: RondaDeTrucoTest #test04_enfrentamiento stamp: 'ijgt 7/5/2021 21:52:35'!
test04_enfrentamiento

	| ronda jugadorMano jugadorPie |
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	
	self assert: ronda firstResult equals: jugadorMano.!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ijgt 7/5/2021 21:52:54'!
test08_secondRoundWinForPreviousWinnerEndsGame

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.
	self should: [ronda enfrentar] 
		raise: Error 
		withMessageText: [ronda cantHaveAnEncounterOnFinishedGameErrorDescription]! !

!methodRemoval: RondaDeTrucoTest #test07_secondRoundWinForPreviousWinnerEndsGame stamp: 'ijgt 7/5/2021 21:52:54'!
test07_secondRoundWinForPreviousWinnerEndsGame

	| ronda jugadorMano jugadorPie |
	jugadorPie := Pie withCards: {CartaDeTruco bastoCon: 4. CartaDeTruco bastoCon: 7. CartaDeTruco bastoCon: 5.}.
	jugadorMano := Mano withCards: {CartaDeTruco anchoDeEspada. CartaDeTruco anchoDeBasto. CartaDeTruco sieteDeEspada.}.
	ronda := RondaDeTruco with: self for: jugadorMano vs: jugadorPie.
	
	ronda enfrentar.
	ronda enfrentar.
	
	self assert: ronda secondResult equals: jugadorMano.
	self should: [ronda enfrentar] 
		raise: Error 
		withMessageText: [ronda cantHaveAnEncounterOnFinishedGameErrorDescription]!