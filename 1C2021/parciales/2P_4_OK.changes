

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (5 July 2021 16:14:31) as C:\Users\Gabriel\Documents\Facu\Inge1\Imagen-parcial-2\windows64\CuisUniversity-4532.image!


----QUIT----(5 July 2021 16:14:45) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (5 July 2021 16:14:49) as C:\Users\Gabriel\Documents\Facu\Inge1\Imagen-parcial-2\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\Gabriel\Documents\Facu\Inge1\Imagen-parcial-2\windows64\Packages\TerseGuide.pck.st----!

----QUIT----(5 July 2021 16:14:59) CuisUniversity-4532.image priorSource: 16885925!

----STARTUP---- (5 July 2021 16:32:19) as C:\Users\Gabriel\Documents\Facu\Inge1\Imagen-parcial-2\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\Gabriel\Downloads\ISW1-2021-1C-2doParcial.st----!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 17:33:08'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'GDH 7/5/2021 17:33:18'!
test01! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 17:36:21'!
test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError
	
	! !

!methodRemoval: RondaDeTrucoTest #test01 stamp: 'GDH 7/5/2021 17:36:24'!
test01!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 17:44:49'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 17:45:04' prior: 50862808!
test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError
	
	| cartasDeMano |
	
	cartasDeMano := OrderedCollection with: CartaDeTruco anchoDeBasto . .
	
	self should: [ RondaDeTruco conCartasDeMano: cartasDeMano yCartasDeSegundo: self defaultCartasSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 17:45:16' prior: 50862824!
test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError
	
	| cartasDeMano |
	
	cartasDeMano := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDeMano: cartasDeMano yCartasDeSegundo: self defaultCartasSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 17:45:35'!
ERROR!
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 17:46:00'!
defaultCartasSegundo
	self shouldBeImplemented.! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 17:47:09' prior: 50862858!
defaultCartasSegundo

	^OrderedCollection with: (CartaDeTruco oroCon: 3) 
					  with: (CartaDeTruco copaCon: 4)
					  with: (CartaDeTruco anchoDeBasto )! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 17:47:12'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 17:47:21'!
conCartasDeMano: anOrderedCollection yCartasDeSegundo: anOrderedCollection2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeConCartasDeMano: anOrderedCollection yCartasDeSegundo: anOrderedCollection2 ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 17:49:00' prior: 50862875!
conCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo 
	
	^self new initializeConCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo ! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 17:49:06'!
ERROR!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 17:49:25'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 17:49:26'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 17:49:26'!
initializeConCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo 
	self shouldBeImplemented.
	unaColeccionDeCartasDeMano_CHANGE_ME := unaColeccionDeCartasDeMano.
	unaColeccionDeCartasDelSegundo_CHANGE_ME := unaColeccionDeCartasDelSegundo.! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 17:54:08'!
conCartasDelPrimero: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo 
	
	self assertManosSonDeTresCartasCon: unaManoDeCartasDelPrimero y: unaManoDeCartasDelSegundo.
	
	"^self new initializeConCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo "! !

!methodRemoval: RondaDeTruco class #conCartasDeMano:yCartasDeSegundo: stamp: 'GDH 7/5/2021 17:54:12'!
conCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo 
	
	^self new initializeConCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 17:55:13' prior: 50862839!
test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultCartasSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 17:55:26'!
defaultManoSegundo

	^OrderedCollection with: (CartaDeTruco oroCon: 3) 
					  with: (CartaDeTruco copaCon: 4)
					  with: (CartaDeTruco anchoDeBasto )! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 17:55:26' prior: 50862955!
test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !

!methodRemoval: RondaDeTrucoTest #defaultCartasSegundo stamp: 'GDH 7/5/2021 17:55:26'!
defaultCartasSegundo

	^OrderedCollection with: (CartaDeTruco oroCon: 3) 
					  with: (CartaDeTruco copaCon: 4)
					  with: (CartaDeTruco anchoDeBasto )!

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 17:55:52'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 17:55:52'!
ERROR!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 17:56:05'!
assertManosSonDeTresCartasCon: anOrderedCollection y: anOrderedCollection2 
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:00:10' prior: 50863009!
assertManosSonDeTresCartasCon: unaManoDelPrimero y: unaManoDelSegundo

	unaManoDelPrimero size < 3 ifTrue: [ ^self error: self mensajeDeErrorDeTamañoDeMano ].
	
	! !
!RondaDeTruco class methodsFor: 'error messages' stamp: 'GDH 7/5/2021 18:00:38'!
mensajeDeErrorParaTamañoDeMano
	
	^''! !
!RondaDeTruco class methodsFor: 'error messages' stamp: 'GDH 7/5/2021 18:00:49' prior: 50863024!
mensajeDeErrorParaTamañoDeMano
	
	^'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTruco class methodsFor: 'error messages' stamp: 'GDH 7/5/2021 18:01:06'!
mensajeDeErrorTamañoDeMano
	
	^'Las cartas de les jugadores deben tener 3 cartas.'! !

!methodRemoval: RondaDeTruco class #mensajeDeErrorParaTamañoDeMano stamp: 'GDH 7/5/2021 18:01:06'!
mensajeDeErrorParaTamañoDeMano
	
	^'Las cartas de les jugadores deben tener 3 cartas.'!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:01:15' prior: 50863016!
assertManosSonDeTresCartasCon: unaManoDelPrimero y: unaManoDelSegundo

	unaManoDelPrimero size < 3 ifTrue: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	
	! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:01:17'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:02:34'!
test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError
	
	| manoDelSegundo |
	
	manoDelSegundo := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: manoDelSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:02:37'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 18:02:49'!
defaultManoPrimero
	self shouldBeImplemented.! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 18:03:32' prior: 50863079!
defaultManoPrimero
	
	^OrderedCollection with: (CartaDeTruco anchoDeEspada ) 
					  with: (CartaDeTruco sieteDeEspada )
					  with: (CartaDeTruco oroCon: 4)! !

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:03:43'!
FAILURE!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:03:56' prior: 50863047!
assertManosSonDeTresCartasCon: unaManoDelPrimero y: unaManoDelSegundo

	unaManoDelPrimero size < 3 ifTrue: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	unaManoDelSegundo size < 3 ifTrue: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	
	! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:03:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:03:57'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:04:33'!
test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !

!methodRemoval: RondaDeTrucoTest #test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:04:33'!
test01CrearRondaConJugadorManoConMenosDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:05:41'!
test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco sieteDeEspada 
									with: CartaDeTruco sieteDeOro 
									with: (CartaDeTruco espadaCon: 4).
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:05:44'!
FAILURE!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:05:55' prior: 50863097!
assertManosSonDeTresCartasCon: unaManoDelPrimero y: unaManoDelSegundo

	unaManoDelPrimero size = 3 ifTrue: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	unaManoDelSegundo size < 3 ifTrue: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	
	! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:05:59'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:05:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:05:59'!
FAILURE!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:06:19' prior: 50863171!
assertManosSonDeTresCartasCon: unaManoDelPrimero y: unaManoDelSegundo

	unaManoDelPrimero size = 3 ifFalse: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	unaManoDelSegundo size < 3 ifTrue: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	
	! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:06:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:06:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:06:21'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:06:53'!
test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError
	
	| manoDelSegundo |
	
	manoDelSegundo := OrderedCollection with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: manoDelSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:07:28' prior: 50863220!
test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError
	
	| manoDelSegundo |
	
	manoDelSegundo := OrderedCollection with: CartaDeTruco anchoDeBasto 
									with: (CartaDeTruco espadaCon: 5)
									with: CartaDeTruco sieteDeOro 
									with: (CartaDeTruco espadaCon: 4).
	
	self should: [ RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: manoDelSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:07:31'!
FAILURE!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:07:44' prior: 50863196!
assertManosSonDeTresCartasCon: unaManoDelPrimero y: unaManoDelSegundo

	unaManoDelPrimero size = 3 ifFalse: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	unaManoDelSegundo size = 3 ifFalse: [ ^self error: self mensajeDeErrorTamañoDeMano ].
	
	! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:07:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:07:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:07:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:07:52'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:18:39'!
test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError

	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco anchoDeBasto 
									with: CartaDeTruco sieteDeEspada.
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'! !

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError stamp: 'GDH 7/5/2021 18:18:42'!
FAILURE!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 18:19:24' prior: 50862932!
conCartasDelPrimero: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo 
	
	self assertManosSonDeTresCartasCon: unaManoDeCartasDelPrimero y: unaManoDeCartasDelSegundo.
	self assertManosNoContienenCartasRepetidas: unaManoDeCartasDelPrimero y: unaManoDeCartasDelSegundo.
	
	"^self new initializeConCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo "! !

Set with: 2 with: 2!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:25:21'!
test05CrearRondaConCartasRepetidasEnManosDebeTirarError

	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco anchoDeBasto 
									with: CartaDeTruco sieteDeEspada.
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'! !

!methodRemoval: RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError stamp: 'GDH 7/5/2021 18:25:21'!
test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError

	| manoDelPrimero |
	
	manoDelPrimero := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco anchoDeBasto 
									with: CartaDeTruco sieteDeEspada.
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:25:52'!
test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError

	| mano |
	
	mano := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco sieteDeEspada 
									with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: mano yCartasDeSegundo: mano ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:26:09' prior: 50863326!
test05CrearRondaConCartasRepetidasEnManosDebeTirarError

	| mano |
	
	mano := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco sieteDeEspada 
									with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: mano yCartasDeSegundo: mano ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'! !

!methodRemoval: RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError stamp: 'GDH 7/5/2021 18:26:13'!
test05CrearRondaConCartasRepetidasEnManoDelPrimerJugadorDebeTirarError

	| mano |
	
	mano := OrderedCollection with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco sieteDeEspada 
									with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: mano yCartasDeSegundo: mano ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 18:26:54' prior: 50863310!
conCartasDelPrimero: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo 
	
	self assertManosSonDeTresCartasCon: unaManoDeCartasDelPrimero y: unaManoDeCartasDelSegundo.
	self assertMano: unaManoDeCartasDelPrimero esDisjuntaCon: unaManoDeCartasDelSegundo.
	
	"^self new initializeConCartasDeMano: unaColeccionDeCartasDeMano yCartasDeSegundo: unaColeccionDeCartasDelSegundo "! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:26:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:26:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:26:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:26:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 18:26:59'!
ERROR!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 18:26:59'!
ERROR!
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:27:23'!
assertMano: anOrderedCollection esDisjuntaCon: anOrderedCollection2 
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'assertions' stamp: 'GDH 7/5/2021 18:31:24' prior: 50863453!
assertMano: unaManoDelPrimero esDisjuntaCon: unaManoDelSegundo 
	
	( unaManoDelPrimero union: unaManoDelSegundo ) size = 6 ifFalse: [ ^self error: self mensajeDeErrorManosNoDisjuntas ].! !
!RondaDeTruco class methodsFor: 'error messages' stamp: 'GDH 7/5/2021 18:31:43'!
mensajeDeErrorManosNoDisjuntas
	
	^''! !
!RondaDeTruco class methodsFor: 'error messages' stamp: 'GDH 7/5/2021 18:31:57' prior: 50863468!
mensajeDeErrorManosNoDisjuntas
	
	^'Las manos no deben tener cartas repetidas.'! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:31:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:31:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:31:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:31:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 18:31:58'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:32:59' prior: 50863116!
test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := Set with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:33:03' prior: 50863059!
test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError
	
	| manoDelSegundo |
	
	manoDelSegundo := Set with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: manoDelSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:33:06' prior: 50863147!
test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := Set with: CartaDeTruco anchoDeEspada 
									with: CartaDeTruco sieteDeEspada 
									with: CartaDeTruco sieteDeOro 
									with: (CartaDeTruco espadaCon: 4).
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:33:20' prior: 50863531!
test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError
	
	| manoDelPrimero |
	
	manoDelPrimero := Set with: CartaDeTruco anchoDeEspada 
					        with: CartaDeTruco sieteDeEspada 
						with: CartaDeTruco sieteDeOro 
						with: (CartaDeTruco espadaCon: 4).
	
	self should: [ RondaDeTruco conCartasDelPrimero: manoDelPrimero yCartasDeSegundo: self defaultManoSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:33:36' prior: 50863235!
test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError
	
	| manoDelSegundo |
	
	manoDelSegundo := Set with: CartaDeTruco anchoDeBasto 
						with: (CartaDeTruco espadaCon: 5)
						with: CartaDeTruco sieteDeOro 
						with: (CartaDeTruco espadaCon: 4).
	
	self should: [ RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: manoDelSegundo ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las cartas de les jugadores deben tener 3 cartas.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:33:48' prior: 50863378!
test05CrearRondaConCartasRepetidasEnManosDebeTirarError

	| mano |
	
	mano := Set with: CartaDeTruco anchoDeEspada 
				with: CartaDeTruco sieteDeEspada 
				with: CartaDeTruco anchoDeBasto .
	
	self should: [ RondaDeTruco conCartasDelPrimero: mano yCartasDeSegundo: mano ]
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Las manos no deben tener cartas repetidas.'! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 18:33:57' prior: 50863084!
defaultManoPrimero
	
	^Set with: (CartaDeTruco anchoDeEspada ) 
		with: (CartaDeTruco sieteDeEspada )
		with: (CartaDeTruco oroCon: 4)! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 18:34:04' prior: 50862970!
defaultManoSegundo

	^Set with: (CartaDeTruco oroCon: 3) 
		with: (CartaDeTruco copaCon: 4)
		with: (CartaDeTruco anchoDeBasto )! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:34:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:34:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:34:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 18:34:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 18:34:06'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:35:37'!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda |! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 18:36:03'!
rondaDeTrucoDefault

	^RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: self defaultManoSegundo ! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 18:36:14' prior: 50863641!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda |
	
	ronda := self rondaDeTrucoDefault ! !
!RondaDeTrucoTest methodsFor: 'test instance creation' stamp: 'GDH 7/5/2021 18:36:28'!
defaultRondaDeTruco

	^RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: self defaultManoSegundo ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 18:36:28' prior: 50863654!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda |
	
	ronda := self defaultRondaDeTruco ! !

!methodRemoval: RondaDeTrucoTest #rondaDeTrucoDefault stamp: 'GDH 7/5/2021 18:36:28'!
rondaDeTrucoDefault

	^RondaDeTruco conCartasDelPrimero: self defaultManoPrimero yCartasDeSegundo: self defaultManoSegundo !

(Set with: 1 with: 2) keyAt: 1!

(Set with: 1 with: 2) keyAt: 0 !

(Set with: 1 with: 2) keyAt: 2 !

(Set with: 1 with: 2)!

set := (Set with: 1 with: 2)!

set!

set keyAt: 1!

set keyAt: '1'!

set keyAt: 1!

set scanFor: 1!

set scanFor: 2!

set keyAt: 5!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:10:31' prior: 50863669!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda manoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := manoDelPrimero remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: manoDelPrimero equals: manoDelPrimeroSinAnchoDeEspada .! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:10:36'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 19:11:21' prior: 50863412!
conCartasDelPrimero: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo 
	
	self assertManosSonDeTresCartasCon: unaManoDeCartasDelPrimero y: unaManoDeCartasDelSegundo.
	self assertMano: unaManoDeCartasDelPrimero esDisjuntaCon: unaManoDeCartasDelSegundo.
	
	self new initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 19:11:56'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME manoDelPrimero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 19:11:58'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME manoDelPrimero manoDelSegundo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 19:11:55' prior: 50862920!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo.! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:12:02'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 19:12:30' prior: 50863714!
conCartasDelPrimero: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo 
	
	self assertManosSonDeTresCartasCon: unaManoDeCartasDelPrimero y: unaManoDeCartasDelSegundo.
	self assertMano: unaManoDeCartasDelPrimero esDisjuntaCon: unaManoDeCartasDelSegundo.
	
	^self new initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:12:33'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:12:33'!
ERROR!
!RondaDeTruco methodsFor: 'manos' stamp: 'GDH 7/5/2021 19:12:46'!
manoDelPrimerJugador
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'manos' stamp: 'GDH 7/5/2021 19:12:53' prior: 50863788!
manoDelPrimerJugador

	^manoDelPrimero ! !
!RondaDeTruco methodsFor: 'manos' stamp: 'GDH 7/5/2021 19:14:06'!
mirarManoDelPrimerJugador

	^manoDelPrimero ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 19:14:06' prior: 50863691!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda mirarManoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := manoDelPrimero remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: manoDelPrimero equals: manoDelPrimeroSinAnchoDeEspada .! !

!methodRemoval: RondaDeTruco #manoDelPrimerJugador stamp: 'GDH 7/5/2021 19:14:06'!
manoDelPrimerJugador

	^manoDelPrimero !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:14:43' prior: 50863802!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda mirarManoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := manoDelPrimero copy remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: manoDelPrimero equals: manoDelPrimeroSinAnchoDeEspada .! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:14:44'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:14:57'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:14:57'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:15:16'!
primerJugadorJuega: aCartaDeTruco 
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:15:54' prior: 50863878!
primerJugadorJuega: unaCartaDeTruco 

	manoDelPrimero remove: unaCartaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:15:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:15:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:15:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:15:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:15:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:15:58'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:15:58'!
FAILURE!
!RondaDeTruco methodsFor: 'manos' stamp: 'GDH 7/5/2021 19:17:04' prior: 50863797!
mirarManoDelPrimerJugador

	^manoDelPrimero copy! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:17:16' prior: 50863825!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda mirarManoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := ronda mirarManoDelPrimerJugador remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: manoDelPrimero equals: manoDelPrimeroSinAnchoDeEspada .! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:17:17'!
FAILURE!

ronda mirarManoDelPrimerJugador!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:18:14' prior: 50863924!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda mirarManoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := manoDelPrimero .
	manoDelPrimeroSinAnchoDeEspada remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: manoDelPrimero equals: manoDelPrimeroSinAnchoDeEspada .! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:18:15'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:18:29'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:18:51'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:19:11' prior: 50863949!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda mirarManoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := ronda mirarManoDelPrimerJugador .
	manoDelPrimeroSinAnchoDeEspada remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: manoDelPrimero equals: manoDelPrimeroSinAnchoDeEspada .! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:19:12'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:19:40' prior: 50863982!
test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelPrimero := ronda mirarManoDelPrimerJugador.
	
	manoDelPrimeroSinAnchoDeEspada := ronda mirarManoDelPrimerJugador .
	manoDelPrimeroSinAnchoDeEspada remove: CartaDeTruco anchoDeEspada .
	
	self assert: manoDelPrimero equals: self defaultManoPrimero .
	
	ronda primerJugadorJuega: ( CartaDeTruco anchoDeEspada ).
	
	self assert: ronda mirarManoDelPrimerJugador equals: manoDelPrimeroSinAnchoDeEspada .! !

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:19:42'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:21:27'!
test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	self should: [ ronda primerJugadorJuega: ( CartaDeTruco anchoDeBasto ). ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'! !

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:21:33'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:22:15' prior: 50863883!
primerJugadorJuega: unaCartaDeTruco 

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mesajeDeErrorJugarCartaQueJugadorNoTiene ].! !
!RondaDeTruco methodsFor: 'error messages' stamp: 'GDH 7/5/2021 19:22:43'!
mensajeDeErrorJugarCartaQueJugadorNoTiene
	
	^'No se puede jugar una carta que el jugador no tiene.'! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:22:58' prior: 50864077!
primerJugadorJuega: unaCartaDeTruco 

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:22:59'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:23:48'!
test08JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError

	| ronda manoDelPrimero manoDelPrimeroSinAnchoDeEspada |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada.
	
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:23:52' prior: 50864129!
test08JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada.
	
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:24:00' prior: 50864058!
test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	self should: [ ronda primerJugadorJuega: ( CartaDeTruco anchoDeBasto ). ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:24:03' prior: 50864160!
test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	self should: [ ronda primerJugadorJuega: CartaDeTruco anchoDeBasto. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'! !

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:24:08'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:24:29'!
segundoJugadorJuega: unaCartaDeTruco 

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:24:36' prior: 50864190!
segundoJugadorJuega: unaCartaDeTruco 

	manoDelSegundo remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:24:38'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:24:43'!
test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada.
	
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'! !

!methodRemoval: RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:24:43'!
test08JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada.
	
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'No se puede jugar una carta que el jugador no tiene.'!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:25:53'!
test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelSegundo manoDelSegundoSinAnchoDeBasto |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelSegundo := ronda mirarManoDelSegundoJugador.
	
	manoDelSegundoSinAnchoDeBasto := ronda mirarManoDelSegundoJugador .
	manoDelSegundoSinAnchoDeBasto remove: CartaDeTruco anchoDeBasto .
	
	self assert: manoDelSegundo equals: self defaultManoSegundo .
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeBasto.
	
	self assert: ronda mirarManoDelSegundoJugador equals: manoDelSegundoSinAnchoDeBasto .! !

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:25:56'!
ERROR!
!RondaDeTruco methodsFor: 'manos' stamp: 'GDH 7/5/2021 19:26:12'!
mirarManoDelSegundoJugador

	^manoDelPrimero copy! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:13'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:13'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:24'!
ERROR!
!RondaDeTruco methodsFor: 'manos' stamp: 'GDH 7/5/2021 19:26:47' prior: 50864295!
mirarManoDelSegundoJugador

	^manoDelSegundo copy! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:26:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:26:55'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:27:03' prior: 50864270!
test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelSegundo manoDelSegundoSinAnchoDeBasto |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelSegundo := ronda mirarManoDelSegundoJugador.
	
	manoDelSegundoSinAnchoDeBasto := ronda mirarManoDelSegundoJugador .
	manoDelSegundoSinAnchoDeBasto remove: CartaDeTruco anchoDeBasto .
	
	self assert: manoDelSegundo equals: self defaultManoSegundo .
	
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto.
	
	self assert: ronda mirarManoDelSegundoJugador equals: manoDelSegundoSinAnchoDeBasto .! !

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:27:05'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:34:30'!
test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto . ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'La primera mano empieza jugando el primer jugador.'! !

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 19:34:31'!
FAILURE!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 19:36:05'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME manoDelPrimero manoDelSegundo siguienteJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 19:36:04' prior: 50863751!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo.
	
	siguienteJugador := #Primero.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:37:05' prior: 50864091!
primerJugadorJuega: unaCartaDeTruco 
	
	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:38:04' prior: 50864198!
segundoJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Primero ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelSegundo remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:38:19' prior: 50864589!
test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError

	| ronda |
	
	ronda := self defaultRondaDeTruco.
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto . ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !
!RondaDeTruco methodsFor: 'error messages' stamp: 'GDH 7/5/2021 19:38:52'!
mensajeDeErrorDebeJugarOtroJugador
	
	^'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:38:53'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:38:53'!
FAILURE!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 19:38:53'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:39:52' prior: 50864525!
test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano

	| ronda manoDelSegundo manoDelSegundoSinAnchoDeBasto |
	
	ronda := self defaultRondaDeTruco.
	
	manoDelSegundo := ronda mirarManoDelSegundoJugador.
	
	manoDelSegundoSinAnchoDeBasto := ronda mirarManoDelSegundoJugador .
	manoDelSegundoSinAnchoDeBasto remove: CartaDeTruco anchoDeBasto .
	
	self assert: manoDelSegundo equals: self defaultManoSegundo .
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto.
	
	self assert: ronda mirarManoDelSegundoJugador equals: manoDelSegundoSinAnchoDeBasto .! !

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:40:00'!
FAILURE!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:40:05'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:40:05'!
FAILURE!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 19:40:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:40:08'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:40:40' prior: 50864628!
primerJugadorJuega: unaCartaDeTruco 

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	siguienteJugador := #Segundo.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 19:40:42'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 19:48:20'!
test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda primerJugadorJuega: CartaDeTruco anchoDeEspada . ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 19:48:20'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 19:52:14'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 19:52:14'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 19:58:37' prior: 50864636!
segundoJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Primero ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelSegundo remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	siguienteJugador := #Primero.
	
	self segundoJugadorJugo: unaCartaDeTruco .! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:01:45'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:01:42' prior: 50864864!
segundoJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Primero ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelSegundo remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	cartaJugadaDelSegundoJugador := unaCartaDeTruco.
	
	self decidirSiguienteJugador.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:02:43' prior: 50864835!
test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco anchoDeEspada . ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:02:57' prior: 50864904!
test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3). ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:08:15'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:08:14'!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:12:30'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'unaColeccionDeCartasDeMano_CHANGE_ME unaColeccionDeCartasDelSegundo_CHANGE_ME manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:12:28' prior: 50864949!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento = 2 ifTrue: [ 
			cartaJugadaDelSegundoJugador > cartaJugadaDelPrimerJugador ifTrue: [ siguienteJugador := #Segundo. ] ifFalse: [ siguienteJugador := #Primero. ] 
		 ]! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:14:20' prior: 50864971!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento = 2 
		   ifTrue: [ 
			cartaJugadaDelSegundoJugador > cartaJugadaDelPrimerJugador ifTrue: [ siguienteJugador := #Segundo. ] ] 
		   ifFalse: [
			siguienteJugador = #Primero ifTrue: [ siguienteJugador := #Segundo ] ifFalse: [ siguienteJugador := #Primero ]
		]! !

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:14:26'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:14:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:14:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:14:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:14:26'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:14:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:14:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:14:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:14:57'!
ERROR!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 20:15:17' prior: 50864618!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo.
	
	siguienteJugador := #Primero.
	cantidadDeJugadasDeEnfrentamiento := 0.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:15:19'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:16:01'!
test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda primerJugadorJuega: CartaDeTruco sieteDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:16:23' prior: 50864920!
test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda primerJugadorJuega: CartaDeTruco sieteDeEspada . ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:16:24'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:16:39' prior: 50865148!
test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda primerJugadorJuega: CartaDeTruco anchoDeEspada . ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:16:39'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:17:32' prior: 50864783!
primerJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	siguienteJugador := #Segundo.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:17:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:17:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:17:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:17:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:17:34'!
FAILURE!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:17:34'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:19:12' prior: 50865188!
primerJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	siguienteJugador := #Segundo.
	
	self decidirSiguienteJugador.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:19:20' prior: 50865252!
primerJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
		
	self decidirSiguienteJugador.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:19:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:19:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:19:24'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:19:38' prior: 50865265!
primerJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	cartaJugadaDelPrimerJugador := unaCartaDeTruco 
		
	self decidirSiguienteJugador.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:19:39' prior: 50865329!
primerJugadorJuega: unaCartaDeTruco 

	siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	cartaJugadaDelPrimerJugador := unaCartaDeTruco.
		
	self decidirSiguienteJugador.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:40'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:19:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:19:40'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:19:40'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:19:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:19:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:19:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:19:44'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:20:32'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:22:27' prior: 50864984!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento = 2 
		   ifTrue: [ 
			(cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) ifTrue: [ siguienteJugador := #Segundo. ] ] 
		   ifFalse: [
			siguienteJugador = #Primero ifTrue: [ siguienteJugador := #Segundo ] ifFalse: [ siguienteJugador := #Primero ]
		]! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:22:29'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:22:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:22:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:22:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:22:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:22:55' prior: 50865132!
test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco sieteDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:22:56'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:23:47' prior: 50865469!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento = 2 
		   ifTrue: [ 
			(cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) ifTrue: [ siguienteJugador := #Segundo. ] ifFalse: [ siguienteJugador := #Segundo. ]] 
		   ifFalse: [
			siguienteJugador = #Primero ifTrue: [ siguienteJugador := #Segundo ] ifFalse: [ siguienteJugador := #Primero ]
		]! !

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:23:50'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:24:14' prior: 50865613!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento = 2 
		   ifTrue: [ 
			(cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) ifTrue: [ siguienteJugador := #Segundo. ] ifFalse: [ siguienteJugador := #Primero. ]] 
		   ifFalse: [
			siguienteJugador = #Primero ifTrue: [ siguienteJugador := #Segundo ] ifFalse: [ siguienteJugador := #Primero ]
		]! !

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:24:17'!
PASSED!

Object subclass: #RondaDeTruco
	instanceVariableNames: 'manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:26:38'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #SiguienteJugadorDeRonda
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #SiguienteJugadorDeRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:27:15'!
Object subclass: #SiguienteJugadorDeRonda
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!SiguienteJugadorDeRonda methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:28:07'!
primerJugadorJuega: unaCartaDeTruco
	
	^self subclassResponsibility ! !
!SiguienteJugadorDeRonda methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 20:28:10'!
segundoJugadorJuega: unaCartaDeTruco
	
	^self subclassResponsibility ! !

!classRenamed: #SiguienteJugadorDeRonda as: #JugadorDeRondaState stamp: 'GDH 7/5/2021 20:29:30'!
Smalltalk renameClassNamed: #SiguienteJugadorDeRonda as: #JugadorDeRondaState!

!classRenamed: #JugadorDeRondaState as: #JugadorDeEnfrentamiento stamp: 'GDH 7/5/2021 20:29:42'!
Smalltalk renameClassNamed: #JugadorDeRondaState as: #JugadorDeEnfrentamiento!

JugadorDeEnfrentamiento subclass: #SegundoJugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #SegundoJugador category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:29:59'!
JugadorDeEnfrentamiento subclass: #SegundoJugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #SegundoJugador category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:31:04'!
JugadorDeEnfrentamiento subclass: #SegundoJugador
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!SegundoJugador methodsFor: 'no messages' stamp: 'GDH 7/5/2021 20:31:02' overrides: 50865748!
primerJugadorJuega: unaCartaDeTruco
	
	ronda debeJugarOtroJugador.! !
!RondaDeTruco methodsFor: 'nil' stamp: 'GDH 7/5/2021 20:33:27'!
siguienteJugador: unJugadorDeEnfrentamiento
	
	siguienteJugador := unJugadorDeEnfrentamiento.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:37:44'!
test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco sieteDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 20:37:45'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:38:23' prior: 50865802!
test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: (CartaDeTruco copaCon: 4).
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 4) .
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco sieteDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 20:38:24'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:38:32' prior: 50865877!
test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: (CartaDeTruco oroCon: 4).
	ronda segundoJugadorJuega: (CartaDeTruco copaCon: 4) .
		
	self should: [ ronda segundoJugadorJuega: CartaDeTruco sieteDeEspada. ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 20:38:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 20:44:58'!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 4).
	
	self assert: ronda ganador = #Primero.! !

!methodRemoval: RondaDeTruco #siguienteJugador: stamp: 'GDH 7/5/2021 20:45:49'!
siguienteJugador: unJugadorDeEnfrentamiento
	
	siguienteJugador := unJugadorDeEnfrentamiento.!

!classRemoval: #SegundoJugador stamp: 'GDH 7/5/2021 20:45:55'!
JugadorDeEnfrentamiento subclass: #SegundoJugador
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #JugadorDeEnfrentamiento stamp: 'GDH 7/5/2021 20:45:55'!
Object subclass: #JugadorDeEnfrentamiento
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:52:05'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'no messages' stamp: 'GDH 7/5/2021 20:52:56'!
primerJugadorJuega: unaCartaDeTruco
	
	^self subclassResponsibility ! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 20:52:59'!
segundoJugadorJuega: unaCartaDeTruco
	
	^self subclassResponsibility ! !

EnfrentamientoDeTruco subclass: #EmpiezaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EmpiezaPrimero category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:54:22'!
EnfrentamientoDeTruco subclass: #EmpiezaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #EmpiezaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EmpiezaSegundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:54:28'!
EnfrentamientoDeTruco subclass: #EmpiezaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #TerminaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TerminaPrimero category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:54:45'!
EnfrentamientoDeTruco subclass: #TerminaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #TerminaSEgundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TerminaSEgundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:54:49'!
EnfrentamientoDeTruco subclass: #TerminaSEgundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #TerminaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TerminaSegundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 20:54:51'!
EnfrentamientoDeTruco subclass: #TerminaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #TerminaSEgundo stamp: 'GDH 7/5/2021 20:54:53'!
EnfrentamientoDeTruco subclass: #TerminaSEgundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EmpiezaPrimero methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:00:55' overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	^RondaDeTruco siguienteTurno: (TerminaSegundo juegaContra: unaCartaDeTruco) .! !

!classDefinition: #EmpiezaPrimero category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:01:17'!
EnfrentamientoDeTruco subclass: #EmpiezaPrimero
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EmpiezaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:01:16' overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	^ronda siguienteTurno: (TerminaSegundo juegaContra: unaCartaDeTruco) .! !
!EmpiezaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:01:26' prior: 50866128 overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	^ronda debeJugarOtroJugador.! !
!EmpiezaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:01:33' prior: 50866112 overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	ronda siguienteTurno: (TerminaSegundo juegaContra: unaCartaDeTruco) .! !
!EmpiezaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:01:37' prior: 50866136 overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	ronda debeJugarOtroJugador.! !

!classDefinition: #EmpiezaSegundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:01:47'!
EnfrentamientoDeTruco subclass: #EmpiezaSegundo
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EmpiezaSegundo methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:01:46' overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	ronda siguienteTurno: (TerminaSegundo juegaContra: unaCartaDeTruco) .! !
!EmpiezaSegundo methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:01:54' prior: 50866164 overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	ronda siguienteTurno: (TerminaPrimero juegaContra: unaCartaDeTruco) .! !
!EmpiezaSegundo methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:02:10' overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	ronda debeJugarOtroJugador.! !

!classDefinition: #TerminaPrimero category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:02:27'!
EnfrentamientoDeTruco subclass: #TerminaPrimero
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!TerminaPrimero methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:02:26' overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	ronda debeJugarOtroJugador.! !

!classDefinition: #TerminaSegundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:02:40'!
EnfrentamientoDeTruco subclass: #TerminaSegundo
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!TerminaSegundo methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:02:39' overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	ronda debeJugarOtroJugador.! !
!TerminaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:03:13' overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	ronda siguienteTurno: self determinarSiguienteJugador .! !
!TerminaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:03:50' prior: 50866213 overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	cartaJugadaDelPrimerJugador := unaCartaDeTruco .
	
	ronda siguienteTurno: self determinarSiguienteJugador .! !
!TerminaSegundo methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:04:06' overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	cartaJugadaDelSegundoJugador := unaCartaDeTruco .
	
	ronda siguienteTurno: self determinarSiguienteJugador .! !
!TerminaPrimero class methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:04:58'!
juegaContra: unaCartaDeTruco
	
	self initializeJugandoContra: unaCartaDeTruco .! !
!TerminaSegundo class methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:05:08'!
juegaContra: unaCartaDeTruco
	
	self initializeJugandoContra: unaCartaDeTruco .! !
!TerminaSegundo methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:05:28'!
initializeJugandoContra: unaCartaDeTruco
	
	cartaJugadaDelPrimerJugador := unaCartaDeTruco .! !
!TerminaPrimero methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:05:38'!
initializeJugandoContra: unaCartaDeTruco
	
	cartaJugadaDelSegundoJugador := unaCartaDeTruco .! !
!RondaDeTruco methodsFor: 'nil' stamp: 'GDH 7/5/2021 21:06:00'!
debeJugarOtroJugador
	
	self error: self mensajeDeErrorDebeJugarOtroJugador .! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:07:38'!
determinarSiguienteJugador! !

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:12:10'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador ronda2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:12:09' prior: 50866266!
determinarSiguienteJugador
	
	(cartaJugadaDelSegundoJugador = cartaJugadaDelPrimerJugador) 
		ifTrue: [ ronda2 parda ] 
		ifFalse: [ (cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) 
				ifTrue: [ ronda2 ganaEnfrentamientoSegundo ] 
				ifFalse: [ ronda2 ganaEnfrentamientoPrimero ]
		]
	! !

EnfrentamientoDeTruco subclass: #EmpiezaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EmpiezaPrimero category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:12:26'!
EnfrentamientoDeTruco subclass: #EmpiezaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #EmpiezaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EmpiezaSegundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:12:29'!
EnfrentamientoDeTruco subclass: #EmpiezaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #TerminaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TerminaPrimero category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:12:31'!
EnfrentamientoDeTruco subclass: #TerminaPrimero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoDeTruco subclass: #TerminaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TerminaSegundo category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:12:34'!
EnfrentamientoDeTruco subclass: #TerminaSegundo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:12:38'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:12:44' prior: 50866282!
determinarSiguienteJugador
	
	(cartaJugadaDelSegundoJugador = cartaJugadaDelPrimerJugador) 
		ifTrue: [ ronda parda ] 
		ifFalse: [ (cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) 
				ifTrue: [ ronda ganaEnfrentamientoSegundo ] 
				ifFalse: [ ronda ganaEnfrentamientoPrimero ]
		]
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:13:32'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador estadoDeEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'avanzar' stamp: 'GDH 7/5/2021 21:13:31'!
siguienteTurno: unEnfrentamientoDeTruco
	
	estadoDeEnfrentamiento := unEnfrentamientoDeTruco .! !
!TerminaSegundo methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:14:04' prior: 50866228 overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	cartaJugadaDelSegundoJugador := unaCartaDeTruco .
	
	self determinarSiguienteJugador .! !
!TerminaPrimero methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:14:09' prior: 50866220 overrides: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	cartaJugadaDelPrimerJugador := unaCartaDeTruco .
	
	self determinarSiguienteJugador .! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:14:44'!
parda
	
	estadoDeEnfrentamiento := EmpiezaPrimero.! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:15:55'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador estadoDeEnfrentamiento ganadasDelSegundo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:15:55'!
ganaEnfrentamientoSegundo
	
	ganadasDelSegundo := ganadasDelSegundo + 1.
	
	estadoDeEnfrentamiento := EmpiezaPrimero.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:15:59' prior: 50866432!
ganaEnfrentamientoSegundo
	
	ganadasDelSegundo := ganadasDelSegundo + 1.
	
	estadoDeEnfrentamiento := EmpiezaSegundo .! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'GDH 7/5/2021 21:16:13'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'manoDelPrimero manoDelSegundo siguienteJugador cartaJugadaDelSegundoJugador cantidadDeJugadasDeEnfrentamiento cartaJugadaDelPrimerJugador estadoDeEnfrentamiento ganadasDelSegundo ganadasDelPrimero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:16:12'!
ganaEnfrentamientoPrimero
	
	ganadasDelPrimero := ganadasDelPrimero + 1.
	
	estadoDeEnfrentamiento := EmpiezaPrimero .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:16:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:16:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:16:16'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:16:25' prior: 50865971!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

	| ronda |
	
	! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:16:31' prior: 50866530!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

! !

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:16:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:16:41' prior: 50866536!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 4).
	
	self assert: ronda ganador = #Primero.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:17:32' prior: 50865343!
primerJugadorJuega: unaCartaDeTruco 
	
	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	
	estadoDeEnfrentamiento primerJugadorJuega: unaCartaDeTruco .

	"siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	
	cartaJugadaDelPrimerJugador := unaCartaDeTruco.
		
	self decidirSiguienteJugador."! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:18:00' prior: 50864890!
segundoJugadorJuega: unaCartaDeTruco 

	manoDelSegundo remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	
	estadoDeEnfrentamiento segundoJugadorJuega: unaCartaDeTruco .

	"siguienteJugador = #Primero ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	
	cartaJugadaDelSegundoJugador := unaCartaDeTruco.
	
	self decidirSiguienteJugador."! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:18:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:18:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:18:01'!
ERROR!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:18:30' prior: 50865073!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	"manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo."
	
	estadoDeEnfrentamiento := EmpiezaPrimero .
	
	"siguienteJugador := #Primero.
	
	cantidadDeJugadasDeEnfrentamiento := 0."! !
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:18:45' prior: 50866713!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	"manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo."
	
	estadoDeEnfrentamiento := EmpiezaPrimero .
	ganadasDelPrimero := 0.
	ganadasDelSegundo := 0.
	
	"siguienteJugador := #Primero.
	
	cantidadDeJugadasDeEnfrentamiento := 0."! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:18:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:18:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:18:46'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:18:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:19:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:19:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:19:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:19:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:19:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:19:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:19:30'!
ERROR!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:20:00' prior: 50866726!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo.
	
	estadoDeEnfrentamiento := EmpiezaPrimero .
	ganadasDelPrimero := 0.
	ganadasDelSegundo := 0.
	
	"siguienteJugador := #Primero.
	
	cantidadDeJugadasDeEnfrentamiento := 0."! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:19'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:20:39' prior: 50866621!
primerJugadorJuega: unaCartaDeTruco 
	
	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	
	estadoDeEnfrentamiento primerJugadorJuega: unaCartaDeTruco .

	"siguienteJugador = #Segundo ifTrue: [ self error: self mensajeDeErrorDebeJugarOtroJugador ].

	
	cartaJugadaDelPrimerJugador := unaCartaDeTruco.
		
	self decidirSiguienteJugador."! !
!EnfrentamientoDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:20:47' prior: 50866027!
primerJugadorJuega: unaCartaDeTruco
	
	^self subclassResponsibility ! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:20:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:20:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:20:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:20:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:20:50'!
ERROR!
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:21:11' prior: 50866869!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo.
	
	estadoDeEnfrentamiento := EmpiezaPrimero new.
	ganadasDelPrimero := 0.
	ganadasDelSegundo := 0.
	
	"siguienteJugador := #Primero.
	
	cantidadDeJugadasDeEnfrentamiento := 0."! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:21:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:21:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:21:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:21:18'!
ERROR!
!TerminaPrimero class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:21:44' prior: 50866236!
juegaContra: unaCartaDeTruco
	
	self new initializeJugandoContra: unaCartaDeTruco .! !
!TerminaSegundo class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:21:50' prior: 50866242!
juegaContra: unaCartaDeTruco
	
	self new initializeJugandoContra: unaCartaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:21:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:21:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:21:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:21:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:21:53'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:22:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:22:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:22:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:22:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:22:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:22:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:22:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:22:05'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:22:06'!
ERROR!
!EnfrentamientoDeTruco class methodsFor: 'no messages' stamp: 'GDH 7/5/2021 21:22:39'!
para: unaRondaDeTruco
	
	self intializePara: unaRondaDeTruco .! !
!EnfrentamientoDeTruco methodsFor: 'initialization' stamp: 'GDH 7/5/2021 21:22:53'!
intializePara: unaRondaDeTruco
	
	ronda := unaRondaDeTruco .! !
!RondaDeTruco methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:23:03' prior: 50867038!
initializeConCartasDeMano: unaManoDeCartasDelPrimero yCartasDeSegundo: unaManoDeCartasDelSegundo

	manoDelPrimero := unaManoDeCartasDelPrimero.
	manoDelSegundo := unaManoDeCartasDelSegundo.
	
	estadoDeEnfrentamiento := EmpiezaPrimero para: self.
	ganadasDelPrimero := 0.
	ganadasDelSegundo := 0.
	
	"siguienteJugador := #Primero.
	
	cantidadDeJugadasDeEnfrentamiento := 0."! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:23:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:23:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:23:09'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:23:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:23:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:23:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:23:39'!
ERROR!
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:23:57' prior: 50867257!
para: unaRondaDeTruco
	
	self new intializePara: unaRondaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:24:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:24:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:24:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:03'!
ERROR!
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'GDH 7/5/2021 21:24:27' prior: 50867411!
para: unaRondaDeTruco
	
	^self new intializePara: unaRondaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:24:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:24:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:24:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:24:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:24:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:32'!
ERROR!
!TerminaSegundo class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:24:46' prior: 50867123!
juegaContra: unaCartaDeTruco
	
	^self new initializeJugandoContra: unaCartaDeTruco .! !
!TerminaPrimero class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:24:50' prior: 50867117!
juegaContra: unaCartaDeTruco
	
	^self new initializeJugandoContra: unaCartaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:24:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:24:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:24:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:24:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:24:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:24:53'!
ERROR!
!TerminaSegundo class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:25:46'!
para: unaRondaDeTruco JuegaContra: unaCartaDeTruco
	
	^self new initializePara: unaRondaDeTruco JugandoContra: unaCartaDeTruco .! !

!methodRemoval: TerminaSegundo class #juegaContra: stamp: 'GDH 7/5/2021 21:25:52'!
juegaContra: unaCartaDeTruco
	
	^self new initializeJugandoContra: unaCartaDeTruco .!
!EmpiezaPrimero methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:26:06' prior: 50866142 overrides: 50866968!
primerJugadorJuega: unaCartaDeTruco
	
	ronda siguienteTurno: (TerminaSegundo para: ronda JuegaContra: unaCartaDeTruco) .! !
!EmpiezaSegundo methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:26:12' prior: 50866172 overrides: 50866033!
segundoJugadorJuega: unaCartaDeTruco
	
	ronda siguienteTurno: (TerminaPrimero para: ronda JuegaContra: unaCartaDeTruco) .! !
!TerminaSegundo methodsFor: 'initialization' stamp: 'GDH 7/5/2021 21:26:30'!
initializePara: unaRondaDeTruco JugandoContra: unaCartaDeTruco
	
	ronda := ronda .
	cartaJugadaDelPrimerJugador := unaCartaDeTruco .! !
!TerminaSegundo methodsFor: 'initialization' stamp: 'GDH 7/5/2021 21:26:33' prior: 50867655!
initializePara: unaRondaDeTruco JugandoContra: unaCartaDeTruco
	
	ronda := unaRondaDeTruco .
	cartaJugadaDelPrimerJugador := unaCartaDeTruco .! !
!TerminaPrimero methodsFor: 'initialization' stamp: 'GDH 7/5/2021 21:26:44'!
initializePara: unaRondaDeTruco JugandoContra: unaCartaDeTruco
	
	ronda := unaRondaDeTruco .
	cartaJugadaDelSegundoJugador := unaCartaDeTruco .! !
!TerminaPrimero class methodsFor: 'instance creation' stamp: 'GDH 7/5/2021 21:26:50'!
para: unaRondaDeTruco JuegaContra: unaCartaDeTruco
	
	^self new initializePara: unaRondaDeTruco JugandoContra: unaCartaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:26:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:26:52'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:26:52'!
FAILURE!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:26:52'!
FAILURE!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:26:52'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:26:54'!
ERROR!

!methodRemoval: TerminaPrimero class #juegaContra: stamp: 'GDH 7/5/2021 21:27:12'!
juegaContra: unaCartaDeTruco
	
	^self new initializeJugandoContra: unaCartaDeTruco .!

!methodRemoval: TerminaSegundo #initializeJugandoContra: stamp: 'GDH 7/5/2021 21:27:25'!
initializeJugandoContra: unaCartaDeTruco
	
	cartaJugadaDelPrimerJugador := unaCartaDeTruco .!

!methodRemoval: TerminaPrimero #initializeJugandoContra: stamp: 'GDH 7/5/2021 21:27:26'!
initializeJugandoContra: unaCartaDeTruco
	
	cartaJugadaDelSegundoJugador := unaCartaDeTruco .!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:27:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:27:32'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:27:32'!
FAILURE!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:27:32'!
FAILURE!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:27:32'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:27:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:27:41'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:27:58'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:28:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:28:15'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:28:58' prior: 50866459!
ganaEnfrentamientoPrimero
	
	ganadasDelPrimero := ganadasDelPrimero + 1.
	
	estadoDeEnfrentamiento := EmpiezaPrimero para: self.! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:29:02' prior: 50866439!
ganaEnfrentamientoSegundo
	
	ganadasDelSegundo := ganadasDelSegundo + 1.
	
	estadoDeEnfrentamiento := EmpiezaSegundo para: self.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:29:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:29:04'!
FAILURE!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:29:04'!
FAILURE!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:29:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:29:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:29:11'!
FAILURE!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:29:33'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:30:08' prior: 50865593!
test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
		
	self should: [ ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3). ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:30:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:30:09'!
FAILURE!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:30:09'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:30:19' prior: 50865896!
test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: (CartaDeTruco oroCon: 4).
	ronda segundoJugadorJuega: (CartaDeTruco copaCon: 4) .
		
	self should: [ ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3). ] 
		raise: Error - MessageNotUnderstood 
		withMessageText: 'Debe jugar el otro jugador primero.'! !

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:30:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:30:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:30:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:30:21'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:30:57' prior: 50866606!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 4).
	
	self assert: ronda ganoElPrimero.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:31:01' prior: 50868099!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 4).
	
	self assert: ronda ganoElPrimerJugador.! !
!RondaDeTruco methodsFor: 'testing' stamp: 'GDH 7/5/2021 21:31:35'!
ganoElPrimero
	
	^ganadasDelPrimero = 2.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:31:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:31:41'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:31:41'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:31:50' prior: 50868114!
test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3).
	
	self assert: ronda ganoElPrimerJugador.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:31:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:31:57'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:31:57'!
ERROR!
!RondaDeTruco methodsFor: 'testing' stamp: 'GDH 7/5/2021 21:32:10'!
ganoElPrimerJugador
	
	^ganadasDelPrimero = 2.! !

!methodRemoval: RondaDeTruco #ganoElPrimero stamp: 'GDH 7/5/2021 21:32:11'!
ganoElPrimero
	
	^ganadasDelPrimero = 2.!
!RondaDeTruco methodsFor: 'testing' stamp: 'GDH 7/5/2021 21:32:19'!
ganoElSegundoJugador
	
	^ganadasDelPrimero = 2.! !
!RondaDeTruco methodsFor: 'testing' stamp: 'GDH 7/5/2021 21:32:23' prior: 50868285!
ganoElSegundoJugador
	
	^ganadasDelSegundo = 2.! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'GDH 7/5/2021 21:33:59'!
assertNoTerminoLaRonda
	
	(self ganoElPrimerJugador or: [ self ganoElSegundoJugador ]) ifTrue: [  ]! !

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:34:04'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:34:17'!
test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco anchoDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3).
	
	self assert: ronda ganoElPrimerJugador.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:34:56' prior: 50868364!
test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda primerJugadorJuega: (CartaDeTruco oroCon: 4) .
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3).
	
	self assert: ronda ganoElSegundoJugador .! !

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:34:57'!
ERROR!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:35:15' prior: 50868379!
test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3).
	ronda primerJugadorJuega: (CartaDeTruco oroCon: 4) .
	
	self assert: ronda ganoElSegundoJugador .! !

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:35:16'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'GDH 7/5/2021 21:36:50'!
test16SiUnJugadorYaGanoNoSeDebeSeguirJugando

	| ronda |
	
	ronda := self defaultRondaDeTruco.
	
	ronda primerJugadorJuega: CartaDeTruco sieteDeEspada .
	ronda segundoJugadorJuega: CartaDeTruco anchoDeBasto .
	
	ronda segundoJugadorJuega: (CartaDeTruco oroCon: 3).
	ronda primerJugadorJuega: (CartaDeTruco oroCon: 4) .
	
	self should: [ ronda segundoJugadorJuega: (CartaDeTruco copaCon: 4). ] 
	 	raise: Error - MessageNotUnderstood 
		withMessageText: 'La ronda ya termino.'
	! !

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:36:51'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:36:59' prior: 50866952!
primerJugadorJuega: unaCartaDeTruco 
	
	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	
	estadoDeEnfrentamiento primerJugadorJuega: unaCartaDeTruco .! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:37:03' prior: 50866637!
segundoJugadorJuega: unaCartaDeTruco 

	manoDelSegundo remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	
	estadoDeEnfrentamiento segundoJugadorJuega: unaCartaDeTruco .! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:37:12' prior: 50866414!
parda
	
	estadoDeEnfrentamiento := EmpiezaPrimero para: self.! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:37:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:37:14'!
FAILURE!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:37:14'!
FAILURE!
!EnfrentamientoDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:38:21' prior: 50866367!
determinarSiguienteJugador
	
	(cartaJugadaDelSegundoJugador empardaCon: cartaJugadaDelPrimerJugador) 
		ifTrue: [ ronda parda ] 
		ifFalse: [ (cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) 
				ifTrue: [ ronda ganaEnfrentamientoSegundo ] 
				ifFalse: [ ronda ganaEnfrentamientoPrimero ]
		]
	! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:38:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:38:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:38:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:38:32'!
PASSED!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:39:34' prior: 50868505!
primerJugadorJuega: unaCartaDeTruco 
	
	self assertNoTerminoLaRonda.
	self assertTieneLaCartaAJugar: unaCartaDeTruco.
	manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	
	estadoDeEnfrentamiento primerJugadorJuega: unaCartaDeTruco .! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'GDH 7/5/2021 21:40:11' prior: 50868294!
assertNoTerminoLaRonda
	
	(self ganoElPrimerJugador or: [ self ganoElSegundoJugador ]) ifTrue: [ self error: self mensajeDeErrorTerminoLaRonda ]! !
!RondaDeTruco methodsFor: 'error messages' stamp: 'GDH 7/5/2021 21:40:25'!
mensajeDeErrorTerminoLaRonda

	^''! !
!RondaDeTruco methodsFor: 'error messages' stamp: 'GDH 7/5/2021 21:40:42' prior: 50868711!
mensajeDeErrorTerminoLaRonda

	^'La ronda ya termino.'! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:40:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:40:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:40:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:40:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:40:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:40:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:40:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:40:46'!
ERROR!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:41:32' prior: 50868691!
primerJugadorJuega: unaCartaDeTruco 
	
	self assertNoTerminoLaRonda.
	self assertLaMano: manoDelPrimero TieneLaCartaAJugar: unaCartaDeTruco.
	"manoDelPrimero remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ]."
	
	estadoDeEnfrentamiento primerJugadorJuega: unaCartaDeTruco .! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:41:51'!
assertLaMano: unaMano TieneLaCartaAJugar: unaCartaDeTruco
	
	unaMano remove: unaCartaDeTruco ifAbsent: [ ^self error: self mensajeDeErrorJugarCartaQueJugadorNoTiene ].
	! !
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:41:56' prior: 50868793!
primerJugadorJuega: unaCartaDeTruco 
	
	self assertNoTerminoLaRonda.
	self assertLaMano: manoDelPrimero TieneLaCartaAJugar: unaCartaDeTruco.
	
	estadoDeEnfrentamiento primerJugadorJuega: unaCartaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:41:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:41:56'!
FAILURE!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:41:56'!
FAILURE!
!RondaDeTruco methodsFor: 'enfrentar' stamp: 'GDH 7/5/2021 21:42:11' prior: 50868515!
segundoJugadorJuega: unaCartaDeTruco 

	self assertNoTerminoLaRonda.
	self assertLaMano: manoDelSegundo TieneLaCartaAJugar: unaCartaDeTruco.
	
	estadoDeEnfrentamiento segundoJugadorJuega: unaCartaDeTruco .! !

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:42:12'!
PASSED!

!methodRemoval: RondaDeTruco #decidirSiguienteJugador stamp: 'GDH 7/5/2021 21:42:22'!
decidirSiguienteJugador
	
	cantidadDeJugadasDeEnfrentamiento := cantidadDeJugadasDeEnfrentamiento + 1.
	
	cantidadDeJugadasDeEnfrentamiento = 2 
		   ifTrue: [ 
			(cartaJugadaDelSegundoJugador mataA: cartaJugadaDelPrimerJugador) ifTrue: [ siguienteJugador := #Segundo. ] ifFalse: [ siguienteJugador := #Primero. ]] 
		   ifFalse: [
			siguienteJugador = #Primero ifTrue: [ siguienteJugador := #Segundo ] ifFalse: [ siguienteJugador := #Primero ]
		]!

!testRun: #RondaDeTrucoTest #test01CrearRondaConManoDelPrimerJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CrearRondaConManoDelSegundoJugadorConMenosDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test03CrearRondaConManoDelPrimerJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CrearRondaConManoDelSegundoJugadorConMasDeTresCartasDebeTirarError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test05CrearRondaConCartasRepetidasEnManosDebeTirarError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test06JugarUnaCartaDeLaManoDelPrimerJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test07JugarUnaCartaDeLaManoDelPrimerJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08JugarUnaCartaDeLaManoDelSegundoJugadorNoDebeEstarMasEnSuMano stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test09JugarUnaCartaDeLaManoDelSegundoJugadorQueNoEstaDebeTirarUnError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SegundoJugadorJuegaPrimeroEnPrimerEnfrentamientoDebeTirarError stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSegundoJugadorGanoLaRondaAnteriorDebeJugarElSegundoJugador stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiPrimerJugadorGanoLaRondaAnteriorDebeJugarElPrimerJugador stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPardaElPrimerEnfrentamientoJuegaElPrimerJugador stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiPrimerJugadorGanaDosEnfrentamientosDebeGanarElPrimerJugador stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiSegundoJugadorGanaDosEnfrentamientosDebeGanarElSegundoJugador stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test16SiUnJugadorYaGanoNoSeDebeSeguirJugando stamp: 'GDH 7/5/2021 21:42:48'!
PASSED!

----SNAPSHOT----(5 July 2021 21:43:25) CuisUniversity-4532.image priorSource: 16979767!

----QUIT----(5 July 2021 21:46:06) CuisUniversity-4532.image priorSource: 17197079!