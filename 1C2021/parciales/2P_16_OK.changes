
----End fileIn of \Users\castr\Desktop\CuisParcial\ISW1-2021-1C-2doParcial.st----!

TestCase subclass: #TrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 17:31:51'!
TestCase subclass: #TrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 17:34:23'!
Object subclass: #Jugador
	instanceVariableNames: 'cartas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 17:34:41'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!TrucoTest methodsFor: 'no messages' stamp: 'LEC 7/5/2021 17:34:13'!
test01LosJugadoresTienen3Cartas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{}.
	jugador2 := Jugador conCartas:{}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidAmountOfCardsErrorDescription.! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:34:47'!
ERROR!
!Jugador class methodsFor: 'instance creation' stamp: 'LEC 7/5/2021 17:34:54'!
conCartas: anArray 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeConCartas: anArray ! !
!Jugador class methodsFor: 'instance creation' stamp: 'LEC 7/5/2021 17:35:08' prior: 50859893!
conCartas: cartas
	
	^self new initializeConCartas: cartas! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:35:10'!
ERROR!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 17:35:26'!
Object subclass: #Jugador
	instanceVariableNames: 'cartas cartas_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Jugador methodsFor: 'no messages' stamp: 'LEC 7/5/2021 17:36:04'!
initializeConCartas: manoDeCartas

	cartas := manoDeCartas.! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:36:09'!
ERROR!

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:36:09'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:36:20'!
invalidAmountOfCardsErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:36:36' prior: 50859927!
invalidAmountOfCardsErrorDescription
	
	^'Cada jugador tiene que tener 3 cartas'! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:36:38'!
FAILURE!
!Truco methodsFor: 'no messages' stamp: 'LEC 7/5/2021 17:37:39'!
mano:jugador1 pie:jugador2

	self error: self class invalidAmountOfCardsErrorDescription .! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:37:43'!
FAILURE!

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:37:43'!
FAILURE!

!methodRemoval: Truco #mano:pie: stamp: 'LEC 7/5/2021 17:38:21'!
mano:jugador1 pie:jugador2

	self error: self class invalidAmountOfCardsErrorDescription .!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:38:27'!
mano:jugador1 pie:jugador2

	self error: self class invalidAmountOfCardsErrorDescription .! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:38:30'!
FAILURE!

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:38:30'!
FAILURE!

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:38:49'!
FAILURE!

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:38:49'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:39:14' prior: 50859957!
mano:jugador1 pie:jugador2

	self error: self invalidAmountOfCardsErrorDescription .! !

!testRun: #TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:39:22'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:39:54'!
test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{}.
	jugador2 := Jugador conCartas:{}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidAmountOfCardsErrorDescription.! !

!methodRemoval: TrucoTest #test01LosJugadoresTienen3Cartas stamp: 'LEC 7/5/2021 17:39:54'!
test01LosJugadoresTienen3Cartas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{}.
	jugador2 := Jugador conCartas:{}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidAmountOfCardsErrorDescription.!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:40:57'!
test02ElJuegoNoEmpiezaSiElJugador1TieneUnaCartaInvalida

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco }.
	jugador2 := Jugador conCartas:{}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidAmountOfCardsErrorDescription.! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:42:48' prior: 50860007!
test02ElJuegoNoEmpiezaSiElJugador1TieneUnaCartaInvalida

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 8 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 3}.
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco InvalidCardInDeckErrorDescription.! !

!testRun: #TrucoTest #test02ElJuegoNoEmpiezaSiElJugador1TieneUnaCartaInvalida stamp: 'LEC 7/5/2021 17:42:52'!
ERROR!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:44:18' prior: 50860020!
test02ElJuegoNoEmpiezaSiElJugador1TieneUnaCartaInvalida

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco InvalidCardInDeckErrorDescription.! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:44:45'!
test02ElJugador1NoPuedeTenerCartasRepetidas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco InvalidCardInDeckErrorDescription.! !

!methodRemoval: TrucoTest #test02ElJuegoNoEmpiezaSiElJugador1TieneUnaCartaInvalida stamp: 'LEC 7/5/2021 17:44:45'!
test02ElJuegoNoEmpiezaSiElJugador1TieneUnaCartaInvalida

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco InvalidCardInDeckErrorDescription.!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:44:59' prior: 50860058!
test02ElJugador1NoPuedeTenerCartasRepetidas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco InvalidHandErrorDescription.! !

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:45:05'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:45:16'!
InvalidHandErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:45:51' prior: 50860111!
InvalidHandErrorDescription
	
	^'Los jugadores no pueden tener cartas repetidas'! !

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:45:53'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:48:54' prior: 50859975!
mano:jugador1 pie:jugador2

	(self tieneCantidadCartasCorrectas: jugador1 and:[self tieneCantidadCartasCorrectas: jugador2]) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	(jugador1 tieneCartasRepetidasParaJugar: self) ifTrue:[	self error: self invalidAmountOfCardsErrorDescription ].! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:50:34' prior: 50860125!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	(self tieneCartasRepetidasParaJugar: jugador1) ifTrue:[	self error: self invalidAmountOfCardsErrorDescription ].! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:50:40'!
FAILURE!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:50:40'!
FAILURE!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:50:43'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:51:44'!
assertCantidadCorrectasCartas: jugador1 yJugador: jugador2

	^jugador1 cartas size = 3 and:[jugador1 cartas size = 3]! !
!Jugador class methodsFor: 'instance creation' stamp: 'LEC 7/5/2021 17:52:04'!
cartas

	! !

!methodRemoval: Jugador class #cartas stamp: 'LEC 7/5/2021 17:52:16'!
cartas

	!
!Jugador methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:52:24'!
cartas

	^cartas! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:52:38'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:52:38'!
FAILURE!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:52:38'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:53:39'!
tieneCartasRepetidasParaJugar: jugador1

	^jugador1 cartas size = (jugador1 cartas set size)! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:53:41'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:53:41'!
FAILURE!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:53:41'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:54:11'!
invalidHandErrorDescription
	
	^'Los jugadores no pueden tener cartas repetidas'! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:54:11' prior: 50860092!
test02ElJugador1NoPuedeTenerCartasRepetidas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidHandErrorDescription.! !

!methodRemoval: Truco class #InvalidHandErrorDescription stamp: 'LEC 7/5/2021 17:54:11'!
InvalidHandErrorDescription
	
	^'Los jugadores no pueden tener cartas repetidas'!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:54:21' prior: 50860187!
tieneCartasRepetidasParaJugar: jugador1

	^(jugador1 cartas size) = (jugador1 cartas set size)! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:54:24'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:54:24'!
FAILURE!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:54:24'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:55:05' prior: 50860231!
tieneCartasRepetidasParaJugar: jugador1

	^(jugador1 cartas size) = (jugador1 cartas asSet size)! !

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:55:06'!
FAILURE!

(jugador1 cartas size)!

(jugador1 cartas asSet size)!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:57:16' prior: 50860138!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	(self tieneCartasRepetidasParaJugar: jugador1) ifTrue:[	self error: self invalidHandErrorDescription ].! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:57:23'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:57:23'!
FAILURE!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:57:23'!
FAILURE!

(jugador1 cartas asSet size)!

(jugador1 cartas size) = (jugador1 cartas asSet size)!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 17:58:43' prior: 50860248!
tieneCartasRepetidasParaJugar: jugador1

	^(jugador1 cartas size) ~= (jugador1 cartas asSet size)! !

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:58:46'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 17:58:49'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:58:49'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:59:26'!
test02ElJugador2NoPuedeTenerCartasRepetidas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidHandErrorDescription.! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 17:59:34'!
test03ElJugador2NoPuedeTenerCartasRepetidas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidHandErrorDescription.! !

!methodRemoval: TrucoTest #test02ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:59:34'!
test02ElJugador2NoPuedeTenerCartasRepetidas

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 3 .  CartaDeTruco bastoCon: 1 . CartaDeTruco bastoCon: 2}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 7 .  CartaDeTruco bastoCon: 7 . CartaDeTruco bastoCon: 7}.
	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidHandErrorDescription.!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 17:59:36'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:00:11' prior: 50860260!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	((self tieneCartasRepetidasParaJugar: jugador1) or:[self tieneCartasRepetidasParaJugar: jugador1]) ifTrue:[	self error: self invalidHandErrorDescription ].! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:00:14'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:14'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:14'!
FAILURE!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:14'!
FAILURE!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:00:29'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:29'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:29'!
FAILURE!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:29'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:00:41' prior: 50860353!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	((self tieneCartasRepetidasParaJugar: jugador1) or:[self tieneCartasRepetidasParaJugar: jugador2]) ifTrue:[	self error: self invalidHandErrorDescription ].! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:00:44'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:44'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:00:44'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:01:37'!
test04LosJugadoresNoRepitenCartasEntreEllos

	| jugador1 jugador2 |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.
	
	
	self should: [Truco mano:jugador1 pie:jugador2] 
		raise:Error
		withMessageText: Truco invalidHandErrorDescription.! !

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:01:39'!
FAILURE!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:02:33' prior: 50860394!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	((self tieneCartasRepetidasParaJugar: jugador1) or:[(self tieneCartasRepetidasParaJugar: jugador2) or:[self tallyCPUUsageFor: jugador1 every: jugador2]]) ifTrue:[	self error: self invalidHandErrorDescription ].! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:03:04' prior: 50860437!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	((self tieneCartasRepetidasParaJugar: jugador1) or:[(self tieneCartasRepetidasParaJugar: jugador2) or:[self tieneCartasRepetidasEntre: jugador1 y:jugador2 ]]) ifTrue:[	self error: self invalidHandErrorDescription ].! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:04:53'!
tieneCartasRepetidasEntre: jugador1 y:jugador2

	^(jugador1 cartas asSet union: jugador2 cartas) size = 6! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:04:56'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:04:56'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:04:56'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:04:56'!
FAILURE!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:04:56'!
FAILURE!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:05:06'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:05:06'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:05:07'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:05:07'!
FAILURE!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:05:07'!
FAILURE!

(jugador1 cartas asSet union: jugador2 cartas)!

(jugador1 cartas asSet union: jugador2 cartas) size = 6!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:06:52' prior: 50860467!
tieneCartasRepetidasEntre: jugador1 y:jugador2

	^(jugador1 cartas asSet union: jugador2 cartas) size ~= 6! !

(jugador1 cartas asSet union: jugador2 cartas) size ~= 6!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:07:14'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:07:21'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:07:21'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:07:21'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:07:21'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:10:55'!
test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: CartaDeTruco bastoCon: 12! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:12:06' prior: 50860536!
test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 12)] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeCartearErrorDescription.
	! !

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:12:10'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:13:02' prior: 50860452!
mano:jugador1 pie:jugador2

	(self assertCantidadCorrectasCartas: jugador1 yJugador: jugador2) ifFalse:[	self error: self invalidAmountOfCardsErrorDescription ].
	((self tieneCartasRepetidasParaJugar: jugador1) or:[(self tieneCartasRepetidasParaJugar: jugador2) or:[self tieneCartasRepetidasEntre: jugador1 y:jugador2 ]]) ifTrue:[	self error: self invalidHandErrorDescription ].
	
	^self new initializeCon: jugador1 y:jugador2! !

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 18:13:40'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2 mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 18:13:42'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2 mano pie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Truco methodsFor: 'no messages' stamp: 'LEC 7/5/2021 18:13:38'!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.! !

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:13:48'!
ERROR!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:13:48'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:14:00'!
elJugadorNoSePuedeCartearErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:14:40' prior: 50860619!
elJugadorNoSePuedeCartearErrorDescription
	
	^'El jugador no tenia dicha carta antes de empezar el juego'! !

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:14:42'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:16:06'!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:16:11'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:16:11'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:16:11'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:16:11'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:16:11'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:17:22'!
test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 2).] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeCartearErrorDescription.
	! !

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 18:20:27'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2 mano pie ultimoEnTirar'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:20:25' prior: 50860635!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	ultimoEnTirar := mano.
	! !

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 18:25:54'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2 mano pie ultimoEnTirar ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:25:52' prior: 50860688!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 1 and: ultimoEnTirar = mano)  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda = ronda+1.
	ultimoEnTirar := mano.
	! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:26:17'!
elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription

	^'no es el turno del jugador'! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:26:26' prior: 50860659!
test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 2).] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:26:32'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:26:32'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:26:32'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:26:32'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:26:32'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:26:32'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:26:32'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:26:54' prior: 50860607!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	ronda := 1.! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:26:57'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:26:57'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:26:57'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:26:57'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:26:57'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:26:57'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:26:57'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:27:06' prior: 50860708!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 1 and: ultimoEnTirar = mano)  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := mano.
	! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:27:08'!
FAILURE!

ronda = 1 and: ultimoEnTirar = mano!

ronda = 1!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:28:37' prior: 50860801!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := mano.
	! !

ronda = 2 and:[ultimoEnTirar = mano]!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:28:46'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:31:08'!
test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:4 ).] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:31:31'!
jugador2Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := mano.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:31:37'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:31:37'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:31:37'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:31:37'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:31:37'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:31:37'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:31:37'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:31:37'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:32:10' prior: 50860860!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := pie.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:32:14' prior: 50860901!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = pie])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := pie.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:32:17'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:32:17'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:32:17'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:32:17'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:32:17'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:32:17'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:32:17'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:32:17'!
ERROR!
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 18:32:32'!
ganadorRonda: aSmallInteger 
	self shouldBeImplemented.! !
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 18:32:50' prior: 50860953!
ganadorRonda: numeroRonda
	
	^mano! !

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:32:52'!
FAILURE!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:33:06'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:33:06'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:33:06'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:33:07'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:33:07'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:33:07'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:33:07'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:33:07'!
FAILURE!

carta!

mano cartas!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:33:57' prior: 50860836!
test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:1 ).] 
		raise:Error
		withMessageText: Truco canNotCreateTimeOfDayUsingSemiColonErrorDescription.
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:34:23' prior: 50860996!
test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:{CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3}.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:1 ).] 
		raise:Error
		withMessageText: Truco elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:34:29'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:34:29'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:34:29'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:34:29'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:34:29'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:34:29'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:34:29'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:34:29'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:34:43'!
elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 18:34:54' prior: 50861074!
elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription
	
	^'El jugador ya uso esta carta'! !

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:34:56'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:36:40' prior: 50860819!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := mano.
	mano cartas remove: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:36:49' prior: 50860913!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = pie])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	ronda := ronda+1.
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 18:38:33'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2 mano pie ultimoEnTirar ronda cartasUsadasPorJugador1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:38:29' prior: 50861090!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	cartasUsadasPorJugador1 at:ronda put: carta.
	ronda := ronda+1.
	ultimoEnTirar := mano.
	mano cartas remove: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:39:04' prior: 50861103!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = pie])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	ronda := ronda+1.
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:39:09'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:39:09'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:39:09'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:39:09'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:39:09'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:39:09'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:39:09'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:39:12'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:39:41' prior: 50860771!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	ronda := 1.
	cartasUsadasPorJugador1 := Dictionary new.! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:39:44'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:39:44'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:39:44'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:39:44'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:39:44'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:39:44'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:39:44'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:39:46'!
ERROR!

mano cartas!

mano cartas!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:42:07' prior: 50861126!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	cartasUsadasPorJugador1 at:ronda put: carta.
	ronda := ronda+1.
	ultimoEnTirar := mano.
	mano cartas removeType:carta  ifAbsent: [].
	! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:42:09'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:42:42'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:42:42'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:42:42'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:42:42'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:42:42'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:42:42'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:42:43'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:42:43'!
ERROR!

#(CartaDeTruco bastoCon: 1 .  CartaDeTruco bastoCon: 2 . CartaDeTruco bastoCon: 3).	!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:44:53' prior: 50861021!
test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:1 ).] 
		raise:Error
		withMessageText: Truco elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:44:56'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:44:56'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:44:56'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:44:56'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:44:56'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:44:56'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:44:56'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:44:56'!
ERROR!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:45:15' prior: 50860726!
test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	.	
	jugador2 := Jugador conCartas:{CartaDeTruco bastoCon: 4 .  CartaDeTruco bastoCon: 5 . CartaDeTruco bastoCon: 6}.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 2).] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:45:17'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:45:17'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:45:18'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:45:18'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:45:18'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:45:18'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:45:18'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:45:20'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:45:37' prior: 50861220!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	cartasUsadasPorJugador1 at:ronda put: carta.
	ronda := ronda+1.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:45:43'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:45:50'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:45:53'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:45:53'!
ERROR!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:46:18' prior: 50861270!
test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:1 ).] 
		raise:Error
		withMessageText: Truco elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription.
	! !

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:46:19'!
FAILURE!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:47:07' prior: 50861405!
test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	.
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:1 ).] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeCartearErrorDescription .
	! !

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:47:08'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:47:08'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:47:08'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:47:09'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:47:09'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:47:09'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:47:09'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:47:09'!
PASSED!

!methodRemoval: Truco class #elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription stamp: 'LEC 7/5/2021 18:47:38'!
elJugadorNoPuedeVolverAUsarUnaCartaErrorDescription
	
	^'El jugador ya uso esta carta'!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:47:41'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:50:12'!
test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 1 ).
	
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 )
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:50:19' prior: 50861522!
test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 1 ).
	
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 )
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:50:45' prior: 50861546!
test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	
	
	
	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 1 ).
	
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self assert: (truco ganadorRonda:2) equals: jugador1 .
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:50:52' prior: 50861570!
test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 1 ).
	
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self assert: (truco ganadorRonda:2) equals: jugador1 .
	
		
	! !

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 18:50:54'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:51:01' prior: 50861597!
test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 1 ).
	
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	self assert: (truco ganadorRonda:1) equals: jugador1 .
	self assert: (truco ganadorRonda:2) equals: jugador2 .
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:51:07' prior: 50861657!
test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador

	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 1 ).
	
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	self assert: (truco ganadorRonda:1) equals: jugador2 .
	self assert: (truco ganadorRonda:2) equals: jugador1 .
	
		
	! !

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 18:51:08'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:55:18' prior: 50861375!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugadorUsaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:55:49' prior: 50861183!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	ronda := #(0 . 0. 0. 0. 0. 0.).
	cartasUsadasPorJugador1 := Dictionary new.! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:59:00'!
ronda

	^(ronda inject: 0 into:[:cartasUsadas :rondasTotales|
		(cartasUsadas isZero not) ifTrue:[rondasTotales ]
		]) /2! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 18:59:41' prior: 50861715!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: 1 usaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:01:09'!
jugador: jugador usaCarta: carta.

	
	(jugador = mano) ifTrue:[self tiraManoLaCarta: carta ].
	! !

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 19:02:06'!
Object subclass: #Truco
	instanceVariableNames: 'Jugador1 Jugador2 mano pie ultimoEnTirar ronda cartasUsadasPorJugador1 cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:01:54' prior: 50861729!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	ronda := #(0 . 0. 0. 0. 0. 0.).
	cartasUsadasPorJugadores := Dictionary new.! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:02:12' prior: 50861773!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	cartasUsadasPorJugadores := Dictionary new.! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:02:48' prior: 50861757!
jugador: jugador usaCarta: carta.

	
	cartasUsadasPorJugadores at: jugador put:carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:03:19' prior: 50861744!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self ronda = 2 and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:03:29' prior: 50861141!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = pie])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:03:39' prior: 50861808!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = pie])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:03:54' prior: 50861821!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(ronda = 2 and:[ultimoEnTirar = pie])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	self jugador: pie usaCarta: carta.
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:05:50' prior: 50861781!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	cartasUsadasPorJugadores := Dictionary new; at:mano put:OrderedCollection new ; at:pie put:OrderedCollection new.! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:06:07' prior: 50861788!
jugador: jugador usaCarta: carta.

	
	(cartasUsadasPorJugadores at: jugador) add:carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:07:21' prior: 50861737!
ronda

	^(OrderedCollection with:((cartasUsadasPorJugadores at:mano) size) with: ((cartasUsadasPorJugadores at:mano) size)) max! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:07:24'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:07:24'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:07:24'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:07:24'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:07:24'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:07:24'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:07:24'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:07:24'!
ERROR!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:07:26'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:08:20' prior: 50861849!
initializeCon: jugador1 y:jugador2

	mano := jugador1.
	pie := jugador2.
	cartasUsadasPorJugadores := Dictionary new.
	cartasUsadasPorJugadores at:mano put:OrderedCollection new .
	cartasUsadasPorJugadores at:pie put:OrderedCollection new.! !

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:08:30'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:08:32'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:09:26' prior: 50861794!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar and:[ultimoEnTirar = mano])  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:09:42' prior: 50861921!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar)  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:10:15'!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:mano) size)! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:10:18'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:10:18'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:10:18'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:10:18'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:10:18'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:10:18'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:10:18'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:10:18'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:10:21'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:11:00'!
ERROR!

(cartasUsadasPorJugadores at:mano) size!

(cartasUsadasPorJugadores at:mano) size!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:11:38' prior: 50861935!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:11:40'!
FAILURE!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:11:45'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:11:45'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:11:45'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:11:45'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:11:45'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:11:45'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:11:45'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:11:45'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:11:48'!
FAILURE!

(cartasUsadasPorJugadores at:mano) size!

(cartasUsadasPorJugadores at:mano) size!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:12:50' prior: 50861948!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size)! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:12:52'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:12:58'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:12:58'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:12:58'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:14:36' prior: 50862045!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[self ganadorRonda: (self ronda - 1) ~= mano]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:14:39'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:14:39'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:14:39'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:14:39'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:14:39'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:14:39'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:14:39'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:14:39'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:14:42'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:15:01' prior: 50862087!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ganadorRonda: (self ronda - 1)) ~= mano]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:15:04'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:15:04'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:15:04'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:15:18' prior: 50862127!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ganadorRonda: (self ronda - 1)) ~= pie]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:15:20'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:15:20'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:15:20'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:15:20'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:15:20'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:15:20'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:15:20'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:15:20'!
FAILURE!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:15:26'!
FAILURE!

((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size)!

(self ganadorRonda: (self ronda - 1)) ~= pie!

self assert: (truco ganadorRonda:1) equals: jugador2!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:17:11'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:17:11'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:17:11'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:17:11'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:17:11'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:17:11'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:17:11'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:17:12'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:17:15'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:18:31'!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ganadorRonda: (self ronda - 1)) = jugador]! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:18:43' prior: 50861993!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: mano)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := mano.
	mano cartas remove: carta
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:18:57' prior: 50861835!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: pie)  ifTrue:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	self jugador: pie usaCarta: carta.
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:18:59'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:18:59'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:18:59'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:18:59'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:18:59'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:18:59'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:19:00'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:19:00'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:19:02'!
ERROR!
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 19:22:18' prior: 50860958!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	((cartasUsadasPorJugador1 index: numeroRonda) mataA: (cartasUsadasPorJugador1 index: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		! !
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 19:22:57' prior: 50862312!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	((cartasJugadasJ1 index: numeroRonda) mataA: (cartasJugadasJ2 index: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:23:09'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:23:09'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:23:09'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:23:09'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:23:09'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:23:09'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:23:09'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:23:09'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:23:11'!
ERROR!

OrderedCollection !
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 19:23:58' prior: 50862325!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	((cartasJugadasJ1 at: numeroRonda) mataA: (cartasJugadasJ2 at: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:24:00'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:24:00'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:24:00'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:24:00'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:24:00'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:24:00'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:24:00'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:24:00'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:24:02'!
ERROR!

cartasJugadasJ1!

numeroRonda!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:25:23' prior: 50862167!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ganadorRonda: (self ronda)) ~= pie]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:25:25'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:25:25'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:25:25'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:25:26'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:25:26'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:25:26'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:25:26'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:25:26'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:25:27'!
ERROR!

cartasJugadasJ1!

numeroRonda!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:26:04' prior: 50862245!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ganadorRonda: (self ronda)) = jugador]! !

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:26:08'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:26:12'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:26:12'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:26:12'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:26:13'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:26:13'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:26:13'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:26:13'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:26:13'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:26:14'!
ERROR!

cartasJugadasJ2!

cartasJugadasJ1!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:27:23' prior: 50862417!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ronda = 1) or:[ (self ganadorRonda: (self ronda)) ~= pie]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:27:26'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:27:26'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:27:26'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:27:26'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:27:26'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:27:26'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:27:26'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:27:26'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:27:28'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:28:05' prior: 50862458!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ronda = 1) or:[ (self ganadorRonda: (self ronda)) ~= jugador]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:28:08'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:28:08'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:28:08'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:28:08'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:28:08'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:28:08'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:28:08'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:28:08'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:28:10'!
ERROR!

((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ronda = 1) or:[ (self ganadorRonda: (self ronda)) ~= jugador]]!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:28:59' prior: 50862266!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: pie)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	self jugador: pie usaCarta: carta.
	ultimoEnTirar := pie.
	pie cartas remove: carta.
	! !

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:29:01'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:29:06'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:29:06'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:29:06'!
FAILURE!

mano cartas includes: carta!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:30:23' prior: 50862253!
jugador1Tira: carta

	(mano cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: mano)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: mano usaCarta: carta.
	ultimoEnTirar := mano.
	
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:30:39' prior: 50861858!
jugador: jugador usaCarta: carta.

	
	(cartasUsadasPorJugadores at: jugador) add:carta.
	jugador cartas remove: carta
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:30:44'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:30:44'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:30:44'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:30:44'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:30:44'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:30:44'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:30:44'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:30:44'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:30:55' prior: 50862592!
jugador2Tira: carta

	(pie cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: pie)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	
	self jugador: pie usaCarta: carta.
	ultimoEnTirar := pie.
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:31:04'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:31:04'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:31:04'!
FAILURE!

mano cartas!

carta!

carta!

mano cartas!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:32:19'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:32:19'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:32:19'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:32:19'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:32:19'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:32:20'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:32:20'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:32:20'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:32:20'!
FAILURE!

mano cartas includes: carta!

self puedeTirar: mano!

((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size)!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:34:16' prior: 50862545!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ (self ganadorRonda: (self ronda)) ~= jugador]]! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:34:18'!
FAILURE!

((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size)!

(self ronda = 1 and:[jugador = pie])!

 (self ganadorRonda: (self ronda)) ~= jugador!
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 19:36:09' prior: 50862371!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	(cartasJugadasJ1 isEmpty or: cartasJugadasJ2 isEmpty ) ifTrue:[^nil].
	((cartasJugadasJ1 at: numeroRonda) mataA: (cartasJugadasJ2 at: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:36:12'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:36:12'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:36:12'!
FAILURE!

mano cartas includes: carta!

((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size)!

(self ronda = 1 and:[jugador = pie])!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:37:25' prior: 50862775!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ (self ganadorRonda: (self ronda)) = jugador]]! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:37:30'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:37:33'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:37:34'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:37:34'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:37:34'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:37:34'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:37:34'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:37:34'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:37:34'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:37:34'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:41:26' prior: 50862845!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ (self ganadorRonda: (self ronda)) = jugador]]! !

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:41:30'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:41:37'!
otroJugador: aJugador 
	self shouldBeImplemented.! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:41:56' prior: 50862905!
otroJugador: aJugador 
	
	aJugador = mano ifTrue:[^pie].
	^mano! !

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:41:58'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:42:02'!
PASSED!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:43:01' prior: 50862643!
jugador1Tira: carta

	self jugador: mano tira: carta
	
	
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:43:33'!
jugador: unJugador tira: carta
	
	(unJugador cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: unJugador)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: unJugador usaCarta: carta.
	ultimoEnTirar := unJugador.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:43:49' prior: 50862692!
jugador2Tira: carta

	self jugador: pie tira: carta
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:43:54'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:45:04'!
test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	
	self assert: (truco ganadorRonda:1) equals: jugador2 .
	self assert: (truco ganadorRonda:2) equals: jugador1 .
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:46:17' prior: 50863000!
test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	
	self should: [truco ganadorRonda:1] 
		raise:Error
		withMessageText: Truco RondaNoHechaErrorDescription .
	
	self should: [truco ganadorRonda:2] 
		raise:Error
		withMessageText: Truco RondaNoHechaErrorDescription  .
	
	
	
		
	! !

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:46:19'!
ERROR!
!Truco class methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:46:43'!
RondaNoHechaErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:47:11' prior: 50863051!
RondaNoHechaErrorDescription
	
	^'La ronda pedida aun no empez�/termin�'! !

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:47:15'!
FAILURE!
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 19:48:28' prior: 50862793!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	
	[((cartasJugadasJ1 at: numeroRonda) mataA: (cartasJugadasJ2 at: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		
	]on: Error
	do:[self error: self class RondaNoHechaErrorDescription ]
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:48:31'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:48:31'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:48:31'!
FAILURE!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:49:06'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:49:06'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:49:06'!
FAILURE!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:49:23'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:49:23'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:49:23'!
FAILURE!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:49:44'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:49:44'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:49:44'!
FAILURE!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:49:51'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:49:57'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:50:02'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:50:07'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:50:07'!
FAILURE!

!methodRemoval: Truco #puedeTirar stamp: 'LEC 7/5/2021 19:50:41'!
puedeTirar

	^((cartasUsadasPorJugadores at:mano) size) = ((cartasUsadasPorJugadores at:pie) size) or:[(self ronda = 1) or:[ (self ganadorRonda: (self ronda)) ~= pie]]!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:51:14' prior: 50862891!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self ganoLaRonda: jugador]]! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:52:02' prior: 50863258!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self eljugador: jugador ganoLaRonda: self ronda]]! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:54:26'!
eljugador: jugador ganoLaRonda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[]	

! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:55:52' prior: 50863278!
eljugador: jugador ganoLaRonda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda) ]	
	on:Error
	do:[^false ].
	^true.
! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:56:20' prior: 50863288!
eljugador: jugador ganoLaRonda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda) ]	
	on:Error
	do:[^false ].
	^(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda)
! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:56:23'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:56:23'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:56:24'!
PASSED!

Object subclass: #Truco
	instanceVariableNames: 'mano pie ultimoEnTirar ronda cartasUsadasPorJugador1 cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 19:56:51'!
Object subclass: #Truco
	instanceVariableNames: 'mano pie ultimoEnTirar ronda cartasUsadasPorJugador1 cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #Truco
	instanceVariableNames: 'mano pie ultimoEnTirar cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 19:57:22'!
Object subclass: #Truco
	instanceVariableNames: 'mano pie ultimoEnTirar cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:58:16'!
jugadorGanador: jugador ronda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda) ]	
	on:Error
	do:[^false ].
	^(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda)
! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:58:16' prior: 50863268!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!methodRemoval: Truco #eljugador:ganoLaRonda: stamp: 'LEC 7/5/2021 19:58:16'!
eljugador: jugador ganoLaRonda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda) ]	
	on:Error
	do:[^false ].
	^(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda)
!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:58:18'!
PASSED!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:59:13' prior: 50863395!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 ) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:59:15'!
FAILURE!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:59:15'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:59:15'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:58:16' prior: 50863453!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 19:59:29'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:00:34' prior: 50863022!
test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	
	self should: [truco ganadorRonda:1] 
		raise:Error
		withMessageText: Truco RondaNoHechaErrorDescription .
	
	self should: [truco ganadorRonda:2] 
		raise:Error
		withMessageText: Truco RondaNoHechaErrorDescription  .

	self should: [truco ganadorRonda:3] 
		raise:Error
		withMessageText: Truco RondaNoHechaErrorDescription  .	
	
	
		
	! !

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:00:36'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:01:53'!
test10ElPieNoPuedeEmpezarLaPartida
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	
	self should: [truco jugador2Tira: (CartaDeTruco bastoCon: 1).] 
		raise:Error
		withMessageText: Truco noPuedeArrancarElPieErrorDescription .
	
	
		
	! !

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:01:58'!
ERROR!
!Truco class methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:02:05'!
noPuedeArrancarElPieErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:02:18' prior: 50863631!
noPuedeArrancarElPieErrorDescription
	
	^'Tiene que arrancar jugando la mano'! !

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:02:20'!
FAILURE!

truco jugador2Tira: (CartaDeTruco bastoCon: 1).!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:03:08' prior: 50863499!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) > ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:05:26'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:05:26'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:05:26'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:05:26'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:05:26'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:05:26'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:05:26'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:05:26'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:05:26'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:05:26'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:58:16' prior: 50863647!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:05:42'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:05:42'!
FAILURE!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:05:42'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:07:10' prior: 50862953!
jugador: unJugador tira: carta
	
	(unJugador cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: unJugador)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	
	self jugador: unJugador usaCarta: carta.
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:07:14'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:07:14'!
FAILURE!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:07:14'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:07:49' prior: 50861864!
ronda

	^(OrderedCollection with:((cartasUsadasPorJugadores at:mano) size) with: ((cartasUsadasPorJugadores at:mano) size) with:1) max! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:09:43' prior: 50862967!
jugador2Tira: carta

	((cartasUsadasPorJugadores at:mano) size isZero) ifTrue:[self error: self class noPuedeArrancarElPieErrorDescription ].
	self jugador: pie tira: carta
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:09:47'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:09:48'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:09:48'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:10:45'!
test11NoSePuedenTirarMasCartasSiLaPartidaTermino
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	
	self should: [truco jugador2Tira: (CartaDeTruco bastoCon: 1).] 
		raise:Error
		withMessageText: Truco noPuedeArrancarElPieErrorDescription .
	
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:11:50' prior: 50863845!
test11NoSePuedenTirarMasCartasSiLaPartidaTermino
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon: 4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 3).] 
		raise:Error
		withMessageText: Truco noPuedeTirarSiLaPartidaTerminoErrorDescription .
	
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:12:37' prior: 50863867!
test11NoSePuedenTirarMasCartasSiLaPartidaTermino
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon: 4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 3).] 
		raise:Error
		withMessageText: Truco noPuedeTirarSiLaPartidaTerminoErrorDescription .
		
	self assert: truco ganadorPartida equals: jugador1 .
	
	
		
	! !

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:13:47'!
ERROR!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:14:08' prior: 50863895!
test11NoSePuedenTirarMasCartasSiLaPartidaTermino
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon: 4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon: 3).] 
		raise:Error
		withMessageText: Truco noPuedeTirarSiLaPartidaTerminoErrorDescription .
		
	self assert: truco ganadorPartida equals: jugador1 .
	
	
		
	! !

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:14:10'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:20:44'!
cantidadCartasUsadasPor: jugador

     ^cartasUsadasPorJugadores at: (jugador) size! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:22:15' prior: 50863693!
puedeTirar:jugador

	^((self cantidadCartasUsadasPor: (self otroJugador: jugador))>=  (self cantidadCartasUsadasPor: jugador)) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:22:25'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:22:25'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:22:25'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:22:25'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:22:25'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:22:25'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:22:25'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:22:25'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:22:25'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:22:25'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:22:25'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:22:52'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:22:52'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:22:52'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:22:52'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:22:52'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:22:52'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:22:52'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:22:52'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:22:52'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:22:52'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:22:52'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 19:58:16' prior: 50863967!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugadorGanador: jugador ronda: self ronda]]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:23:09'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:23:09'!
ERROR!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:23:09'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 20:23:27'!
noPuedeTirarSiLaPartidaTerminoErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 20:23:46' prior: 50864108!
noPuedeTirarSiLaPartidaTerminoErrorDescription
	^'No se puede tirar mas si la partida termin�'! !

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:23:47'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:24:47' prior: 50863742!
jugador: unJugador tira: carta
	
	(unJugador cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: unJugador)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	(self hayGanador) ifTrue:[self error: Truco noPuedeTirarSiLaPartidaTerminoErrorDescription ].
	self jugador: unJugador usaCarta: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:28:45'!
hayGanador

	| ganadasJ1 ganadasJ2 rondas |
	rondas := 3.
	ganadasJ1 := 0.
	ganadasJ2 := 0.
	
	rondas time:[:unaRonda|
		(self jugadorGanador: mano ronda: unaRonda) 
			ifTrue:[ganadasJ1 := ganadasJ1 + 1] 
			ifFalse:[ganadasJ2 := ganadasJ2 + 1]
		].
	^(ganadasJ1 = 2) or:[ganadasJ2 = 2].
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:28:54'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:28:54'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:28:54'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:28:54'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:28:54'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:28:54'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:28:54'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:28:54'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:28:54'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:28:54'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:28:54'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:28:57'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:30:30' prior: 50864139!
hayGanador

	| ganadasJ1 ganadasJ2 rondas |
	rondas := 3.
	ganadasJ1 := 0.
	ganadasJ2 := 0.
	
	rondas timesRepeat: [:unaRonda|
		(self jugadorGanador: mano ronda: unaRonda) 
			ifTrue:[ganadasJ1 := ganadasJ1 + 1] 
			ifFalse:[ganadasJ2 := ganadasJ2 + 1]
		].
	^(ganadasJ1 = 2) or:[ganadasJ2 = 2].
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:30:33'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:30:33'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:30:33'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:30:33'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:30:34'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:30:34'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:30:34'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:30:34'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:30:34'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:30:34'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:30:34'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:30:36'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:34:31' prior: 50864194!
hayGanador

	| ganadasJ1 ganadasJ2 rondaQueVer |
	ganadasJ1 := 0.
	ganadasJ2 := 0.
	rondaQueVer :=  1.
	(self ronda) timesRepeat: [
		
		(self jugadorGanador: mano ronda: rondaQueVer) 
			ifTrue:[ganadasJ1 := ganadasJ1 + 1] 
			ifFalse:[ganadasJ2 := ganadasJ2 + 1].
		rondaQueVer := rondaQueVer + 1
		].
	^(ganadasJ1 = 2) or:[ganadasJ2 = 2].
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:34:41' prior: 50864249!
hayGanador

	| ganadasJ1 ganadasJ2 rondaQueVer |
	ganadasJ1 := 0.
	ganadasJ2 := 0.
	rondaQueVer :=  1.
	(self ronda) timesRepeat: [
		(self jugadorGanador: mano ronda: rondaQueVer) 
			ifTrue:[ganadasJ1 := ganadasJ1 + 1] 
			ifFalse:[ganadasJ2 := ganadasJ2 + 1].
		rondaQueVer := rondaQueVer + 1
		].
	^(ganadasJ1 = 2) or:[ganadasJ2 = 2].
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:34:43'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:34:43'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:34:44'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:34:44'!
ERROR!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:34:44'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:34:53'!
ganadorPartida
	self shouldBeImplemented.! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:37:36'!
rondasGanadasPor: jugador
	
	| ganadasJugador |
	ganadasJugador := 0.
	(self ronda) do: [ | rondaQueVer |
		(self jugadorGanador: jugador ronda: rondaQueVer) 
			ifTrue:[ganadasJugador := ganadasJugador + 1] 	
		].
	^ganadasJugador! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:38:15' prior: 50864323!
rondasGanadasPor: jugador
	
	| ganadasJugador rondaQueVer |
	ganadasJugador := 0.
	rondaQueVer :=  1.
	(self ronda) do: [
		(self jugadorGanador: jugador ronda: rondaQueVer) 
			ifTrue:[ganadasJugador := ganadasJugador + 1] 	
		].
	^ganadasJugador! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:40:21' prior: 50864263!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2]
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:41:43' prior: 50864319!
ganadorPartida
	
	((self rondasGanadasPor: mano) = 2) ifTrue:[^mano].
	((self rondasGanadasPor: pie) = 2) ifTrue:[^pie]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:41:46'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:41:46'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:41:46'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:41:46'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:41:46'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:41:46'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:41:46'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:41:46'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:41:46'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:41:46'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:41:46'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:41:49'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:41:59'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:41:59'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:41:59'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:41:59'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:41:59'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:41:59'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:41:59'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:41:59'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:41:59'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:41:59'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:41:59'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:42:01'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:42:12' prior: 50864334!
rondasGanadasPor: jugador
	
	| ganadasJugador rondaQueVer |
	ganadasJugador := 0.
	rondaQueVer :=  1.
	(self ronda) timesRepeat: [
		(self jugadorGanador: jugador ronda: rondaQueVer) 
			ifTrue:[ganadasJugador := ganadasJugador + 1] 	
		].
	^ganadasJugador! !

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:42:14'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:42:21'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:42:21'!
ERROR!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:42:21'!
ERROR!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:43:01'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:43:18'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:43:19'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:43:19'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:43:19'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:43:19'!
ERROR!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:43:19'!
ERROR!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:43:35'!
ERROR!

(cartasUsadasPorJugadores at:mano) size isZero!

(self hayGanador)!

(self rondasGanadasPor: mano) = 2!

cartasUsadasPorJugadores at: jugador!

cartasUsadasPorJugadores at: (self otroJugador: jugador)!

unaRonda!

unaRonda!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:47:22' prior: 50864443!
rondasGanadasPor: jugador
	
	| ganadasJugador rondaQueVer |
	ganadasJugador := 0.
	rondaQueVer :=  1.
	(self ronda) timesRepeat: [
		(self jugadorGanador: jugador ronda: rondaQueVer) 
			ifTrue:[ganadasJugador := ganadasJugador + 1] 	.
			rondaQueVer := rondaQueVer  + 1.
		].
	^ganadasJugador! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:47:25'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:47:26'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:47:26'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:48:39'!
test12NoSePuedePedirElGanadorSiLaPartidaNoTermino
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco bastoCon: 1).
	truco jugador2Tira: (CartaDeTruco bastoCon: 4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	
	
	
	self should: [truco ganadorPartida.] 
		raise:Error
		withMessageText: Truco noPuedePedirElGanadorSiNoTerminoLaPartidaErrorDescription .
		
	
	
	
		
	! !

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 20:48:44'!
ERROR!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 20:48:55'!
noPuedePedirElGanadorSiNoTerminoLaPartidaErrorDescription
	self shouldBeImplemented.! !
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 20:49:07' prior: 50864637!
noPuedePedirElGanadorSiNoTerminoLaPartidaErrorDescription
	
	^'Error partida aun no terminada'! !

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 20:49:09'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:49:43' prior: 50864351!
ganadorPartida
	
	((self rondasGanadasPor: mano) = 2) ifTrue:[^mano].
	((self rondasGanadasPor: pie) = 2) ifTrue:[^pie].
	^self error: self class noPuedePedirElGanadorSiNoTerminoLaPartidaErrorDescription ! !

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 20:49:47'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:52:20'!
test13PardaGanaLaMejor
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco oroCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco oroCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	
	
	
	self assert: truco hayGanador .
	self assert: truco ganadorPartida equals: jugador1.
	
		
	
	
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:52:27' prior: 50864708!
test13PardaGanaLaMejor
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco oroCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco oroCon: 4).
	truco jugador2Tira: (CartaDeTruco bastoCon: 4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:5 ).
	

	self assert: truco hayGanador .
	self assert: truco ganadorPartida equals: jugador1.
	
		
	
	
	
		
	! !

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 20:52:30'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:55:55' prior: 50864345!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] or:[self huboEmpateEnRonda: 1 and:[(self huboEmpateEnRonda: 2) not]]
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:56:09' prior: 50864761!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] or:[(self huboEmpateEnRonda: 1) and:[(self huboEmpateEnRonda: 2) not]]
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 20:59:29'!
huboEmpateEnRonda: unaRonda

	[ | primeraCartaJ1 primeraCartaJ2 |primeraCartaJ1 := (cartasUsadasPorJugadores at: mano) at: unaRonda.
	primeraCartaJ2 := (cartasUsadasPorJugadores at: pie) at: unaRonda.
	^primeraCartaJ1
	] on:Error
	do:[^false]
	
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:00:26' prior: 50864777!
huboEmpateEnRonda: unaRonda

	| primeraCartaJ1 primeraCartaJ2 |
	[ primeraCartaJ1 := (cartasUsadasPorJugadores at: mano) at: unaRonda.
	primeraCartaJ2 := (cartasUsadasPorJugadores at: pie) at: unaRonda.
	^(primeraCartaJ1) valor = (primeraCartaJ2 valor)
	] on:Error
	do:[^false]
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:00:31'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:00:31'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:00:31'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:01:24'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:01:24'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:01:24'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:01:52'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:02:14'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:02:30'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:02:30'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:02:30'!
ERROR!

((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2]!

self huboEmpateEnRonda: 1!

self huboEmpateEnRonda: 2!

(self huboEmpateEnRonda: 2)!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:03:49' prior: 50864769!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] or:[(self huboEmpateEnRonda: 1) and:[(self huboEmpateEnRonda: 2) ]]
	! !

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:03:51'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:04:56' prior: 50864954!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] or:[(self huboEmpateEnRonda: 1) or:[(self huboEmpateEnRonda: 2) ]]
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:05:08'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:05:08'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:05:08'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:08:41' prior: 50864965!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] 
	or:[(self huboEmpateEnRonda: 1) 
		and:[(self jugadorGanador: mano ronda: 2) 
			or: [self jugadorGanador: pie ronda: 2]]]
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:08:44'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:08:44'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:08:44'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:12:33'!
jugadorGanadorRonda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: pie .
	
	
	((cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]
! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:14:33'!
assertingPuedeTirarCarta: carta elJugador: unJugador

	(unJugador cartas includes: carta) ifFalse:[self error: Truco elJugadorNoSePuedeCartearErrorDescription ].
	(self puedeTirar: unJugador)  ifFalse:[self error: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ].
	(self hayGanador) ifTrue:[self error: Truco noPuedeTirarSiLaPartidaTerminoErrorDescription ]! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:14:34' prior: 50864124!
jugador: unJugador tira: carta
	
	self assertingPuedeTirarCarta: carta elJugador: unJugador.
	self jugador: unJugador usaCarta: carta.
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:16:07' prior: 50864653!
ganadorPartida
	
	((self rondasGanadasPor: mano) = 2) ifTrue:[^mano].
	((self rondasGanadasPor: pie) = 2) ifTrue:[^pie].
	[^self ganadorRonda:2]
	on: Error
	do:[^self error: self class noPuedePedirElGanadorSiNoTerminoLaPartidaErrorDescription ]! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:18:19' prior: 50863065!
ganadorRonda: unaRonda

	| cartaJ1 cartaJ2 |
	cartaJ1 := (cartasUsadasPorJugadores at: mano) at: unaRonda.
	cartaJ2 := (cartasUsadasPorJugadores at: pie) at: unaRonda.
	(cartaJ1 mataA: cartaJ2) 
		ifTrue:[^mano]
		ifFalse:[^mano]! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:19:12'!
FAILURE!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:19:12'!
FAILURE!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:19:12'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:19:15'!
FAILURE!

truco ganadorRonda:1!
!Truco methodsFor: 'ganadorRonda' stamp: 'LEC 7/5/2021 19:48:28' prior: 50865124!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	
	[((cartasJugadasJ1 at: numeroRonda) mataA: (cartasJugadasJ2 at: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		
	]on: Error
	do:[self error: self class RondaNoHechaErrorDescription ]
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:20:33'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:20:34'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:20:34'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:23:55'!
test14
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco bastoCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:3 ).
	
	truco jugador1Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:6 ).

	self assert: truco hayGanador .
	self assert: truco ganadorPartida equals: jugador2.
	
		
	
	
	
		
	! !

!testRun: #TrucoTest #test14 stamp: 'LEC 7/5/2021 21:23:56'!
ERROR!

!testRun: #TrucoTest #test14 stamp: 'LEC 7/5/2021 21:24:43'!
ERROR!

self hayGanador!

((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] !

self rondasGanadasPor: mano!

self rondasGanadasPor: pie!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:26:09' prior: 50865244!
test14
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:3 ).
	
	truco jugador1Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:6 ).

	self assert: truco hayGanador .
	self assert: truco ganadorPartida equals: jugador2.
	
		
	
	
	
		
	! !

!testRun: #TrucoTest #test14 stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!

!testRun: #TrucoTest #test14 stamp: 'LEC 7/5/2021 21:26:11'!
PASSED!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:26:40'!
test14LaPartidaConcluye
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:3 ).
	
	truco jugador1Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:6 ).

	self assert: truco hayGanador .
	self assert: truco ganadorPartida equals: jugador2.
	
		
	
	
	
		
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test14 stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:27:18'!
PASSED!

!methodRemoval: TrucoTest #test14 stamp: 'LEC 7/5/2021 21:27:25'!
test14
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:4 ).
	truco jugador1Tira: (CartaDeTruco bastoCon:3 ).
	
	truco jugador1Tira: (CartaDeTruco bastoCon:5 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:6 ).

	self assert: truco hayGanador .
	self assert: truco ganadorPartida equals: jugador2.
	
		
	
	
	
		
	!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:27:58' prior: 50865358!
test14LaPartidaConcluye
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	

	
	
		
	
	
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:28:00' prior: 50865463!
test14LaPartidaConcluye
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	

	truco jugador1Tira: (CartaDeTruco bastoCon:3 ).
	
		
	
	
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:28:48' prior: 50865483!
test14LaPartidaConcluye
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:3 ).] 
		raise:Error
		withMessageText: Truco  .

	.
	
		
	
	
	
		
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:29:55'!
test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:3 ).] 
		raise:Error
		withMessageText: Truco elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription  .

	.
	
		
	
	
	
		
	! !

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:29:56'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:31:01' prior: 50862948!
jugador1Tira: carta

	(self ganadorRonda: 1 ~= mano) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:31:03'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:31:03'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:31:03'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:31:03'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:31:03'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:31:03'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:31:03'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:31:04'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:31:04'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:31:36' prior: 50865556!
jugador1Tira: carta

	(self ganadorRonda: 1 ~= pie) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:35:06' prior: 50864788!
huboEmpateEnRonda: unaRonda

	| primeraCartaJ1 primeraCartaJ2 |
	[ primeraCartaJ1 := (cartasUsadasPorJugadores at: mano) at: unaRonda.
	primeraCartaJ2 := (cartasUsadasPorJugadores at: pie) at: unaRonda.
	^primeraCartaJ1 empardaCon: primeraCartaJ2
	] on:Error
	do:[^false]
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:35:15'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:35:15'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:35:15'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:35:15'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:35:15'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:35:15'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:35:15'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:35:18'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:00:26' prior: 50865625!
huboEmpateEnRonda: unaRonda

	| primeraCartaJ1 primeraCartaJ2 |
	[ primeraCartaJ1 := (cartasUsadasPorJugadores at: mano) at: unaRonda.
	primeraCartaJ2 := (cartasUsadasPorJugadores at: pie) at: unaRonda.
	^(primeraCartaJ1) valor = (primeraCartaJ2 valor)
	] on:Error
	do:[^false]
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:36:49'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:36:49'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:36:49'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:36:49'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:36:49'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:36:49'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:36:49'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:36:51'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:37:44' prior: 50865616!
jugador1Tira: carta

	
	self jugador: mano tira: carta
	
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:37:46'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:37:46'!
FAILURE!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:37:46'!
FAILURE!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:37:48'!
FAILURE!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:37:58'!
FAILURE!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:38:07'!
FAILURE!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:38:07'!
FAILURE!
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:38:46' prior: 50865504!
test14LaPartidaConcluye
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco copaCon: 1) with: (CartaDeTruco bastoCon: 3) with:( CartaDeTruco bastoCon: 5)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 2) with: (CartaDeTruco bastoCon: 4) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	
	truco jugador1Tira: (CartaDeTruco copaCon:1 ).
	truco jugador2Tira: (CartaDeTruco bastoCon:2 ).
	
	self should: [truco jugador1Tira: (CartaDeTruco bastoCon:3 ).] 
		raise:Error
		withMessageText: Truco  elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription 

	.
	
		
	
	
	
		
	! !

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:38:47'!
FAILURE!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:39:11' prior: 50865759!
jugador1Tira: carta

	(self ganadorRonda: 1 ~= pie) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:39:13'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:39:13'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:39:13'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:39:13'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:39:13'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:39:13'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:39:13'!
ERROR!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:39:14'!
ERROR!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:39:14'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:39:43'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:39:43'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:39:43'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:39:43'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:39:43'!
FAILURE!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:39:43'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:39:43'!
ERROR!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:39:46'!
ERROR!

self ganadorRonda: 1 ~= pie!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:40:15'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:41:32' prior: 50865854!
jugador1Tira: carta

	(self jugadorGanador: pie  ronda: 1) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:41:35'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:41:35'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:41:36'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:41:36'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:42:46' prior: 50865974!
jugador1Tira: carta

	((self jugadorGanador: pie  ronda: 1) and:[self cantidadCartasUsadasPor: pie = 2]) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:42:58' prior: 50866039!
jugador1Tira: carta

	((self jugadorGanador: pie  ronda: 1) and:[self cantidadCartasUsadasPor: pie = 1]) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:43:02'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:43:02'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:43:02'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:43:02'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:43:02'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:43:02'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:43:03'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:03'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:43:03'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:43:03'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:43:03'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:43:03'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:43:03'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:43:03'!
FAILURE!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:43:03'!
FAILURE!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:05'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:43:22' prior: 50863961!
cantidadCartasUsadasPor: jugador

     ^(cartasUsadasPorJugadores at: jugador) size! !

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:24'!
ERROR!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:43:28'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:43:28'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:43:28'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:29'!
ERROR!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:43:29'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:43:29'!
FAILURE!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:43:29'!
FAILURE!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:30'!
ERROR!
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:43:46' prior: 50866050!
jugador1Tira: carta

	((self jugadorGanador: pie  ronda: 1) and:[(self cantidadCartasUsadasPor: pie) = 1]) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:48'!
PASSED!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:43:53'!
PASSED!
!Truco class methodsFor: 'error handling' stamp: 'LEC 7/5/2021 21:47:43'!
rondaNoHechaErrorDescription
	
	^'La ronda pedida aun no empez�/termin�'! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:47:43' prior: 50865184!
ganadorRonda: numeroRonda
	
	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 :=  cartasUsadasPorJugadores at: mano.
	cartasJugadasJ2 :=  cartasUsadasPorJugadores at: pie.
	
	[((cartasJugadasJ1 at: numeroRonda) mataA: (cartasJugadasJ2 at: numeroRonda))
		ifTrue:[^mano]
		ifFalse:[^pie]		
	]on: Error
	do:[self error: self class rondaNoHechaErrorDescription ]
	! !
!TrucoTest methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:47:43' prior: 50863542!
test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada
	| jugador1 jugador2 truco |
	jugador1 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 4) with: (CartaDeTruco bastoCon: 2) with:( CartaDeTruco bastoCon: 3)).	
	jugador2 := Jugador conCartas:(OrderedCollection with: (CartaDeTruco bastoCon: 1) with: (CartaDeTruco bastoCon: 5) with:( CartaDeTruco bastoCon: 6)).	

	truco := Truco mano:jugador1 pie:jugador2.
	truco jugador1Tira: (CartaDeTruco bastoCon: 4).
	
	self should: [truco ganadorRonda:1] 
		raise:Error
		withMessageText: Truco rondaNoHechaErrorDescription .
	
	self should: [truco ganadorRonda:2] 
		raise:Error
		withMessageText: Truco rondaNoHechaErrorDescription  .

	self should: [truco ganadorRonda:3] 
		raise:Error
		withMessageText: Truco rondaNoHechaErrorDescription  .	
	
	
		
	! !

!methodRemoval: Truco class #RondaNoHechaErrorDescription stamp: 'LEC 7/5/2021 21:47:43'!
RondaNoHechaErrorDescription
	
	^'La ronda pedida aun no empez�/termin�'!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:47:46'!
PASSED!

Object subclass: #Truco
	instanceVariableNames: 'mano pie cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Truco category: 'ISW1-2021-1C-2doParcial' stamp: 'LEC 7/5/2021 21:51:26'!
Object subclass: #Truco
	instanceVariableNames: 'mano pie cartasUsadasPorJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:51:28'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:51:29'!
PASSED!
!Truco methodsFor: 'estado juego/ronda' stamp: 'LEC 7/5/2021 21:53:03'!
jugador: jugador ganoLaRonda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda) ]	
	on:Error
	do:[^false ].
	^(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda)
! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:53:03' prior: 50864557!
rondasGanadasPor: jugador
	
	| ganadasJugador rondaQueVer |
	ganadasJugador := 0.
	rondaQueVer :=  1.
	(self ronda) timesRepeat: [
		(self jugador: jugador ganoLaRonda: rondaQueVer) 
			ifTrue:[ganadasJugador := ganadasJugador + 1] 	.
			rondaQueVer := rondaQueVer  + 1.
		].
	^ganadasJugador! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:53:03' prior: 50865021!
hayGanador

	^((self rondasGanadasPor: mano) = 2) or:[(self rondasGanadasPor: pie) = 2] 
	or:[(self huboEmpateEnRonda: 1) 
		and:[(self jugador: mano ganoLaRonda: 2) 
			or: [self jugador: pie ganoLaRonda: 2]]]
	! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:53:03' prior: 50864055!
puedeTirar:jugador

	^((cartasUsadasPorJugadores at: (self otroJugador:jugador)) size) >= ((cartasUsadasPorJugadores at: jugador) size) or:[(self ronda = 1 and:[jugador = pie]) or:[ self jugador: jugador ganoLaRonda: self ronda]]! !
!Truco methodsFor: 'as yet unclassified' stamp: 'LEC 7/5/2021 21:53:03' prior: 50866181!
jugador1Tira: carta

	((self jugador: pie  ganoLaRonda: 1) and:[(self cantidadCartasUsadasPor: pie) = 1]) ifTrue:[self error: self class elJugadorNoSePuedeTirarFueraDeTurnoErrorDescription ] .
	self jugador: mano tira: carta
	
	
	! !

!methodRemoval: Truco #jugadorGanador:ronda: stamp: 'LEC 7/5/2021 21:53:03'!
jugadorGanador: jugador ronda: unaRonda

	| cartasJugadasJ1 cartasJugadasJ2 |
	cartasJugadasJ1 := cartasUsadasPorJugadores at: jugador.
	cartasJugadasJ2 := cartasUsadasPorJugadores at: (self otroJugador: jugador) .
	
	[(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda) ]	
	on:Error
	do:[^false ].
	^(cartasJugadasJ1 at: unaRonda) mataA: (cartasJugadasJ2 at:unaRonda)
!

!testRun: #TrucoTest #test01ElJuegoNoEmpiezaSiLosJugadoresNoTienen3Cartas stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test02ElJugador1NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test03ElJugador2NoPuedeTenerCartasRepetidas stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test04LosJugadoresNoRepitenCartasEntreEllos stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test05Jugador1NoPuedeTirarUnaCartaQueNoLePertenece stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test06elJugador1NoPuedeTirarDosVecesEnLaMismaRonda stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test07ElJuegoSabeQuienGanoLaRonda1YNoDejaAlGanadorRepetirLaCarta stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test08ElJuegoSabeQuienGanoLaRonda2YDejaTirarEnOrdenAlGanador stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test09NoSePuedePedirElGanadorDeUnaRondaNoJugadaOTerminada stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test10ElPieNoPuedeEmpezarLaPartida stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test11NoSePuedenTirarMasCartasSiLaPartidaTermino stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test12NoSePuedePedirElGanadorSiLaPartidaNoTermino stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test13PardaGanaLaMejor stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test14LaPartidaConcluye stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!

!testRun: #TrucoTest #test15ElJugador1NoEmpiezaLaSegundaRondaSiPerdioLaPrimera stamp: 'LEC 7/5/2021 21:53:06'!
PASSED!