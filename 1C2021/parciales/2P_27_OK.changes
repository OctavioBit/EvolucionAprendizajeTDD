----End fileIn of /Users/crivera/Downloads/ISW1-2021-1C-2doParcial.st----!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:35:57'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:47:35'!
Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'lilmonk3y 7/5/2021 17:47:29'!
test01
	| cartas jugador jugardor |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	cartas _ jugardor cartas.
	self deny: cartas empty.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:48:05' prior: 50877253!
test01
	| cartas jugador |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	cartas _ jugador cartas.
	self deny: cartas empty.
	! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:48:07'!
ERROR!
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:48:16'!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3 
	self shouldBeImplemented.! !
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:49:00' prior: 50877275!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3 
	^ self new initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3.! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:49:03'!
ERROR!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:49:12'!
Object subclass: #Jugador
	instanceVariableNames: 'cartaDeTruco'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:49:13'!
Object subclass: #Jugador
	instanceVariableNames: 'cartaDeTruco cartaDeTruco2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:49:13'!
Object subclass: #Jugador
	instanceVariableNames: 'cartaDeTruco cartaDeTruco2 cartaDeTruco3'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Jugador methodsFor: 'initialization' stamp: 'lilmonk3y 7/5/2021 17:49:13'!
initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3 
	self shouldBeImplemented.
	cartaDeTruco := aCartaDeTruco.
	cartaDeTruco2 := aCartaDeTruco2.
	cartaDeTruco3 := aCartaDeTruco3.! !
!Jugador methodsFor: 'initialization' stamp: 'lilmonk3y 7/5/2021 17:50:06' prior: 50877317!
initializeCon: unaPrimerCarta con: unaSegundaCarta con: unaTercerCarta 
	cartaDeTruco := unaPrimerCarta.
	cartaDeTruco2 := unaSegundaCarta.
	cartaDeTruco3 := unaTercerCarta.! !

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:50:15'!
Object subclass: #Jugador
	instanceVariableNames: 'primerCarta cartaDeTruco2 cartaDeTruco3'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:50:15' prior: 50877327!
initializeCon: unaPrimerCarta con: unaSegundaCarta con: unaTercerCarta 
	primerCarta := unaPrimerCarta.
	cartaDeTruco2 := unaSegundaCarta.
	cartaDeTruco3 := unaTercerCarta.! !

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:50:22'!
Object subclass: #Jugador
	instanceVariableNames: 'primerCarta segundaCarta cartaDeTruco3'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:50:22' prior: 50877345!
initializeCon: unaPrimerCarta con: unaSegundaCarta con: unaTercerCarta 
	primerCarta := unaPrimerCarta.
	segundaCarta := unaSegundaCarta.
	cartaDeTruco3 := unaTercerCarta.! !

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 17:50:30'!
Object subclass: #Jugador
	instanceVariableNames: 'primerCarta segundaCarta tercerCarta'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:50:30' prior: 50877363!
initializeCon: unaPrimerCarta con: unaSegundaCarta con: unaTercerCarta 
	primerCarta := unaPrimerCarta.
	segundaCarta := unaSegundaCarta.
	tercerCarta := unaTercerCarta.! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:50:35'!
ERROR!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:50:46'!
cartas
	self shouldBeImplemented.! !
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:51:08' prior: 50877392!
cartas
	^ OrderedCollection new! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:51:10'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:51:39' prior: 50877263!
test01
	| cartas jugador |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	cartas _ jugador cartas.
	self deny: cartas isEmpty.
	! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:51:41'!
FAILURE!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:52:24' prior: 50877397!
cartas
	^ OrderedCollection with: primerCarta with: segundaCarta with: tercerCarta ! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:52:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:52:27'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:54:41' prior: 50877404!
test01
	| cartas jugador |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	cartas _ jugador cartas.
	self deny: cartas isEmpty.
	self deny: jugador primerCarta = jugador segundaCarta.
	! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:54:45'!
ERROR!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:54:53'!
primerCarta
	self shouldBeImplemented.
	^primerCarta! !
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:54:58' prior: 50877443!
primerCarta
	^primerCarta! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:55:00'!
ERROR!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:55:07'!
segundaCarta
	self shouldBeImplemented.
	^segundaCarta! !
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:55:13' prior: 50877454!
segundaCarta
	^segundaCarta! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:55:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:55:15'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:56:26' prior: 50877429!
test01
	| jugador |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	self deny: jugador primerCarta = jugador segundaCarta.
	self deny: jugador primerCarta = jugador tercerCarta.
	self deny: jugador segundaCarta = jugador tercerCarta.
	! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:56:36'!
ERROR!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:56:41'!
tercerCarta
	self shouldBeImplemented.
	^tercerCarta! !
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:56:51' prior: 50877484!
tercerCarta
	^tercerCarta! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:56:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:56:53'!
PASSED!

!methodRemoval: Jugador #cartas stamp: 'lilmonk3y 7/5/2021 17:56:57'!
cartas
	^ OrderedCollection with: primerCarta with: segundaCarta with: tercerCarta !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:57:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 17:57:01'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:57:51'!
test02
	| jugador |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada .
	
	self deny: jugador primerCarta = jugador segundaCarta.
	self deny: jugador primerCarta = jugador tercerCarta.
	self deny: jugador segundaCarta = jugador tercerCarta.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 17:57:53' prior: 50877508!
test02
	| jugador |
	jugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada.
	
	self deny: jugador primerCarta = jugador segundaCarta.
	self deny: jugador primerCarta = jugador tercerCarta.
	self deny: jugador segundaCarta = jugador tercerCarta.
	! !

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 17:57:55'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:00:20' prior: 50877522!
test02
	

	self should: [Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada] raise: Error - MessageNotUnderstood  description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:00:45' prior: 50877538!
test02
	
	self should: [
		Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:00:55' prior: 50877550!
test02
	
	self should: [Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:01:13' prior: 50877562!
test02
	
	self should: [Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:01:14'!
ERROR!
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:01:24'!
noSePuedenCrearJugadoresCarteadosMensajeDeError
	self shouldBeImplemented.! !
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:02:02' prior: 50877588!
noSePuedenCrearJugadoresCarteadosMensajeDeError
	^ 'el jugador no tiene unas cartas correctas para un �nico maso'! !

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:02:05'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:02:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:02:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:02:20'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:02:20'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:02:27'!
FAILURE!
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:03:55' prior: 50877282!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3
	aCartaDeTruco = aCartaDeTruco2 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	
	^ self new initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3.! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:03:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:03:58'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:04:18'!
test03
	
	self should: [Jugador con: CartaDeTruco anchoDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:04:27' prior: 50877574!
test02
	
	self should: [Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco anchoDeEspada ] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:04:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:04:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:04:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:04:31'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:04:31'!
FAILURE!
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:05:12' prior: 50877617!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3
	aCartaDeTruco = aCartaDeTruco2 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	aCartaDeTruco2  = aCartaDeTruco3 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	^ self new initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3.! !

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:05:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:05:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:05:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:05:14'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:06:03'!
test04
	
	self should: [Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:06:05'!
FAILURE!
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:06:22' prior: 50877670!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3
	aCartaDeTruco = aCartaDeTruco2 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	aCartaDeTruco2  = aCartaDeTruco3 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	aCartaDeTruco  = aCartaDeTruco3 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	^ self new initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3.! !

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:06:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:06:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:06:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:06:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:06:25'!
PASSED!
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:07:53'!
asegurarQueNoSonIguales: aCartaDeTruco2 y: aCartaDeTruco

	^ aCartaDeTruco = aCartaDeTruco2 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ]! !
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:07:53' prior: 50877709!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3
	self asegurarQueNoSonIguales: aCartaDeTruco2 y: aCartaDeTruco.
	aCartaDeTruco2  = aCartaDeTruco3 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	aCartaDeTruco  = aCartaDeTruco3 ifTrue: [self error: self noSePuedenCrearJugadoresCarteadosMensajeDeError ].
	^ self new initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3.! !
!Jugador class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:08:55' prior: 50877749!
con: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3
	self asegurarQueNoSonIguales: aCartaDeTruco2 y: aCartaDeTruco.
	self asegurarQueNoSonIguales: aCartaDeTruco2 y: aCartaDeTruco3.
	self asegurarQueNoSonIguales: aCartaDeTruco3 y: aCartaDeTruco.

	^ self new initializeCon: aCartaDeTruco con: aCartaDeTruco2 con: aCartaDeTruco3.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:09:08' prior: 50877695!
test04
	
	self should: [Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: Jugador noSePuedenCrearJugadoresCarteadosMensajeDeError! !

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 18:13:21'!
Object subclass: #Ronda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'nil' stamp: 'lilmonk3y 7/5/2021 18:13:10'!
test05
	
	| primerJugador ronda segundoJugador |
	primerJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ Jugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	
	ronda _ Ronda con: primerJugador y: segundoJugador.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:13:54'!
_test05
	
	| primerJugador ronda segundoJugador |
	primerJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ Jugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	
	ronda _ Ronda con: primerJugador y: segundoJugador.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:16:18' prior: 50877798!
test05
	
	| primerJugador segundoJugador |
	primerJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:16:30'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:16:37'!
losJugadoresDebenTenerCartasDistintasDescripcionDeError
	self shouldBeImplemented.! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:17:02' prior: 50877847!
losJugadoresDebenTenerCartasDistintasDescripcionDeError
	^ 'los jugadores no pueden tener cartas repetidas entre ellos'! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:17:04' prior: 50877853!
losJugadoresDebenTenerCartasDistintasDescripcionDeError
	^ 'los jugadores no pueden tener cartas repetidas entre ellos'! !

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:17:07'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:17:14'!
con: aJugador y: aJugador2 
	self shouldBeImplemented.! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:17:47' prior: 50877870!
con: aJugador y: aJugador2 
	^ self new initializeCon: aJugador y: aJugador2 ! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:18:03' prior: 50877875!
con: unPrimerJugador y: aJugador2 
	^ self new initializeCon: unPrimerJugador y: aJugador2 ! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:18:22' prior: 50877881!
con: unPrimerJugador y: unSegundoJugador 
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:20:30' prior: 50877888!
con: unPrimerJugador y: unSegundoJugador
	unPrimerJugador primerCarta  = unSegundoJugador primerCarta  ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:20:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:20:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:20:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:20:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:20:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:20:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:21:06'!
test06
	
	| primerJugador segundoJugador |
	primerJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ Jugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:21:23'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:23:01' prior: 50877895!
con: unPrimerJugador y: unSegundoJugador
	unPrimerJugador primerCarta  = unSegundoJugador primerCarta  ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	unPrimerJugador segundaCarta  = unSegundoJugador segundaCarta  ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:23:03'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:23:34'!
test07
	
	| primerJugador segundoJugador |
	primerJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ Jugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco  bastoCon: 5) con: CartaDeTruco anchoDeEspada.
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 18:23:36'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:23:59' prior: 50877943!
con: unPrimerJugador y: unSegundoJugador
	unPrimerJugador primerCarta  = unSegundoJugador primerCarta  ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	unPrimerJugador segundaCarta  = unSegundoJugador segundaCarta  ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	unPrimerJugador tercerCarta  = unSegundoJugador tercerCarta  ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 18:24:02'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:28:59'!
test08
	
	| primerJugador segundoJugador |
	primerJugador _ Jugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ Jugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco  bastoCon: 5) con: CartaDeTruco sieteDeEspada .
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 18:29:03'!
ERROR!
!Jugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:31:12'!
cartas
	^ OrderedCollection with: primerCarta with: segundaCarta with: tercerCarta ! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:37:06' prior: 50877998!
con: unPrimerJugador y: unSegundoJugador
	(unPrimerJugador cartas anySatisfy: [:carta | unSegundoJugador cartas includes: carta]) ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 18:37:16'!
PASSED!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:38:07'!
hayAlgunaCartaDe: unSegundoJugador enLasCartasDe: unPrimerJugador

	^ unPrimerJugador cartas anySatisfy: [:carta | unSegundoJugador cartas includes: carta]! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:38:08' prior: 50878065!
con: unPrimerJugador y: unSegundoJugador
	(self hayAlgunaCartaDe: unSegundoJugador enLasCartasDe: unPrimerJugador) ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError].
	
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:38:49'!
asegurarQueLasCartasDe: unPrimerJugador noContienenCartasDe: unSegundoJugador

	^ (self hayAlgunaCartaDe: unSegundoJugador enLasCartasDe: unPrimerJugador) ifTrue: [self error: self losJugadoresDebenTenerCartasDistintasDescripcionDeError]! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:38:49' prior: 50878109!
con: unPrimerJugador y: unSegundoJugador
	self asegurarQueLasCartasDe: unPrimerJugador noContienenCartasDe: unSegundoJugador.
	
	^ self new initializeCon: unPrimerJugador y: unSegundoJugador ! !

!classRenamed: #Jugador as: #ManoDeJugador stamp: 'lilmonk3y 7/5/2021 18:39:18'!
Smalltalk renameClassNamed: #Jugador as: #ManoDeJugador!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50878039!
test08
	
	| primerJugador segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco  bastoCon: 5) con: CartaDeTruco sieteDeEspada .
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877922!
test06
	
	| primerJugador segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877633!
test03
	
	self should: [ManoDeJugador con: CartaDeTruco anchoDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: ManoDeJugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877469!
test01
	| jugador |
	jugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	self deny: jugador primerCarta = jugador segundaCarta.
	self deny: jugador primerCarta = jugador tercerCarta.
	self deny: jugador segundaCarta = jugador tercerCarta.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877780!
test04
	
	self should: [ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeEspada  con: CartaDeTruco sieteDeEspada] 
		raise: Error - MessageNotUnderstood  
		description: ManoDeJugador noSePuedenCrearJugadoresCarteadosMensajeDeError! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877977!
test07
	
	| primerJugador segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco  bastoCon: 5) con: CartaDeTruco anchoDeEspada.
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877645!
test02
	
	self should: [ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  sieteDeEspada  con: CartaDeTruco anchoDeEspada ] 
		raise: Error - MessageNotUnderstood  
		description: ManoDeJugador noSePuedenCrearJugadoresCarteadosMensajeDeError
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877827!
test05
	
	| primerJugador segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	self should: [Ronda con: primerJugador y: segundoJugador.] raise: Error - MessageNotUnderstood  description: Ronda losJugadoresDebenTenerCartasDistintasDescripcionDeError! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:39:18' prior: 50877812!
_test05
	
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	
	ronda _ Ronda con: primerJugador y: segundoJugador.! !

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 18:39:51'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:50:30'!
test09
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	self assert: (ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta)! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:55:59' prior: 50878310!
test09
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	
	self deny: ronda hayGanador.
	self assert: 1 equals: (ronda manosGanadasPor: primerJugador).
	self assert: 0 equals: (ronda manosGanadasPor: segundoJugador)! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 18:56:10'!
ERROR!

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 18:56:18'!
Object subclass: #Ronda
	instanceVariableNames: 'unPrimerJugador_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 18:56:18'!
Object subclass: #Ronda
	instanceVariableNames: 'unPrimerJugador_CHANGE_ME unSegundoJugador_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Ronda methodsFor: 'initialization' stamp: 'lilmonk3y 7/5/2021 18:56:18'!
initializeCon: unPrimerJugador y: unSegundoJugador 
	self shouldBeImplemented.
	unPrimerJugador_CHANGE_ME := unPrimerJugador.
	unSegundoJugador_CHANGE_ME := unSegundoJugador.! !
!Ronda methodsFor: 'initialization' stamp: 'lilmonk3y 7/5/2021 18:56:32' prior: 50878369!
initializeCon: unPrimerJugador y: unSegundoJugador 
	unPrimerJugador_CHANGE_ME := unPrimerJugador.
	unSegundoJugador_CHANGE_ME := unSegundoJugador.! !

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 18:56:55'!
Object subclass: #Ronda
	instanceVariableNames: 'mano unSegundoJugador_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:56:55' prior: 50878378!
initializeCon: unPrimerJugador y: unSegundoJugador 
	mano := unPrimerJugador.
	unSegundoJugador_CHANGE_ME := unSegundoJugador.! !

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 18:57:02'!
Object subclass: #Ronda
	instanceVariableNames: 'mano pie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:57:02' prior: 50878394!
initializeCon: unPrimerJugador y: unSegundoJugador 
	mano := unPrimerJugador.
	pie := unSegundoJugador.! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 18:57:11'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:57:23'!
primerMano: aCartaDeTruco contra: aCartaDeTruco2 
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:57:30' prior: 50878418!
primerMano: aCartaDeTruco contra: aCartaDeTruco2 
	! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 18:57:32'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:57:40'!
hayGanador
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:57:51' prior: 50878431!
hayGanador
	^ false! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 18:57:53'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:57:59'!
manosGanadasPor: aManoDeJugador 
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:59:27' prior: 50878442!
manosGanadasPor: aManoDeJugador 
	aManoDeJugador = mano ifTrue: [1] ifFalse: [0]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 18:59:37' prior: 50878447!
manosGanadasPor: aManoDeJugador 
	^aManoDeJugador = mano ifTrue: [1] ifFalse: [0]! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 18:59:38'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:00:31' prior: 50878328!
test09
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	
	self deny: ronda hayGanador.
	self assert: 1 equals: ronda manosGanadasMano.
	self assert: 0 equals: ronda manosGanadasPorPie! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:00:37'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:00:43'!
manosGanadasMano
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:00:51' prior: 50878508!
manosGanadasMano
	^1! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:00:53'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:00:59'!
manosGanadasPorPie
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:01:06' prior: 50878519!
manosGanadasPorPie
	^0! !

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:08'!
PASSED!

!methodRemoval: Ronda #manosGanadasPor: stamp: 'lilmonk3y 7/5/2021 19:01:21'!
manosGanadasPor: aManoDeJugador 
	^aManoDeJugador = mano ifTrue: [1] ifFalse: [0]!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 19:01:35'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 19:01:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 19:01:48'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:01:55'!
PASSED!

!methodRemoval: RondaDeTrucoTest #_test05 stamp: 'lilmonk3y 7/5/2021 19:03:01'!
_test05
	
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	
	ronda _ Ronda con: primerJugador y: segundoJugador.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:13:51'!
test10
	| primerJugador ronda segundoJugador |
	
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	
	self deny: ronda hayGanador.
	self assert: 1 equals: ronda manosGanadasMano.
	self assert: 0 equals: ronda manosGanadasPorPie! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:15:41' prior: 50878887!
test10
	| primerJugador ronda segundoJugador |
	
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	
	self deny: ronda hayGanador.
	self assert: 0 equals: ronda manosGanadasMano.
	self assert: 1 equals: ronda manosGanadasPorPie! !

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:15:50'!
FAILURE!

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 19:17:04'!
Object subclass: #Ronda
	instanceVariableNames: 'mano pie puntosMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:17:01' prior: 50878424!
primerMano: aCartaDeTruco contra: aCartaDeTruco2 
	puntosMano _ puntosMano+1! !

!classDefinition: #Ronda category: 'ISW1-2021-1C-2doParcial' stamp: 'lilmonk3y 7/5/2021 19:19:10'!
Object subclass: #Ronda
	instanceVariableNames: 'mano pie puntosMano puntosPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:19:09' prior: 50878941!
primerMano: aCartaDeTruco contra: aCartaDeTruco2 
	(aCartaDeTruco mataA: aCartaDeTruco2) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !
!Ronda methodsFor: 'initialization' stamp: 'lilmonk3y 7/5/2021 19:20:09' prior: 50878409!
initializeCon: unPrimerJugador y: unSegundoJugador 
	mano := unPrimerJugador.
	pie := unSegundoJugador.
	
	puntosMano := 0.
	puntosPie := 0.! !

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:20:26'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:20:44' prior: 50878513!
manosGanadasMano
	^puntosMano ! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:20:52' prior: 50878524!
manosGanadasPorPie
	^puntosPie ! !

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:21:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:21:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:21:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:21:20'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:21:56'!
test11
	| primerJugador ronda segundoJugador |
	
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco espadaCon: 4) con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	
	self deny: ronda hayGanador.
	self assert: 1 equals: ronda manosGanadasMano.
	self assert: 1 equals: ronda manosGanadasPorPie! !

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 19:22:01'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:24:41' prior: 50878955!
primerMano: aCartaDeTruco contra: aCartaDeTruco2 
	(aCartaDeTruco  empardaCon: aCartaDeTruco2) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(aCartaDeTruco mataA: aCartaDeTruco2) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 19:24:41'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:30:11'!
test12
	| primerJugador ronda segundoJugador |
	
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco espadaCon: 4) con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	self should: [
		ronda primerMano: CartaDeTruco sieteDeOro contra: segundoJugador primerCarta.] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:error | 
			self assert: Ronda noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError equals: error messageText.
			self deny: ronda hayGanador.
			self assert: 0 equals: ronda manosGanadasMano.
			self assert: 0 equals: ronda manosGanadasPorPie]
	
	
	! !

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 19:30:27'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:31:01' prior: 50879037!
primerMano: cartaDeMano contra: aCartaDeTruco2 
	(cartaDeMano  empardaCon: aCartaDeTruco2) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: aCartaDeTruco2) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:31:08' prior: 50879109!
primerMano: cartaDeMano contra: cartaDePie 
	(cartaDeMano  empardaCon: cartaDePie) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: cartaDePie) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:33:38' prior: 50879122!
primerMano: cartaDeMano contra: cartaDePie

	(mano cartas includes: cartaDeMano) ifFalse: [self error: self class noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError].
	
	(cartaDeMano  empardaCon: cartaDePie) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: cartaDePie) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 19:33:42'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:33:48'!
noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError
	self shouldBeImplemented.! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:34:32' prior: 50879153!
noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError
	^ 'no se pueden usar cartas que no estaban en tu mano al comienzo de la ronda'! !

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 19:34:33'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:35:26'!
test13
	| primerJugador ronda segundoJugador |
	
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco espadaCon: 4) con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	self should: [
		ronda primerMano: primerJugador primerCarta contra: CartaDeTruco sieteDeOro] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:error | 
			self assert: Ronda noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError equals: error messageText.
			self deny: ronda hayGanador.
			self assert: 0 equals: ronda manosGanadasMano.
			self assert: 0 equals: ronda manosGanadasPorPie]
	
	
	! !

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 19:35:28'!
FAILURE!
!ManoDeJugador methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:36:41'!
contiene: unaCarta
	^ self cartas includes: unaCarta! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:37:20' prior: 50879134!
primerMano: cartaDeMano contra: cartaDePie

	(mano contiene: cartaDeMano) ifFalse: [self error: self class noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError].
	
	(cartaDeMano  empardaCon: cartaDePie) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: cartaDePie) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:38:33'!
asegurarQue: jugador empezoLaPartidaCon: unaCarta

	^(jugador contiene: unaCarta) ifFalse: [self error: self class noSePuedeJugarConCartasQueNoTePertenecenDescripcionDeError].
	
! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:39:07' prior: 50879235!
primerMano: cartaDeMano contra: cartaDePie

	self asegurarQue: mano empezoLaPartidaCon: cartaDeMano.
	
	(cartaDeMano  empardaCon: cartaDePie) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: cartaDePie) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:39:23' prior: 50879260!
primerMano: cartaDeMano contra: cartaDePie

	self asegurarQue: mano empezoLaPartidaCon: cartaDeMano.
	self asegurarQue: pie empezoLaPartidaCon: cartaDePie.
	
	(cartaDeMano  empardaCon: cartaDePie) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: cartaDePie) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:39:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:39:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 19:39:40'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-segunda' stamp: 'lilmonk3y 7/5/2021 19:47:01'!
test15
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador tercerCarta contra: segundoJugador segundaCarta .
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 2 equals: ronda manosGanadasMano.
	self assert: 0 equals: ronda manosGanadasPorPie.
	! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:47:07'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:47:14'!
segundaMano: aCartaDeTruco contra: aCartaDeTruco2 
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:47:59' prior: 50879351!
segundaMano: aCartaDeTruco contra: aCartaDeTruco2 
	puntosMano _ puntosMano +1! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:48:01'!
FAILURE!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:48:07'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:49:19' prior: 50878436!
hayGanador
	^ puntosMano = 2! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:49:24'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:49:30'!
ganador
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:49:40' prior: 50879375!
ganador
	^ mano! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:49:42'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-segunda' stamp: 'lilmonk3y 7/5/2021 19:50:02'!
test14
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador tercerCarta contra: segundoJugador segundaCarta .
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 2 equals: ronda manosGanadasMano.
	self assert: 0 equals: ronda manosGanadasPorPie.
	! !

!methodRemoval: RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:50:02'!
test15
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador tercerCarta contra: segundoJugador segundaCarta .
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 2 equals: ronda manosGanadasMano.
	self assert: 0 equals: ronda manosGanadasPorPie.
	!
!RondaDeTrucoTest methodsFor: 'mano-segunda' stamp: 'lilmonk3y 7/5/2021 19:52:53'!
test15
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador tercerCarta contra: segundoJugador segundaCarta .
	
	self assert: ronda hayGanador.
	self assert: segundoJugador equals: ronda ganador.
	self assert: 0 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:52:56'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:53:47' prior: 50879368!
hayGanador
	^ puntosMano = 2 or: [puntosPie = 2]! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:53:53'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:55:55'!
jugarManoEntre: cartaDeMano y: cartaDePie

	self asegurarQue: mano empezoLaPartidaCon: cartaDeMano.
	self asegurarQue: pie empezoLaPartidaCon: cartaDePie.
	
	(cartaDeMano  empardaCon: cartaDePie) 
		ifTrue: [
			puntosMano _ puntosMano +1.
			puntosPie _ puntosPie +1.
			^self].
	
	(cartaDeMano mataA: cartaDePie) 
		ifTrue:[puntosMano _ puntosMano+1] 
		ifFalse: [puntosPie _ puntosPie +1].! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:56:20' prior: 50879274!
primerMano: cartaDeMano contra: cartaDePie

	self jugarManoEntre: cartaDeMano y: cartaDePie ! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:57:19' prior: 50879357!
segundaMano: cartaDeMano contra: cartaDePie 

	self jugarManoEntre: cartaDeMano y: cartaDePie! !

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 19:58:46'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:59:48' prior: 50879380!
ganador
	^ puntosMano < puntosPie ifTrue: [^ pie]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:00:03' prior: 50879539!
ganador
	puntosMano < puntosPie ifTrue: [^ pie].
	^mano! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:00:05'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-segunda' stamp: 'lilmonk3y 7/5/2021 20:02:25'!
test16
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	
	self assert: ronda hayGanador.
	self assert: segundoJugador equals: ronda ganador.
	self assert: 0 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	! !
!RondaDeTrucoTest methodsFor: 'mano-segunda' stamp: 'lilmonk3y 7/5/2021 20:03:12' prior: 50879588!
test16
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	
	self deny: ronda hayGanador.
	self assert: 1 equals: ronda manosGanadasMano.
	self assert: 1 equals: ronda manosGanadasPorPie.
	! !

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:03:18'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-segunda' stamp: 'lilmonk3y 7/5/2021 20:05:27'!
test17
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	self should: [ronda ganador] raise: Error - MessageNotUnderstood 
		description: Ronda noHayGanadorAunDescripcionDeError
	! !

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:05:32'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:05:40'!
noHayGanadorAunDescripcionDeError
	self shouldBeImplemented.! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:06:06' prior: 50879703!
noHayGanadorAunDescripcionDeError
	^ 'no hay ganador a�n'! !

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:06:07'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:07:04' prior: 50879544!
ganador
	self hayGanador ifFalse: [self error: self class noHayGanadorAunDescripcionDeError].
	
	puntosMano < puntosPie ifTrue: [^ pie].
	^mano! !

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:07:06'!
PASSED!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:07:28'!
asegurarQueHayGanador

	^ self hayGanador ifFalse: [self error: self class noHayGanadorAunDescripcionDeError]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:07:28' prior: 50879717!
ganador
	self asegurarQueHayGanador.
	
	puntosMano < puntosPie ifTrue: [^ pie].
	^mano! !

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:07:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:13:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:13:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:13:45'!
PASSED!
!RondaDeTrucoTest methodsFor: 'prioridad-de-juego' stamp: 'lilmonk3y 7/5/2021 20:23:19'!
test18
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	"gana el segundo jugador, aka pie"
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	"el jugador mano no tiene prioridad de juego"
	self should: [ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [:error | 
		self assert: Ronda elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError equals: error messageText.
		self deny: ronda hayGanador.
		self assert: 0 equals: ronda manosGanadasMano.
		self assert: 1 equals: ronda manosGanadasPorPie.]
	
	
	! !

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:23:27'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:24:47' prior: 50879530!
segundaMano: cartaDelAnteriorGanador contra: cartaDePie 

	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDePie! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:25:00' prior: 50880028!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 

	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:29:39' prior: 50880035!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	
	((puntosPie = 1) and: [pie contiene: cartaDelAnteriorGanador]) ifFalse: [self error: self elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:29:42'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:29:48'!
elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:30:17' prior: 50880058!
elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError
	^ 'el jugador no tiene prioridad de juego en esta ronda'! !

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:30:19'!
ERROR!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:30:38'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:31:08' prior: 50880043!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	
	((puntosPie = 1) and: [pie contiene: cartaDelAnteriorGanador]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:31:20'!
elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError
	^ 'el jugador no tiene prioridad de juego en esta ronda'! !

!methodRemoval: Ronda #elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError stamp: 'lilmonk3y 7/5/2021 20:31:30'!
elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError
	^ 'el jugador no tiene prioridad de juego en esta ronda'!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:31:34'!
PASSED!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:37:00' prior: 50880076!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	(ganoPie and: [(pie contiene: cartaDelAnteriorGanador) not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:37:44'!
ganoPie: cartaDelAnteriorGanador peroLaPrimerCartaNoEsSuya: ganoPie

	^ ganoPie and: [(pie contiene: cartaDelAnteriorGanador) not]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:37:44' prior: 50880153!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	(self ganoPie: cartaDelAnteriorGanador peroLaPrimerCartaNoEsSuya: ganoPie) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:38:48' prior: 50880175!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	ganoPie _ self ganoPie: cartaDelAnteriorGanador peroLaPrimerCartaNoEsSuya: ganoPie.
	(ganoPie) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:39:55'!
ganoPiePeroLaPrimerCartaNoEsSuya: cartaDelAnteriorGanador 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	^ ganoPie and: [(pie contiene: cartaDelAnteriorGanador) not]! !

!methodRemoval: Ronda #ganoPie:peroLaPrimerCartaNoEsSuya: stamp: 'lilmonk3y 7/5/2021 20:40:04'!
ganoPie: cartaDelAnteriorGanador peroLaPrimerCartaNoEsSuya: ganoPie

	^ ganoPie and: [(pie contiene: cartaDelAnteriorGanador) not]!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:41:36'!
ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	^ ganoPie and: [(pie contiene: cartaDelAnteriorGanador) not]! !

!methodRemoval: Ronda #ganoPiePeroLaPrimerCartaNoEsSuya: stamp: 'lilmonk3y 7/5/2021 20:41:36'!
ganoPiePeroLaPrimerCartaNoEsSuya: cartaDelAnteriorGanador 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	^ ganoPie and: [(pie contiene: cartaDelAnteriorGanador) not]!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:41:47' prior: 50880221!
ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	^ ganoPie and: [pie contiene: cartaDelAnteriorGanador]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:42:10' prior: 50880190!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	(ganoPie) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:42:18'!
PASSED!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:43:16' prior: 50880247!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoPeroLaPrimerCartaNoEsSuya: cartaDelAnteriorGanador.
	(ganoPie) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:43:37' prior: 50880310!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoPeroLaPrimerCartaNoEsSuya: cartaDelAnteriorGanador.
	(ganoPie and: [ganoMano]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!methodRemoval: Ronda #ganoPieYLaPrimerCartaEsSuya: stamp: 'lilmonk3y 7/5/2021 20:44:36'!
ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	^ ganoPie and: [pie contiene: cartaDelAnteriorGanador]!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:45:04'!
ganoManoPeroLaPrimerCartaNoEsSuya: cartaJugada
	| ganoMano |
	ganoMano _ self manosGanadasMano = 1.
	! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:47:41'!
ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador 
	| ganoPie |
	ganoPie _ self manosGanadasPorPie  = 1.
	^ ganoPie and: [pie contiene: cartaDelAnteriorGanador]
	! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:48:27'!
ganoManoYLaPrimerCartaEsSuya: cartaJugada
	| ganoMano |
	ganoMano _ self manosGanadasMano = 1.
	! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:48:27' prior: 50880327!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	(ganoPie and: [ganoMano]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!methodRemoval: Ronda #ganoManoPeroLaPrimerCartaNoEsSuya: stamp: 'lilmonk3y 7/5/2021 20:48:27'!
ganoManoPeroLaPrimerCartaNoEsSuya: cartaJugada
	| ganoMano |
	ganoMano _ self manosGanadasMano = 1.
	!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:50:09' prior: 50880366!
ganoManoYLaPrimerCartaEsSuya: cartaJugada
	| ganoMano |
	ganoMano _ self manosGanadasMano = 1.
	
	! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:51:11' prior: 50880396!
ganoManoYLaPrimerCartaEsSuya: cartaJugada
	| ganoMano |
	ganoMano _ self manosGanadasMano = 1.
	^ ganoMano and: [mano contiene: cartaJugada ]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:52:14' prior: 50880373!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	(ganoPie not and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:52:16'!
FAILURE!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:52:56'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:54:41' prior: 50880411!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(ganoPie not and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:54:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:55:18'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 20:56:29' prior: 50880478!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano |
	
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(ganoPie and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:56:33'!
PASSED!
!RondaDeTrucoTest methodsFor: 'prioridad-de-juego' stamp: 'lilmonk3y 7/5/2021 20:59:12'!
test19
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco espadaCon: 4) con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	"empardan la primera"
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	"el jugador pie no tiene prioridad de juego"
	self should: [ronda segundaMano: segundoJugador segundaCarta contra: primerJugador segundaCarta .] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [:error | 
		self assert: Ronda elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError equals: error messageText.
		self deny: ronda hayGanador.
		self assert: 1 equals: ronda manosGanadasMano.
		self assert: 1 equals: ronda manosGanadasPorPie.]
	
	
	! !

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 20:59:14'!
PASSED!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:02:37' prior: 50880501!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [pie cartas contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera and: [ganoPie] and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:02:50'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:03:07' prior: 50880605!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [pie cartas contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera not and: [ganoPie] and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:03:09'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:03:23' prior: 50880676!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [pie contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera not and: [ganoPie] and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:03:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:03:43'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:05:42' prior: 50880701!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [mano contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera not and: [ganoPie] and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:05:43'!
ERROR!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:05:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:05:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:06:01'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:06:46' prior: 50880778!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [mano contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera  and: [ganoPie] and: [ganoMano not]) ifFalse: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:06:47'!
ERROR!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:06:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:06:56'!
PASSED!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:11:19' prior: 50880860!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [pie contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera  or: [ganoPie not] or: [ganoMano not]) ifTrue: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError].
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:11:21'!
PASSED!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:12:08'!
prioridadDeJuego: cartaDelAnteriorGanador con: cartaDelAnteriorPerdedor

	| ganoPie ganoMano pardaLaPrimera |
	pardaLaPrimera _ self manosGanadasMano  = self manosGanadasPorPie and: [pie contiene: cartaDelAnteriorGanador ] .
	ganoPie _ self ganoPieYLaPrimerCartaEsSuya: cartaDelAnteriorGanador.
	ganoMano _ self ganoManoYLaPrimerCartaEsSuya: cartaDelAnteriorPerdedor .
	(pardaLaPrimera  or: [ganoPie not] or: [ganoMano not]) ifTrue: [self error: self class elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError]! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:12:08' prior: 50880939!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	self prioridadDeJuego: cartaDelAnteriorGanador con: cartaDelAnteriorPerdedor.
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:12:47' prior: 50881032!
segundaMano: cartaDelAnteriorGanador contra: cartaDelAnteriorPerdedor 
	"
	Estuve m�s de 30 min y no me sale contin�o con lo siguiente.
	
	self prioridadDeJuego: cartaDelAnteriorGanador con: cartaDelAnteriorPerdedor.
	"
	
	self jugarManoEntre: cartaDelAnteriorGanador y: cartaDelAnteriorPerdedor! !
!RondaDeTrucoTest methodsFor: 'prioridad-de-juego' stamp: 'lilmonk3y 7/5/2021 21:13:09'!
_test19
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco espadaCon: 4) con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	"empardan la primera"
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	"el jugador pie no tiene prioridad de juego"
	self should: [ronda segundaMano: segundoJugador segundaCarta contra: primerJugador segundaCarta .] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [:error | 
		self assert: Ronda elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError equals: error messageText.
		self deny: ronda hayGanador.
		self assert: 1 equals: ronda manosGanadasMano.
		self assert: 1 equals: ronda manosGanadasPorPie.]
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test19 stamp: 'lilmonk3y 7/5/2021 21:13:09'!
test19
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco espadaCon: 4) con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	"empardan la primera"
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	"el jugador pie no tiene prioridad de juego"
	self should: [ronda segundaMano: segundoJugador segundaCarta contra: primerJugador segundaCarta .] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [:error | 
		self assert: Ronda elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError equals: error messageText.
		self deny: ronda hayGanador.
		self assert: 1 equals: ronda manosGanadasMano.
		self assert: 1 equals: ronda manosGanadasPorPie.]
	
	
	!
!RondaDeTrucoTest methodsFor: 'prioridad-de-juego' stamp: 'lilmonk3y 7/5/2021 21:13:27'!
_test18
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	"gana el segundo jugador, aka pie"
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	"el jugador mano no tiene prioridad de juego"
	self should: [ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [:error | 
		self assert: Ronda elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError equals: error messageText.
		self deny: ronda hayGanador.
		self assert: 0 equals: ronda manosGanadasMano.
		self assert: 1 equals: ronda manosGanadasPorPie.]
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test18 stamp: 'lilmonk3y 7/5/2021 21:13:27'!
test18
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	"gana el segundo jugador, aka pie"
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	"el jugador mano no tiene prioridad de juego"
	self should: [ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [:error | 
		self assert: Ronda elJugadorNoTienePrioridadDeJuegoEnEstaManoDescripcionDeError equals: error messageText.
		self deny: ronda hayGanador.
		self assert: 0 equals: ronda manosGanadasMano.
		self assert: 1 equals: ronda manosGanadasPorPie.]
	
	
	!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:13:31'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:16:32'!
test20
	! !
!RondaDeTrucoTest methodsFor: 'prioridad-de-juego' stamp: 'lilmonk3y 7/5/2021 21:24:11'!
_testearJuegaPrimeroManoEnPrimeraMano
! !
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:35:03' prior: 50881297!
test20
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	segundoJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador tercerCarta contra: segundoJugador segundaCarta .
	self should: [ronda terceraMano: primerJugador segundaCarta contra: segundoJugador tercerCarta] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo:[ :error |
		 self assert: Ronda yaHayUnGanadorDescripcionDeError equals: error messageText.
		self assert: ronda hayGanador.
		self assert: primerJugador equals: ronda ganador.
		self assert: 2 equals: ronda manosGanadasMano.
		self assert: 0 equals: ronda manosGanadasPorPie.]
	
	! !

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:35:29'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:35:37'!
terceraMano: aCartaDeTruco contra: aCartaDeTruco2 
	self shouldBeImplemented.! !
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:36:05' prior: 50881342!
terceraMano: aCartaDeTruco contra: aCartaDeTruco2 
	self error: self class yaHayUnGanadorDescripcionDeError! !

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:36:07'!
ERROR!
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:36:14'!
yaHayUnGanadorDescripcionDeError
	self shouldBeImplemented.! !
!Ronda class methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:36:43' prior: 50881357!
yaHayUnGanadorDescripcionDeError
	^ 'la partida ya termin� y no se puede seguir jugando'! !

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:36:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 21:36:52'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:36:53'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:38:16' prior: 50881306!
test20
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: CartaDeTruco anchoDeEspada.
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador tercerCarta contra: segundoJugador segundaCarta .
	self should: [ronda terceraMano: primerJugador segundaCarta contra: segundoJugador tercerCarta] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo:[ :error |
		 self assert: Ronda yaHayUnGanadorDescripcionDeError equals: error messageText.
		self assert: ronda hayGanador.
		self assert: segundoJugador equals: ronda ganador.
		self assert: 0 equals: ronda manosGanadasMano.
		self assert: 2 equals: ronda manosGanadasPorPie.]
	
	! !

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:38:18'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:41:20'!
test21
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: CartaDeTruco anchoDeEspada  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: CartaDeTruco sieteDeEspada con: CartaDeTruco  anchoDeBasto  con: (CartaDeTruco oroCon: 1).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	ronda terceraMano: primerJugador tercerCarta contra: segundoJugador tercerCarta.
	
	self assert: ronda hayGanador.
	self assert: segundoJugador equals: ronda ganador.
	self assert: 1 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	
	! !

!testRun: #RondaDeTrucoTest #test21 stamp: 'lilmonk3y 7/5/2021 21:41:22'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:42:56' prior: 50881348!
terceraMano: aCartaDeTruco contra: aCartaDeTruco2 
	self hayGanador ifTrue: [self error: self class yaHayUnGanadorDescripcionDeError].
	
	self jugarManoEntre: aCartaDeTruco y: aCartaDeTruco2.! !

!testRun: #RondaDeTrucoTest #test21 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test21 stamp: 'lilmonk3y 7/5/2021 21:42:58'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:45:13'!
test22
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco oroCon: 4) con: (CartaDeTruco oroCon: 5)  con: (CartaDeTruco oroCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	ronda terceraMano: primerJugador tercerCarta contra: segundoJugador tercerCarta.
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 3 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	
	! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:45:15'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:47:39' prior: 50879501!
hayGanador
	^ puntosMano ~= puntosPie and: (puntosMano = 2 or: [puntosPie = 2])! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:47:41'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:50:07' prior: 50881743!
hayGanador
	^ (puntosMano = puntosPie) not and: (puntosMano ~= 2 or: [puntosPie ~= 2])! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:50:09'!
FAILURE!

(puntosMano = puntosPie) not!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:51:08' prior: 50881752!
hayGanador
	^ (puntosMano = puntosPie) not and: (puntosMano ~= 2 and: [puntosPie ~= 2])! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:51:09'!
FAILURE!

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:51:13'!
FAILURE!

(puntosMano ~= 2 and: [puntosPie ~= 2])!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:53:33' prior: 50881762!
hayGanador
	^ (puntosMano = puntosPie) not or: [puntosMano = 2] or: [puntosPie = 2]! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:53:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:53:40'!
ERROR!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 21:55:21' prior: 50881775!
hayGanador
	^ ((puntosMano = puntosPie) not) and: [puntosMano = 2] and: [puntosPie = 2]! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:55:24'!
FAILURE!
!Ronda methodsFor: 'as yet unclassified' stamp: 'lilmonk3y 7/5/2021 19:53:47' prior: 50881786!
hayGanador
	^ puntosMano = 2 or: [puntosPie = 2]! !

!testRun: #RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:55:55'!
ERROR!
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:56:07'!
_test22
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco oroCon: 4) con: (CartaDeTruco oroCon: 5)  con: (CartaDeTruco oroCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	ronda terceraMano: primerJugador tercerCarta contra: segundoJugador tercerCarta.
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 3 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	
	! !

!methodRemoval: RondaDeTrucoTest #test22 stamp: 'lilmonk3y 7/5/2021 21:56:07'!
test22
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco oroCon: 4) con: (CartaDeTruco oroCon: 5)  con: (CartaDeTruco oroCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	ronda terceraMano: primerJugador tercerCarta contra: segundoJugador tercerCarta.
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 3 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	
	!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test21 stamp: 'lilmonk3y 7/5/2021 21:56:09'!
PASSED!
!RondaDeTrucoTest methodsFor: 'mano-tercera' stamp: 'lilmonk3y 7/5/2021 21:57:06' prior: 50881802!
_test22
	| primerJugador ronda segundoJugador |
	primerJugador _ ManoDeJugador con: (CartaDeTruco bastoCon: 4) con: (CartaDeTruco bastoCon: 5)  con: (CartaDeTruco bastoCon: 6).
	segundoJugador _ ManoDeJugador con: (CartaDeTruco oroCon: 4) con: (CartaDeTruco oroCon: 5)  con: (CartaDeTruco oroCon: 6).
	ronda _ Ronda con: primerJugador y: segundoJugador.
	
	ronda primerMano: primerJugador primerCarta contra: segundoJugador primerCarta.
	ronda segundaMano: primerJugador segundaCarta contra: segundoJugador segundaCarta .
	ronda terceraMano: primerJugador tercerCarta contra: segundoJugador tercerCarta.
	
	self assert: ronda hayGanador.
	self assert: primerJugador equals: ronda ganador.
	self assert: 3 equals: ronda manosGanadasMano.
	self assert: 2 equals: ronda manosGanadasPorPie.
	
	"no me sali� la l�gica de si hay ganador y perd� tiempo debugueando eso.
	comento el test porque ya no tengo tiempo"
	
	! !

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test01 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test04 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test06 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test07 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test08 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test09 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test10 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test11 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test12 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test13 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test14 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test15 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test16 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test17 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test20 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test21 stamp: 'lilmonk3y 7/5/2021 21:57:08'!
PASSED!