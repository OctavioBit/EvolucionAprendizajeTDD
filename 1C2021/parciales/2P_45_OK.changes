

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (5 July 2021 17:01:35) as /Users/pablolopesperera/pablo/UBA/2021/ISW1/2do-parcial/macos64-base/CuisUniversity-4532.image!


----End fileIn of /Users/pablolopesperera/pablo/UBA/2021/ISW1/2do-parcial/ISW1-2021-1C-2doParcial.st----!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'plp 7/5/2021 17:17:51'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'plp 7/5/2021 17:17:51'!
PASSED!

TestCase subclass: #TrucoGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TrucoGameTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:18:03'!
TestCase subclass: #TrucoGameTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRenamed: #TrucoGameTest as: #JuegoTrucoTest stamp: 'plp 7/5/2021 17:23:34'!
Smalltalk renameClassNamed: #TrucoGameTest as: #JuegoTrucoTest!

!classRenamed: #JuegoTrucoTest as: #RondaTrucoTest stamp: 'plp 7/5/2021 17:25:56'!
Smalltalk renameClassNamed: #JuegoTrucoTest as: #RondaTrucoTest!

!classDefinition: #TrucoPlayer category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:38:29'!
Object subclass: #TrucoPlayer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:38:36'!
Object subclass: #RondaTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'nil' stamp: 'plp 7/5/2021 17:39:05'!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:39:15'!
ERROR!
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:39:22'!
withPlayer: aTrucoPlayer and: aTrucoPlayer2 
	self shouldBeImplemented.! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:40:04' prior: 50859973!
withPlayer: jugadorPie and: jugadorMano
	
	^ self new initializeWith: jugadorPie and: jugadorMano ! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:40:07'!
ERROR!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:40:13'!
Object subclass: #RondaTruco
	instanceVariableNames: 'jugadorPie_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:40:13'!
Object subclass: #RondaTruco
	instanceVariableNames: 'jugadorPie_CHANGE_ME jugadorMano_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 17:40:13'!
initializeWith: jugadorPie and: jugadorMano 
	self shouldBeImplemented.
	jugadorPie_CHANGE_ME := jugadorPie.
	jugadorMano_CHANGE_ME := jugadorMano.! !

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:40:27'!
Object subclass: #RondaTruco
	instanceVariableNames: 'jugadorPie_CHANGE_ME jugadorMano_CHANGE_ME pie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 17:40:28'!
Object subclass: #RondaTruco
	instanceVariableNames: 'jugadorPie_CHANGE_ME jugadorMano_CHANGE_ME pie mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 17:40:25' prior: 50860005!
initializeWith: jugadorPie and: jugadorMano 
	
	pie := jugadorPie.
	mano := jugadorMano.! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:40:30'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:40:37'!
esPie: aTrucoPlayer 
	self shouldBeImplemented.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:40:56' prior: 50860040!
esPie: aTrucoPlayer 
	
	^ pie = aTrucoPlayer ! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:40:57'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:41:01'!
esMano: aTrucoPlayer 
	self shouldBeImplemented.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:41:12' prior: 50860053!
esMano: aTrucoPlayer 

	^ mano = aTrucoPlayer ! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:41:13'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:41:13'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:41:19'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:41:19'!
PASSED!

----SNAPSHOT----(5 July 2021 17:41:23) CuisUniversity-4532.image priorSource: 16885703!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:42:04'!
test02CrearRondaFallaSiEsElMismoPieYMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:44:51' prior: 50860078!
test02CrearRondaFallaSiEsElMismoPieYMano

	| player1 round |
	
	player1 := TrucoPlayer new.
	
	self should: [ 	round := RondaTruco withPlayer: player1 and: player1. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco samePlayerErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:45:04' prior: 50860090!
test02CrearRondaFallaSiEsElMismoPieYMano

	| player1 |
	
	player1 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player1. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco samePlayerErrorDescription ]! !

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 17:45:09'!
FAILURE!
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:46:07' prior: 50859979!
withPlayer: jugadorPie and: jugadorMano
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco ]
	
	^ self new initializeWith: jugadorPie and: jugadorMano ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:46:22' prior: 50860119!
withPlayer: jugadorPie and: jugadorMano
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ]
	
	^ self new initializeWith: jugadorPie and: jugadorMano ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:46:25' prior: 50860128!
withPlayer: jugadorPie and: jugadorMano
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	
	^ self new initializeWith: jugadorPie and: jugadorMano ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:46:46'!
samePlayerErrorDescription
	
	^ 'El pie y la mano no pueden ser el mismo jugador'! !

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 17:46:53'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:46:53'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 17:46:53'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:47:45'!
test03RepartirCartasUnicasAJugadoresDeRonda

	| player1 |
	
	player1 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player1. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco samePlayerErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:47:56' prior: 50860163!
test03RepartirCartasUnicasAJugadoresDeRonda

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.
	
	self should: [ RondaTruco withPlayer: player1 and: player1. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco samePlayerErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:49:19' prior: 50860175!
test03RepartirCartasUnicasAJugadoresDeRonda

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:49:37'!
test03CrearRondaConCartasDeUnMazo

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:49:43' prior: 50860200!
test03CrearRondaConCartasDeUnMazo

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.! !

!methodRemoval: RondaTrucoTest #test03RepartirCartasUnicasAJugadoresDeRonda stamp: 'plp 7/5/2021 17:49:52'!
test03RepartirCartasUnicasAJugadoresDeRonda

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:50:03'!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.! !

!methodRemoval: RondaTrucoTest #test03CrearRondaConCartasDeUnMazo stamp: 'plp 7/5/2021 17:50:03'!
test03CrearRondaConCartasDeUnMazo

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2.!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:50:24' prior: 50860227!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:50:50' prior: 50860246!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := Set new.
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:51:31' prior: 50860256!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := Set new.
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:52:36' prior: 50860267!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := Set new.
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:53:33' prior: 50860281!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := Set new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:56:26' prior: 50860300!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo manoPlayer1 manoPlayer2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.
	
	manoPlayer1 := OrderedCollection new.
	manoPlayer1 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer1 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer1 add: ( CartaDeTruco copaCon: 2 ).
	
	manoPlayer2 := OrderedCollection new.
	manoPlayer2 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer2 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer2 add: ( CartaDeTruco copaCon: 2 ).
	
	self assert: (round esManoDelPie: manoPlayer1).
	self assert: (round esManoDelPie: manoPlayer2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:57:17' prior: 50860321!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo manoPlayer1 manoPlayer2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	round := RondaTruco withPlayer: player1 and: player2 withCards: mazo.
	
	manoPlayer1 := OrderedCollection new.
	manoPlayer1 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer1 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer1 add: ( CartaDeTruco copaCon: 2 ).
	
	manoPlayer2 := OrderedCollection new.
	manoPlayer2 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer2 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer2 add: ( CartaDeTruco copaCon: 2 ).
	
	self assert: (round esManoDelPie: manoPlayer1).
	self assert: (round esManoDeLaMano: manoPlayer2).! !

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 17:57:49'!
ERROR!
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:58:35'!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	
	^ self new initializeWith: jugadorPie and: jugadorMano ! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:58:35' prior: 50859959!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:58:35' prior: 50860103!
test02CrearRondaFallaSiEsElMismoPieYMano

	| player1 |
	
	player1 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player1 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco samePlayerErrorDescription ]! !

!methodRemoval: RondaTruco class #withPlayer:and: stamp: 'plp 7/5/2021 17:58:35'!
withPlayer: jugadorPie and: jugadorMano
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	
	^ self new initializeWith: jugadorPie and: jugadorMano !

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 17:58:47'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 17:58:47'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 17:58:47'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 17:58:47'!
ERROR!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 17:58:47'!
ERROR!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:59:01' prior: 50860358!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round mazo manoPlayer1 manoPlayer2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazo.
	
	manoPlayer1 := OrderedCollection new.
	manoPlayer1 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer1 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer1 add: ( CartaDeTruco copaCon: 2 ).
	
	manoPlayer2 := OrderedCollection new.
	manoPlayer2 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer2 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer2 add: ( CartaDeTruco copaCon: 2 ).
	
	self assert: (round esManoDelPie: manoPlayer1).
	self assert: (round esManoDeLaMano: manoPlayer2).! !

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 17:59:02'!
ERROR!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 17:59:09'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 17:59:16'!
esManoDelPie: anOrderedCollection 
	self shouldBeImplemented.! !

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:01:51'!
Object subclass: #RondaTruco
	instanceVariableNames: 'jugadorPie_CHANGE_ME jugadorMano_CHANGE_ME pie mano mazoMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:01:49' prior: 50860503!
esManoDelPie: unaMano

	^ mazoMano = unaMano! !

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:01:52'!
FAILURE!
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:02:39'!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie.
	mano := jugadorMano.! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:02:39' prior: 50860398!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	
	^ self new initializeWith: jugadorPie and: jugadorMano rondaMazo: mazo ! !

!methodRemoval: RondaTruco #initializeWith:and: stamp: 'plp 7/5/2021 18:02:39'!
initializeWith: jugadorPie and: jugadorMano 
	
	pie := jugadorPie.
	mano := jugadorMano.!
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:02:51' prior: 50860533!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	
	
	^ self new initializeWith: jugadorPie and: jugadorMano rondaMazo: mazo ! !

OrderedCollection new size !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:03:59' prior: 50860549!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	(mazo asSet size < 6) ifTrue: [ self error: RondaTruco notEnoughCardsErrorDescription ]
.	
	^ self new initializeWith: jugadorPie and: jugadorMano rondaMazo: mazo ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:04:07' prior: 50860561!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	(mazo asSet size < 6) ifTrue: [ self error: RondaTruco notEnoughCardsErrorDescription ].	
	
	^ self new initializeWith: jugadorPie and: jugadorMano rondaMazo: mazo ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:04:26'!
notEnoughCardsErrorDescription
	
	^ 'El mazo no tiene suficientes cartas'! !

----End fileIn of /Users/pablolopesperera/pablo/UBA/2021/ISW1/2do-parcial/macos64-base/Packages/TerseGuide.pck.st----!

aa := OrderedCollection with: 1 with: 2 with: 3!

aa from: 1 to: 2  !

aa from: 1 to: 3 put: OrderedCollection new!

aa!

aa := OrderedCollection with: 1 with: 2 with: 3.!

aa after: 1!

aa at: 1!

aa copyFrom: 1 to: 3!

aa copyFrom: 1 to: 2!

aa copyFrom: 1 to: 3!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:08:33'!
Object subclass: #RondaTruco
	instanceVariableNames: 'jugadorPie_CHANGE_ME jugadorMano_CHANGE_ME pie mano mazoMano mazoPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:08:31' prior: 50860526!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie.
	mano := jugadorMano.
	
	mazoMano := unMazo copyFrom: 1 to: 3.
	mazoPie := unMazo copyFrom: 4 to: 6.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:08:50'!
esManoDeLaMano: unaMano

	^ mazoMano = unaMano! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:08:55' prior: 50860518!
esManoDelPie: unaMano

	^ mazoPie = unaMano! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:08:57'!
ERROR!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:08:57'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:08:57'!
FAILURE!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:09:02'!
ERROR!

!classDefinition: #RondaTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:09:45'!
TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:09:43' overrides: 16927572!
setUp

	mazoDefault := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	mazoDefault add: ( CartaDeTruco anchoDeBasto ).
	mazoDefault add: ( CartaDeTruco anchoDeEspada ).
	mazoDefault add: ( CartaDeTruco copaCon: 2 ).
	mazoDefault add: ( CartaDeTruco oroCon: 3 ).
	mazoDefault add: ( CartaDeTruco bastoCon: 4 ).
	mazoDefault add: ( CartaDeTruco espadaCon: 5 ).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:09:55' prior: 50860408!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:10:00' prior: 50860421!
test02CrearRondaFallaSiEsElMismoPieYMano

	| player1 |
	
	player1 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player1 mazo: mazoDefault. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco samePlayerErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:10:12' prior: 50860460!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round manoPlayer1 manoPlayer2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	manoPlayer1 := OrderedCollection new.
	manoPlayer1 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer1 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer1 add: ( CartaDeTruco copaCon: 2 ).
	
	manoPlayer2 := OrderedCollection new.
	manoPlayer2 add: ( CartaDeTruco anchoDeBasto ).
	manoPlayer2 add: ( CartaDeTruco anchoDeEspada ).
	manoPlayer2 add: ( CartaDeTruco copaCon: 2 ).
	
	self assert: (round esManoDelPie: manoPlayer1).
	self assert: (round esManoDeLaMano: manoPlayer2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:10:44' prior: 50863618!
test03CrearRondaConCartasDeUnMazoSinRepetidos

	| player1 player2 round manoPlayer1 manoPlayer2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	manoPlayer1 := mazoDefault copyFrom: 1 to: 3.
	manoPlayer2 := mazoDefault copyFrom: 4 to: 6.
	
	self assert: (round esManoDelPie: manoPlayer1).
	self assert: (round esManoDeLaMano: manoPlayer2).! !

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:10:45'!
FAILURE!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:10:50'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:10:50'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:10:50'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:10:50'!
FAILURE!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:10:50'!
FAILURE!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:10:58'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:11:00'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:11:02'!
FAILURE!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:11:02'!
FAILURE!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:11:33'!
FAILURE!
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:13:32' prior: 50863537!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie.
	mano := jugadorMano.
	
	mazoMano := unMazo copyFrom: 4 to: 6.
	mazoPie := unMazo copyFrom: 1 to: 3.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:13:54'!
test03CrearRondaMazoVacioFalla

	| player1 player2 round manoPlayer1 manoPlayer2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	manoPlayer1 := mazoDefault copyFrom: 1 to: 3.
	manoPlayer2 := mazoDefault copyFrom: 4 to: 6.
	
	self assert: (round esManoDelPie: manoPlayer1).
	self assert: (round esManoDeLaMano: manoPlayer2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:15:11' prior: 50863708!
test03CrearRondaMazoVacioFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]! !

!testRun: #RondaTrucoTest #test03CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:15:16'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:15:16'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:15:16'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:15:16'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:15:16'!
PASSED!
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:17:56' prior: 50863699!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	pie addMano: (unMazo copyFrom: 4 to: 6) .
	mano addMano: ( unMazo copyFrom: 1 to: 3 ) .! !
!RondaTruco methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:18:01' prior: 50863755!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	pie addMano: ( unMazo copyFrom: 4 to: 6 ) .
	mano addMano: ( unMazo copyFrom: 1 to: 3 ) .! !

!classDefinition: #TrucoPlayer category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:18:42'!
Object subclass: #TrucoPlayer
	instanceVariableNames: 'mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!TrucoPlayer methodsFor: 'no messages' stamp: 'plp 7/5/2021 18:18:40'!
addMano: unaMano

	mano := unaMano! !
!TrucoPlayer methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:18:51'!
mano

	^ mano! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:19:27' prior: 50863546!
esManoDeLaMano: unaMano

	^ mano mano = unaMano! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:19:31' prior: 50863790!
esManoDeLaMano: unaMano

	^ (mano mano) = unaMano! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:19:40' prior: 50863551!
esManoDelPie: unaMano

	^ (pie mano) = unaMano! !

Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano mazoMano mazoPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:19:50'!
Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano mazoMano mazoPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:19:55'!
Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:19:57'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:19:57'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:19:57'!
FAILURE!

!testRun: #RondaTrucoTest #test03CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:19:57'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:19:57'!
FAILURE!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:20:05'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:20:07'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:20:08'!
FAILURE!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:20:08'!
FAILURE!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:20:58' prior: 50863765!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:21:01'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:21:01'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:21:01'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:21:01'!
PASSED!

Object subclass: #RondaTrucoState
	instanceVariableNames: 'pie mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoState category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:21:24'!
Object subclass: #RondaTrucoState
	instanceVariableNames: 'pie mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #RondaTrucoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoState category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:21:28'!
Object subclass: #RondaTrucoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateParda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateParda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:21:38'!
RondaTrucoState subclass: #RondaTrucoStateParda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateWinnerPie category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:21:44'!
RondaTrucoState subclass: #RondaTrucoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateWinnerMano category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:21:47'!
RondaTrucoState subclass: #RondaTrucoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStatePlaying
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStatePlaying category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:22:05'!
RondaTrucoState subclass: #RondaTrucoStatePlaying
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #RondaTrucoStateParda stamp: 'plp 7/5/2021 18:22:16'!
RondaTrucoState subclass: #RondaTrucoStateParda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #RondaTrucoStateWinnerPie stamp: 'plp 7/5/2021 18:22:16'!
RondaTrucoState subclass: #RondaTrucoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #RondaTrucoStateWinnerMano stamp: 'plp 7/5/2021 18:22:16'!
RondaTrucoState subclass: #RondaTrucoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #RondaTrucoStatePlaying stamp: 'plp 7/5/2021 18:22:17'!
RondaTrucoState subclass: #RondaTrucoStatePlaying
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #RondaTrucoState stamp: 'plp 7/5/2021 18:22:17'!
Object subclass: #RondaTrucoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

----SNAPSHOT----(5 July 2021 18:22:21) CuisUniversity-4532.image priorSource: 16909569!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:22:23'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:22:23'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:22:23'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:22:23'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:22:55'!
test04CrearRondaMazoVacioFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]! !

!methodRemoval: RondaTrucoTest #test03CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:22:55'!
test03CrearRondaMazoVacioFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]!

!testRun: #RondaTrucoTest #test04CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:22:57'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:22:57'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:22:57'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:22:57'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:22:57'!
PASSED!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:24:48' prior: 50863861!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:25:31' prior: 50860574!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	(mazo asSet size < 6) ifTrue: [ self error: RondaTruco notEnoughCardsErrorDescription ].	
	(mazo asSet size < mazo size) ifTrue: [ self error: RondaTruco notEnoughCardsErrorDescription ].	
	
	^ self new initializeWith: jugadorPie and: jugadorMano rondaMazo: mazo ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:25:44' prior: 50864070!
withPlayer: jugadorPie and: jugadorMano mazo: mazo 
	
	(jugadorPie = jugadorMano) ifTrue: [ self error: RondaTruco samePlayerErrorDescription ].
	(mazo asSet size < 6) ifTrue: [ self error: RondaTruco notEnoughCardsErrorDescription ].	
	(mazo asSet size < mazo size) ifTrue: [ self error: RondaTruco duplicatedCardsErrorDescription ].	
	
	^ self new initializeWith: jugadorPie and: jugadorMano rondaMazo: mazo ! !
!RondaTruco class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:26:01'!
duplicatedCardsErrorDescription
	
	^ 'Hay cartas duplicadas en el mazo'! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:26:22'!
test04CrearRondaMazoCartasDuplicadasFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:26:31'!
test05CrearRondaMazoVacioFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]! !

!methodRemoval: RondaTrucoTest #test04CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:26:31'!
test04CrearRondaMazoVacioFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:26:39' prior: 50864122!
test05CrearRondaMazoVacioFalla

	| player1 player2 |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: OrderedCollection new. ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:27:16' prior: 50864150!
test05CrearRondaMazoVacioFalla

	| player1 player2 mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := OrderedCollection new.
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: mazo . ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco notEnoughCardsErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:27:23' prior: 50864164!
test05CrearRondaMazoVacioFalla

	| player1 player2 mazo |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	mazo := OrderedCollection new.
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeBasto ).
	mazo add: ( CartaDeTruco anchoDeEspada ).
	mazo add: ( CartaDeTruco copaCon: 2 ).
	mazo add: ( CartaDeTruco oroCon: 3 ).
	mazo add: ( CartaDeTruco bastoCon: 4 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	mazo add: ( CartaDeTruco espadaCon: 5 ).
	
	self should: [ RondaTruco withPlayer: player1 and: player2 mazo: mazo . ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTruco duplicatedCardsErrorDescription ]! !

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:27:25'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 18:27:25'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 18:27:25'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 18:27:25'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 18:27:25'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 18:27:25'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:31:11'!
test06

	| player1 player2 mazo |
! !

Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano card'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:40:02'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano card'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano cardPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:40:05'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano cardPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:40:27'!
test06LosJugadoresJueganUnEnfrentamiento

	
! !

!methodRemoval: RondaTrucoTest #test06 stamp: 'plp 7/5/2021 18:40:35'!
test06

	| player1 player2 mazo |
!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:41:01' prior: 50864269!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:42:05' prior: 50864277!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.! !

!classDefinition: #RondaTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:42:25'!
TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:42:23' prior: 50864287!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	! !

TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:42:33'!
TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:42:41' prior: 50864308!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:44:06' prior: 50864334!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
"	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie."
	
	! !

Object subclass: #EnfrentamientoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoState category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:44:17'!
Object subclass: #EnfrentamientoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoState subclass: #EnfrentamientoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoStateWinnerPie category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:44:29'!
EnfrentamientoState subclass: #EnfrentamientoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoState subclass: #EnfrentamientoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoStateWinnerMano category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:44:32'!
EnfrentamientoState subclass: #EnfrentamientoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoState subclass: #EnfrentamientoStateParda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoStateParda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:44:37'!
EnfrentamientoState subclass: #EnfrentamientoStateParda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoState subclass: #EnfrentamientoStateInitial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoStateInitial category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:44:41'!
EnfrentamientoState subclass: #EnfrentamientoStateInitial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:44:52' prior: 50864347!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 18:44:56'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:45:03'!
jugarEnfrentamientoConCartaDeMano: aSmallInteger yCartaDePie: aSmallInteger2 
	self shouldBeImplemented.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:47:38' prior: 50864450!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	enfrentamiento := EnfrentamientoRonda jugandoMano: ( mano cardIndex: indiceDeMano ) jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	^ enfrentamiento ! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 18:47:45'!
ERROR!
!TrucoPlayer methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:47:53'!
cardIndex: aSmallInteger 
	self shouldBeImplemented.! !
!TrucoPlayer methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:48:12' prior: 50864472!
cardIndex: anIndex
	
	^ mano at: anIndex ! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 18:48:14'!
ERROR!
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:48:21'!
jugandoMano: aCartaDeTruco jugandoPie: aCartaDeTruco2 
	self shouldBeImplemented.! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:48:55' prior: 50864485!
jugandoMano: aManoCard jugandoPie: aPieCard 
	
	^ self new initializeWith: aManoCard and: aPieCard! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 18:48:57'!
ERROR!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:49:02'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano cardPie manoCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:49:03'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano cardPie manoCard pieCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:49:03'!
initializeWith: aManoCard and: aPieCard 
	self shouldBeImplemented.
	manoCard := aManoCard.
	pieCard := aPieCard.! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:49:07' prior: 50864520!
initializeWith: aManoCard and: aPieCard 
	
	manoCard := aManoCard.
	pieCard := aPieCard.! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 18:49:07'!
ERROR!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:49:14'!
play
	self shouldBeImplemented.! !

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 18:53:12'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status cardMano cardPie manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 18:53:08' prior: 50864527!
initializeWith: aManoCard and: aPieCard 
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := EnfrentamientoStateInitial new.! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:54:54' prior: 50864536!
play
	
	" La carta solo tiene que saber si mata o parda "! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:55:49' prior: 50864558!
play
	
	" La carta solo tiene que saber si mata o parda "
	cardMano ! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:56:06' prior: 50864564!
play
	
	" La carta solo tiene que saber si mata o parda "
	cardMano empardaCon: cardPie ! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:56:48' prior: 50864570!
play
	
	" La carta solo tiene que saber si mata o parda "
	state empardada: (cardMano empardaCon: cardPie).! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:57:15' prior: 50864577!
play
	
	" La carta solo tiene que saber si mata o parda "
	state := state empardada: (cardMano empardaCon: cardPie).
	! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:57:39' prior: 50864584!
play
	
	" La carta solo tiene que saber si mata o parda "
	state := state empardada: (cardMano empardaCon: cardPie).
	state := state ganaMano: (cardMano mataA: cardPie).
	! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:57:45' prior: 50864592!
play
	
	" La carta solo tiene que saber si mata o parda "
	state := state emparda: (cardMano empardaCon: cardPie).
	state := state ganaMano: (cardMano mataA: cardPie).
	! !
!EnfrentamientoState methodsFor: 'nil' stamp: 'plp 7/5/2021 18:58:16'!
emparda: aCase! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 18:58:25' prior: 50864609!
emparda: aCase

	self subclassResponsibility ! !
!EnfrentamientoStateInitial methodsFor: 'nil' stamp: 'plp 7/5/2021 18:58:59' overrides: 50864613!
emparda: aCase
	
	^ EnfrentamientoStateParda new.! !
!EnfrentamientoStateParda methodsFor: 'nil' stamp: 'plp 7/5/2021 18:59:16' overrides: 50864613!
emparda: aCase! !
!EnfrentamientoStateWinnerMano methodsFor: 'nil' stamp: 'plp 7/5/2021 18:59:22' overrides: 50864613!
emparda: aCase! !
!EnfrentamientoStateWinnerPie methodsFor: 'nil' stamp: 'plp 7/5/2021 18:59:25' overrides: 50864613!
emparda: aCase! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:00:01'!
ganaMano: aCase

	self subclassResponsibility ! !

!methodRemoval: EnfrentamientoState #ganaMano: stamp: 'plp 7/5/2021 19:00:49'!
ganaMano: aCase

	self subclassResponsibility !

!methodRemoval: EnfrentamientoState #emparda: stamp: 'plp 7/5/2021 19:00:54'!
emparda: aCase

	self subclassResponsibility !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:01:11' prior: 50864601!
play
	
	" La carta solo tiene que saber si mata o parda "
	(cardMano empardaCon: cardPie) ifTrue: [].
	state := state ganaMano: (cardMano mataA: cardPie).
	! !

!methodRemoval: EnfrentamientoStateInitial #emparda: stamp: 'plp 7/5/2021 19:01:16'!
emparda: aCase
	
	^ EnfrentamientoStateParda new.!

!methodRemoval: EnfrentamientoStateParda #emparda: stamp: 'plp 7/5/2021 19:01:20'!
emparda: aCase!

!methodRemoval: EnfrentamientoStateWinnerMano #emparda: stamp: 'plp 7/5/2021 19:01:24'!
emparda: aCase!

!methodRemoval: EnfrentamientoStateWinnerPie #emparda: stamp: 'plp 7/5/2021 19:01:27'!
emparda: aCase!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:01:42' prior: 50864648!
play
	
	" La carta solo tiene que saber si mata o parda "
	(cardMano empardaCon: cardPie) ifTrue: [ state := EnfrentamientoStateParda ].
	state := state ganaMano: (cardMano mataA: cardPie).
	! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:02:17' prior: 50864671!
play
	
	" La carta solo tiene que saber si mata o parda "
	(cardMano empardaCon: cardPie) 
		ifTrue: [ state := EnfrentamientoStateParda ] 
		ifFalse: [ state := state ganaMano: (cardMano mataA: cardPie) ]
	! !
!EnfrentamientoState methodsFor: 'nil' stamp: 'plp 7/5/2021 19:02:39'!
ganaMano: aCase! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:03:02' prior: 50864690!
ganaMano: aCase

	self subclassResponsibility ! !
!EnfrentamientoStateInitial methodsFor: 'nil' stamp: 'plp 7/5/2021 19:03:53' overrides: 50864694!
ganaMano: aCase

	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:04:06'!
ERROR!

self at: 1!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:06:10' prior: 50864681!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) 
		ifTrue: [ state := EnfrentamientoStateParda ] 
		ifFalse: [ state := state ganaMano: (cardMano mataA: cardPie) ]
	! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:06:15'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:06:20'!
ERROR!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:06:35' prior: 50864710!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) 
		ifTrue: [ state := EnfrentamientoStateParda ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: manoCard) ]
	! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:06:39' prior: 50864727!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) 
		ifTrue: [ state := EnfrentamientoStateParda ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) ]
	! !

Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:06:50'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'status manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:06:58'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:07:05'!
ERROR!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:07:13'!
resultado
	self shouldBeImplemented.! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:07:20' prior: 50864779!
resultado
	
	^ state class! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:07:21'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:07:27'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:07:27'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:07:27'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:07:27'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:07:27'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:07:27'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:07:27'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:07:43'!
test06LosJugadoresJueganUnEnfrentamientoYGanaElPie

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !

!methodRemoval: RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamiento stamp: 'plp 7/5/2021 19:07:43'!
test06LosJugadoresJueganUnEnfrentamiento

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:07:52'!
test08LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:08:09' prior: 50864866!
test08LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:08:40'!
test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !

!methodRemoval: RondaTrucoTest #test08LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:08:40'!
test08LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:08:46' prior: 50864897!
test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 3 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:08:47'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:08:47'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:09:45'!
test08UnEnfrentamientoConsumeCartas

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 3 yCartaDePie: 1.
	
	self assert: enfrentamiento resultado equals: EnfrentamientoStateWinnerPie.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:09:51' prior: 50864972!
test08UnEnfrentamientoConsumeCartas

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 3 yCartaDePie: 1.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:10:00' prior: 50864987!
test08UnEnfrentamientoConsumeCartas

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	! !

OrderedCollection new at: 1!

OrderedCollection new at: 1!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:13:07' prior: 50865000!
test08UnEnfrentamientoConsumeCartas

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self should: [ player1 cardIndex: 3 ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: OrderedCollection new errorNoSuchElement ]
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:13:23' prior: 50865015!
test08UnEnfrentamientoConsumeCartas

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self should: [ player1 cardIndex: 3 ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: OrderedCollection new errorNoSuchElement ]
	! !

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:13:44'!
FAILURE!
!TrucoPlayer methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:14:20'!
cards

	^ mano! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:14:43' prior: 50864457!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	enfrentamiento := EnfrentamientoRonda jugandoMano: ( mano cardIndex: indiceDeMano ) jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	"Consumo las cartas"
	
	^ enfrentamiento ! !

OrderedCollection with: 0 with: 1 with: 2!

aa := OrderedCollection with: 0 with: 1 with: 2.!

aa remove: 5 ifAbsent: []!

aa!

aa remove: 0 ifAbsent: []!

aa!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:16:43' prior: 50865058!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	enfrentamiento := EnfrentamientoRonda jugandoMano: ( mano cardIndex: indiceDeMano ) jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	"Consumo las cartas"
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !
!TrucoPlayer methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:17:28'!
consumeCard: cardIndex

	mano remove: ( mano at: cardIndex ) ifAbsent: []! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:18:12' prior: 50865033!
test08UnEnfrentamientoConsumeCartas

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: (player1 mano size) equals: 2 .
	self assert: (player2 mano size) equals: 2 .	! !

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:18:15'!
PASSED!

Object subclass: #RondaTrucoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoState category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:19:50'!
Object subclass: #RondaTrucoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateInitial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateInitial category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:20:00'!
RondaTrucoState subclass: #RondaTrucoStateInitial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateSegundaRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateSegundaRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:20:09'!
RondaTrucoState subclass: #RondaTrucoStateSegundaRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateTercerRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateTercerRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:20:25'!
RondaTrucoState subclass: #RondaTrucoStateTercerRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRenamed: #RondaTrucoStateInitial as: #RondaTrucoStatePrimerRonda stamp: 'plp 7/5/2021 19:20:37'!
Smalltalk renameClassNamed: #RondaTrucoStateInitial as: #RondaTrucoStatePrimerRonda!

Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:20:45'!
Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:21:04' prior: 50864059!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	state := RondaTrucoStatePrimerRonda new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:22:06' prior: 50865076!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	enfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	"Consumo las cartas"
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:22:36' prior: 50865228!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	enfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	"Consumo las cartas"
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:22:53' prior: 50865243!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	enfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	state := state siguienteRonda.
	
	"Consumo las cartas"
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !
!RondaTrucoState methodsFor: 'no messages' stamp: 'plp 7/5/2021 19:23:03'!
siguienteRonda! !
!RondaTrucoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:23:09' prior: 50865274!
siguienteRonda

	self subclassResponsibility ! !
!RondaTrucoStatePrimerRonda methodsFor: 'nil' stamp: 'plp 7/5/2021 19:23:24' overrides: 50865278!
siguienteRonda
	
	^ RondaTrucoStateSegundaRonda new.! !
!RondaTrucoStateSegundaRonda methodsFor: 'nil' stamp: 'plp 7/5/2021 19:23:36' overrides: 50865278!
siguienteRonda
	
	^ RondaTrucoStateTercerRonda new.! !
!RondaTrucoStateTercerRonda methodsFor: 'no messages' stamp: 'plp 7/5/2021 19:24:23' overrides: 50865278!
siguienteRonda
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription! !
!RondaTrucoStateTercerRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:24:53'!
noHaySiguienteRondaErrorDescription

	^ 'No puede haber otro enfrentamiento'! !

!classRenamed: #RondaTrucoStatePrimerRonda as: #RondaTrucoStatePrimerEnfrentamiento stamp: 'plp 7/5/2021 19:25:09'!
Smalltalk renameClassNamed: #RondaTrucoStatePrimerRonda as: #RondaTrucoStatePrimerEnfrentamiento!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:25:09' prior: 50865215!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	state := RondaTrucoStatePrimerEnfrentamiento new.! !

!classRenamed: #RondaTrucoStateSegundaRonda as: #RondaTrucoStateSegundoEnfrentamiento stamp: 'plp 7/5/2021 19:25:27'!
Smalltalk renameClassNamed: #RondaTrucoStateSegundaRonda as: #RondaTrucoStateSegundoEnfrentamiento!
!RondaTrucoStatePrimerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:25:27' prior: 50865283 overrides: 50865278!
siguienteRonda
	
	^ RondaTrucoStateSegundoEnfrentamiento new.! !

!classRenamed: #RondaTrucoStateTercerRonda as: #RondaTrucoStateTercerEnfrentamiento stamp: 'plp 7/5/2021 19:25:36'!
Smalltalk renameClassNamed: #RondaTrucoStateTercerRonda as: #RondaTrucoStateTercerEnfrentamiento!
!RondaTrucoStateSegundoEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:25:36' prior: 50865288 overrides: 50865278!
siguienteRonda
	
	^ RondaTrucoStateTercerEnfrentamiento new.! !

----SNAPSHOT----(5 July 2021 19:25:44) CuisUniversity-4532.image priorSource: 17035142!

!methodRemoval: RondaTrucoStateTercerEnfrentamiento #noHaySiguienteRondaErrorDescription stamp: 'plp 7/5/2021 19:26:23'!
noHaySiguienteRondaErrorDescription

	^ 'No puede haber otro enfrentamiento'!
!RondaTrucoState class methodsFor: 'no messages' stamp: 'plp 7/5/2021 19:26:29'!
noHaySiguienteRondaErrorDescription

	^ 'No puede haber otro enfrentamiento'! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:26:59'!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: (player1 mano size) equals: 2 .
	self assert: (player2 mano size) equals: 2 .	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:29:19' prior: 50865368!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:29:23'!
ERROR!

RondaTrucoState subclass: #RondaTrucoStateInitial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateInitial category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:29:47'!
RondaTrucoState subclass: #RondaTrucoStateInitial
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoStateInitial methodsFor: 'no messages' stamp: 'plp 7/5/2021 19:29:58' overrides: 50865278!
siguienteRonda
	
	^ RondaTrucoStateSegundoEnfrentamiento new.! !
!RondaTrucoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:30:03' prior: 50865424 overrides: 50865278!
siguienteRonda
	
	^ RondaTrucoStatePrimerEnfrentamiento new.! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:30:12'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:30:24'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:30:50' prior: 50865313!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	state := RondaTrucoStateInitial new.! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:30:54'!
FAILURE!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:31:17' prior: 50865258!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	state := state siguienteRonda.
	
	enfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	"Consumo las cartas"
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:31:23'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:31:23'!
PASSED!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:34:27' prior: 50865458!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
	
	state := state siguienteRonda.
	
	enfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !

RondaTrucoState subclass: #RondaTrucoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateWinnerMano category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:34:44'!
RondaTrucoState subclass: #RondaTrucoStateWinnerMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

RondaTrucoState subclass: #RondaTrucoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoStateWinnerPie category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:34:47'!
RondaTrucoState subclass: #RondaTrucoStateWinnerPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:35:27'!
test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:35:34' prior: 50865551!
test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:36:17' prior: 50865567!
test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano new equals: round winner.
	! !

!testRun: #RondaTrucoTest #test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:36:22'!
ERROR!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:36:36' prior: 50865581!
test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano new equals: round state.
	! !

!testRun: #RondaTrucoTest #test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:36:38'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:36:45'!
state
	self shouldBeImplemented.
	^state! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:36:50' prior: 50865621!
state
	^state! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:36:52' prior: 50865601!
test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano new equals: round state.
	! !

!testRun: #RondaTrucoTest #test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:36:56'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:38:23' prior: 50865384!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStatePrimerEnfrentamiento new equals: round state .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateSegundoEnfrentamiento new equals: round state .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round state .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:38:25'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:38:43'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:38:43'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:39:00'!
FAILURE!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:39:09' prior: 50865626!
state

	^state! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:39:23'!
test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano new equals: round state.
	! !

!methodRemoval: RondaTrucoTest #test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:39:23'!
test09PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano new equals: round state.
	!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:39:26'!
FAILURE!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:40:07'!
roundState

	^state! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:40:07' prior: 50865650!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStatePrimerEnfrentamiento new equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateSegundoEnfrentamiento new equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!methodRemoval: RondaTruco #state stamp: 'plp 7/5/2021 19:40:07'!
state

	^state!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:40:26' prior: 50865737!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStatePrimerEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoStateWinnerMano methodsFor: 'no messages' stamp: 'plp 7/5/2021 19:40:48' overrides: 50865278!
siguienteRonda
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription! !
!RondaTrucoStateWinnerPie methodsFor: 'no messages' stamp: 'plp 7/5/2021 19:40:52' overrides: 50865278!
siguienteRonda
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:41:04'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:41:16' prior: 50865770!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStatePrimerEnfrentamiento) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:41:17'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:41:40' prior: 50865817!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStatePrimerEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:41:46' prior: 50865851!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStatePrimerEnfrentamiento new) equals: (round roundState) .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:41:58' prior: 50865881!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState) equals: (RondaTrucoStatePrimerEnfrentamiento new).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

RondaTrucoStatePrimerEnfrentamiento new!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:42:53'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:43:15' prior: 50865911!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round roundState.
	self assert: (round roundState) equals: (RondaTrucoStatePrimerEnfrentamiento new).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:43:42'!
roundStatus

	^state! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:43:52' prior: 50865946!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round roundStatus.
	self assert: (round roundState) equals: (RondaTrucoStatePrimerEnfrentamiento new).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:44:01' prior: 50865976!
roundStatus

	^ state! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:44:17' prior: 50865980!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round aa |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	aa := round roundStatus.
	self assert: (round roundState) equals: (RondaTrucoStatePrimerEnfrentamiento new).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

self!

self = RondaTrucoStatePrimerEnfrentamiento new!

self = RondaTrucoStatePrimerEnfrentamiento!

self == RondaTrucoStatePrimerEnfrentamiento new!

self == RondaTrucoStatePrimerEnfrentamiento!

!methodRemoval: RondaTruco #roundStatus stamp: 'plp 7/5/2021 19:45:13'!
roundStatus

	^ state!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:45:31' prior: 50866015!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento new) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento new equals: round roundState .
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:45:51' prior: 50866056!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento) equals: round roundState .
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:45:56' prior: 50866086!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateSegundoEnfrentamiento) equals: (round roundState class).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:45:58'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:45:58'!
ERROR!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:45:58'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:46:10'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:46:15' prior: 50865697!
test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano new equals: round roundState.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:46:21' prior: 50866192!
test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano equals: round roundState class.
	! !

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:46:22'!
FAILURE!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:47:42' prior: 50865508!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamientoAnterior |
		
	state := state siguienteRonda.
	
	enfrentamientoAnterior := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie ).
	enfrentamientoAnterior play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamientoAnterior ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:49:13' prior: 50866229!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	| enfrentamiento |
		
	state := state siguienteRonda.
	
	enfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: enfrentamiento.
	enfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamiento ! !

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:49:39'!
Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano state pastEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:49:37' prior: 50865442!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	state := RondaTrucoStateInitial new.
	pastEnfrentamiento := EnfrentamientoStateInitial new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:49:57' prior: 50866246!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda.
	
	pastEnfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento .
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:50:36'!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnf  
	
	^ self new initializeWith: aManoCard and: aPieCard! !

!methodRemoval: EnfrentamientoRonda class #jugandoMano:jugandoPie: stamp: 'plp 7/5/2021 19:50:36'!
jugandoMano: aManoCard jugandoPie: aPieCard 
	
	^ self new initializeWith: aManoCard and: aPieCard!
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:50:46' prior: 50866301!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento
	
	^ self new initializeWith: aManoCard and: aPieCard! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 19:51:30'!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := EnfrentamientoStateInitial new.! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:51:30' prior: 50866315!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento! !

!methodRemoval: EnfrentamientoRonda #initializeWith:and: stamp: 'plp 7/5/2021 19:51:30'!
initializeWith: aManoCard and: aPieCard 
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := EnfrentamientoStateInitial new.!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 19:51:58'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard state prevState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 19:51:55' prior: 50866322!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := EnfrentamientoStateInitial new.
	prevState := pastEnfrentamiento ! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 19:52:00' prior: 50866355!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := EnfrentamientoStateInitial new.
	prevState := pastEnfrentamiento! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:52:49' prior: 50864737!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) 
		ifTrue: [ state := EnfrentamientoStateParda new ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) ]
	! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:54:05' prior: 50866271!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	pastEnfrentamiento := EnfrentamientoStateInitial new.
	state := RondaTrucoStateInitial initializeWith: pastEnfrentamiento.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:54:17' prior: 50866385!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	pastEnfrentamiento := EnfrentamientoStateInitial new.
	state := RondaTrucoStateInitial new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:54:26' prior: 50866285!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda.
	
	pastEnfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento .
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !
!RondaTrucoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento
	
	^ RondaTrucoStatePrimerEnfrentamiento new.! !
!RondaTrucoStatePrimerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento
	
	^ RondaTrucoStateSegundoEnfrentamiento new.! !
!RondaTrucoStateTercerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription! !
!RondaTrucoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription! !
!RondaTrucoStateSegundoEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento
	
	^ RondaTrucoStateTercerEnfrentamiento new.! !
!RondaTrucoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription! !
!RondaTrucoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda: pastEnfrentamiento

	self subclassResponsibility ! !

!methodRemoval: RondaTrucoStateInitial #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda
	
	^ RondaTrucoStatePrimerEnfrentamiento new.!

!methodRemoval: RondaTrucoStatePrimerEnfrentamiento #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda
	
	^ RondaTrucoStateSegundoEnfrentamiento new.!

!methodRemoval: RondaTrucoStateTercerEnfrentamiento #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription!

!methodRemoval: RondaTrucoStateWinnerPie #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription!

!methodRemoval: RondaTrucoStateSegundoEnfrentamiento #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda
	
	^ RondaTrucoStateTercerEnfrentamiento new.!

!methodRemoval: RondaTrucoStateWinnerMano #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda
	
	self error: RondaTrucoState noHaySiguienteRondaErrorDescription!

!methodRemoval: RondaTrucoState #siguienteRonda stamp: 'plp 7/5/2021 19:57:30'!
siguienteRonda

	self subclassResponsibility !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 19:57:54'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 19:57:56'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 19:57:58'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 19:58:00'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:58:02'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:58:03'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:58:03'!
ERROR!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 19:58:22'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:58:24'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:58:24'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:58:42' prior: 50866414!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento .
	
	pastEnfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento .
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 19:58:43' prior: 50866544!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento .
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 19:58:47'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 19:58:50'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:58:52'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 19:58:52'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 19:58:54'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:58:55'!
FAILURE!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 19:58:55'!
FAILURE!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:01:18' prior: 50866375!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ state := EnfrentamientoStateParda new ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) ]
	! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:02:13'!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	self subclassResponsibility ! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:02:13' overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:02:13' prior: 50866603!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ state := EnfrentamientoStateParda new ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) sabiendo: prevEnfrentamiento ]
	! !

!methodRemoval: EnfrentamientoState #ganaMano: stamp: 'plp 7/5/2021 20:02:13'!
ganaMano: aCase

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateInitial #ganaMano: stamp: 'plp 7/5/2021 20:02:13'!
ganaMano: aCase

	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:02:27' prior: 50866629!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ state := EnfrentamientoStateParda new ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) sabiendo: prevState ]
	! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:03:37' prior: 50866621 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	"Solo es la primer ronda"
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateParda methodsFor: 'no messages' stamp: 'plp 7/5/2021 20:05:33' overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	prevEnfrentamiento winsMano: aCase.
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:05:51' prior: 50866674 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:06:14' prior: 50866684 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:06:29' prior: 50866693 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 
	
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:06:41' prior: 50866702 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:08:03' prior: 50866365!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := pastEnfrentamiento.
	prevState := pastEnfrentamiento! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:08:06' prior: 50866719!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	state := pastEnfrentamiento.! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:08:15' prior: 50866652!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ state := EnfrentamientoStateParda new ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) sabiendo: state ]
	! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:08:42'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:08:44'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:08:46'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:08:48'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:08:50'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:08:52'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:08:52'!
ERROR!
!EnfrentamientoStateWinnerMano methodsFor: 'no messages' stamp: 'plp 7/5/2021 20:09:25' overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 
! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:09:26' prior: 50866772 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

! !
!EnfrentamientoStateWinnerPie methodsFor: 'nil' stamp: 'plp 7/5/2021 20:09:53' overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento ! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:09:57' prior: 50866778 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento ! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:10:05'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:10:05'!
ERROR!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:10:08'!
PASSED!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:11:48' prior: 50866561!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := pastEnfrentamiento 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento .
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:11:55'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:11:57'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:11:59'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:12:00'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:12:00'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:12:36' prior: 50866804!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento .
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:12:41'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:12:41'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:14:05' prior: 50866838!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento) play
	pastEnfrentamiento play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:14:07' prior: 50866862!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento) play
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:14:14'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:14:15'!
ERROR!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:14:15'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:14:20'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:14:20'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:14:34' prior: 50866879!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:14:38'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:14:40'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:14:42'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:14:43'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:14:43'!
ERROR!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:15:22' prior: 50866736!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ state := EnfrentamientoStateParda new. ] 
		ifFalse: [ state := state ganaMano: (manoCard mataA: pieCard) sabiendo: state ].
	
	^ state
	! !

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:15:28'!
ERROR!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:15:28'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:15:32'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:15:32'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:15:43'!
ERROR!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:15:43'!
ERROR!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:16:01' prior: 50864835!
test06LosJugadoresJueganUnEnfrentamientoYGanaElPie

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento equals: EnfrentamientoStateWinnerPie.
	
	! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:16:02'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:16:07' prior: 50866981!
test06LosJugadoresJueganUnEnfrentamientoYGanaElPie

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: enfrentamiento class equals: EnfrentamientoStateWinnerPie.
	
	! !

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:16:08'!
ERROR!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:16:08'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:16:08'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:16:15' prior: 50864929!
test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 3 yCartaDePie: 1.
	
	self assert: enfrentamiento equals: EnfrentamientoStateWinnerPie.
	
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:16:19' prior: 50867054!
test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 3 yCartaDePie: 1.
	
	self assert: enfrentamiento equals: EnfrentamientoStateWinnerMano.
	
	! !

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:16:20'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:16:27' prior: 50867070!
test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 3 yCartaDePie: 1.
	
	self assert: enfrentamiento class equals: EnfrentamientoStateWinnerMano.
	
	! !

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:16:28'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:18:03' prior: 50867089!
test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano

	| player1 player2 round enfrentamiento |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	enfrentamiento := round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 3.
	
	self assert: enfrentamiento class equals: EnfrentamientoStateWinnerMano.
	
	! !

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:18:05'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:18:05'!
FAILURE!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:18:05'!
FAILURE!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:18:20'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:18:22'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:18:24'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:18:26'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:18:28'!
FAILURE!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:18:28'!
FAILURE!
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:20:23' prior: 50866789 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:20:53' prior: 50867190 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	prevEnfrentamiento winsMano: aCase
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:21:03' prior: 50867199 overrides: 50866614!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	prevEnfrentamiento winsMano: aCase.! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:21:18'!
winsMano: aCase

	! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:21:31' prior: 50867215!
winsMano: aCase

	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:22:28' prior: 50866913!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:22:55'!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento yEstado: state 
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:22:55' prior: 50867227!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento yEstado: state) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!methodRemoval: EnfrentamientoRonda class #jugandoMano:jugandoPie:sabiendo: stamp: 'plp 7/5/2021 20:22:55'!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:23:04' prior: 50867252!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento 
						yEstado: state) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 20:24:18'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 20:24:26'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard prevRonda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:24:26' prior: 50866728!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:24:27' prior: 50864784!
resultado
	
	^ prevRonda class! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:24:27' prior: 50866947!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda ].
	
	^ prevRonda
	! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:24:50'!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: state   
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:24:50' prior: 50867243!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento yEstado: state 
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: state! !

!methodRemoval: EnfrentamientoRonda #initializeWith:and:sabiendo: stamp: 'plp 7/5/2021 20:24:50'!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento  
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:25:06' prior: 50867343!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: aState   
	
	| state |
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	state := aState ! !

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 20:25:25'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'manoCard pieCard prevRonda roundState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:25:24' prior: 50867369!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: aState   
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aState.! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  

	"Solo es la primer ronda"
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  

	self subclassResponsibility ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:25:59' overrides: 50867407!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  ! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:25:59' overrides: 50867407!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  

	prevEnfrentamiento winsMano: aCase.! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:25:59' overrides: 50867407!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !

!methodRemoval: EnfrentamientoStateInitial #ganaMano:sabiendo: stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	"Solo es la primer ronda"
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]!

!methodRemoval: EnfrentamientoState #ganaMano:sabiendo: stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateWinnerPie #ganaMano:sabiendo: stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento !

!methodRemoval: EnfrentamientoStateWinnerMano #ganaMano:sabiendo: stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento 

	prevEnfrentamiento winsMano: aCase.!

!methodRemoval: EnfrentamientoStateParda #ganaMano:sabiendo: stamp: 'plp 7/5/2021 20:25:59'!
ganaMano: aCase sabiendo: prevEnfrentamiento 
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:26:18' prior: 50867331!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda yEstado: roundState ].
	
	^ prevRonda
	! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:26:21' prior: 50867468!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda yEstado: roundState ].
	
	^ prevRonda! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:26:28'!
PASSED!
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:27:20' prior: 50867414 overrides: 50867407!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:27:59' prior: 50867500 overrides: 50867407!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state 

	prevEnfrentamiento winsPie: aCase andState: state.! !

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:28:30'!
ERROR!
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:30:29' prior: 50867507 overrides: 50867407!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state 

	aCase ifTrue: [ ^ EnfrentamientoStateWinnerMano new ] 
	   	   ifFalse: [ 
			state winsPie.
			^ EnfrentamientoStateWinnerPie new. 
		].! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:31:11'!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento yRonda: state 
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: state! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:31:11' prior: 50867277!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento 
						yRonda: state) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !

!methodRemoval: EnfrentamientoRonda class #jugandoMano:jugandoPie:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:31:11'!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento yEstado: state 
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: state!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:31:20' prior: 50867538!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: pastEnfrentamiento.
	
	pastEnfrentamiento := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: pastEnfrentamiento 
						yRonda: self) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ pastEnfrentamiento ! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:31:33' prior: 50867529!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento yRonda: aRound 
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: aRound! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:31:46'!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aState   
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aState.! !
!EnfrentamientoRonda class methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:31:46' prior: 50867581!
jugandoMano: aManoCard jugandoPie: aPieCard sabiendo: pastEnfrentamiento yRonda: aRound 
	
	^ self new initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRound! !

!methodRemoval: EnfrentamientoRonda #initializeWith:and:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:31:46'!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yEstado: aState   
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aState.!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 20:31:58' prior: 50867590!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda.! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:32:21'!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  

	prevEnfrentamiento winsMano: aCase.! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:32:21'!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:32:21'!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  

	"Solo es la primer ronda"
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:32:21'!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  

	self subclassResponsibility ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:32:21' overrides: 50867654!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state 

	aCase ifTrue: [ ^ EnfrentamientoStateWinnerMano new ] 
	   	   ifFalse: [ 
			state winsPie.
			^ EnfrentamientoStateWinnerPie new. 
		].! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:32:21' prior: 50867482!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda yRonda: roundState ].
	
	^ prevRonda! !

!methodRemoval: EnfrentamientoStateWinnerMano #ganaMano:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:32:22'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  

	prevEnfrentamiento winsMano: aCase.!

!methodRemoval: EnfrentamientoStateParda #ganaMano:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:32:22'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  
	
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]!

!methodRemoval: EnfrentamientoStateInitial #ganaMano:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:32:22'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  

	"Solo es la primer ronda"
	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]!

!methodRemoval: EnfrentamientoState #ganaMano:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:32:22'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state  

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateWinnerPie #ganaMano:sabiendo:yEstado: stamp: 'plp 7/5/2021 20:32:22'!
ganaMano: aCase sabiendo: prevEnfrentamiento yEstado: state 

	aCase ifTrue: [ ^ EnfrentamientoStateWinnerMano new ] 
	   	   ifFalse: [ 
			state winsPie.
			^ EnfrentamientoStateWinnerPie new. 
		].!

!methodRemoval: EnfrentamientoStateWinnerMano #winsMano: stamp: 'plp 7/5/2021 20:32:39'!
winsMano: aCase

	aCase ifTrue: [ ^EnfrentamientoStateWinnerMano new ] ifFalse: [ ^EnfrentamientoStateWinnerPie new ]!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:33:08'!
ERROR!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:33:14'!
winsPie
	self shouldBeImplemented.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:33:27' prior: 50867734!
winsPie
	
	state := RondaTrucoStateWinnerPie new.! !

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:33:29'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:33:43'!
test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano equals: round roundState class.
	! !

!methodRemoval: RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:33:43'!
test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaMano

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerMano equals: round roundState class.
	!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:33:51' prior: 50867748!
test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:33:53'!
FAILURE!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:33:53'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:33:53'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:34:11'!
FAILURE!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:34:31' prior: 50866116!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateWinnerPie ) equals: (round roundState class).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:34:34' prior: 50867843!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateWinnerPie) equals: (round roundState class).
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: RondaTrucoStateTercerEnfrentamiento equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:34:48' prior: 50867873!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateWinnerPie) equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:34:57'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:34:57'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:35:16'!
test09NoPuedeHaberMasEnfrentamientosSiAlguienGana

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateWinnerPie) equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]! !

!methodRemoval: RondaTrucoTest #test09NoPuedeHaberMasDe3Enfrentamientos stamp: 'plp 7/5/2021 20:35:16'!
test09NoPuedeHaberMasDe3Enfrentamientos

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (round roundState class) equals: RondaTrucoStatePrimerEnfrentamiento.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	self assert: (RondaTrucoStateWinnerPie) equals: (round roundState class).
	
	self should: [round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1] 
		raise: Error 
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]!
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:35:32' prior: 50867629 overrides: 50867654!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  

	aCase ifTrue: [ ^ EnfrentamientoStateWinnerMano new ] 
	   	   ifFalse: [ 
			state winsPie.
			^ EnfrentamientoStateWinnerPie new. 
		].! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:35:43' prior: 50868018 overrides: 50867654!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  


	aCase ifTrue: [ ^ EnfrentamientoStateWinnerMano new ] 
	   	   ifFalse: [ 
			state winsPie.
			^ EnfrentamientoStateWinnerPie new. 
		].! !

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'plp 7/5/2021 20:35:43'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:35:44'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:35:44'!
PASSED!
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:36:12' prior: 50868029 overrides: 50867654!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  


	aCase ifTrue: [ 
		state winsPie.
		^ EnfrentamientoStateWinnerMano new 
	] ifFalse: [ ^ EnfrentamientoStateWinnerPie new. ].! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:36:16' prior: 50868240 overrides: 50867654!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: state  


	aCase ifTrue: [ 
		state winsMano.
		^ EnfrentamientoStateWinnerMano new 
	] ifFalse: [ ^ EnfrentamientoStateWinnerPie new. ].! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:36:23'!
winsMano
	
	state := RondaTrucoStateWinnerPie new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:36:28' prior: 50868260!
winsMano
	
	state := RondaTrucoStateWinnerMano new.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:37:35'!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:38:02' prior: 50868270!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:38:08' prior: 50868287!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:38:28' prior: 50868304!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:38:42' prior: 50863577 overrides: 16927572!
setUp

	mazoDefault := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	"Pie"
	mazoDefault add: ( CartaDeTruco anchoDeBasto ).
	mazoDefault add: ( CartaDeTruco anchoDeEspada ).
	mazoDefault add: ( CartaDeTruco copaCon: 2 ).
	"Mano"
	mazoDefault add: ( CartaDeTruco oroCon: 3 ).
	mazoDefault add: ( CartaDeTruco bastoCon: 4 ).
	mazoDefault add: ( CartaDeTruco espadaCon: 5 ).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:39:02' prior: 50868321!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.	
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:39:19'!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.	
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !

!methodRemoval: RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano stamp: 'plp 7/5/2021 20:39:19'!
test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.	
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:39:22'!
FAILURE!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:41:31' prior: 50867671!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda yRonda: roundState ].
	
	roundState updateState: prevRonda .
	
	^ prevRonda! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:42:12' prior: 50868419!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda yRonda: roundState ].
	
	roundState roundState updateState: prevRonda .
	
	^ prevRonda! !
!RondaTrucoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:42:51'!
updateState: prevEnfrentamiento

	self subclassResponsibility ! !
!RondaTrucoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:42:59' overrides: 50868448!
updateState: prevEnfrentamiento! !
!RondaTrucoStatePrimerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:43:04' overrides: 50868448!
updateState: prevEnfrentamiento! !
!RondaTrucoStateSegundoEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:43:09' overrides: 50868448!
updateState: prevEnfrentamiento! !
!RondaTrucoStateTercerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:43:14' overrides: 50868448!
updateState: prevEnfrentamiento! !
!RondaTrucoStateTercerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:43:17' prior: 50868469 overrides: 50868448!
updateState: prevEnfrentamiento

	! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:43:26' prior: 50868434!
play
	
	" La carta solo tiene que saber si mata o parda "
	(manoCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (manoCard mataA: pieCard) sabiendo: prevRonda yRonda: roundState ].
	
	roundState updateState: prevRonda .
	
	^ prevRonda! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:44:04'!
updateState: previousEnfrentamiento

	state updateState: previousEnfrentamiento ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:44:06' prior: 50868494!
updateState: previousEnfrentamiento

	state updateState: previousEnfrentamiento! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:44:57' prior: 50868500!
updateState: previousEnfrentamiento

	state := previousEnfrentamiento winner! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:45:19'!
winner

	^ RondaTrucoStateWinnerMano new.! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:45:29'!
winner

	^ RondaTrucoStateWinnerPie new.! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:45:37'!
winner! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:45:45'!
winner! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:45:54'!
winner

	self subclassResponsibility ! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:45:59'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:46:01'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:46:03'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:46:04'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:46:05'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:46:07'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:46:08'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:46:09'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:46:10'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:46:10'!
FAILURE!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:46:29'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:46:30'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:46:32'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:46:34'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:46:36'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:46:38'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:46:39'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:46:49'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:46:49'!
FAILURE!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:46:49'!
ERROR!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:46:49'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:46:59'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:46:59'!
FAILURE!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:49:27' prior: 50868506!
updateState: previousEnfrentamiento

	state := state winner: previousEnfrentamiento! !
!RondaTrucoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:49:39'!
winner: pastEnfrentamiento

	self subclassResponsibility ! !
!RondaTrucoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:49:46' overrides: 50868650!
winner: pastEnfrentamiento! !
!RondaTrucoStatePrimerEnfrentamiento methodsFor: 'nil' stamp: 'plp 7/5/2021 20:49:51' overrides: 50868650!
winner: pastEnfrentamiento! !
!RondaTrucoStateSegundoEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:49:55' overrides: 50868650!
winner: pastEnfrentamiento! !
!RondaTrucoStateTercerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:50:00' overrides: 50868650!
winner: pastEnfrentamiento! !
!RondaTrucoStateTercerEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:50:09' prior: 50868671 overrides: 50868650!
winner: pastEnfrentamiento

	^ pastEnfrentamiento winner! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:50:31'!
ERROR!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:50:52'!
ERROR!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:50:52'!
ERROR!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:50:52'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:50:58'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:51:16'!
ERROR!
!RondaTrucoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:51:55' overrides: 50868650!
winner: pastEnfrentamiento! !
!RondaTrucoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:51:58' overrides: 50868650!
winner: pastEnfrentamiento! !

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:52:02'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:52:04'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:52:25'!
test12PardaPrimeraSegundaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.	
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !

!classDefinition: #RondaTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 20:53:37'!
TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault mazoPardaPrimera'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:53:35' prior: 50868339 overrides: 16927572!
setUp

	mazoDefault := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	"Pie"
	mazoDefault add: ( CartaDeTruco anchoDeBasto ).
	mazoDefault add: ( CartaDeTruco anchoDeEspada ).
	mazoDefault add: ( CartaDeTruco copaCon: 2 ).
	"Mano"
	mazoDefault add: ( CartaDeTruco oroCon: 3 ).
	mazoDefault add: ( CartaDeTruco bastoCon: 4 ).
	mazoDefault add: ( CartaDeTruco espadaCon: 5 ).
	
	mazoPardaPrimera := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	"Pie"
	mazoPardaPrimera add: ( CartaDeTruco anchoDeBasto ).
	mazoPardaPrimera add: ( CartaDeTruco copaCon: 3 ).
	mazoPardaPrimera add: ( CartaDeTruco copaCon: 2 ).
	"Mano"
	mazoPardaPrimera add: ( CartaDeTruco oroCon: 4 ).
	mazoPardaPrimera add: ( CartaDeTruco oroCon: 3 ).
	mazoPardaPrimera add: ( CartaDeTruco oroCon: 2 ).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:53:53' prior: 50868750!
test12PardaPrimeraSegundaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:54:06'!
test12PardaPrimeraSegundaManoRondaGanaPie
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !

!methodRemoval: RondaTrucoTest #test12PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 20:54:06'!
test12PardaPrimeraSegundaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaManoRondaGanaPie stamp: 'plp 7/5/2021 20:54:16'!
FAILURE!
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:55:35' prior: 50867636 overrides: 50867654!
ganaMano: aCase sabiendo: prevEnfrentamiento yRonda: aRonda  
	
	aCase ifTrue: [ 
		aRonda winsMano .
		^EnfrentamientoStateWinnerMano new ] 
	ifFalse: [ 
		aRonda winsPie .
		^EnfrentamientoStateWinnerPie new ]! !

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaManoRondaGanaPie stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaManoRondaGanaPie stamp: 'plp 7/5/2021 20:55:39'!
PASSED!

----SNAPSHOT----(5 July 2021 20:56:03) CuisUniversity-4532.image priorSource: 17078463!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:56:52'!
test12PardaPrimeraSegundaPieRondaGanaPie
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !

!methodRemoval: RondaTrucoTest #test12PardaPrimeraSegundaManoRondaGanaPie stamp: 'plp 7/5/2021 20:56:52'!
test12PardaPrimeraSegundaManoRondaGanaPie
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:57:06'!
test13PardaPrimeraSegundaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 20:57:12' prior: 50868951!
test13PardaPrimeraSegundaManoRondaGanaMano
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoPardaPrimera.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	
	self assert: RondaTrucoStateWinnerPie equals: round roundState class.
	! !

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 20:57:14'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 20:57:14'!
PASSED!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:04:00'!
test14MasDe3RondasDaUnError
	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	round jugarEnfrentamientoConCartaDeMano: 2 yCartaDePie: 1.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 2.
	round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.	
	
	self should: [ round jugarEnfrentamientoConCartaDeMano: 1 yCartaDePie: 1.	 ]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: RondaTrucoState noHaySiguienteRondaErrorDescription ]
	! !

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 21:04:02'!
PASSED!

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:04:02'!
PASSED!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:06:05' prior: 50867619!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	
	
	
	"
	reemplazar manoCard por primero y pieCard por segundo
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda."! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:06:23' prior: 50869108!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	pastEnfrentamiento order.
	
	
	"
	reemplazar manoCard por primero y pieCard por segundo
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda."! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:06:34'!
order

	self subclassResponsibility ! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:06:51' overrides: 50869132!
order! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:06:55' overrides: 50869132!
order! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:07:00' overrides: 50869132!
order! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:07:06' overrides: 50869132!
order! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:24'!
orderStartingWithMano! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:24'!
orderStartingWithMano! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:24'!
orderStartingWithMano! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:24'!
orderStartingWithMano

	self subclassResponsibility ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:24' overrides: 50869165!
orderStartingWithMano! !

!methodRemoval: EnfrentamientoStateWinnerMano #order stamp: 'plp 7/5/2021 21:08:24'!
order!

!methodRemoval: EnfrentamientoStateParda #order stamp: 'plp 7/5/2021 21:08:24'!
order!

!methodRemoval: EnfrentamientoStateInitial #order stamp: 'plp 7/5/2021 21:08:24'!
order!

!methodRemoval: EnfrentamientoState #order stamp: 'plp 7/5/2021 21:08:24'!
order

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateWinnerPie #order stamp: 'plp 7/5/2021 21:08:24'!
order!
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano: aMano! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano: aMano! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano: aMano

	self subclassResponsibility ! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:41' overrides: 50869198!
orderStartingWithMano: aMano! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:08:41' overrides: 50869198!
orderStartingWithMano: aMano! !

!methodRemoval: EnfrentamientoStateWinnerPie #orderStartingWithMano stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano!

!methodRemoval: EnfrentamientoStateParda #orderStartingWithMano stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano!

!methodRemoval: EnfrentamientoState #orderStartingWithMano stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateWinnerMano #orderStartingWithMano stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano!

!methodRemoval: EnfrentamientoStateInitial #orderStartingWithMano stamp: 'plp 7/5/2021 21:08:41'!
orderStartingWithMano!
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano aPie: aPie ! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano aPie: aPie 

	self subclassResponsibility ! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:00' overrides: 50869238!
orderStartingWithMano: aMano aPie: aPie ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:00' overrides: 50869238!
orderStartingWithMano: aMano aPie: aPie ! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:00' overrides: 50869238!
orderStartingWithMano: aMano aPie: aPie ! !

!methodRemoval: EnfrentamientoStateWinnerMano #orderStartingWithMano: stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano!

!methodRemoval: EnfrentamientoState #orderStartingWithMano: stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateParda #orderStartingWithMano: stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano!

!methodRemoval: EnfrentamientoStateWinnerPie #orderStartingWithMano: stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano!

!methodRemoval: EnfrentamientoStateInitial #orderStartingWithMano: stamp: 'plp 7/5/2021 21:09:00'!
orderStartingWithMano: aMano!
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:35'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  

	self subclassResponsibility ! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:35' overrides: 50869280!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  ! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:35' overrides: 50869280!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:35' overrides: 50869280!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  ! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:09:35' overrides: 50869280!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  ! !

!methodRemoval: EnfrentamientoState #orderStartingWithMano:aPie: stamp: 'plp 7/5/2021 21:09:35'!
orderStartingWithMano: aMano aPie: aPie 

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateInitial #orderStartingWithMano:aPie: stamp: 'plp 7/5/2021 21:09:35'!
orderStartingWithMano: aMano aPie: aPie !

!methodRemoval: EnfrentamientoStateWinnerMano #orderStartingWithMano:aPie: stamp: 'plp 7/5/2021 21:09:35'!
orderStartingWithMano: aMano aPie: aPie !

!methodRemoval: EnfrentamientoStateWinnerPie #orderStartingWithMano:aPie: stamp: 'plp 7/5/2021 21:09:35'!
orderStartingWithMano: aMano aPie: aPie !

!methodRemoval: EnfrentamientoStateParda #orderStartingWithMano:aPie: stamp: 'plp 7/5/2021 21:09:35'!
orderStartingWithMano: aMano aPie: aPie !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   ! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   

	self subclassResponsibility ! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:10:00' overrides: 50869345!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:10:00' overrides: 50869345!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   ! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:10:00' overrides: 50869345!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   ! !

!methodRemoval: EnfrentamientoStateInitial #orderStartingWithMano:aPie:anEnfrentamiento: stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  !

!methodRemoval: EnfrentamientoState #orderStartingWithMano:aPie:anEnfrentamiento: stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateWinnerMano #orderStartingWithMano:aPie:anEnfrentamiento: stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  !

!methodRemoval: EnfrentamientoStateWinnerPie #orderStartingWithMano:aPie:anEnfrentamiento: stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  !

!methodRemoval: EnfrentamientoStateParda #orderStartingWithMano:aPie:anEnfrentamiento: stamp: 'plp 7/5/2021 21:10:00'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento  !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:10:28' prior: 50869120!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	pastEnfrentamiento order.
	
	
	"
	reemplazar manoCard por primero y pieCard por segundo
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda."! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:11:00' prior: 50869406!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda   
	
	"
	reemplazar manoCard por primero y pieCard por segundo
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda."! !

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 21:11:16'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'firstCard pieCard prevRonda roundState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:11:16' prior: 50868480!
play
	
	" La carta solo tiene que saber si mata o parda "
	(firstCard empardaCon: pieCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (firstCard mataA: pieCard) sabiendo: prevRonda yRonda: roundState ].
	
	roundState updateState: prevRonda .
	
	^ prevRonda! !

!classDefinition: #EnfrentamientoRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 21:11:26'!
Object subclass: #EnfrentamientoRonda
	instanceVariableNames: 'firstCard secondCard prevRonda roundState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:11:26' prior: 50869444!
play
	
	" La carta solo tiene que saber si mata o parda "
	(firstCard empardaCon: secondCard) "Solo parda en la primer ronda"
		ifTrue: [ prevRonda := EnfrentamientoStateParda new. ] 
		ifFalse: [ prevRonda := prevRonda ganaMano: (firstCard mataA: secondCard) sabiendo: prevRonda yRonda: roundState ].
	
	roundState updateState: prevRonda .
	
	^ prevRonda! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:11:55' prior: 50869339 overrides: 50869345!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound  ! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound in: inEnfrentamiento    ! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound in: inEnfrentamiento    ! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound in: inEnfrentamiento    ! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound in: inEnfrentamiento    

	self subclassResponsibility ! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:12:36' overrides: 50869512!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound in: inEnfrentamiento   ! !
!EnfrentamientoRonda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:12:36' prior: 50869419!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: inEnfrentamiento   
	
	"
	reemplazar manoCard por primero y pieCard por segundo
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda."! !

!methodRemoval: EnfrentamientoStateWinnerMano #orderStartingWithMano:aPie:anEnfrentamiento:andARound: stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   !

!methodRemoval: EnfrentamientoStateWinnerPie #orderStartingWithMano:aPie:anEnfrentamiento:andARound: stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   !

!methodRemoval: EnfrentamientoStateParda #orderStartingWithMano:aPie:anEnfrentamiento:andARound: stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   !

!methodRemoval: EnfrentamientoState #orderStartingWithMano:aPie:anEnfrentamiento:andARound: stamp: 'plp 7/5/2021 21:12:36'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound   

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateInitial #orderStartingWithMano:aPie:anEnfrentamiento:andARound: stamp: 'plp 7/5/2021 21:12:37'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound  !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:12:49' prior: 50869529!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: self.   
	
	"
	reemplazar manoCard por primero y pieCard por segundo
	
	manoCard := aManoCard.
	pieCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda."! !
!EnfrentamientoStateInitial methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:13:46' prior: 50869521 overrides: 50869512!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento   
	
	inEnfrentamiento inInitialSetFirst: aMano second: aPie pastEnfrentamiento: pastEnfrentamiento aRound: aRound.! !
!EnfrentamientoStateParda methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:14:04' prior: 50869505 overrides: 50869512!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento

	inEnfrentamiento inInitialSetFirst: aMano second: aPie pastEnfrentamiento: pastEnfrentamiento aRound: aRound.! !
!EnfrentamientoStateWinnerMano methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:14:43' prior: 50869491 overrides: 50869512!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento    

	inEnfrentamiento inInitialSetFirst: aMano second: aPie pastEnfrentamiento: pastEnfrentamiento aRound: aRound.! !
!EnfrentamientoStateWinnerPie methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:15:04' prior: 50869498 overrides: 50869512!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento    

	inEnfrentamiento inInitialSetFirst: aPie second: aMano pastEnfrentamiento: pastEnfrentamiento aRound: aRound.! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:16:21'!
inInitialSetFirst: firstsPlayerCard second: secondsPlayerCard pastEnfrentamiento: pastEnfrentamiento aRound: aRound.

	firstCard := firstsPlayerCard.
	secondCard := secondsPlayerCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRound.! !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:16:27'!
FAILURE!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:16:27'!
FAILURE!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:16:27'!
ERROR!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 21:16:27'!
PASSED!

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:16:27'!
ERROR!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:16:40'!
FAILURE!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:16:40'!
FAILURE!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:19:38' prior: 50869583!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	"pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: self.   "
	
	firstCard := aManoCard.
	secondCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda.! !

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:19:45'!
PASSED!

!classDefinition: #RondaTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 21:23:31'!
TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault mazoPardaPrimera playerA'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 21:23:32'!
TestCase subclass: #RondaTrucoTest
	instanceVariableNames: 'mazoDefault mazoPardaPrimera playerA playerB'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:23:29' prior: 50868777 overrides: 16927572!
setUp

	mazoDefault := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	"Pie"
	mazoDefault add: ( CartaDeTruco anchoDeBasto ).
	mazoDefault add: ( CartaDeTruco anchoDeEspada ).
	mazoDefault add: ( CartaDeTruco copaCon: 2 ).
	"Mano"
	mazoDefault add: ( CartaDeTruco oroCon: 3 ).
	mazoDefault add: ( CartaDeTruco bastoCon: 4 ).
	mazoDefault add: ( CartaDeTruco espadaCon: 5 ).
	
	mazoPardaPrimera := OrderedCollection new.
	" Las primeras 3 son para player1 y las otras 3 para player2 "
	"Pie"
	mazoPardaPrimera add: ( CartaDeTruco anchoDeBasto ).
	mazoPardaPrimera add: ( CartaDeTruco copaCon: 3 ).
	mazoPardaPrimera add: ( CartaDeTruco copaCon: 2 ).
	"Mano"
	mazoPardaPrimera add: ( CartaDeTruco oroCon: 4 ).
	mazoPardaPrimera add: ( CartaDeTruco oroCon: 3 ).
	mazoPardaPrimera add: ( CartaDeTruco oroCon: 2 ).
	
	playerA := TrucoPlayer new.
	playerB := TrucoPlayer new.! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:23:43' prior: 50863593!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	playerA := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: playerA and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:23:49' prior: 50869833!
test01CrearRondaConDosJugadores

	| player2 round |
	
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: playerA and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: playerA).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:23:49' prior: 50869845!
test01CrearRondaConDosJugadores

	| player2 round |
	
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: playerA and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: playerA).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:23:49' prior: 50869856!
test01CrearRondaConDosJugadores

	| player2 round |
	
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: playerA and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: playerA).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:23:43' prior: 50869867!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	playerA := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: playerA and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:24:24' prior: 50869878!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: playerA and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !
!RondaTrucoTest methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:24:27' prior: 50869890!
test01CrearRondaConDosJugadores

	| player1 player2 round |
	
	player1 := TrucoPlayer new.
	player2 := TrucoPlayer new.
	
	round := RondaTruco withPlayer: player1 and: player2 mazo: mazoDefault.
	
	self assert: (round esPie: player1).
	self assert: (round esMano: player2).! !

!methodRemoval: EnfrentamientoState #orderStartingWithMano:aPie:anEnfrentamiento:andARound:in: stamp: 'plp 7/5/2021 21:25:26'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: andARound in: inEnfrentamiento    

	self subclassResponsibility !

!methodRemoval: EnfrentamientoStateInitial #orderStartingWithMano:aPie:anEnfrentamiento:andARound:in: stamp: 'plp 7/5/2021 21:25:31'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento   
	
	inEnfrentamiento inInitialSetFirst: aMano second: aPie pastEnfrentamiento: pastEnfrentamiento aRound: aRound.!

!methodRemoval: EnfrentamientoStateParda #orderStartingWithMano:aPie:anEnfrentamiento:andARound:in: stamp: 'plp 7/5/2021 21:25:35'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento

	inEnfrentamiento inInitialSetFirst: aMano second: aPie pastEnfrentamiento: pastEnfrentamiento aRound: aRound.!

!methodRemoval: EnfrentamientoStateWinnerMano #orderStartingWithMano:aPie:anEnfrentamiento:andARound:in: stamp: 'plp 7/5/2021 21:25:39'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento    

	inEnfrentamiento inInitialSetFirst: aMano second: aPie pastEnfrentamiento: pastEnfrentamiento aRound: aRound.!

!methodRemoval: EnfrentamientoStateWinnerPie #orderStartingWithMano:aPie:anEnfrentamiento:andARound:in: stamp: 'plp 7/5/2021 21:25:43'!
orderStartingWithMano: aMano aPie: aPie anEnfrentamiento: pastEnfrentamiento andARound: aRound in: inEnfrentamiento    

	inEnfrentamiento inInitialSetFirst: aPie second: aMano pastEnfrentamiento: pastEnfrentamiento aRound: aRound.!

!methodRemoval: RondaTrucoState #updateState: stamp: 'plp 7/5/2021 21:26:22'!
updateState: prevEnfrentamiento

	self subclassResponsibility !

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:27:00'!
PASSED!

!methodRemoval: RondaTrucoStateInitial #updateState: stamp: 'plp 7/5/2021 21:27:09'!
updateState: prevEnfrentamiento!

!methodRemoval: RondaTrucoStatePrimerEnfrentamiento #updateState: stamp: 'plp 7/5/2021 21:27:13'!
updateState: prevEnfrentamiento!

!methodRemoval: RondaTrucoStateSegundoEnfrentamiento #updateState: stamp: 'plp 7/5/2021 21:27:18'!
updateState: prevEnfrentamiento!

!methodRemoval: RondaTrucoStateTercerEnfrentamiento #updateState: stamp: 'plp 7/5/2021 21:27:25'!
updateState: prevEnfrentamiento

	!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 21:28:28'!
PASSED!

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:28:28'!
PASSED!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:39:29' prior: 50869714!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	"pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: self.   "

	"Llegue hasta aca y me quede pensando como resolver el tema de los quien va primero y quien no
	Asi de entrada lo pude resolver, es un double dispatch con el State anterior y eso me dice quien va primero y quien segundo.
	El tema, es que por el diseño que segui, no es tan simple cambiarlo. Pero finalmente es, ver en base al resultado anterior, quien
	gano, y ahi hago un 'reverse' de los resultados otra vez y me queda quien gano, si la mano o el pie
	"
	
	firstCard := aManoCard.
	secondCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda.! !

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 21:40:01'!
Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano state enfrentamientoAnterior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:01' prior: 50867564!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	state := state siguienteRonda: enfrentamientoAnterior.
	
	enfrentamientoAnterior := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: enfrentamientoAnterior 
						yRonda: self) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamientoAnterior ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:01' prior: 50866400!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	enfrentamientoAnterior := EnfrentamientoStateInitial new.
	state := RondaTrucoStateInitial new.! !

!classDefinition: #RondaTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'plp 7/5/2021 21:40:17'!
Object subclass: #RondaTruco
	instanceVariableNames: 'pie mano estadoDeRonda enfrentamientoAnterior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:17' prior: 50870191!
jugarEnfrentamientoConCartaDeMano: indiceDeMano yCartaDePie: indiceDePie
	
	estadoDeRonda := estadoDeRonda siguienteRonda: enfrentamientoAnterior.
	
	enfrentamientoAnterior := (EnfrentamientoRonda 
						jugandoMano: ( mano cardIndex: indiceDeMano ) 
						jugandoPie: ( pie cardIndex: indiceDePie )
						sabiendo: enfrentamientoAnterior 
						yRonda: self) play.
	
	mano consumeCard: indiceDeMano.
	pie consumeCard: indiceDePie.
	
	^ enfrentamientoAnterior ! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:17' prior: 50865733!
roundState

	^estadoDeRonda! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:17' prior: 50868265!
winsMano
	
	estadoDeRonda := RondaTrucoStateWinnerMano new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:17' prior: 50870208!
initializeWith: jugadorPie and: jugadorMano rondaMazo: unMazo  
	
	pie := jugadorPie .
	mano := jugadorMano .
	
	"Reparto las cartas desde el tope del mazo"
	pie addMano: ( unMazo copyFrom: 1 to: 3 ) .
	mano addMano: ( unMazo copyFrom: 4 to: 6 ) .
	
	enfrentamientoAnterior := EnfrentamientoStateInitial new.
	estadoDeRonda := RondaTrucoStateInitial new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:17' prior: 50867739!
winsPie
	
	estadoDeRonda := RondaTrucoStateWinnerPie new.! !
!RondaTruco methodsFor: 'as yet unclassified' stamp: 'plp 7/5/2021 21:40:17' prior: 50868644!
updateState: previousEnfrentamiento

	estadoDeRonda := estadoDeRonda winner: previousEnfrentamiento! !

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test01CrearRondaConDosJugadores stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test02CrearRondaFallaSiEsElMismoPieYMano stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test03CrearRondaConCartasDeUnMazoSinRepetidos stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test04CrearRondaMazoCartasDuplicadasFalla stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test05CrearRondaMazoVacioFalla stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test06LosJugadoresJueganUnEnfrentamientoYGanaElPie stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test07LosJugadoresJueganUnEnfrentamientoYGanaLaMano stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test08UnEnfrentamientoConsumeCartas stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test09NoPuedeHaberMasEnfrentamientosSiAlguienGana stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test10PrimerEnfGanaManoSegundoEnfGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test11PrimerEnfGanaManoSegundoEnfGanaPieTercerEnfrentamientoGanaManoRondaGanaPie stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test12PardaPrimeraSegundaPieRondaGanaPie stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test13PardaPrimeraSegundaManoRondaGanaMano stamp: 'plp 7/5/2021 21:42:07'!
PASSED!

!testRun: #RondaTrucoTest #test14MasDe3RondasDaUnError stamp: 'plp 7/5/2021 21:42:07'!
PASSED!
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:42:48' prior: 50870154!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	"pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: self.   "

	"Llegue hasta aca y me quede pensando como resolver el tema de los quien va primero y quien no
	Asi de entrada lo pude resolver, es un double dispatch con el State anterior y eso me dice quien va primero y quien segundo.
	El tema, es que por el diseño que segui, no es tan simple cambiarlo. Pero finalmente es, ver en base al resultado anterior, quien
	gano, y ahi hago un 'reverse' de los resultados otra vez y me queda quien gano, si la mano o el pie
	
	El mesaje que esta mas arriba es el inicio de la idea pero me quede medio en blanco de como terminar de implementar el resto	"
	
	firstCard := aManoCard.
	secondCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda.! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:43:00' prior: 50870399!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	"pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: self.   "

	"Llegue hasta aca y me quede pensando como resolver el tema de los quien va primero y quien no
	Asi de entrada lo pude resolver, es un double dispatch con el State anterior y eso me dice quien va primero y quien segundo.
	El tema, es que por el diseño que segui, no es tan simple cambiarlo. Pero finalmente es, ver en base al resultado anterior, quien
	gano, y ahi hago un 'reverse' de los resultados otra vez y me queda quien gano, si la mano o el pie
	
	El mesaje que esta mas arriba es el inicio de la idea pero me quede medio en blanco de como terminar de implementar el resto_2142
		"
	
	firstCard := aManoCard.
	secondCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda.! !
!EnfrentamientoRonda methodsFor: 'initialization' stamp: 'plp 7/5/2021 21:43:08' prior: 50870431!
initializeWith: aManoCard and: aPieCard sabiendo: pastEnfrentamiento yRonda: aRonda   
	
	"pastEnfrentamiento orderStartingWithMano: aManoCard aPie: aPieCard anEnfrentamiento: pastEnfrentamiento andARound: aRonda in: self.   "

	"Llegue hasta aca y me quede pensando como resolver el tema de los quien va primero y quien no
	Asi de entrada lo pude resolver, es un double dispatch con el State anterior y eso me dice quien va primero y quien segundo.
	El tema, es que por el diseño que segui, no es tan simple cambiarlo. Pero finalmente es, ver en base al resultado anterior, quien
	gano, y ahi hago un 'reverse' de los resultados otra vez y me queda quien gano, si la mano o el pie
	
	El mesaje que esta mas arriba es el inicio de la idea pero me quede medio en blanco de como terminar de implementar el resto	"
	
	firstCard := aManoCard.
	secondCard := aPieCard.
	prevRonda := pastEnfrentamiento.
	roundState := aRonda.! !

----SNAPSHOT----(5 July 2021 21:45:35) CuisUniversity-4532.image priorSource: 17192482!