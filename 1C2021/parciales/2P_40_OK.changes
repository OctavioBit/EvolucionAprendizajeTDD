

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (5 July 2021 14:48:50) as C:\Users\tomas\Documents\Programming\University\Inge I\2 Parcial\CuisUniversity-4532.image!


----SNAPSHOT----(5 July 2021 14:48:58) CuisUniversity-4532.image priorSource: 16885703!

----SNAPSHOT----(5 July 2021 15:07:37) CuisUniversity-4532.image priorSource: 16885925!

----STARTUP---- (5 July 2021 17:01:43) as C:\Users\tomas\Documents\Programming\University\Inge I\2 Parcial\CuisUniversity-4532.image!


----End fileIn of C:\Users\tomas\Documents\Programming\University\Inge I\2 Parcial\ISW1-2021-1C-2doParcial.st----!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'TT 7/5/2021 17:19:58'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'TT 7/5/2021 17:19:58'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'TT 7/5/2021 17:19:59'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'TT 7/5/2021 17:19:59'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'TT 7/5/2021 17:19:59'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'TT 7/5/2021 17:19:59'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'TT 7/5/2021 17:19:59'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'TT 7/5/2021 17:19:59'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'TT 7/5/2021 17:20:16'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'TT 7/5/2021 17:20:17'!
PASSED!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 17:40:07'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

CartaDeTruco espadaCon: 8!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 17:49:19'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'TT 7/5/2021 17:49:40'!
test01LaManoNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 7}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5}.
	
	self 
		should: [ | round |round := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:50:08' prior: 50860018!
test01LaManoNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 7}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5}.
	
	self 
		should: [ | round | round := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:50:26' prior: 50860039!
test01LaManoNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 7}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5}.
	
	self 
		should: [ | round | round := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:50:31'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 17:50:39'!
conCartasMano: anArray cartasPie: anArray2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeConCartasMano: anArray cartasPie: anArray2 ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 17:51:27' prior: 50860084!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:51:28'!
ERROR!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 17:51:32'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 17:51:32'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 17:51:32'!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	self shouldBeImplemented.
	cartasMano := aCartasMano.
	cartasPie := aCartasPie.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 17:51:36' prior: 50860120!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := aCartasMano.
	cartasPie := aCartasPie.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 17:51:45' prior: 50860128!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := aCartasMano.
	cartasPie := aCartasPie.! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:51:47'!
FAILURE!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 17:52:43' prior: 50860094!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 17:53:12' prior: 50860146!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:53:23'!
laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:53:51' prior: 50860171!
laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription
	
	^'La mano inicial de un jugador no puede tener cartas repetidas'! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:54:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:54:01'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:54:20'!
test02ElPieNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 7}.
	
	self 
		should: [ | round | round := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:54:24'!
FAILURE!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 17:54:51' prior: 50860156!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasMano .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 17:54:55' prior: 50860215!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:54:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:54:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 17:54:57'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:56:40'!
test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ | round | round := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:56:55' prior: 50860263!
test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ | round | round := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:57:08' prior: 50860285!
test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:57:21' prior: 50860191!
test02ElPieNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 7}.
	
	self 
		should: [ | round | ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:57:26' prior: 50860060!
test01LaManoNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 7}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5}.
	
	self 
		should: [ | round | ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:57:32' prior: 50860350!
test01LaManoNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 7}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:57:38' prior: 50860329!
test02ElPieNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 7}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 17:58:23' prior: 50860307!
test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresNoPuedenCompartirCartasErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 17:58:30'!
FAILURE!

a := Set withAll: {1.2.3}!

b := Set withAll: {4.5.3}!

a intersect: b!

a intersection: b!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:01:36' prior: 50860234!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	cartasManoUnicas intersection: cartasPieUnicas isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	]
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:01:40'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:01:50' prior: 50860441!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	cartasManoUnicas intersection: cartasPieUnicas isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:01:59' prior: 50860469!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:02:01'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:02:08'!
losJugadoresNoPuedenCompartirCartasErrorDescription
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:02:34' prior: 50860519!
losJugadoresNoPuedenCompartirCartasErrorDescription
	
	^'Los jugadores no pueden tener cartas iguales'! !

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:02:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:02:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:02:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:02:35'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:03:14'!
test04LosJugadoresTienenQueEmpezarCon3CartasCadaUno
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresNoPuedenCompartirCartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:03:53'!
test04LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresNoPuedenCompartirCartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:04:00' prior: 50860566!
test04LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresNoPuedenCompartirCartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:04:19' prior: 50860585!
test04LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresTienenQueEmpezarCon3CartasErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:04:47'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:05:05'!
losJugadoresTienenQueEmpezarCon3CartasErrorDescription
	
	^'Los jugadores tienen que empezar con 3 cartas'! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:05:43' prior: 50860492!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	aCartasMano size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:05:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:05:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:05:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:05:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:05:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LosJugadoresTienenQueEmpezarCon3CartasCadaUno stamp: 'TT 7/5/2021 18:05:45'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:05:49'!
test05LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresTienenQueEmpezarCon3CartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:05:59' prior: 50860683!
test05LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresTienenQueEmpezarCon3CartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:06:20' prior: 50860635!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	aCartasMano size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	
	aCartasPie size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:06:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:06:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:06:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:06:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:06:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LosJugadoresTienenQueEmpezarCon3CartasCadaUno stamp: 'TT 7/5/2021 18:06:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:06:22'!
PASSED!

!methodRemoval: RondaDeTrucoTest #test04LosJugadoresTienenQueEmpezarCon3CartasCadaUno stamp: 'TT 7/5/2021 18:06:44'!
test04LosJugadoresTienenQueEmpezarCon3CartasCadaUno
	
	| mazoMano mazoPie ronda |
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresNoPuedenCompartirCartasErrorDescription equals: error messageText.
		]
	!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:06:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:06:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:06:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:06:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:06:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:06:47'!
PASSED!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:07:29' prior: 50860723!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	aCartasMano size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	
	aCartasPie size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:07:34' prior: 50860820!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.

	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:07:38'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:07:43'!
assertTienenTresCartasLaMano: anArray elPie: anArray2 
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:07:55' prior: 50860881!
assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie 
	
	aCartasMano size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	aCartasPie size < 3 ifTrue: [self error: self losJugadoresTienenQueEmpezarCon3CartasErrorDescription ].
	! !

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:07:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:07:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:07:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:07:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:07:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:07:57'!
PASSED!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:08:32' prior: 50860852!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:09:08' prior: 50860920!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie.
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:09:13' prior: 50860946!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie.

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:09:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:09:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:09:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:09:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:09:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:09:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:09:23'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:09:29'!
assertNoPuedenTenerCartasRepetidasLaMano: anArray elPie: anArray2 
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:09:41' prior: 50861016!
assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie 

	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:09:48' prior: 50861023!
assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie 
	| cartasManoUnicas cartasPieUnicas |
	
	cartasManoUnicas := Set withAll: aCartasMano .
	cartasManoUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].
	
	cartasPieUnicas := Set withAll: aCartasPie .
	cartasPieUnicas size < 3 ifTrue: [ self error: self laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription].! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:09:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:09:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:09:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:09:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:09:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:09:53'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:09:53'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:10:18' prior: 50860974!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	| cartasManoUnicas cartasPieUnicas |
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenCompartirCartasLaMano: aCartasMano elPie: aCartasPie.
	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:10:24' prior: 50861083!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenCompartirCartasLaMano: aCartasMano elPie: aCartasPie.
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'TT 7/5/2021 18:10:30' prior: 50861103!
conCartasMano: aCartasMano cartasPie: aCartasPie
	
	self assertTienenTresCartasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenTenerCartasRepetidasLaMano: aCartasMano elPie: aCartasPie.
	self assertNoPuedenCompartirCartasLaMano: aCartasMano elPie: aCartasPie.
	
	^self new initializeConCartasMano: aCartasMano cartasPie: aCartasPie ! !

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:10:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:10:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:10:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:10:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:10:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:10:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:10:35'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:10:41'!
assertNoPuedenCompartirCartasLaMano: anArray elPie: anArray2 
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:11:23' prior: 50861157!
assertNoPuedenCompartirCartasLaMano: aCartasMano elPie: aCartasPie 
	
	| cartasManoUnicas cartasPieUnicas |
	cartasManoUnicas := Set withAll: aCartasMano.
	cartasPieUnicas := Set withAll: aCartasPie.

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:11:29' prior: 50861164!
assertNoPuedenCompartirCartasLaMano: aCartasMano elPie: aCartasPie 
	| cartasManoUnicas cartasPieUnicas |
	
	cartasManoUnicas := Set withAll: aCartasMano.
	cartasPieUnicas := Set withAll: aCartasPie.

	(cartasManoUnicas intersection: cartasPieUnicas) isEmpty ifFalse: [
		self error: self losJugadoresNoPuedenCompartirCartasErrorDescription
	].
	.! !

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:11:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:11:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:11:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:11:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:11:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:11:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:11:34'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:14:46'!
test06NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:16:49'!
test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:17:24'!
test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:18:25' prior: 50861246!
test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda cartasMano == mazoMano.
	self assert: ronda cartasPie == mazoPie.! !

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:18:41'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:18:46'!
cartasMano
	self shouldBeImplemented.
	^cartasMano! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:18:50' prior: 50861282!
cartasMano
	
	^cartasMano! !

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:18:52'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:18:56'!
cartasPie
	self shouldBeImplemented.
	^cartasPie! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:18:59' prior: 50861295!
cartasPie
	
	^cartasPie! !

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:19:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test06NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:19:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:19:01'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:19:46'!
test07AlComenzarLaRondaEsElPrimerEnfrentamiento
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:20:12' prior: 50861337!
test07AlComenzarLaRondaEsElPrimerEnfrentamiento
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda enfrentamiento equals: 1.
	! !

!methodRemoval: RondaDeTrucoTest #test06NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:20:17'!
test06NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:20:28' prior: 50861261!
test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda cartasMano equals: mazoMano.
	self assert: ronda cartasPie equals: mazoPie.! !

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:20:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:20:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:20:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:20:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:20:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:20:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:20:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:20:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:20:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:20:30'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:20:34'!
enfrentamiento
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:20:37' prior: 50861436!
enfrentamiento
	
	^1! !

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:20:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:20:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:20:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:20:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:20:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:20:40'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:20:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:20:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:20:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:20:41'!
PASSED!

----SNAPSHOT----(5 July 2021 18:20:44) CuisUniversity-4532.image priorSource: 16886014!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:23:30' prior: 50861232!
test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: ronda esteJugadorNoPuedeEmpezarEsteEnfrentamiento equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:23:34'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:23:43'!
test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: ronda esteJugadorNoPuedeEmpezarEsteEnfrentamiento equals: error messageText.
		]
	! !

!methodRemoval: RondaDeTrucoTest #test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:23:43'!
test07NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: ronda esteJugadorNoPuedeEmpezarEsteEnfrentamiento equals: error messageText.
		]
	!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:23:45'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:23:49'!
juegaPieConCarta: aCartaDeTruco 
	self shouldBeImplemented.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:24:14' prior: 50861509!
test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: ronda esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:24:15' prior: 50861556!
juegaPieConCarta: aCartaDeTruco 
	
	self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription.! !

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:24:17'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:24:24'!
esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:24:40' prior: 50861595!
esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription
	
	^'Este jugador no debe empezar este enfrentamiento'! !

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:24:41'!
ERROR!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:24:55'!
ERROR!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:25:02'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:25:31' prior: 50861562!
test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:25:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:25:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:26:19'!
test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:26:29' prior: 50861674!
test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:27:22' prior: 50861697!
test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:27:31'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:27:37'!
juegaManoConCarta: aCartaDeTruco 
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:28:58' prior: 50861744!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].! !

!testRun: #RondaDeTrucoTest #test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:29:00'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:29:06'!
esteJugadorNoPoseeEstaCartaErrorDescription
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:29:21' prior: 50861761!
esteJugadorNoPoseeEstaCartaErrorDescription
	
	^'Este jugador no puede jugar esta carta porque no la posee'! !

!testRun: #RondaDeTrucoTest #test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:29:24'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:29:48'!
test09LaManoNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !

!methodRemoval: RondaDeTrucoTest #test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:29:49'!
test09UnJugadorNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:30:34'!
test10ElPieNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ 
			ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
			ronda juegaPieConCarta: (CartaDeTruco oroCon: 10).
		]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:30:36'!
FAILURE!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:30:49'!
FAILURE!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 18:32:04'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie jugoMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:32:03' prior: 50861749!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	jugoMano := true.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 18:32:11' prior: 50860135!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := aCartasMano.
	cartasPie := aCartasPie.
	jugoMano := false.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:32:25' prior: 50861584!
juegaPieConCarta: aCartaDeTruco 
	
	jugoMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription.]! !

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:32:27'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:32:50' prior: 50861911!
juegaPieConCarta: aCartaDeTruco 
	
	jugoMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	! !

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:32:52'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:45:45'!
test11LuegoDeQueAmbosJueganEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.! !

----SNAPSHOT----(5 July 2021 18:47:12) CuisUniversity-4532.image priorSource: 16954562!

!testRun: #RondaDeTrucoTest #test11LuegoDeQueAmbosJueganEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas stamp: 'TT 7/5/2021 18:47:15'!
FAILURE!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 18:47:28'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie jugoMano enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:47:26' prior: 50861441!
enfrentamiento
	
	^enfrentamiento! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 18:47:34' prior: 50861903!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := aCartasMano.
	cartasPie := aCartasPie.
	jugoMano := false.
	enfrentamiento := 1.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:47:46' prior: 50861923!
juegaPieConCarta: aCartaDeTruco 
	
	jugoMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	enfrentamiento := enfrentamiento + 1.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:50:28'!
test11LuegoDeQueAmbosJueganElPrimerEnfrentamientoEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test11LuegoDeQueAmbosJueganEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas stamp: 'TT 7/5/2021 18:50:28'!
test11LuegoDeQueAmbosJueganEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:53:07'!
test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test11LuegoDeQueAmbosJueganElPrimerEnfrentamientoEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas stamp: 'TT 7/5/2021 18:53:07'!
test11LuegoDeQueAmbosJueganElPrimerEnfrentamientoEmpiezaElSiguienteEnfrentamientoYAmbosTienen2Cartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:55:08'!
test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteMano stamp: 'TT 7/5/2021 18:55:08'!
test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:56:20' prior: 50862135!
test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 18:56:21'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'assertions' stamp: 'TT 7/5/2021 18:56:23' overrides: 16927375!
assert: aFalse description: aBlockClosure 
	self shouldBeImplemented.! !

!methodRemoval: RondaDeTrucoTest #assert:description: stamp: 'TT 7/5/2021 18:56:46'!
assert: aFalse description: aBlockClosure 
	self shouldBeImplemented.!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 18:56:48'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 18:56:48'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 18:56:59'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:57:29' prior: 50862026!
juegaPieConCarta: aCartaDeTruco 
	
	jugoMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	enfrentamiento := enfrentamiento + 1.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:58:13'!
test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:58:47' prior: 50862285!
test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 18:58:50'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 18:59:03'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 18:59:55' prior: 50861894!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	jugoMano := true.
	cartasMano remove: aCartaDeTruco.! !

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 18:59:57'!
ERROR!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 19:00:43' prior: 50862018!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	jugoMano := false.
	enfrentamiento := 1.! !

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:00:44'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:00:51'!
juegaPie
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:00:55' prior: 50862364!
juegaPie
	
	^true! !

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:01:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:01:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:01:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:01:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:01:21'!
FAILURE!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:01:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:01:21'!
FAILURE!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:01:23'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:01:58' prior: 50861383!
test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda cartasMano equals: mazoMano.
	self assert: ronda cartasPie equals: mazoPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:06' prior: 50860371!
test01LaManoNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 7}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:12' prior: 50860392!
test02ElPieNoPuedeTenerCartasRepetidas
	
	| mazoMano mazoPie ronda |
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 7}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco laManoDeUnJugadorNoPuedeTenerCartasRepetidasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:17' prior: 50860413!
test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores
	
	| mazoMano mazoPie ronda |
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5}.
	mazoPie := OrderedCollection withAll:  {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco espadaCon: 5}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresNoPuedenCompartirCartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:24' prior: 50860605!
test04LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresTienenQueEmpezarCon3CartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:30' prior: 50860703!
test05LaManoTieneQueEmpezarCon3Cartas
	
	| mazoMano mazoPie ronda |
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.}.
	
	self 
		should: [ ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :error |
			self assert: RondaDeTruco losJugadoresTienenQueEmpezarCon3CartasErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:46' prior: 50861352!
test07AlComenzarLaRondaEsElPrimerEnfrentamiento
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda enfrentamiento equals: 1.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:52' prior: 50861619!
test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll:  {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:54' prior: 50862572!
test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:02:59' prior: 50861810!
test09LaManoNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:03:04' prior: 50861854!
test10ElPieNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ 
			ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
			ronda juegaPieConCarta: (CartaDeTruco oroCon: 10).
		]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:03:08' prior: 50862308!
test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:04:42'!
test12CuandoGanaElPrimerEnfrentamientoManoEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !

!methodRemoval: RondaDeTrucoTest #test12CuandoGanaElPrimerEnfrentamientoManoEmpiezaMano stamp: 'TT 7/5/2021 19:04:53'!
test12CuandoGanaElPrimerEnfrentamientoManoEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self assert: ronda juegaPie.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:04:58'!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.! !

!methodRemoval: RondaDeTrucoTest #test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:04:58'!
test11SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:05:20' prior: 50862740!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:05:22'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:05:44'!
juegaMano
	
	^true! !

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:05:46'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:06:00' prior: 50862272!
juegaPieConCarta: aCartaDeTruco 
	
	jugoMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	enfrentamiento := enfrentamiento + 1.
	cartasPie remove: aCartaDeTruco.! !

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:07:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:07:23'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:08:11'!
test12SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:08:19' prior: 50862789!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:08:26'!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !

!methodRemoval: RondaDeTrucoTest #test12SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:08:26'!
test12SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:08:34' prior: 50862941!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:08:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:08:36'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:08:52' prior: 50862993!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:10:34' prior: 50862916!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:10:35'!
FAILURE!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 19:11:12'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:11:12' prior: 50862337!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := true.
	cartasMano remove: aCartaDeTruco.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:11:12' prior: 50862828!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	enfrentamiento := enfrentamiento + 1.
	cartasPie remove: aCartaDeTruco.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:11:12' prior: 50862351!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := false.
	enfrentamiento := 1.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:11:22' prior: 50862819!
juegaMano
	
	^juegaMano! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:11:30' prior: 50862369!
juegaPie
	
	^juegaMano not! !

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:11:31'!
FAILURE!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:11:31'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:11:35'!
FAILURE!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:18:55'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:19:57' prior: 50863149!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	
	enfrentamiento := enfrentamiento + 1.
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 19:20:28'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 19:20:29'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 19:20:26' prior: 50863163!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := false.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 19:21:15'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:21:08' prior: 50863139!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := true.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaJugada := aCartaDeTruco.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 19:21:41' prior: 50863277!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := false.
	enfrentamiento := 1.
	ultimaCartaJugada := nil.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:22:30' prior: 50863243!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaJugada := aCartaDeTruco.
	
	enfrentamiento := enfrentamiento + 1.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:22:38' prior: 50863321!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	
	ultimaCartaJugada := nil.
	
	enfrentamiento := enfrentamiento + 1.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:23:51' prior: 50863336!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	
	ultimaCartaJugada := nil.
	
	enfrentamiento := enfrentamiento + 1.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:23:54' prior: 50863351!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	
	enfrentamiento := enfrentamiento + 1.
	! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 19:20:26' prior: 50863310!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := false.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.! !

----SNAPSHOT----(5 July 2021 19:24:11) CuisUniversity-4532.image priorSource: 16971061!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:24:36' prior: 50863299!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := true.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:24:45' prior: 50863366!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	enfrentamiento := enfrentamiento + 1.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:26:28' prior: 50863406!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	ultimaCartaDeMano mataA: ultimaCartaDePie ifTrue: [ juegaMano := true].
	ultimaCartaDePie mataA: ultimaCartaDeMano ifTrue: [ juegaMano := false].
	ultimaCartaDeMano empardaCon: ultimaCartaDePie ifTrue: [ juegaMano := true].
	
	enfrentamiento := enfrentamiento + 1.
	! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:26:42'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:26:55' prior: 50863421!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ juegaMano := true].
	(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ juegaMano := false].
	(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ juegaMano := true].
	
	enfrentamiento := enfrentamiento + 1.
	! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:26:57'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:31:00' prior: 50863099!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:31:08' prior: 50863072!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:31:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:31:09'!
FAILURE!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:31:09'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:31:27' prior: 50863395!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:28'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:31:48' prior: 50863448!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ juegaMano := true].
	(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ juegaMano := false].
	(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ juegaMano := true].
	
	enfrentamiento := enfrentamiento + 1.
	! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:31:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:31:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:31:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:32:03'!
ERROR!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:32:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:32:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:32:04'!
ERROR!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 19:32:34' prior: 50863380!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:32:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:32:35'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:36:11'!
test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: 3 equals: ronda enfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:36:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:36:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:36:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:36:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:36:22'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:37:21'!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 3 equals: ronda enfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:37:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:37:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:37:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:37:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:37:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:37:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:37:23'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:38:19' prior: 50863888!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: 3 equals: ronda enfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:38:29'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:42:26' prior: 50863602!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNotNil) and: (ultimaCartaDePie isNotNil)) ifTrue: [
		(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ juegaMano := true].
		(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ juegaMano := false].
		(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ juegaMano := true].
		ultimaCartaDeMano := nil.
		ultimaCartaDePie := nil.
		enfrentamiento := enfrentamiento + 1.
	].
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:42:49'!
finEnfrentamiento

	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ juegaMano := true].
		(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ juegaMano := false].
		(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ juegaMano := true].
		ultimaCartaDeMano := nil.
		ultimaCartaDePie := nil.
		enfrentamiento := enfrentamiento + 1! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:42:49' prior: 50864010!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNotNil) and: (ultimaCartaDePie isNotNil)) ifTrue: [
		self finEnfrentamiento.
	].
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:42:59' prior: 50863586!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNotNil) and: (ultimaCartaDePie isNotNil)) ifTrue: [
		self finEnfrentamiento.
	].! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:43:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:43:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:43:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:43:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:43:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:43:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:43:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:43:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:43:22'!
ERROR!

nil isNotNil!

nil isNil!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:44:15' prior: 50864067!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifTrue: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:44:20' prior: 50864146!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:44:25' prior: 50864050!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:44:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:44:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:44:27'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:45:16'!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:46:10' prior: 50864247!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
			self assert: 3 equals: ronda enfrentamiento.
			self assert: 1 equals: ronda cartasMano size.
			self assert: 1 equals: ronda cartasPie size.
			self deny: ronda juegaPie.
			self assert: ronda juegaMano.
		]
	! !

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:46:14'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:46:34' prior: 50864160!
juegaManoConCarta: aCartaDeTruco 
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:46:40' prior: 50864309!
juegaManoConCarta: aCartaDeTruco 
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:46:42'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:46:54' prior: 50864271!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
			self assert: 2 equals: ronda enfrentamiento.
			self assert: 3 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
			self deny: ronda juegaPie.
			self assert: ronda juegaMano.
		]
	! !

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:46:54'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:47:03' prior: 50864348!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
			self assert: 2 equals: ronda enfrentamiento.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
			self deny: ronda juegaPie.
			self assert: ronda juegaMano.
		]
	! !

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:47:04'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:47:44' prior: 50864386!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
			self assert: 2 equals: ronda enfrentamiento.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
			self assert: ronda juegaPie.
			self deny: ronda juegaMano.
		]
	! !

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'TT 7/5/2021 19:47:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:47:46'!
ERROR!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:47:46'!
ERROR!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInválida stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:47:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:47:47'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:47:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:47:47'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:48:06' prior: 50864174!
juegaPieConCarta: aCartaDeTruco 
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := true.
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	
	! !

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:48:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:48:08'!
PASSED!

----SNAPSHOT----(5 July 2021 19:48:18) CuisUniversity-4532.image priorSource: 17015692!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:54:25'!
defaultMazoPie

	^ OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:54:25' prior: 50863977!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: 3 equals: ronda enfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:54:37' prior: 50864747!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: 3 equals: ronda enfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:54:43'!
defaultMazoMano

	^ OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:54:43' prior: 50864774!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: 3 equals: ronda enfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:54:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:54:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:54:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:54:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:54:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:54:45'!
PASSED!

Object subclass: #Enfrentamiento
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 19:56:41'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #Enfrentamiento stamp: 'TT 7/5/2021 19:57:00'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

----SNAPSHOT----(5 July 2021 19:57:04) CuisUniversity-4532.image priorSource: 17058730!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:58:27'!
test17SiPardanPrimeraEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:58:34' prior: 50864925!
test17SiPardanPrimeraEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !

!testRun: #RondaDeTrucoTest #test17SiPardanPrimeraEmpiezaMano stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 19:58:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiPardanPrimeraEmpiezaMano stamp: 'TT 7/5/2021 19:58:36'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:58:45' prior: 50864950!
test17SiPardanPrimeraEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 19:58:53'!
test17SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !

!methodRemoval: RondaDeTrucoTest #test17SiPardanPrimeraEmpiezaMano stamp: 'TT 7/5/2021 19:58:53'!
test17SiPardanPrimeraEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.!

!methodRemoval: RondaDeTrucoTest #test17SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 19:59:06'!
test17SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda enfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:01:12'!
test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoPie.
	self deny: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:01:18'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:01:28' prior: 50865141!
test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoPie.
	self deny: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:01:29'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:01:35'!
termino
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:01:41' prior: 50865214!
termino
	
	^true! !

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:01:48'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:01:55'!
ganoPie
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:02:01' prior: 50865227!
ganoPie
	
	^true! !

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:02:02'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:02:06'!
ganoMano
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:02:17' prior: 50865240!
ganoMano

	^false! !

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:02:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:02:18'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:03:11'!
test17SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self assert: ronda ganoPie.
	self deny: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:03:57' prior: 50865317!
test17SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoPie.
	self assert: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:03:59'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:04:04'!
test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoPie.
	self assert: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:04:04'!
test17SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoPie.
	self assert: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:04:07'!
FAILURE!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:04:36'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:04:37'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano enfrentamientosGanadosPorPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 20:04:34' prior: 50863738!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:05:24' prior: 50864036!
finEnfrentamiento

	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ 
		enfrentamientosGanadosPorMano := enfrentamientosGanadosPorMano + 1.
		juegaMano := true].
		(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ 
			enfrentamientosGanadosPorPie := enfrentamientosGanadosPorPie + 1.
			juegaMano := false].
		(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ juegaMano := true].
		ultimaCartaDeMano := nil.
		ultimaCartaDePie := nil.
		enfrentamiento := enfrentamiento + 1! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:05:57' prior: 50865232!
ganoPie
	
	^enfrentamientosGanadosPorPie > enfrentamientosGanadosPorMano ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:06:11' prior: 50865245!
ganoMano

	^enfrentamientosGanadosPorMano > enfrentamientosGanadosPorPie ! !

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:06:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:06:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:06:14'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:06:14'!
PASSED!

----SNAPSHOT----(5 July 2021 20:06:28) CuisUniversity-4532.image priorSource: 17064674!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:08:13'!
test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:08:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:08:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:08:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:08:16'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:11:40'!
test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:11:45' prior: 50865705!
test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:11:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:11:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:11:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:11:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:11:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:11:47'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:12:28'!
test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:12:45' prior: 50865851!
test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:12:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:12:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda stamp: 'TT 7/5/2021 20:12:47'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:14:02'!
test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:14:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:14:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:14:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:14:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda stamp: 'TT 7/5/2021 20:14:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:14:05'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:15:03'!
test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda stamp: 'TT 7/5/2021 20:15:03'!
test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:22:02'!
test23SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self 
		should: [ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).]
		raise: Error - MessageNotUnderstood 
	  	withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText .
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
		]! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:22:06'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:23:56'!
test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 8.
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 8).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:23:58'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:24:37' prior: 50866303!
test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:24:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:24:39'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:25:38'!
test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:25:43' prior: 50866469!
test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:25:57' prior: 50866501!
test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:26:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:26:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:26:02'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:28:00'!
test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:28:01'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:28:06' prior: 50866665!
test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:28:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:28:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:28:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:28:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:28:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:28:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:28:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:28:08'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:29:01'!
test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:29:42' prior: 50866837!
test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:29:51' prior: 50866869!
test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:29:55'!
PASSED!

!methodRemoval: RondaDeTrucoTest #test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:32:05'!
test25SiPardanPrimeraYManoGanoSegundaYPieGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!

!methodRemoval: RondaDeTrucoTest #test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate stamp: 'TT 7/5/2021 20:32:06'!
test26SiPardanPrimeraYPieGanoSegundaYManoGanoTerceraEsEmpate
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:32:11'!
test25SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:32:11'!
test27SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:32:19'!
test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:32:21'!
test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:32:28'!
test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:32:30'!
test25SiPardanPrimeraYPieGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:32:37'!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!methodRemoval: RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda stamp: 'TT 7/5/2021 20:32:37'!
test24SiPardanPrimeraYManoGanoSegundaYManoGanoTerceraManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:33:36' prior: 50867302!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 4.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.
		CartaDeTruco oroCon: 4.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:33:54' prior: 50867367!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:33:59' prior: 50867396!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:34:02' prior: 50867419!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.! !

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:34:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:34:04'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:34:49' prior: 50867442!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda termino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:35:00' prior: 50867237!
test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 4).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 4).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:35:09' prior: 50867581!
test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.! !

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:35:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:35:11'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:35:38'!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCarta
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:35:44'!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.! !

!methodRemoval: RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCarta stamp: 'TT 7/5/2021 20:35:44'!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCarta
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda termino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:37:35' prior: 50867745!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 7) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self deny: ronda ganoMano.
		self assert: ronda ganoPie.
	]! !

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:37:38'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:37:44'!
noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:37:57' prior: 50867816!
noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription
	
	^'No se puede seguir jugando porque la ronda termino'! !

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:37:59'!
FAILURE!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:38:58'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano enfrentamientosGanadosPorPie pardaPrimera'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 20:38:45' prior: 50865481!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.
	pardaPrimera := false.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:40:17' prior: 50864327!
juegaManoConCarta: aCartaDeTruco 
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:40:22'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:40:29' prior: 50864656!
juegaPieConCarta: aCartaDeTruco 
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	juegaMano := true.
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	
	! !

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:40:30'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:40:52' prior: 50865495!
finEnfrentamiento

	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ 
		enfrentamientosGanadosPorMano := enfrentamientosGanadosPorMano + 1.
		juegaMano := true].
		(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ 
			enfrentamientosGanadosPorPie := enfrentamientosGanadosPorPie + 1.
			juegaMano := false].
		(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ 
			pardaPrimera := true.
			juegaMano := true
		].
		ultimaCartaDeMano := nil.
		ultimaCartaDePie := nil.
		enfrentamiento := enfrentamiento + 1! !

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:40:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:40:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:40:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:40:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:40:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:40:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:40:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:40:56'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:41:11'!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 7) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self deny: ronda ganoMano.
		self assert: ronda ganoPie.
	]! !

!methodRemoval: RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas stamp: 'TT 7/5/2021 20:41:11'!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 7) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self deny: ronda ganoMano.
		self assert: ronda ganoPie.
	]!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:41:34'!
test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self deny: ronda ganoMano.
		self assert: ronda ganoPie.
	]! !

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:41:36'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:41:53' prior: 50868091!
test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self assert: ronda ganoMano.
		self deny: ronda ganoPie.
	]! !

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:41:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:41:55'!
PASSED!

----SNAPSHOT----(5 July 2021 20:42:12) CuisUniversity-4532.image priorSource: 17086301!

Object subclass: #Enfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:45:11'!
Object subclass: #Enfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:53:34' prior: 50867861!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:53:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:53:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:53:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:53:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:53:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:53:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:53:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:53:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:53:55'!
PASSED!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:54:24' prior: 50867887!
juegaPieConCarta: aCartaDeTruco 
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := true.
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:54:26' prior: 50868402!
juegaPieConCarta: aCartaDeTruco 
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	juegaMano ifTrue: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	juegaMano := true.
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:54:28'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:54:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:54:29'!
FAILURE!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:54:29'!
FAILURE!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:54:35'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:54:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:54:36'!
FAILURE!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:54:36'!
FAILURE!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:54:38'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:54:52' prior: 50868035!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self deny: ronda ganoMano.
		self assert: ronda ganoPie.
	]! !

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:54:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:54:55'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:55:08' prior: 50868123!
test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self
	should: [ ronda juegaManoConCarta: (CartaDeTruco oroCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self assert: ronda ganoMano.
		self deny: ronda ganoPie.
	]! !

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:55:15'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:55:42' prior: 50868692!
test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self
	should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda termino.
		self assert: ronda ganoMano.
		self deny: ronda ganoPie.
	]! !

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:55:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:55:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 20:55:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:55:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 20:55:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 20:55:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 20:55:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 20:55:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 20:55:46'!
PASSED!

Object subclass: #EnfrentamientoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoState category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:56:51'!
Object subclass: #EnfrentamientoState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #ManoPrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #ManoPrimeroState category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:57:33'!
Object subclass: #ManoPrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #PiePrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #PiePrimeroState category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:57:36'!
Object subclass: #PiePrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoState subclass: #ManoPrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #ManoPrimeroState category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:57:43'!
EnfrentamientoState subclass: #ManoPrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoState subclass: #PiePrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #PiePrimeroState category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:57:46'!
EnfrentamientoState subclass: #PiePrimeroState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!ManoPrimeroState methodsFor: 'no messages' stamp: 'TT 7/5/2021 20:58:30'!
juegaMano: aCartaDeTruco! !
!ManoPrimeroState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:58:34'!
juegaPie: aCartaDeTruco! !
!PiePrimeroState methodsFor: 'nil' stamp: 'TT 7/5/2021 20:58:44'!
juegaPie: aCartaDeTruco! !
!PiePrimeroState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 20:58:47'!
juegaMano: aCartaDeTruco! !

Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano enfrentamientosGanadosPorPie pardaPrimera enfrentamientoState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 20:59:10'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie juegaMano enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano enfrentamientosGanadosPorPie pardaPrimera enfrentamientoState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 20:59:23' prior: 50867846!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.
	pardaPrimera := false.
	enfrentamientoState := ManoPrimeroState.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 20:59:25' prior: 50868961!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.
	pardaPrimera := false.
	enfrentamientoState := ManoPrimeroState new.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:01:00' prior: 50868273!
juegaManoConCarta: aCartaDeTruco 
	
	(cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!PiePrimeroState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:01:07' prior: 50868933!
juegaMano: aCartaDeTruco
	! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 21:01:22' prior: 50868977!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.
	pardaPrimera := false.
	enfrentamientoState := ManoPrimeroState withRonda: self.! !
!ManoPrimeroState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:01:29' prior: 50868922!
juegaMano: aCartaDeTruco
	! !

!classDefinition: #EnfrentamientoState category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 21:01:51'!
Object subclass: #EnfrentamientoState
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoState methodsFor: 'no messages' stamp: 'TT 7/5/2021 21:01:49'!
initializeWithRonda: aRonda

	ronda := aRonda.! !
!EnfrentamientoState class methodsFor: 'no messages' stamp: 'TT 7/5/2021 21:02:14'!
withRonda: aRonda

	^self new initializeWithRonda: aRonda! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:02:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:02:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:02:23'!
PASSED!
!ManoPrimeroState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:03:17' prior: 50869038!
juegaMano: aCartaDeTruco
	
	ronda juegaEnSuTurnoMano! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:05:24'!
assertManoTieneLaCarta: aCartaDeTruco

	^ (cartasMano includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:05:24' prior: 50868993!
juegaManoConCarta: aCartaDeTruco 
	
	self assertManoTieneLaCarta: aCartaDeTruco.
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:05:44'!
assertLaRondaTermino

	^ (pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:05:45' prior: 50869177!
juegaManoConCarta: aCartaDeTruco 
	
	self assertManoTieneLaCarta: aCartaDeTruco.
	
	self assertLaRondaTermino.
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:05:47' prior: 50869207!
juegaManoConCarta: aCartaDeTruco 
	
	self assertManoTieneLaCarta: aCartaDeTruco.
	self assertLaRondaTermino.
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !

!classRenamed: #ManoPrimeroState as: #ManoJuegaState stamp: 'TT 7/5/2021 21:06:18'!
Smalltalk renameClassNamed: #ManoPrimeroState as: #ManoJuegaState!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:06:18' prior: 50869021!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	juegaMano := true.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.
	pardaPrimera := false.
	enfrentamientoState := ManoJuegaState withRonda: self.! !

!classRenamed: #PiePrimeroState as: #PieJuegaState stamp: 'TT 7/5/2021 21:06:29'!
Smalltalk renameClassNamed: #PiePrimeroState as: #PieJuegaState!
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:08:11' prior: 50868926!
juegaPie: aCartaDeTruco

	ronda noJuegaEnSuTurnoMano! !
!PieJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:08:23' prior: 50868929!
juegaPie: aCartaDeTruco

	ronda juegaEnSuTurnoPie! !
!PieJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:08:36' prior: 50869017!
juegaMano: aCartaDeTruco
	
	ronda noJuegaEnSuTurnoMano! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:08:42' prior: 50869269!
juegaPie: aCartaDeTruco

	ronda noJuegaEnSuTurnoPie! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:08:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:08:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:08:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:08:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:08:56'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:09:00'!
juegaEnSuTurnoMano
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:09:04' prior: 50869398!
juegaEnSuTurnoMano
	! !

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:09:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:09:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:09:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:09:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:09:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:09:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:09:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:09:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:09:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:09:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:09:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:09:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:09:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:09:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:09:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:09:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:09:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:09:11'!
PASSED!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:09:30' prior: 50869225!
juegaManoConCarta: aCartaDeTruco 
	
	self assertManoTieneLaCarta: aCartaDeTruco.
	self assertLaRondaTermino.
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].
	
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:10:46'!
juegaEnSuTurnoMano: aCartaDeTruco
	
	juegaMano := false.
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	enfrentamientoState := PieJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !

!methodRemoval: RondaDeTruco #juegaEnSuTurnoMano stamp: 'TT 7/5/2021 21:10:49'!
juegaEnSuTurnoMano
	!
!PieJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:10:59' prior: 50869274!
juegaPie: aCartaDeTruco

	ronda juegaEnSuTurnoPie: aCartaDeTruco! !
!PieJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:11:06' prior: 50869279!
juegaMano: aCartaDeTruco
	
	ronda noJuegaEnSuTurnoMano: aCartaDeTruco! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:11:12' prior: 50869284!
juegaPie: aCartaDeTruco

	ronda noJuegaEnSuTurnoPie: aCartaDeTruco! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:11:15' prior: 50869164!
juegaMano: aCartaDeTruco
	
	ronda juegaEnSuTurnoMano: aCartaDeTruco! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:11:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:11:21'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:11:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:11:22'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:11:30' prior: 50869478!
juegaManoConCarta: aCartaDeTruco 
	
	self assertManoTieneLaCarta: aCartaDeTruco.
	self assertLaRondaTermino.
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	
	juegaMano ifFalse: [self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:11:32' prior: 50869638!
juegaManoConCarta: aCartaDeTruco 
	
	self assertManoTieneLaCarta: aCartaDeTruco.
	self assertLaRondaTermino.
	
	enfrentamientoState juegaMano: aCartaDeTruco.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:11:46'!
noJuegaEnSuTurnoMano: aCartaDeTruco
	
	self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:11:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:11:48'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:11:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:11:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:11:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:11:50'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:12:14'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:12:40'!
juegaEnSuTurnoPie: aCartaDeTruco
	
	self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:12:42' prior: 50869775!
juegaEnSuTurnoPie: aCartaDeTruco
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:12:46'!
noJuegaEnSuTurnoPie: aCartaDeTruco
	
	self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:13:11' prior: 50868424!
juegaPieConCarta: aCartaDeTruco 
	
	(cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription].
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	enfrentamientoState juegaPie: aCartaDeTruco.
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:13:26' prior: 50869782!
juegaEnSuTurnoPie: aCartaDeTruco

	juegaMano := true.
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:14:55' prior: 50867913!
finEnfrentamiento
	
	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ 
		enfrentamientosGanadosPorMano := enfrentamientosGanadosPorMano + 1.
		enfrentamientoState := ManoJuegaState withRonda: self.
		juegaMano := true
	].
	(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ 
		enfrentamientosGanadosPorPie := enfrentamientosGanadosPorPie + 1.
		enfrentamientoState := PieJuegaState withRonda: self.
		juegaMano := false.
	].
	(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ 
		pardaPrimera := true.
		enfrentamientoState := ManoJuegaState withRonda: self.
		juegaMano := true
	].
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamiento := enfrentamiento + 1! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:14:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:14:58'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:14:58'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:14:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:15:00'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:16:59'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:17:21' prior: 50869807!
juegaEnSuTurnoPie: aCartaDeTruco

	juegaMano := true.
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:17:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:17:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:17:24'!
PASSED!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:18:35' prior: 50863173!
juegaMano
	
	^enfrentamientoState juegaMano! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:18:41' prior: 50863177!
juegaPie
	
	^enfrentamientoState juegaMano! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:19:30'!
juegaMano
	
	ronda esTurnoDeMano! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:19:41'!
juegaPie
	
	ronda noEsTurnoDePie! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:19:45' prior: 50870081!
juegaPie
	
	^ronda noEsTurnoDePie! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:20:02'!
esTurnoDePie
	
	^ronda noEsTurnoDePie! !
!ManoJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:20:14'!
esTurnoDeMano
	
	^ronda esTurnoDeMano! !

!methodRemoval: ManoJuegaState #juegaMano stamp: 'TT 7/5/2021 21:20:23'!
juegaMano
	
	ronda esTurnoDeMano!

!methodRemoval: ManoJuegaState #juegaPie stamp: 'TT 7/5/2021 21:20:25'!
juegaPie
	
	^ronda noEsTurnoDePie!
!PieJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:20:42'!
esTurnoDeMano
	
	^ronda noEsTurnoDePie! !
!PieJuegaState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:21:02'!
esTurnoDePie
	
	^ronda esTurnoDePie! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:21:22' prior: 50870073!
juegaPie
	
	^enfrentamientoState esTurnoDePie ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:21:25' prior: 50870068!
juegaMano
	
	^enfrentamientoState esTurnoDeMano ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:21:35'!
esTurnoDePie

	^true! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:21:51'!
esTurnoDeMano

	^true! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:22:01'!
noEsTurnoDeMano

	^false! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:22:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:22:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:22:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:22:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:22:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:22:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:22:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:22:08'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:22:52'!
noEsTurnoDePie

	^false! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:22:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:22:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:22:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:22:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:22:55'!
PASSED!

----SNAPSHOT----(5 July 2021 21:22:58) CuisUniversity-4532.image priorSource: 17171403!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:23:33' prior: 50869818!
finEnfrentamiento
	
	(ultimaCartaDeMano mataA: ultimaCartaDePie) ifTrue: [ 
		enfrentamientosGanadosPorMano := enfrentamientosGanadosPorMano + 1.
		enfrentamientoState := ManoJuegaState withRonda: self.
	].
	(ultimaCartaDePie mataA: ultimaCartaDeMano) ifTrue: [ 
		enfrentamientosGanadosPorPie := enfrentamientosGanadosPorPie + 1.
		enfrentamientoState := PieJuegaState withRonda: self.
	].
	(ultimaCartaDeMano empardaCon: ultimaCartaDePie) ifTrue: [ 
		pardaPrimera := true.
		enfrentamientoState := ManoJuegaState withRonda: self.
	].
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamiento := enfrentamiento + 1! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'TT 7/5/2021 21:23:37' prior: 50869248!
initializeConCartasMano: aCartasMano cartasPie: aCartasPie 
	
	cartasMano := OrderedCollection withAll: aCartasMano.
	cartasPie := OrderedCollection withAll: aCartasPie.
	enfrentamiento := 1.
	ultimaCartaDeMano := nil.
	ultimaCartaDePie := nil.
	enfrentamientosGanadosPorMano := 0.
	enfrentamientosGanadosPorPie := 0.
	pardaPrimera := false.
	enfrentamientoState := ManoJuegaState withRonda: self.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:23:41' prior: 50869496!
juegaEnSuTurnoMano: aCartaDeTruco
	
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	enfrentamientoState := PieJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:23:44' prior: 50869953!
juegaEnSuTurnoPie: aCartaDeTruco

	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !

Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano enfrentamientosGanadosPorPie pardaPrimera enfrentamientoState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'TT 7/5/2021 21:23:49'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cartasMano cartasPie enfrentamiento ultimaCartaDeMano ultimaCartaDePie ultimaCartaJugada enfrentamientosGanadosPorMano enfrentamientosGanadosPorPie pardaPrimera enfrentamientoState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:23:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:23:53'!
PASSED!

----SNAPSHOT----(5 July 2021 21:24:02) CuisUniversity-4532.image priorSource: 17238363!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:24:48' prior: 50866182!
test23SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self 
		should: [ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).]
		raise: Error - MessageNotUnderstood 
	  	withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText .
			self deny: ronda termino.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
		]! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:24:49'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:25:22' prior: 50865219!
termino! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:25:57' prior: 50869198!
assertLaRondaTermino

	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:26:06' prior: 50870584!
assertLaRondaTermino

	self termino ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:26:14' prior: 50870580!
termino

	^(pardaPrimera and: (enfrentamiento = 3)) ! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:26:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:26:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:26:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:26:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:26:26'!
FAILURE!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:26:27'!
FAILURE!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:26:27'!
FAILURE!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:26:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:26:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:26:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:26:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:26:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:26:30'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:27:13' prior: 50870600!
termino

	^(pardaPrimera and: (enfrentamiento = 3)) or: (enfrentamiento = 4)! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:27:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
FAILURE!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
FAILURE!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:27:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:27:18'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:28:20' prior: 50870716!
termino

	^(pardaPrimera and: (enfrentamiento = 3)) or: (enfrentamientosGanadosPorMano = 2 or: enfrentamientosGanadosPorPie = 2)! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:28:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:28:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:28:25'!
PASSED!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:29:15'!
signalEsteJugadorNoPuedeEmpezarEsteEnfrentamiento

	^ self error: self class esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:29:15' prior: 50869786!
noJuegaEnSuTurnoPie: aCartaDeTruco
	
	self signalEsteJugadorNoPuedeEmpezarEsteEnfrentamiento! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:29:22' prior: 50869658!
noJuegaEnSuTurnoMano: aCartaDeTruco
	
	self signalEsteJugadorNoPuedeEmpezarEsteEnfrentamiento! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:29:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:29:24'!
PASSED!

----SNAPSHOT----(5 July 2021 21:29:35) CuisUniversity-4532.image priorSource: 17244499!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:30:25'!
assertPieTieneLaCarta: aCartaDeTruco

	^ (cartasPie includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:30:25' prior: 50869793!
juegaPieConCarta: aCartaDeTruco 
	
	self assertPieTieneLaCarta: aCartaDeTruco.
	
	(pardaPrimera and: (enfrentamiento = 3)) ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ].
	
	enfrentamientoState juegaPie: aCartaDeTruco.
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:30:45' prior: 50871083!
juegaPieConCarta: aCartaDeTruco 
	
	self assertPieTieneLaCarta: aCartaDeTruco.
	self assertLaRondaTermino.
	
	enfrentamientoState juegaPie: aCartaDeTruco.
	
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:30:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:30:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:30:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:30:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:30:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:30:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:30:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:30:49'!
PASSED!
!RondaDeTruco methodsFor: 'estado de enfrentamiento' stamp: 'TT 7/5/2021 21:32:47'!
numeroDeEnfrentamiento
	
	^enfrentamiento! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50864808!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: 3 equals: ronda numeroDeEnfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50863502!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50862670!
test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50864424!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
			self assert: 2 equals: ronda numeroDeEnfrentamiento.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
			self assert: ronda juegaPie.
			self deny: ronda juegaMano.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50863803!
test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: 3 equals: ronda numeroDeEnfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50863475!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:32:47' prior: 50862554!
test07AlComenzarLaRondaEsElPrimerEnfrentamiento
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda numeroDeEnfrentamiento equals: 1.
	! !

!methodRemoval: RondaDeTruco #enfrentamiento stamp: 'TT 7/5/2021 21:32:47'!
enfrentamiento
	
	^enfrentamiento!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:32:51'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:32:52'!
PASSED!

----SNAPSHOT----(5 July 2021 21:33:00) CuisUniversity-4532.image priorSource: 17261486!
!RondaDeTruco methodsFor: 'estado de ronda' stamp: 'TT 7/5/2021 21:35:55'!
seTermino

	^(pardaPrimera and: (enfrentamiento = 3)) or: (enfrentamientosGanadosPorMano = 2 or: enfrentamientosGanadosPorPie = 2)! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50870545!
test23SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self 
		should: [ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).]
		raise: Error - MessageNotUnderstood 
	  	withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText .
			self deny: ronda seTermino.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
		]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50866001!
test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	
	self assert: ronda seTermino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50865601!
test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda seTermino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50868656!
test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self
	should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda seTermino.
		self deny: ronda ganoMano.
		self assert: ronda ganoPie.
	]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50866117!
test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda seTermino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50868724!
test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self
	should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6) ]
	raise: Error - MessageNotUnderstood 
	withExceptionDo: [ :error | 
		self assert: RondaDeTruco noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription equals: error messageText.
		self assert: ronda seTermino.
		self assert: ronda ganoMano.
		self deny: ronda ganoPie.
	]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:55' prior: 50865387!
test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda seTermino.
	self deny: ronda ganoPie.
	self assert: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:56' prior: 50867607!
test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda seTermino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:56' prior: 50865178!
test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda seTermino.
	self assert: ronda ganoPie.
	self deny: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:56' prior: 50865738!
test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := OrderedCollection withAll: {
		CartaDeTruco espadaCon: 7.
		CartaDeTruco espadaCon: 6.
		CartaDeTruco espadaCon: 5.}.
	mazoPie := OrderedCollection withAll: {
		CartaDeTruco oroCon: 7.
		CartaDeTruco oroCon: 6.
		CartaDeTruco oroCon: 5.}.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda seTermino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:56' prior: 50867561!
test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: ronda seTermino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:35:56' prior: 50870592!
assertLaRondaTermino

	self seTermino ifTrue: [ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription ]! !

!methodRemoval: RondaDeTruco #termino stamp: 'TT 7/5/2021 21:35:56'!
termino

	^(pardaPrimera and: (enfrentamiento = 3)) or: (enfrentamientosGanadosPorMano = 2 or: enfrentamientosGanadosPorPie = 2)!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:36:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:36:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:36:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:36:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:36:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:36:04'!
PASSED!

----SNAPSHOT----(5 July 2021 21:36:10) CuisUniversity-4532.image priorSource: 17275166!
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:36:30'!
esTurnoDeMano

	self subclassResponsibility ! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:36:33'!
esTurnoDePie

	self subclassResponsibility ! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:36:47'!
juegaMano: aCartaDeTruco
	
	self subclassResponsibility ! !
!EnfrentamientoState methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:36:50'!
juegaPie: aCartaDeTruco
	
	self subclassResponsibility ! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'TT 7/5/2021 21:38:38' prior: 50871075!
assertPieTieneLaCarta: aCartaDeTruco
	
	self assertTieneLaCarta: aCartaDeTruco elJugador: cartasPie.! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:38:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:38:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:38:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:38:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:38:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:38:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:38:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:38:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:38:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:38:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:38:44'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:38:48'!
assertTieneLaCarta: aCartaDeTruco elJugador: anOrderedCollection 
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:39:00' prior: 50872080!
assertTieneLaCarta: aCartaDeTruco elJugador: aJugador 
	(aJugador includes: aCartaDeTruco) ifFalse: [self error: self class esteJugadorNoPoseeEstaCartaErrorDescription]! !

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:39:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:39:01'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:39:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:39:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:39:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:39:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:39:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:39:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:39:03'!
PASSED!
!RondaDeTruco methodsFor: 'assertions' stamp: 'TT 7/5/2021 21:39:29' prior: 50869169!
assertManoTieneLaCarta: aCartaDeTruco

	self assertTieneLaCarta: aCartaDeTruco elJugador: cartasMano.! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:39:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:39:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:39:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:39:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:39:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:39:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:39:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:39:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:39:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:39:53' prior: 50871511!
test23SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self 
		should: [ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).]
		raise: Error - MessageNotUnderstood 
	  	withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText .
			self deny: ronda seTermino.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
		]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:39:55' prior: 50872311!
test23SiPardanPrimeraEmpiezaManoSegunda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self 
		should: [ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).]
		raise: Error - MessageNotUnderstood 
	  	withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText .
			self deny: ronda seTermino.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
		]! !

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:39:56'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:05' prior: 50871543!
test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	
	self assert: ronda seTermino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:40:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:40:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:40:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:40:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:40:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:40:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:40:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:40:13'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:15' prior: 50871629!
test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: ronda seTermino.
	self deny: ronda ganoMano.
	self assert: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:40:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:40:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:40:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:40:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:40:17'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:22' prior: 50871776!
test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda seTermino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:26' prior: 50871572!
test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: ronda seTermino.
	self assert: ronda ganoMano.
	self deny: ronda ganoPie.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:30' prior: 50871690!
test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: ronda seTermino.
	self deny: ronda ganoPie.
	self assert: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:35' prior: 50871743!
test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: ronda seTermino.
	self assert: ronda ganoPie.
	self deny: ronda ganoMano.
	self assert: 0 equals: ronda cartasMano size.
	self assert: 0 equals: ronda cartasPie size.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:39' prior: 50871286!
test16NoPuedeJugarLaManoCuandoNoEsSuTurno
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
			self assert: 2 equals: ronda numeroDeEnfrentamiento.
			self assert: 2 equals: ronda cartasMano size.
			self assert: 2 equals: ronda cartasPie size.
			self assert: ronda juegaPie.
			self deny: ronda juegaMano.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:44' prior: 50871320!
test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: 3 equals: ronda numeroDeEnfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:48' prior: 50871235!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:53' prior: 50871349!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:40:56' prior: 50871262!
test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self assert: ronda juegaPie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:41:00' prior: 50862644!
test10ElPieNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ 
			ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
			ronda juegaPieConCarta: (CartaDeTruco oroCon: 10).
		]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:41:05' prior: 50862620!
test09LaManoNoPuedeJugarConUnaCartaQueNoPosee
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaManoConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPoseeEstaCartaErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:41:08' prior: 50862596!
test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self 
		should: [ ronda juegaPieConCarta: (CartaDeTruco oroCon: 5) ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :error |
			self assert: RondaDeTruco esteJugadorNoPuedeEmpezarEsteEnfrentamientoErrorDescription equals: error messageText.
		]
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:41:13' prior: 50871376!
test07AlComenzarLaRondaEsElPrimerEnfrentamiento
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda numeroDeEnfrentamiento equals: 1.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:41:17' prior: 50862425!
test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	self assert: ronda cartasMano equals: mazoMano.
	self assert: ronda cartasPie equals: mazoPie.! !

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:41:21'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:41:22'!
PASSED!

----SNAPSHOT----(5 July 2021 21:41:29) CuisUniversity-4532.image priorSource: 17289423!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:42:16' prior: 50871211!
test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	
	self assert: 3 equals: ronda numeroDeEnfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda seTermino.
	self deny: ronda juegaPie.
	self assert: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:43:51' prior: 50872870!
test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 7).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 7).
	
	self assert: 3 equals: ronda numeroDeEnfrentamiento.
	self assert: 1 equals: ronda cartasMano size.
	self assert: 1 equals: ronda cartasPie size.
	self deny: ronda seTermino.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:43:56' prior: 50872894!
test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 6).
	
	self assert: 2 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self deny: ronda seTermino.
	self assert: ronda juegaPie.
	self deny: ronda juegaMano.! !

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:43:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:43:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:43:58'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:44:04' prior: 50872915!
test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 6).
	ronda juegaPieConCarta: (CartaDeTruco oroCon: 5).
	
	self assert: 2 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 2 equals: ronda cartasPie size.
	self deny: ronda seTermino.
	self assert: ronda juegaMano.
	self deny: ronda juegaPie.! !

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:44:05'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:44:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:44:06'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:44:15' prior: 50872936!
test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie
	
	| mazoMano mazoPie ronda |
	
	mazoMano := self defaultMazoMano.
	mazoPie := self defaultMazoPie.
	
	ronda := RondaDeTruco conCartasMano: mazoMano cartasPie: mazoPie.
	
	ronda juegaManoConCarta: (CartaDeTruco espadaCon: 5).
	
	self assert: 1 equals: ronda numeroDeEnfrentamiento.
	self assert: 2 equals: ronda cartasMano size.
	self assert: 3 equals: ronda cartasPie size.
	self deny: ronda seTermino.
	self assert: ronda juegaPie.! !

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:44:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:44:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:44:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:44:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:44:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:44:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:44:18'!
PASSED!

----SNAPSHOT----(5 July 2021 21:44:29) CuisUniversity-4532.image priorSource: 17327747!
!RondaDeTruco methodsFor: 'estado de enfrentamiento - private' stamp: 'TT 7/5/2021 21:47:18' prior: 50870404!
juegaEnSuTurnoPie: aCartaDeTruco
	
	self juegaCarta: aCartaDeTruco conCartas: cartasPie ultimaCarta: ultimaCartaDePie pasaAJugar: (ManoJuegaState withRonda: self).
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !
!RondaDeTruco methodsFor: 'estado de enfrentamiento - private' stamp: 'TT 7/5/2021 21:47:22' prior: 50873584!
juegaEnSuTurnoPie: aCartaDeTruco
	
	self juegaCarta: aCartaDeTruco conCartas: cartasPie ultimaCarta: ultimaCartaDePie pasaAJugar: (ManoJuegaState withRonda: self).
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:47:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:47:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:47:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:47:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:47:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:47:26'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:47:30'!
juegaCarta: aCartaDeTruco conCartas: anOrderedCollection ultimaCarta: anUndefinedObject pasaAJugar: aManoJuegaState 
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:47:32' prior: 50873715!
juegaCarta: aCartaDeTruco conCartas: anOrderedCollection ultimaCarta: anUndefinedObject pasaAJugar: aManoJuegaState 
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !
!RondaDeTruco methodsFor: 'estado de enfrentamiento - private' stamp: 'TT 7/5/2021 21:47:18' prior: 50873600!
juegaEnSuTurnoPie: aCartaDeTruco
	
	self juegaCarta: aCartaDeTruco conCartas: cartasPie ultimaCarta: ultimaCartaDePie pasaAJugar: (ManoJuegaState withRonda: self).
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !
!RondaDeTruco methodsFor: 'estado de enfrentamiento - private' stamp: 'TT 7/5/2021 21:48:48' prior: 50873738!
juegaEnSuTurnoPie: aCartaDeTruco
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:48:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:48:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:48:54'!
PASSED!
!RondaDeTruco methodsFor: 'estado de enfrentamiento - private' stamp: 'TT 7/5/2021 21:49:22' prior: 50873754!
juegaEnSuTurnoPie: aCartaDeTruco
	
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	self chequearFinDeEnfrentamiento.
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:49:27'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:27'!
ERROR!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:27'!
ERROR!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:49:28'!
ERROR!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:29'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:49:33'!
chequearFinDeEnfrentamiento
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'TT 7/5/2021 21:49:38' prior: 50873985!
chequearFinDeEnfrentamiento

	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:49:43'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:49:44'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:49:44'!
PASSED!
!RondaDeTruco methodsFor: 'estado de enfrentamiento - private' stamp: 'TT 7/5/2021 21:49:51' prior: 50870392!
juegaEnSuTurnoMano: aCartaDeTruco
	
	cartasMano remove: aCartaDeTruco.
	ultimaCartaDeMano := aCartaDeTruco.
	enfrentamientoState := PieJuegaState withRonda: self.
	
	self chequearFinDeEnfrentamiento.
	! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:49:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:49:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:49:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:49:55'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:49:55'!
PASSED!

!methodRemoval: RondaDeTruco #juegaCarta:conCartas:ultimaCarta:pasaAJugar: stamp: 'TT 7/5/2021 21:50:15'!
juegaCarta: aCartaDeTruco conCartas: anOrderedCollection ultimaCarta: anUndefinedObject pasaAJugar: aManoJuegaState 
	cartasPie remove: aCartaDeTruco.
	ultimaCartaDePie := aCartaDeTruco.
	enfrentamientoState := ManoJuegaState withRonda: self.
	
	((ultimaCartaDeMano isNil) or: (ultimaCartaDePie isNil)) ifFalse: [
		self finEnfrentamiento.
	].
	!
!RondaDeTruco methodsFor: 'assertions' stamp: 'TT 7/5/2021 21:50:47'!
signalNoSePuedeSeguirJugandoCuandoLaRondaTermina

	^ self error: self class noSePuedeSeguirJugandoCuandoLaRondaTerminaErrorDescription! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'TT 7/5/2021 21:50:47' prior: 50871829!
assertLaRondaTermino

	self seTermino ifTrue: [ self signalNoSePuedeSeguirJugandoCuandoLaRondaTermina ]! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'TT 7/5/2021 21:51:06'!
signalEsteJugadorNoPoseeEstaCartaErrorDescription

	^ self error: self class esteJugadorNoPoseeEstaCartaErrorDescription! !
!RondaDeTruco methodsFor: 'assertions' stamp: 'TT 7/5/2021 21:51:06' prior: 50872086!
assertTieneLaCarta: aCartaDeTruco elJugador: aJugador 
	(aJugador includes: aCartaDeTruco) ifFalse: [self signalEsteJugadorNoPoseeEstaCartaErrorDescription]! !

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:51:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:51:07'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:51:08'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:51:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:51:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:52:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:52:46'!
PASSED!

----SNAPSHOT----(5 July 2021 21:52:53) CuisUniversity-4532.image priorSource: 17341734!

!classRemoval: #Enfrentamiento stamp: 'TT 7/5/2021 21:54:16'!
Object subclass: #Enfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!testRun: #RondaDeTrucoTest #test01LaManoNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test02ElPieNoPuedeTenerCartasRepetidas stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedeHaberCartasRepetidasEntreLasCartasDeLosJugadores stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test04LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test05LaManoTieneQueEmpezarCon3Cartas stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test06AlComenzarLaRondaLosJugadoresTienenTodasSusCartas stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test07AlComenzarLaRondaEsElPrimerEnfrentamiento stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test08NoPuedeJugarElPiePrimeroAlComenzarLaRonda stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test09LaManoNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test10ElPieNoPuedeJugarConUnaCartaQueNoPosee stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test11LuegoDeJugarManoTieneUnaCartaMenosYEsTurnoDePie stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test12SiManoGanoPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test13SiPieGanaPrimerEnfrentamientoEmpiezaElSiguienteManoCon2CartasAmbos stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test14SiManoGanoPrimeraYPieGanaSegundaEmpiezaPie stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test15SiPieGanoPrimeraYManoGanaSegundaEmpiezaMano stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test16NoPuedeJugarLaManoCuandoNoEsSuTurno stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test17SiManoGanoPrimeraYPieGanaSegundaYPieGanaTerceraGanaPieLaRonda stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test18SiManoGanoPrimeraYPieGanaSegundaYManoGanaTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test19SiManoGanoPrimeraYManoGanoSegundaGanoManoLaRonda stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test20SiPieGanoPrimeraYManoGanoSegundaYManoGanoTerceraGanaManoLaRonda stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test21SiPieGanoPrimeraYManoGanoSegundaYPieGanoTerceraPieGanoLaRonda stamp: 'TT 7/5/2021 21:54:19'!
PASSED!

!testRun: #RondaDeTrucoTest #test22SiPieGanoPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:54:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test23SiPardanPrimeraEmpiezaManoSegunda stamp: 'TT 7/5/2021 21:54:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test24SiPardanPrimeraYManoGanoSegundaManoGanoLaRonda stamp: 'TT 7/5/2021 21:54:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test25SiPardanPrimeraYPieGanoSegundaPieGanoLaRonda stamp: 'TT 7/5/2021 21:54:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test26SiLaRondaTerminoNoPuedeSeguirTirandoCartasPie stamp: 'TT 7/5/2021 21:54:20'!
PASSED!

!testRun: #RondaDeTrucoTest #test27SiLaRondaTerminoNoPuedeSeguirTirandoCartasMano stamp: 'TT 7/5/2021 21:54:20'!
PASSED!

----SNAPSHOT----(5 July 2021 21:54:27) CuisUniversity-4532.image priorSource: 17369921!