----End fileIn of C:\Users\FACU PC\Downloads\ISW1-2021-1C-2doParcial.st----!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'FG 7/5/2021 17:19:54'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'FG 7/5/2021 17:19:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'FG 7/5/2021 17:19:57'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'FG 7/5/2021 17:20:00'!
PASSED!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 17:24:16'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 17:36:40'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'FG 7/5/2021 17:36:32'!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.! !

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:36:52'!
ERROR!

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:36:52'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:37:01'!
estaJugandoLaMano
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:37:08' prior: 51042251!
estaJugandoLaMano
	^ true.! !

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:37:17'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:37:22'!
enfrentamientoActual
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:37:26' prior: 51042264!
enfrentamientoActual
	^ 1.! !

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:37:30'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:40:10'!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self should: [rondaDeTruco manoJuega: ''] ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:40:31'!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self should: [rondaDeTruco manoJuega: ''] ! !

!methodRemoval: RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 17:40:33'!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self should: [rondaDeTruco manoJuega: ''] !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:41:19' prior: 51042285!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self should: [rondaDeTruco pieJuega: CartaDeTruco ] ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:43:54' prior: 51042303!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				anError messageText equals:  RondaDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco enfrentamientoActual equals: 1.
			]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:44:05' prior: 51042312!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  RondaDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco enfrentamientoActual equals: 1.
			]. ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:45:14'!
pieJuega: unaCarta

	self error: 	RondaDeTruco errorDeJugadaInvalida! !
!RondaDeTruco class methodsFor: 'no messages' stamp: 'FG 7/5/2021 17:45:34'!
errorDeJugadaInvalida

	^ 'Error - Jugada Invalida'! !

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 17:45:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:45:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 17:45:45'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:48:41'!
test02LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:48:45'!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco.! !

!methodRemoval: RondaDeTrucoTest #test02LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:48:47'!
test02LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:49:09' prior: 51042377!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self assert: rondaDeTruco enfrentamiento equals: 1.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:49:32' prior: 51042399!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco enfrentamiento equals: 1.! !

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:49:38'!
ERROR!

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:49:38'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:49:49'!
manoJuega: aCartaDeTruco 
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:49:52' prior: 51042435!
manoJuega: aCartaDeTruco 
	! !

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:49:55'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:50:02'!
estaJugandoElPie
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:50:09' prior: 51042449!
estaJugandoElPie
	^ true! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:50:19' prior: 51042412!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.! !

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:50:23'!
FAILURE!

Object subclass: #RondaDeTruco
	instanceVariableNames: 'estaJugandoMano estaJugandoPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 17:51:04'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'estaJugandoMano estaJugandoPie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:51:20' overrides: 16896425!
initialize

	estaJugandoMano := true.
	estaJugandoPie := false.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:51:43' prior: 51042440!
manoJuega: aCartaDeTruco 

	estaJugandoMano := false.
	estaJugandoPie := true.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:52:33' prior: 51042454!
estaJugandoElPie
	^ estaJugandoPie ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:52:38' prior: 51042256!
estaJugandoLaMano
	^ estaJugandoMano.! !

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:52:42'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:52:52' prior: 51042233!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self deny: rondaDeTruco estaJugandoElPie.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.! !

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:52:58'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:53:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 17:53:02'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:54:17'!
test04ManoNoPuedeJugarLuegoDeHaberJugado

	||
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:55:58' prior: 51042542!
test04ManoNoPuedeJugarLuegoDeHaberJugado

	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  RondaDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco enfrentamientoActual equals: 1.
			]. 
	! !

!testRun: #RondaDeTrucoTest #test04ManoNoPuedeJugarLuegoDeHaberJugado stamp: 'FG 7/5/2021 17:56:00'!
FAILURE!

!testRun: #RondaDeTrucoTest #test04ManoNoPuedeJugarLuegoDeHaberJugado stamp: 'FG 7/5/2021 17:56:00'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:57:05' prior: 51042497!
manoJuega: aCartaDeTruco 

	estaJugandoMano ifFalse: [self error: RondaDeTruco errorDeJugadaInvalida].

	estaJugandoMano := false.
	estaJugandoPie := true.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:58:02' prior: 51042345!
pieJuega: unaCarta

	estaJugandoPie ifFalse: [self error: 	RondaDeTruco errorDeJugadaInvalida].
	
	estaJugandoMano := true.
	estaJugandoPie := false.! !

!testRun: #RondaDeTrucoTest #test04ManoNoPuedeJugarLuegoDeHaberJugado stamp: 'FG 7/5/2021 17:58:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 17:58:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 17:58:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 17:58:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04ManoNoPuedeJugarLuegoDeHaberJugado stamp: 'FG 7/5/2021 17:58:16'!
PASSED!

!classRenamed: #RondaDeTruco as: #EnfrentamientoDeTruco stamp: 'FG 7/5/2021 17:59:44'!
Smalltalk renameClassNamed: #RondaDeTruco as: #EnfrentamientoDeTruco!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:59:44' prior: 51042458!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:59:44' prior: 51042582!
pieJuega: unaCarta

	estaJugandoPie ifFalse: [self error: 	EnfrentamientoDeTruco errorDeJugadaInvalida].
	
	estaJugandoMano := true.
	estaJugandoPie := false.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:59:44' prior: 51042518!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self deny: rondaDeTruco estaJugandoElPie.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:59:44' prior: 51042574!
manoJuega: aCartaDeTruco 

	estaJugandoMano ifFalse: [self error: EnfrentamientoDeTruco errorDeJugadaInvalida].

	estaJugandoMano := false.
	estaJugandoPie := true.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:59:44' prior: 51042547!
test04ManoNoPuedeJugarLuegoDeHaberJugado

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco enfrentamientoActual equals: 1.
			]. 
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 17:59:44' prior: 51042329!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco enfrentamientoActual equals: 1.
			]. ! !

Object subclass: #EstadoDeEnfrentamiento
	instanceVariableNames: 'e'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EstadoDeEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:00:25'!
Object subclass: #EstadoDeEnfrentamiento
	instanceVariableNames: 'e'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeEnfrentamiento subclass: #JugandoMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #JugandoMano category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:00:38'!
EstadoDeEnfrentamiento subclass: #JugandoMano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeEnfrentamiento subclass: #JugandoPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #JugandoPie category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:00:43'!
EstadoDeEnfrentamiento subclass: #JugandoPie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeEnfrentamiento subclass: #EnfrentamientoTerminado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoTerminado category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:00:58'!
EstadoDeEnfrentamiento subclass: #EnfrentamientoTerminado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EstadoDeEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EstadoDeEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:01:19'!
Object subclass: #EstadoDeEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EstadoDeEnfrentamiento
	instanceVariableNames: 'enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EstadoDeEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:01:26'!
Object subclass: #EstadoDeEnfrentamiento
	instanceVariableNames: 'enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EstadoDeEnfrentamiento methodsFor: 'no messages' stamp: 'FG 7/5/2021 18:02:00'!
estaJugandoLaMano

	self subclassResponsibility .! !
!EstadoDeEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:02:08'!
estaJugandoElPie

	self subclassResponsibility.! !
!JugandoMano methodsFor: 'no messages' stamp: 'FG 7/5/2021 18:02:19' overrides: 51042777!
estaJugandoLaMano! !
!JugandoMano methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:02:22' prior: 51042787 overrides: 51042777!
estaJugandoLaMano
	^ true.! !
!JugandoPie methodsFor: 'no messages' stamp: 'FG 7/5/2021 18:02:31' overrides: 51042777!
estaJugandoLaMano
	^ false.! !
!EnfrentamientoTerminado methodsFor: 'nil' stamp: 'FG 7/5/2021 18:02:38' overrides: 51042777!
estaJugandoLaMano
	^ false.! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:02:44' overrides: 51042782!
estaJugandoElPie
	^ false.! !
!JugandoMano methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:02:55' overrides: 51042782!
estaJugandoElPie
	^ false.! !
!JugandoPie methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:03:00' overrides: 51042782!
estaJugandoElPie
	^ false.! !
!JugandoPie methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:03:04' prior: 51042813 overrides: 51042782!
estaJugandoElPie
	^ true.! !

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:04:41'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estaJugandoMano estaJugandoPie estadoEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:04:40' prior: 51042491 overrides: 16896425!
initialize

	estadoEnfrentamiento := JugandoMano new.! !

Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:04:47'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:05:12' prior: 51042503!
estaJugandoElPie
	
	^ estadoEnfrentamiento estaJugandoElPie.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:05:23' prior: 51042508!
estaJugandoLaMano

	^ estadoEnfrentamiento estaJugandoLaMano.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:06:14' prior: 51042651!
manoJuega: aCartaDeTruco 

	estadoEnfrentamiento estaJugandoMano ifFalse: [self error: EnfrentamientoDeTruco errorDeJugadaInvalida].

	estadoEnfrentamiento := JugandoPie.
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:06:19' prior: 51042865!
manoJuega: aCartaDeTruco 

	estadoEnfrentamiento estaJugandoLaMano ifFalse: [self error: EnfrentamientoDeTruco errorDeJugadaInvalida].

	estadoEnfrentamiento := JugandoPie.
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:07:31' prior: 51042630!
pieJuega: unaCarta

	estadoEnfrentamiento estaJugandoElPie ifFalse: [self error: 	EnfrentamientoDeTruco errorDeJugadaInvalida].
	
	estadoEnfrentamiento := EnfrentamientoTerminado new.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:07:41' prior: 51042874!
manoJuega: aCartaDeTruco 

	estadoEnfrentamiento estaJugandoLaMano ifFalse: [self error: EnfrentamientoDeTruco errorDeJugadaInvalida].

	estadoEnfrentamiento := JugandoPie new.
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:08:01'!
numero

	^ 1.! !

!methodRemoval: EnfrentamientoDeTruco #enfrentamientoActual stamp: 'FG 7/5/2021 18:08:08'!
enfrentamientoActual
	^ 1.!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:09:01'!
manoJuegaCuandoNoEsSuTurno 

	self error: EnfrentamientoDeTruco errorDeJugadaInvalida.

	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:09:15'!
jugadorJuegaCuandoNoEsSuTurno 

	self error: EnfrentamientoDeTruco errorDeJugadaInvalida.

	! !

!methodRemoval: EnfrentamientoDeTruco #manoJuegaCuandoNoEsSuTurno stamp: 'FG 7/5/2021 18:09:16'!
manoJuegaCuandoNoEsSuTurno 

	self error: EnfrentamientoDeTruco errorDeJugadaInvalida.

	!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:09:44'!
manoJuegaEnSuTurno: unaCarta

	
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:09:58' prior: 51042928!
manoJuegaEnSuTurno: unaCarta

	estadoEnfrentamiento := JugandoPie new.

	
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:10:13'!
pieJuegaEnSuTurno: unaCarta

	estadoEnfrentamiento := EnfrentamientoTerminado new.

	
	! !
!EnfrentamientoTerminado methodsFor: 'nil' stamp: 'FG 7/5/2021 18:11:28'!
manoJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:11:32'!
pieJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.! !
!JugandoMano methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:11:51'!
manoJuega: unaCarta

	enfrentamiento manoJuegaEnSuTurno: unaCarta.! !
!JugandoMano methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:12:02'!
pieJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.! !
!JugandoPie methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:12:27'!
manoJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.! !
!JugandoPie methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:12:41'!
pieJuega: unaCarta

	enfrentamiento pieJuegaEnSuTurno: unaCarta.! !
!EstadoDeEnfrentamiento class methodsFor: 'nil' stamp: 'FG 7/5/2021 18:13:32'!
de: unEnfrentamiento

	^ self initializeWith: unEnfrentamiento.! !
!EstadoDeEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:13:49'!
initializeWith: unEnfrentamiento

	enfrentamiento  := unEnfrentamiento.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:14:05' prior: 51042893!
manoJuega: aCartaDeTruco 

	estadoEnfrentamiento estaJugandoLaMano ifFalse: [self error: EnfrentamientoDeTruco errorDeJugadaInvalida].

	estadoEnfrentamiento := JugandoPie de: self.
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 18:14:31' prior: 51042933!
manoJuegaEnSuTurno: unaCarta

	estadoEnfrentamiento := JugandoPie de: self.

	
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 18:14:37' prior: 51042939!
pieJuegaEnSuTurno: unaCarta

	estadoEnfrentamiento := EnfrentamientoTerminado de: self.

	
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:15:18' prior: 51042987!
manoJuega: unaCarta 

	estadoEnfrentamiento manoJuega: unaCarta.
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:15:30' prior: 51042883!
pieJuega: unaCarta

	estadoEnfrentamiento pieJuega: unaCarta.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:15:44' prior: 51042833 overrides: 16896425!
initialize

	estadoEnfrentamiento := JugandoMano de: self.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:16:27' prior: 51042639!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self deny: rondaDeTruco estaJugandoElPie.
	self assert: rondaDeTruco numero equals: 1.! !

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 18:16:31'!
ERROR!

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 18:16:31'!
ERROR!
!EstadoDeEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:16:42' prior: 51042976!
de: unEnfrentamiento

	^ self new initializeWith: unEnfrentamiento.! !

----SNAPSHOT----(5 July 2021 18:16:47) CuisUniversity-4384.image priorSource: 22712208!

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 18:16:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 18:16:51'!
ERROR!

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 18:16:51'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:16:58' prior: 51042680!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco numero equals: 1.
			]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:17:04' prior: 51042615!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco numero equals: 1.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:17:10' prior: 51042660!
test04ManoNoPuedeJugarLuegoDeHaberJugado

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco numero equals: 1.
			]. 
	! !

!testRun: #RondaDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 18:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 18:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 18:17:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04ManoNoPuedeJugarLuegoDeHaberJugado stamp: 'FG 7/5/2021 18:17:34'!
PASSED!

!classRenamed: #RondaDeTrucoTest as: #EnfrentamientoDeTrucoTest stamp: 'FG 7/5/2021 18:18:29'!
Smalltalk renameClassNamed: #RondaDeTrucoTest as: #EnfrentamientoDeTrucoTest!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:20:30'!
test01EnfrentamientoEmpiezaJugandoElPrimerJugador

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self deny: rondaDeTruco estaJugandoElPie.! !
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:20:56'!
empezandoPor: unJugador
	
	^ self new initalizeWith: unJugador.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:21:42'!
initializeWith: unJugador

	estadoEnfrentamiento := EstadoDeEnfrentamiento dondeEmpieza: unJugador.! !
!EnfrentamientoTerminado class methodsFor: 'no messages' stamp: 'FG 7/5/2021 18:22:02'!
jugador

	^ #Ninguno! !
!JugandoMano class methodsFor: 'no messages' stamp: 'FG 7/5/2021 18:22:12'!
jugador

	^ #Mano! !
!JugandoPie class methodsFor: 'no messages' stamp: 'FG 7/5/2021 18:22:21'!
jugador

	^ #Pie! !
!EstadoDeEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:23:38'!
de: unEnfrentamiento dondeEmpieza: unJugador

	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:23:52' prior: 51043154!
initializeWith: unJugador

	estadoEnfrentamiento := EstadoDeEnfrentamiento de: self dondeEmpieza: unJugador.! !
!EstadoDeEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:26:34' prior: 51043171!
de: unEnfrentamiento dondeEmpieza: unJugador

	^ self subclasses 
		detect: [:unEstadoDeEnfrentamiento | unEstadoDeEnfrentamiento jugador = unJugador]   
		ifFound: [:unEstadoDeEnfrentamiento | unEstadoDeEnfrentamiento new]  
		ifNone: [self error: EstadoDeEnfrentamiento jugadorInvalido]

	! !
!EstadoDeEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:26:59'!
jugadorInvalido 

	^ 'Error - Jugador Invalido'
	! !

!methodRemoval: EstadoDeEnfrentamiento class #de: stamp: 'FG 7/5/2021 18:27:05'!
de: unEnfrentamiento

	^ self new initializeWith: unEnfrentamiento.!
!EstadoDeEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:27:33'!
de: unEnfrentamiento 

	^ self new initializeWith: unEnfrentamiento.
	! !
!EstadoDeEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:27:52' prior: 51043183!
de: unEnfrentamiento dondeEmpieza: unJugador

	^ self subclasses 
		detect: [:unEstadoDeEnfrentamiento | unEstadoDeEnfrentamiento jugador = unJugador]   
		ifFound: [:unEstadoDeEnfrentamiento | unEstadoDeEnfrentamiento new initializeWith: unEnfrentamiento]  
		ifNone: [self error: EstadoDeEnfrentamiento jugadorInvalido]

	! !
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:28:39' prior: 51043149!
empezandoPor: unJugador
	
	^ self new initializeWith: unJugador.! !

!methodRemoval: EnfrentamientoDeTruco #initialize stamp: 'FG 7/5/2021 18:29:07'!
initialize

	estadoEnfrentamiento := JugandoMano de: self.!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 18:29:53'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 18:29:55'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 18:30:16'!
PASSED!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:32:14' prior: 51043139!
test01EnfrentamientoEmpiezaJugandoElPrimerJugador

	| enfrentamientoDeTrucoEmpezadaPorMano enfrentamientoDeTrucoEmpezadaPorPie |
	
	enfrentamientoDeTrucoEmpezadaPorMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	enfrentamientoDeTrucoEmpezadaPorPie := EnfrentamientoDeTruco empezandoPor: #Pie.
	
	self assert: enfrentamientoDeTrucoEmpezadaPorMano estaJugandoLaMano.
	self deny: enfrentamientoDeTrucoEmpezadaPorMano estaJugandoElPie.
	
	self assert: enfrentamientoDeTrucoEmpezadaPorPie estaJugandoElPie.
	self deny: enfrentamientoDeTrucoEmpezadaPorPie estaJugandoLaMano.
	! !

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 18:32:16'!
PASSED!

!methodRemoval: EnfrentamientoDeTrucoTest #test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 18:32:25'!
test01JuegoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self deny: rondaDeTruco estaJugandoElPie.
	self assert: rondaDeTruco numero equals: 1.!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:32:52'!
test02PieNoPuedeJugarSiJuegaLaMano

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco numero equals: 1.
			]. ! !

!methodRemoval: EnfrentamientoDeTrucoTest #test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar stamp: 'FG 7/5/2021 18:32:52'!
test02JuegoEmpiezaEnElPrimerEnfrentamientoYPieNoPuedeJugar

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco numero equals: 1.
			]. !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:33:17' prior: 51043286!
test02PieNoPuedeJugarSiJuegaLaMano

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco numero equals: 1.
			]. ! !

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 18:33:18'!
PASSED!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:33:53'!
test03ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco numero equals: 1.! !

!methodRemoval: EnfrentamientoDeTrucoTest #test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento stamp: 'FG 7/5/2021 18:33:53'!
test03LuegoDeQueManoJuegaUnaCartaLeTocaJugarAPieYSeguimosEnElPrimerEnfrentamiento

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco numero equals: 1.!

!methodRemoval: EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 18:34:23'!
test03ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco estaJugandoElPie.
	self deny: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco numero equals: 1.!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:34:39'!
test04ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco numero equals: 1.
			]. 
	! !

!methodRemoval: EnfrentamientoDeTrucoTest #test04ManoNoPuedeJugarLuegoDeHaberJugado stamp: 'FG 7/5/2021 18:34:39'!
test04ManoNoPuedeJugarLuegoDeHaberJugado

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco numero equals: 1.
			]. 
	!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:34:53' prior: 51043381!
test04ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco numero equals: 1.
			]. 
	! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:35:06'!
test03ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco numero equals: 1.
			]. 
	! !

!methodRemoval: EnfrentamientoDeTrucoTest #test04ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 18:35:06'!
test04ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
				self assert: rondaDeTruco numero equals: 1.
			]. 
	!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 18:35:08'!
PASSED!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:37:53'!
test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
		
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: enfrentamientoDeTruco estaJugandoLaMano.
	self deny: enfrentamientoDeTruco estaJugandoLaMano.
	
	
	! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:39:28' prior: 51043479!
test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta

	| enfrentamientoDeTrucoEmpezandoLaMano enfrentamientoDeTrucoEmpezandoElPie |
	
	enfrentamientoDeTrucoEmpezandoLaMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	enfrentamientoDeTrucoEmpezandoElPie := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	enfrentamientoDeTrucoEmpezandoLaMano manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTrucoEmpezandoElPie manoJuega: CartaDeTruco anchoDeEspada.
	
	self assert: enfrentamientoDeTrucoEmpezandoLaMano estaJugandoLaMano.
	self deny: enfrentamientoDeTrucoEmpezandoLaMano estaJugandoElPie.
	
	self assert: enfrentamientoDeTrucoEmpezandoElPie estaJugandoElPie.
	self deny: enfrentamientoDeTrucoEmpezandoElPie estaJugandoLaMano.
	
	
	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:39:33'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:39:33'!
ERROR!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:39:50' prior: 51043494!
test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta

	| enfrentamientoDeTrucoEmpezandoLaMano enfrentamientoDeTrucoEmpezandoElPie |
	
	enfrentamientoDeTrucoEmpezandoLaMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	enfrentamientoDeTrucoEmpezandoElPie := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	enfrentamientoDeTrucoEmpezandoLaMano manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTrucoEmpezandoElPie pieJuega: CartaDeTruco anchoDeEspada.
	
	self assert: enfrentamientoDeTrucoEmpezandoLaMano estaJugandoLaMano.
	self deny: enfrentamientoDeTrucoEmpezandoLaMano estaJugandoElPie.
	
	self assert: enfrentamientoDeTrucoEmpezandoElPie estaJugandoElPie.
	self deny: enfrentamientoDeTrucoEmpezandoElPie estaJugandoLaMano.
	
	
	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:39:54'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:39:54'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:40:11'!
FAILURE!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:42:29' prior: 51043530!
test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta

	| enfrentamientoDeTrucoEmpezandoLaMano enfrentamientoDeTrucoEmpezandoElPie |
	
	enfrentamientoDeTrucoEmpezandoLaMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	enfrentamientoDeTrucoEmpezandoElPie := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	enfrentamientoDeTrucoEmpezandoLaMano manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTrucoEmpezandoElPie pieJuega: CartaDeTruco anchoDeEspada.
	
	self assert: enfrentamientoDeTrucoEmpezandoLaMano estaJugandoElPie.
	self deny: enfrentamientoDeTrucoEmpezandoLaMano estaJugandoLaMano.

	self assert: enfrentamientoDeTrucoEmpezandoElPie estaJugandoLaMano.
	self deny: enfrentamientoDeTrucoEmpezandoElPie estaJugandoElPie.

	
	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:42:31'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:42:31'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:42:52'!
FAILURE!
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 18:44:03' prior: 51043002!
pieJuegaEnSuTurno: unaCarta

	estadoEnfrentamiento := JugandoMano de: self.

	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:44:07'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 18:44:09'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 18:44:09'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 18:44:09'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:44:09'!
PASSED!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:46:34'!
test04LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeBasto.

	
	
	! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:46:40'!
test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeBasto.

	
	
	! !

!methodRemoval: EnfrentamientoDeTrucoTest #test04LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:46:41'!
test04LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeBasto.

	
	
	!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:47:26' prior: 51043649!
test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeEspada.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeBasto.
	
	
	self assert: enfrentamientoDeTruco termino.
	self deny: enfrentamientoDeTruco estaJugandoLaMano.
	self deny: enfrentamientoDeTruco estaJugandoElPie.

	
	
	! !
!EstadoDeEnfrentamiento methodsFor: 'nil' stamp: 'FG 7/5/2021 18:47:41'!
termino 

	^ false.! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:47:53' overrides: 51043693!
termino 

	^ true.! !

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:48:01'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:48:01'!
ERROR!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:48:17'!
termino 

	^ true.! !

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:48:20'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:48:20'!
FAILURE!

Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:48:43'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:49:07' prior: 51043176!
initializeWith: unJugador

	numeroDeJugadas := 0.
	estadoEnfrentamiento := EstadoDeEnfrentamiento de: self dondeEmpieza: unJugador.! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 18:50:51' prior: 51042996!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [estadoEnfrentamiento := EnfrentamientoTerminado de: self]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 18:51:15' prior: 51043610!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [estadoEnfrentamiento := EnfrentamientoTerminado de: self]

	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:51:25'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 18:51:26'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 18:51:26'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 18:51:26'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 18:51:26'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 18:51:26'!
PASSED!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:53:41'!
test05ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeEspada.	
	! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:53:45'!
test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeEspada.	
	! !

!methodRemoval: EnfrentamientoDeTrucoTest #test05ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 18:53:46'!
test05ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeEspada.	
	!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:54:28' prior: 51043807!
test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTruco |
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTruco pieJuega: CartaDeTruco anchoDeEspada.	
	
	self assert: enfrentamientoDeTruco .
	! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:57:23' prior: 51043834!
test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTrucoEnLaQueGanaMano enfrentamientoDeTrucoEnLaQueGanaPie |
	
	enfrentamientoDeTrucoEnLaQueGanaMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTrucoEnLaQueGanaMano manoJuega: CartaDeTruco anchoDeEspada .
	enfrentamientoDeTrucoEnLaQueGanaMano pieJuega: CartaDeTruco anchoDeBasto.	
	
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano termino.
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano ganador equals: #Pie.
	
	
	enfrentamientoDeTrucoEnLaQueGanaPie := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTrucoEnLaQueGanaPie manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTrucoEnLaQueGanaPie pieJuega: CartaDeTruco anchoDeEspada.	
	
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano termino.
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano ganador equals: #Pie.! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:57:41' prior: 51043848!
test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTrucoEnLaQueGanaMano enfrentamientoDeTrucoEnLaQueGanaPie |
	
	enfrentamientoDeTrucoEnLaQueGanaMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTrucoEnLaQueGanaMano manoJuega: CartaDeTruco anchoDeEspada .
	enfrentamientoDeTrucoEnLaQueGanaMano pieJuega: CartaDeTruco anchoDeBasto.	
	
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano termino.
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano ganador equals: #Mano.
	
	
	enfrentamientoDeTrucoEnLaQueGanaPie := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTrucoEnLaQueGanaPie manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTrucoEnLaQueGanaPie pieJuega: CartaDeTruco anchoDeEspada.	
	
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano termino.
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano ganador equals: #Pie.! !

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 18:57:58'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'nil' stamp: 'FG 7/5/2021 18:57:57'!
ganador 

	^ ganador.! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 18:58:42' prior: 51043740!
initializeWith: unJugador

	numeroDeJugadas := 0.
	ganador := #Indefinido.
	estadoEnfrentamiento := EstadoDeEnfrentamiento de: self dondeEmpieza: unJugador.! !

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:00:23'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas ganador cartaDeMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:00:21' prior: 51043748!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				estadoEnfrentamiento := EnfrentamientoTerminado de: self
			
			]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:00:33' prior: 51043759!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [estadoEnfrentamiento := EnfrentamientoTerminado de: self]

	
	! !

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:00:43'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas ganador cartaDeMano cartaDePie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:00:41' prior: 51043955!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [estadoEnfrentamiento := EnfrentamientoTerminado de: self]

	
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:01:13' prior: 51043943!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				ganador := self definirGanadorDelEnfrentamiento.
				estadoEnfrentamiento := EnfrentamientoTerminado de: self
			
			]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:01:27' prior: 51043989!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				ganador := self definirGanadorDelEnfrentamiento.
				estadoEnfrentamiento := EnfrentamientoTerminado de: self
			]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:01:36' prior: 51043977!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [
			
			estadoEnfrentamiento := EnfrentamientoTerminado de: self]

	
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:02:26' prior: 51044016!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [
			ganador := self definirGanadorDelEnfrentamiento.
			estadoEnfrentamiento := EnfrentamientoTerminado de: self]

	
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:02:48'!
definirElGanadorDelEnfrentamiento

	

	
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:03:25' prior: 51044041!
definirElGanadorDelEnfrentamiento


	

	

	
	! !

EstadoDeEnfrentamiento subclass: #EnfrentamientoTerminado
	instanceVariableNames: 'empardado ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoTerminado category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:08:09'!
EstadoDeEnfrentamiento subclass: #EnfrentamientoTerminado
	instanceVariableNames: 'empardado ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:08:34'!
empardado 
	^ empardado.! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:08:41'!
ganador

	^ ganador.! !
!EnfrentamientoTerminado class methodsFor: 'nil' stamp: 'FG 7/5/2021 19:09:31'!
empardado

	^ self new initializeEmpardado.! !
!EnfrentamientoTerminado class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:09:51'!
ganadoPor: unGanador

	^ self new initializeGanadoPor: unGanador.! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:10:29'!
initializeEmpardado

	empardado := true.
! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:11:05'!
initializeGanadoPor: unGanador

	empardado := false.
	ganador := unGanador.
! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:12:27' prior: 51044003!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				(cartaDeMano empardaCon: cartaDePie) ifTrue: [
					
					estadoEnfrentamiento := EnfrentamientoTerminado de: self
				]
			]
	! !
!EnfrentamientoTerminado class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:12:38'!
de: unEnfrentamiento ganadoPor: unGanador

	^ self new initializeGanadoPor: unGanador.! !

!methodRemoval: EnfrentamientoTerminado class #ganadoPor: stamp: 'FG 7/5/2021 19:12:40'!
ganadoPor: unGanador

	^ self new initializeGanadoPor: unGanador.!
!EnfrentamientoTerminado class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:12:51'!
empardadoDe: unEnfrentamiento

	^ self new initializeEmpardado.! !

!methodRemoval: EnfrentamientoTerminado class #empardado stamp: 'FG 7/5/2021 19:12:54'!
empardado

	^ self new initializeEmpardado.!
!EnfrentamientoTerminado class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:13:10' prior: 51044120!
empardadoDe: unEnfrentamiento

	^ self new initializeEmpardadoDe: unEnfrentamiento.! !
!EnfrentamientoTerminado class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:13:20' prior: 51044109!
de: unEnfrentamiento ganadoPor: unGanador

	^ self new initializeDe: unEnfrentamiento GanadoPor: unGanador.! !
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:13:45'!
initializeDe: unEnfrentamiento GanadoPor: unGanador

	enfrentamiento := unEnfrentamiento. 
	empardado := false.
	ganador := unGanador.
! !

!methodRemoval: EnfrentamientoTerminado #initializeGanadoPor: stamp: 'FG 7/5/2021 19:13:49'!
initializeGanadoPor: unGanador

	empardado := false.
	ganador := unGanador.
!
!EnfrentamientoTerminado methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:14:12'!
initializeEmpardadoDe: unEnfrentamiento

	enfrentamiento := unEnfrentamiento.
	empardado := true.
! !

!methodRemoval: EnfrentamientoTerminado #initializeEmpardado stamp: 'FG 7/5/2021 19:14:18'!
initializeEmpardado

	empardado := true.
!
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:16:13' prior: 51044095!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				(cartaDeMano empardaCon: cartaDePie) 
					ifTrue: [ 	estadoEnfrentamiento := EnfrentamientoTerminado empardadoDe: self. ]
					ifFalse: [ estadoEnfrentamiento := EnfrentamientoTerminado de: self ganadoPor: self ganadorDelEnfrentamiento]
			]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:17:38'!
ganadorDelEnfrentamiento

	^ (cartaDeMano mataA: cartaDePie) 
			ifTrue: [#Mano]
			ifFalse: [#Pie]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 19:18:05' prior: 51044028!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [
			(cartaDeMano empardaCon: cartaDePie) 
					ifTrue: [ 	estadoEnfrentamiento := EnfrentamientoTerminado empardadoDe: self. ]
					ifFalse: [ estadoEnfrentamiento := EnfrentamientoTerminado de: self ganadoPor: self ganadorDelEnfrentamiento]
			]

	
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:19:16' prior: 51043920!
ganador 

	^ estadoEnfrentamiento ganador.! !

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 19:19:30'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 19:19:30'!
FAILURE!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 19:20:13'!
FAILURE!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:20:46' prior: 51043880!
test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta

	| enfrentamientoDeTrucoEnLaQueGanaMano enfrentamientoDeTrucoEnLaQueGanaPie |
	
	enfrentamientoDeTrucoEnLaQueGanaMano := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTrucoEnLaQueGanaMano manoJuega: CartaDeTruco anchoDeEspada .
	enfrentamientoDeTrucoEnLaQueGanaMano pieJuega: CartaDeTruco anchoDeBasto.	
	
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano termino.
	self assert: enfrentamientoDeTrucoEnLaQueGanaMano ganador equals: #Mano.
	
	
	enfrentamientoDeTrucoEnLaQueGanaPie := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTrucoEnLaQueGanaPie manoJuega: CartaDeTruco anchoDeBasto.
	enfrentamientoDeTrucoEnLaQueGanaPie pieJuega: CartaDeTruco anchoDeEspada.	
	
	self assert: enfrentamientoDeTrucoEnLaQueGanaPie termino.
	self assert: enfrentamientoDeTrucoEnLaQueGanaPie ganador equals: #Pie.! !

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 19:20:48'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 19:20:50'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 19:20:51'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 19:20:51'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 19:20:51'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 19:20:51'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 19:20:51'!
PASSED!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:22:24'!
test06ElEnfrentamientoPuedeTerminarEnEmparde

	| enfrentamientoDeTruco | 
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: (CartaDeTruco bastoCon: 4).
	enfrentamientoDeTruco manoJuega: (CartaDeTruco copaCon: 4).! !
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:22:29'!
test07ElEnfrentamientoPuedeTerminarEnEmparde

	| enfrentamientoDeTruco | 
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: (CartaDeTruco bastoCon: 4).
	enfrentamientoDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	! !

!methodRemoval: EnfrentamientoDeTrucoTest #test06ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:22:31'!
test06ElEnfrentamientoPuedeTerminarEnEmparde

	| enfrentamientoDeTruco | 
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: (CartaDeTruco bastoCon: 4).
	enfrentamientoDeTruco manoJuega: (CartaDeTruco copaCon: 4).!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:23:14' prior: 51044302!
test07ElEnfrentamientoPuedeTerminarEnEmparde

	| enfrentamientoDeTruco | 
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: (CartaDeTruco bastoCon: 4).
	enfrentamientoDeTruco manoJuega: (CartaDeTruco copaCon: 4).
	
	self assert: enfrentamientoDeTruco termino.
	self assert. enfrentamientoDeTruco empardado.
	
	! !
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:23:36'!
empardado

	^ estadoEnfrentamiento empardado.! !

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:23:45'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:23:45'!
ERROR!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:23:50' prior: 51044327!
test07ElEnfrentamientoPuedeTerminarEnEmparde

	| enfrentamientoDeTruco | 
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: (CartaDeTruco bastoCon: 4).
	enfrentamientoDeTruco pieJuega: (CartaDeTruco copaCon: 4).
	
	self assert: enfrentamientoDeTruco termino.
	self assert. enfrentamientoDeTruco empardado.
	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:23:52'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:23:52'!
ERROR!
!EstadoDeEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:24:28'!
empardado
	^ false.! !

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:24:35'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:24:35'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:24:49'!
ERROR!
!EnfrentamientoDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:24:54' prior: 51044355!
test07ElEnfrentamientoPuedeTerminarEnEmparde

	| enfrentamientoDeTruco | 
	
	enfrentamientoDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	enfrentamientoDeTruco manoJuega: (CartaDeTruco bastoCon: 4).
	enfrentamientoDeTruco pieJuega: (CartaDeTruco copaCon: 4).
	
	self assert: enfrentamientoDeTruco termino.
	self assert: enfrentamientoDeTruco empardado.
	
	! !

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:24:56'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 19:24:58'!
PASSED!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:27:03'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'FG 7/5/2021 19:28:06'!
test01RondaDeTruco! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:31:48'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:31:42'!
test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.
	! !
!RondaDeTruco methodsFor: 'no messages' stamp: 'FG 7/5/2021 19:32:01'!
enfrentamientoActual

	 ^ 1.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:32:27' prior: 51044463!
test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco enfrentamientoActual equals: 1.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:32:32' prior: 51044478!
test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco enfrentamientoActual equals: 1.
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:33:59'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'nil' stamp: 'FG 7/5/2021 19:33:58'!
estaJugandoLaMano

 	enfrentamientoActual estaJugandoLaMano.! !
!RondaDeTruco methodsFor: 'nil' stamp: 'FG 7/5/2021 19:34:57'!
intialize

	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !

!methodRemoval: RondaDeTrucoTest #test01RondaDeTruco stamp: 'FG 7/5/2021 19:35:20'!
test01RondaDeTruco!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 19:35:24'!
ERROR!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 19:35:24'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:35:33' prior: 51044505!
estaJugandoLaMano

 	^ enfrentamientoActual estaJugandoLaMano.! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 19:35:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 19:35:37'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:35:57' overrides: 16896425!
initialize

	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !

!methodRemoval: RondaDeTruco #intialize stamp: 'FG 7/5/2021 19:35:59'!
intialize

	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 19:36:03'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:36:50'!
test01EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:36:54'!
test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero

	
	! !

!methodRemoval: RondaDeTrucoTest #test01EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 19:36:56'!
test01EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero

	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:40:02' prior: 51044561!
test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco enfrentamientoActual equals: 2.
	self assert: rondaDeTruco estaJugandoElPie.

	
	! !

Object subclass: #RondaDeTruco
	instanceVariableNames: 'numeroDeEnfrentamientos enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:40:55'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'numeroDeEnfrentamientos enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:41:07'!
estaJugandoElPie

 	^ enfrentamientoActual estaJugandoElPie.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:41:21' prior: 51044541 overrides: 16896425!
initialize

	numeroDeEnfrentamientos := 1.
	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:41:50' prior: 51044473!
enfrentamientoActual

	 ^ numeroDeEnfrentamientos.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:43:30'!
manoJuega: unaCarta

	enfrentamientoActual manoJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:43:40'!
pieJuega: unaCarta

	enfrentamientoActual pieJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:44:06' prior: 51044628!
pieJuega: unaCarta

	enfrentamientoActual pieJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ 
			numeroDeEnfrentamientos := numeroDeEnfrentamientos + 1.
			enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador
		]! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 19:44:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 19:44:16'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 19:44:35'!
ERROR!
!EnfrentamientoDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:45:45' prior: 51043711!
termino 

	^ estadoEnfrentamiento termino.! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 19:45:49'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:47:49'!
test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	rondaDeTruco pieJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco espadaCon: 7).
	
	self assert: rondaDeTruco enfrentamientoActual equals: 3.
	self assert: rondaDeTruco estaJugandoLaMano.

	
	! !

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 19:47:50'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 19:47:51'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:48:17' prior: 51044619!
manoJuega: unaCarta

	enfrentamientoActual manoJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ 
			numeroDeEnfrentamientos := numeroDeEnfrentamientos + 1.
			enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador
		]! !

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 19:48:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 19:48:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 19:48:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 19:48:26'!
PASSED!

Object subclass: #RondaDeTruco
	instanceVariableNames: 'ganador numeroDeEnfrentamientos enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:48:54'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'ganador numeroDeEnfrentamientos enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:50:22'!
test04AlTerminarLaTerceraRondaDebeHaberUnGanador

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	rondaDeTruco pieJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco espadaCon: 7).
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 4).
	rondaDeTruco pieJuega: (CartaDeTruco oroCon: 5).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.

	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:53:49' prior: 51044638!
pieJuega: unaCarta

	enfrentamientoActual pieJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ 
			numeroDeEnfrentamientos := numeroDeEnfrentamientos + 1.
			
			(numeroDeEnfrentamientos > 3) 
				ifTrue: [
					
				]
				ifFalse: [	enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador]. 
			]! !

Object subclass: #EstadoDeRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EstadoDeRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:54:23'!
Object subclass: #EstadoDeRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #RondaTerminada
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTerminada category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:54:37'!
EstadoDeRonda subclass: #RondaTerminada
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #PrimerEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #PrimerEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:54:43'!
EstadoDeRonda subclass: #PrimerEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #SegundoEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #SegundoEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:54:49'!
EstadoDeRonda subclass: #SegundoEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #EnfrentamientoFinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoFinal category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:54:53'!
EstadoDeRonda subclass: #EnfrentamientoFinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ganador numeroDeEnfrentamientos enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:55:45'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ganador numeroDeEnfrentamientos enfrentamientoActual'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:55:55'!
EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnEnfrentamiento subclass: #PrimerEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #PrimerEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:56:08'!
EnEnfrentamiento subclass: #PrimerEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnEnfrentamiento subclass: #SegundoEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #SegundoEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:56:14'!
EnEnfrentamiento subclass: #SegundoEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnEnfrentamiento subclass: #EnfrentamientoFinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoFinal category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:56:20'!
EnEnfrentamiento subclass: #EnfrentamientoFinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:56:28'!
EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:56:33'!
EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnEnfrentamiento methodsFor: 'no messages' stamp: 'FG 7/5/2021 19:57:32'!
estaJugandoLaMano

	^ enfrentamiento estaJugandoLaMano.! !
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:57:43'!
estaJugandoElPie

	^ enfrentamiento estaJugandoElPie.! !
!EstadoDeRonda methodsFor: 'no messages' stamp: 'FG 7/5/2021 19:58:07'!
estaJugandoLaMano

	^ false.! !
!EstadoDeRonda methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:58:16'!
estaJugandoElPie

	^ false.! !
!EnEnfrentamiento methodsFor: 'nil' stamp: 'FG 7/5/2021 19:59:10'!
numero

	self subclassResponsibility.! !
!EnfrentamientoFinal methodsFor: 'no messages' stamp: 'FG 7/5/2021 19:59:25' overrides: 51044951!
numero
	
	^ 1.! !

!classDefinition: #EnfrentamientoFinal category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 19:59:48'!
EnEnfrentamiento subclass: #EnfrentamientoFinal
	instanceVariableNames: 'numero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoFinal methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 19:59:47' prior: 51044956 overrides: 51044951!
numero

	^ numero.! !

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento ronda numero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnEnfrentamiento subclass: #EnfrentamientoFinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoFinal category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:00:11'!
EnEnfrentamiento subclass: #EnfrentamientoFinal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento numero ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:00:16'!
EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento numero ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:00:26' prior: 51044951!
numero

	^ numero.! !

!methodRemoval: EnfrentamientoFinal #numero stamp: 'FG 7/5/2021 20:00:33'!
numero

	^ numero.!

!classRemoval: #PrimerEnfrentamiento stamp: 'FG 7/5/2021 20:00:41'!
EnEnfrentamiento subclass: #PrimerEnfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRenamed: #SegundoEnfrentamiento as: #EnfrentamientoNormal stamp: 'FG 7/5/2021 20:00:49'!
Smalltalk renameClassNamed: #SegundoEnfrentamiento as: #EnfrentamientoNormal!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:02:29' prior: 51044607 overrides: 16896425!
initialize

	numeroDeEnfrentamientos := 1.
	estadoDeRonda := EnfrentamientoNormal numero: 1 de: self. 
	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:03:23' prior: 51045027 overrides: 16896425!
initialize

	numeroDeEnfrentamientos := 1.
	estadoDeRonda := EnfrentamientoNormal numero: 1 empezandoPor: #Mano de: self. 
	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !
!EnEnfrentamiento class methodsFor: 'no messages' stamp: 'FG 7/5/2021 20:04:05'!
numero: unNumero empezandoPor: unJugador de: unaRonda

	^ self initializeConNumero: unNumero empezandoPor: unJugador de: unaRonda. ! !
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:04:58'!
initializeConNumero: unNumero empezandoPor: unJugador de: unaRonda

	numero := unNumero.
	ronda  := unaRonda.
	enfrentamiento := EnfrentamientoDeTruco empezandoPor: unJugador.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:05:51' prior: 51044601!
estaJugandoElPie

 	^ estadoDeRonda estaJugandoElPie.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:06:02' prior: 51044527!
estaJugandoLaMano

 	^ estadoDeRonda estaJugandoLaMano.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:06:18' prior: 51044614!
enfrentamientoActual

	 ^ estadoDeRonda numero.! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:06:25'!
ERROR!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:06:25'!
ERROR!
!EnEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:07:17' prior: 51045046!
numero: unNumero empezandoPor: unJugador de: unaRonda

	^ self new initializeConNumero: unNumero empezandoPor: unJugador de: unaRonda. ! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:07:23'!
PASSED!
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:08:38'!
manoJuega: unaCarta

	enfrentamiento manoJuega: unaCarta.! !
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:08:52'!
pieJuega: unaCarta

	enfrentamiento pieJuega: unaCarta.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:09:05' prior: 51044696!
manoJuega: unaCarta

	estadoDeRonda manoJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ 
			numeroDeEnfrentamientos := numeroDeEnfrentamientos + 1.
			enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador
		]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:09:10' prior: 51044758!
pieJuega: unaCarta

	estadoDeRonda pieJuega: unaCarta.
	
	enfrentamientoActual termino 
		ifTrue:[ 
			numeroDeEnfrentamientos := numeroDeEnfrentamientos + 1.
			
			(numeroDeEnfrentamientos > 3) 
				ifTrue: [
					
				]
				ifFalse: [	enfrentamientoActual :=  EnfrentamientoDeTruco empezandoPor: enfrentamientoActual ganador]. 
			]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:12:24' prior: 51045108!
manoJuega: unaCarta

	estadoDeRonda manoJuega: unaCarta.
	
	(estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ estadoDeRonda terminarEnfrentamiento].! !
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:12:49'!
enfrentamientoTerminado 

	^ enfrentamiento termino.! !
!EnfrentamientoFinal methodsFor: 'no messages' stamp: 'FG 7/5/2021 20:14:02'!
terminarEnfrentamiento

	ronda terminarRonda.! !
!EnfrentamientoNormal methodsFor: 'no messages' stamp: 'FG 7/5/2021 20:14:49'!
terminarEnfrentamiento 

	ronda pasarALaSiguienteRondaLuegoDe: enfrentamiento.! !
!RondaDeTruco methodsFor: 'nil' stamp: 'FG 7/5/2021 20:20:23'!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: enfrentamientoActual numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				enfrentamientoActual numero = 2 
					ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: enfrentamientoActual numero + 1 
													empezandoPor: enfrentamientoActual ganador
													 de: self]
					ifFalse: [enfrentamientoActual := EnfrentamientoFinal numero: enfrentamientoActual numero + 1 
													empezandoPor: enfrentamientoActual ganador
													 de: self]
		].
										! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:20:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:20:58'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:20:58'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:22:08' prior: 51045120!
pieJuega: unaCarta

	estadoDeRonda pieJuega: unaCarta.
	
	estadoDeRonda ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:22:15' prior: 51045192!
pieJuega: unaCarta

	estadoDeRonda pieJuega: unaCarta.
	
	(estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ estadoDeRonda terminarEnfrentamiento]. ! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:22:20'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:22:20'!
ERROR!

self empardado !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:24:04' prior: 51045156!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: enfrentamientoActual numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				enfrentamientoActual numero = 2 
					ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: enfrentamientoActual ganador
													 de: self]
					ifFalse: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: enfrentamientoActual ganador
													 de: self]
		].
										! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:24:13'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:24:13'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:24:21'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:24:55'!
ERROR!
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:25:17'!
ganador
	
	^ enfrentamiento ganador.! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:25:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:25:22'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:26:42' prior: 51045215!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				enfrentamientoActual numero = 2 
					ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: estadoDeRonda ganador
													 de: self]
					ifFalse: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: estadoDeRonda ganador
													 de: self]
		].
										! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:26:44'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:26:44'!
FAILURE!

estadoDeRonda numero + 1!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:29:55' prior: 51045267!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				enfrentamientoActual numero = 2 
					ifTrue: [enfrentamientoActual := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: estadoDeRonda ganador
													 de: self]
					ifFalse: [enfrentamientoActual := EnfrentamientoNormal numero: (estadoDeRonda numero + 1) 
													empezandoPor: estadoDeRonda ganador
													 de: self]
		].
										! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:29:59'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:29:59'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:30:56' prior: 51045299!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [estadoDeRonda := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				estadoDeRonda numero = 2 
					ifTrue: [estadoDeRonda := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: estadoDeRonda ganador
													 de: self]
					ifFalse: [estadoDeRonda := EnfrentamientoNormal numero: (estadoDeRonda numero + 1) 
													empezandoPor: estadoDeRonda ganador
													 de: self]
		].
										! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:31:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:31:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 20:31:03'!
PASSED!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 20:31:06'!
ERROR!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 20:31:06'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:32:07'!
terminarRonda

	estadoDeRonda := RondaTerminada.							! !

EnEnfrentamiento subclass: #PrimeraRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #PrimeraRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:34:05'!
EnEnfrentamiento subclass: #PrimeraRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnEnfrentamiento subclass: #SegundaRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #SegundaRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:34:13'!
EnEnfrentamiento subclass: #SegundaRonda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!PrimeraRonda methodsFor: 'nil' stamp: 'FG 7/5/2021 20:34:58'!
terminarEnfrentamiento

	ronda terminarPrimeraRondaConResultado: enfrentamiento.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:35:25' prior: 51045037 overrides: 16896425!
initialize

	numeroDeEnfrentamientos := 1.
	estadoDeRonda := PrimeraRonda numero: 1 empezandoPor: #Mano de: self. 
	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:35:34' prior: 51045330!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [estadoDeRonda := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				estadoDeRonda numero = 2 
					ifTrue: [estadoDeRonda := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: estadoDeRonda ganador
													 de: self]
					ifFalse: [estadoDeRonda := SegundaRonda numero: (estadoDeRonda numero + 1) 
													empezandoPor: estadoDeRonda ganador
													 de: self]
		].
										! !

!classRemoval: #EnfrentamientoNormal stamp: 'FG 7/5/2021 20:35:39'!
EnEnfrentamiento subclass: #EnfrentamientoNormal
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:38:14'!
terminarPrimeraRondaConResultado: unEnfrentamiento

	unEnfrentamiento empardado 
		ifTrue: [ estadoDeRonda := EnfrentamientoFinal empezandoPor: #Mano de: self ].! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:39:33'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ganador numeroDeEnfrentamientos enfrentamientoActual ventaja'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:39:31' prior: 51045446!
terminarPrimeraRondaConResultado: unEnfrentamiento

	unEnfrentamiento empardado 
		ifTrue: [ estadoDeRonda := EnfrentamientoFinal empezandoPor: #Mano de: self ]
		ifFalse: [ 
			ventaja := unEnfrentamiento ganador.
			estadoDeRonda := SegundaRonda empezandoPor: unEnfrentamiento ganador].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:42:05'!
terminarSegundaRondaConResultado: unEnfrentamiento

	unEnfrentamiento ganador = ventaja 
		ifTrue: [estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador]
		ifFalse: [estadoDeRonda := EnfrentamientoFinal empezandoPor: unEnfrentamiento ganador]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:42:29' prior: 51045476!
terminarSegundaRondaConResultado: unEnfrentamiento

	unEnfrentamiento ganador = ventaja 
		ifTrue: [estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador de: self]
		ifFalse: [estadoDeRonda := EnfrentamientoFinal empezandoPor: unEnfrentamiento ganador de: self]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:43:44'!
terminarRondaFinalConResultado: unEnfrentamiento

	estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador.! !

!methodRemoval: RondaDeTruco #terminarRonda stamp: 'FG 7/5/2021 20:43:48'!
terminarRonda

	estadoDeRonda := RondaTerminada.							!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:44:09'!
terminarPrimeraRondaLuegoDe: unEnfrentamiento

	unEnfrentamiento empardado 
		ifTrue: [ estadoDeRonda := EnfrentamientoFinal empezandoPor: #Mano de: self ]
		ifFalse: [ 
			ventaja := unEnfrentamiento ganador.
			estadoDeRonda := SegundaRonda empezandoPor: unEnfrentamiento ganador].! !
!PrimeraRonda methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:44:09' prior: 51045401!
terminarEnfrentamiento

	ronda terminarPrimeraRondaLuegoDe: enfrentamiento.! !

!methodRemoval: RondaDeTruco #terminarPrimeraRondaConResultado: stamp: 'FG 7/5/2021 20:44:09'!
terminarPrimeraRondaConResultado: unEnfrentamiento

	unEnfrentamiento empardado 
		ifTrue: [ estadoDeRonda := EnfrentamientoFinal empezandoPor: #Mano de: self ]
		ifFalse: [ 
			ventaja := unEnfrentamiento ganador.
			estadoDeRonda := SegundaRonda empezandoPor: unEnfrentamiento ganador].!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:44:17'!
terminarRondaFinalLuegoDe: unEnfrentamiento

	estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador.! !

!methodRemoval: RondaDeTruco #terminarRondaFinalConResultado: stamp: 'FG 7/5/2021 20:44:17'!
terminarRondaFinalConResultado: unEnfrentamiento

	estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador.!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:44:28'!
terminarSegundaRondaLuegoDe: unEnfrentamiento

	unEnfrentamiento ganador = ventaja 
		ifTrue: [estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador de: self]
		ifFalse: [estadoDeRonda := EnfrentamientoFinal empezandoPor: unEnfrentamiento ganador de: self]! !

!methodRemoval: RondaDeTruco #terminarSegundaRondaConResultado: stamp: 'FG 7/5/2021 20:44:28'!
terminarSegundaRondaConResultado: unEnfrentamiento

	unEnfrentamiento ganador = ventaja 
		ifTrue: [estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador de: self]
		ifFalse: [estadoDeRonda := EnfrentamientoFinal empezandoPor: unEnfrentamiento ganador de: self]!

!methodRemoval: RondaDeTruco #pasarALaSiguienteRondaLuegoDe: stamp: 'FG 7/5/2021 20:45:12'!
pasarALaSiguienteRondaLuegoDe: unEnfrentamiento

	(unEnfrentamiento empardado) 
		ifTrue: [estadoDeRonda := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: #Mano 
													 de: self]
		ifFalse: [
				estadoDeRonda numero = 2 
					ifTrue: [estadoDeRonda := EnfrentamientoFinal numero: estadoDeRonda numero + 1 
													empezandoPor: estadoDeRonda ganador
													 de: self]
					ifFalse: [estadoDeRonda := SegundaRonda numero: (estadoDeRonda numero + 1) 
													empezandoPor: estadoDeRonda ganador
													 de: self]
		].
										!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:45:43' prior: 51045198!
pieJuega: unaCarta

	estadoDeRonda pieJuega: unaCarta.
	
	(estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ 	estadoDeRonda terminarEnfrentamiento]. ! !

!methodRemoval: RondaDeTruco #enfrentamientoActual stamp: 'FG 7/5/2021 20:45:50'!
enfrentamientoActual

	 ^ estadoDeRonda numero.!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:46:22' prior: 51045540!
terminarRondaFinalLuegoDe: unEnfrentamiento

	estadoDeRonda := RondaTerminada conGanador: unEnfrentamiento ganador de: self.! !
!EnEnfrentamiento class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:46:44'!
empezandoPor: unJugador de: unaRonda

	^ self new initializeEmpezandoPor: unJugador de: unaRonda. ! !

!methodRemoval: EnEnfrentamiento class #numero:empezandoPor:de: stamp: 'FG 7/5/2021 20:46:53'!
numero: unNumero empezandoPor: unJugador de: unaRonda

	^ self new initializeConNumero: unNumero empezandoPor: unJugador de: unaRonda. !
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:47:07'!
initializeEmpezandoPor: unJugador de: unaRonda
	ronda  := unaRonda.
	enfrentamiento := EnfrentamientoDeTruco empezandoPor: unJugador.! !
!EnEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:47:09' prior: 51045631!
initializeEmpezandoPor: unJugador de: unaRonda

	ronda  := unaRonda.
	enfrentamiento := EnfrentamientoDeTruco empezandoPor: unJugador.! !

!methodRemoval: EnEnfrentamiento #initializeConNumero:empezandoPor:de: stamp: 'FG 7/5/2021 20:47:13'!
initializeConNumero: unNumero empezandoPor: unJugador de: unaRonda

	numero := unNumero.
	ronda  := unaRonda.
	enfrentamiento := EnfrentamientoDeTruco empezandoPor: unJugador.!
!RondaTerminada class methodsFor: 'no messages' stamp: 'FG 7/5/2021 20:48:28'!
conGanador: unGanador de: unaRonda

	^ self new initializeConGanador: unGanador de: unaRonda ! !

!classDefinition: #RondaTerminada category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:49:03'!
EstadoDeRonda subclass: #RondaTerminada
	instanceVariableNames: 'ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTerminada category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:49:04'!
EstadoDeRonda subclass: #RondaTerminada
	instanceVariableNames: 'ganador ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaTerminada methodsFor: 'no messages' stamp: 'FG 7/5/2021 20:49:01'!
initializeConGanador: unGanador de: unaRonda 

	ganador := unGanador.
	ronda := unaRonda.! !

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento numero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:49:14'!
EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento numero'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeRonda subclass: #RondaTerminada
	instanceVariableNames: 'ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaTerminada category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:49:18'!
EstadoDeRonda subclass: #RondaTerminada
	instanceVariableNames: 'ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EstadoDeRonda
	instanceVariableNames: 'initializeConGanador: unGanador de: unaRonda '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #EstadoDeRonda
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EstadoDeRonda category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:49:30'!
Object subclass: #EstadoDeRonda
	instanceVariableNames: 'ronda'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

----SNAPSHOT----(5 July 2021 20:49:33) CuisUniversity-4384.image priorSource: 22764838!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:49:53' prior: 51045408 overrides: 16896425!
initialize

	numeroDeEnfrentamientos := 1.
	estadoDeRonda := PrimeraRonda empezandoPor: #Mano de: self. 
	enfrentamientoActual := EnfrentamientoDeTruco empezandoPor: #Mano.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'FG 7/5/2021 20:50:13' prior: 51045732 overrides: 16896425!
initialize

	numeroDeEnfrentamientos := 1.
	estadoDeRonda := PrimeraRonda empezandoPor: #Mano de: self. ! !

Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ganador numeroDeEnfrentamientos ventaja'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:50:20'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ganador numeroDeEnfrentamientos ventaja'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ventaja'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 20:50:44'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'estadoDeRonda ventaja'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'FG 7/5/2021 20:50:55' prior: 51045741 overrides: 16896425!
initialize

	estadoDeRonda := PrimeraRonda empezandoPor: #Mano de: self. ! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'FG 7/5/2021 20:51:06' prior: 51045777 overrides: 16896425!
initialize

	ventaja := #NingunJugador.
	estadoDeRonda := PrimeraRonda empezandoPor: #Mano de: self. ! !
!RondaDeTruco methodsFor: 'nil' stamp: 'FG 7/5/2021 20:51:42'!
enfrentamientoActual

	^ estadoDeRonda numeroDeEnfrentamiento.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:51:59' prior: 51044487!
test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	! !

!methodRemoval: RondaDeTruco #enfrentamientoActual stamp: 'FG 7/5/2021 20:52:06'!
enfrentamientoActual

	^ estadoDeRonda numeroDeEnfrentamiento.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:52:30'!
test01RondaDeTrucoEmpiezaJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco primeraRonda.! !
!RondaDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 20:52:42'!
primeraRonda! !
!EstadoDeRonda methodsFor: 'testing' stamp: 'FG 7/5/2021 20:52:58'!
primeraRonda

	^ false.! !
!PrimeraRonda methodsFor: 'testing' stamp: 'FG 7/5/2021 20:53:10' overrides: 51045819!
primeraRonda 

	^ true.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:53:25' prior: 51045795!
test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco primeraRonda.
	! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:53:38'!
ERROR!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:53:38'!
ERROR!
!RondaDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 20:53:53' prior: 51045816!
primeraRonda

	^ estadoDeRonda primeraRonda.! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:53:56'!
PASSED!

!methodRemoval: RondaDeTrucoTest #test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano stamp: 'FG 7/5/2021 20:54:02'!
test01RondaDeTrucoEmpiezaEnElPrimerEnfrentamientoYJugandoLaMano

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	self assert: rondaDeTruco estaJugandoLaMano.
	self assert: rondaDeTruco primeraRonda.
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:54:22' prior: 51044573!
test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	self assert: rondaDeTruco segundaRonda.
	self assert: rondaDeTruco estaJugandoElPie.

	
	! !
!RondaDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 20:54:36'!
segundaRonda

	^ estadoDeRonda segundaRonda.! !
!EstadoDeRonda methodsFor: 'testing' stamp: 'FG 7/5/2021 20:54:46'!
segundaRonda

	^ false.! !
!SegundaRonda methodsFor: 'testing' stamp: 'FG 7/5/2021 20:55:04' overrides: 51045881!
segundaRonda

	^ true.! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:55:10'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:55:10'!
ERROR!
!EnfrentamientoFinal methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:55:40' prior: 51045147!
terminarEnfrentamiento

	ronda terminarRondaFinalLuegoDe: enfrentamiento.! !
!SegundaRonda methodsFor: 'nil' stamp: 'FG 7/5/2021 20:56:16'!
terminarEnfrentamiento

	ronda terminarSegundaRondaLuegoDe: enfrentamiento.! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:56:41'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:56:41'!
ERROR!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 20:57:27'!
ERROR!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 20:57:27'!
ERROR!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:57:34'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:58:01' prior: 51045511!
terminarPrimeraRondaLuegoDe: unEnfrentamiento

	unEnfrentamiento empardado 
		ifTrue: [ estadoDeRonda := EnfrentamientoFinal empezandoPor: #Mano de: self ]
		ifFalse: [ 
			ventaja := unEnfrentamiento ganador.
			estadoDeRonda := SegundaRonda empezandoPor: unEnfrentamiento ganador de: self].! !

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 20:58:05'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 20:58:14' prior: 51044671!
test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	rondaDeTruco pieJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco espadaCon: 7).
	
	self assert: rondaDeTruco estaJugandoLaMano.

	
	! !

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 20:58:17'!
PASSED!
!RondaDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 20:58:34'!
termino

	estadoDeRonda termino! !
!EstadoDeRonda methodsFor: 'testing' stamp: 'FG 7/5/2021 20:58:45'!
termino

	^ false.! !
!RondaTerminada methodsFor: 'testing' stamp: 'FG 7/5/2021 20:58:59' overrides: 51045967!
termino 

	^ true.! !
!RondaDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 20:59:05' prior: 51045963!
termino

	^ estadoDeRonda termino! !

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 20:59:07'!
ERROR!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 20:59:07'!
ERROR!
!RondaDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 21:00:02'!
ganador

	^ estadoDeRonda ganador.! !

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:00:05'!
ERROR!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:00:05'!
ERROR!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:00:20'!
ERROR!
!RondaTerminada methodsFor: 'testing' stamp: 'FG 7/5/2021 21:00:42'!
ganador

	^ ganador.! !

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:00:45'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:01:10'!
test05JugadorPuedeGanarEnLaSegundaRonda

	

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:01:26' prior: 51046009!
test05JugadorPuedeGanarEnLaSegundaRonda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	rondaDeTruco pieJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco espadaCon: 7).
	
	

	

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:01:44' prior: 51046014!
test05JugadorPuedeGanarEnLaSegundaRonda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	
	

	

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:02:02' prior: 51046028!
test05JugadorPuedeGanarEnLaSegundaRonda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: CartaDeTruco anchoDeBasto.
	rondaDeTruco pieJuega: CartaDeTruco anchoDeEspada.
	
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	

	

	
	! !

!testRun: #RondaDeTrucoTest #test05JugadorPuedeGanarEnLaSegundaRonda stamp: 'FG 7/5/2021 21:02:03'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:03:06'!
test05SegundaRondaDefineSiLaPrimeraFueParda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 5).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 5).
	
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	

	

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:03:10'!
test06SegundaRondaDefineSiLaPrimeraFueParda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 5).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 5).
	
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	

	

	
	! !

!methodRemoval: RondaDeTrucoTest #test05SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:03:13'!
test05SegundaRondaDefineSiLaPrimeraFueParda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 5).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 5).
	
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	

	

	
	!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:03:15'!
ERROR!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:03:15'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:03:27' prior: 51046077!
test06SegundaRondaDefineSiLaPrimeraFueParda


	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 5).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 5).
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	

	

	
	! !

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:03:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaJugandoLaMano stamp: 'FG 7/5/2021 21:03:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 21:03:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 21:03:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:03:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05JugadorPuedeGanarEnLaSegundaRonda stamp: 'FG 7/5/2021 21:03:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:03:31'!
PASSED!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:04:52' prior: 51045928!
terminarPrimeraRondaLuegoDe: unEnfrentamiento

	unEnfrentamiento empardado 
		ifTrue: [ estadoDeRonda := EnfrentamientoFinal empezandoPor: #Mano de: self ]
		ifFalse: [ 
			ventaja := unEnfrentamiento ganador.
			estadoDeRonda := SegundaRonda empezandoPor: unEnfrentamiento ganador de: self
		].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:05:46' prior: 51045134!
manoJuega: unaCarta

	estadoDeRonda manoJuega: unaCarta.
	
	(estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ estadoDeRonda terminarEnfrentamiento].! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:06:03'!
chequearSiLaRondaTermianr

	^ (estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ estadoDeRonda terminarEnfrentamiento]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:06:03' prior: 51046172!
manoJuega: unaCarta

	estadoDeRonda manoJuega: unaCarta.
	
	self chequearSiLaRondaTermianr.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:06:12'!
chequearSiLaRondaTermino

	^ (estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ estadoDeRonda terminarEnfrentamiento]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:06:12' prior: 51046187!
manoJuega: unaCarta

	estadoDeRonda manoJuega: unaCarta.
	
	self chequearSiLaRondaTermino.! !

!methodRemoval: RondaDeTruco #chequearSiLaRondaTermianr stamp: 'FG 7/5/2021 21:06:12'!
chequearSiLaRondaTermianr

	^ (estadoDeRonda enfrentamientoTerminado)
		ifTrue: [ estadoDeRonda terminarEnfrentamiento]!

!methodRemoval: EnEnfrentamiento #numero stamp: 'FG 7/5/2021 21:09:37'!
numero

	^ numero.!

EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnEnfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 21:09:42'!
EstadoDeRonda subclass: #EnEnfrentamiento
	instanceVariableNames: 'enfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnEnfrentamiento methodsFor: 'terminar enfrentamiento' stamp: 'FG 7/5/2021 21:11:07'!
terminarEnfrentamiento

	^ self subclassResponsibility.! !

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaJugandoLaMano stamp: 'FG 7/5/2021 21:11:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 21:11:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 21:11:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:11:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test05JugadorPuedeGanarEnLaSegundaRonda stamp: 'FG 7/5/2021 21:11:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:11:12'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 21:11:17'!
PASSED!

!methodRemoval: EnfrentamientoDeTruco #definirElGanadorDelEnfrentamiento stamp: 'FG 7/5/2021 21:11:43'!
definirElGanadorDelEnfrentamiento


	

	

	
	!

EnfrentamientoTerminado subclass: #EnfrentamientoEmpardado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoEmpardado category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 21:13:27'!
EnfrentamientoTerminado subclass: #EnfrentamientoEmpardado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoTerminado subclass: #EnfrentamientoConGanador
	instanceVariableNames: 'ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EstadoDeEnfrentamiento subclass: #EnfrentamientoTerminado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoTerminado category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 21:13:46'!
EstadoDeEnfrentamiento subclass: #EnfrentamientoTerminado
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

EnfrentamientoTerminado subclass: #EnfrentamientoConGanador
	instanceVariableNames: 'ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoConGanador category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 21:13:55'!
EnfrentamientoTerminado subclass: #EnfrentamientoConGanador
	instanceVariableNames: 'ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 21:15:13' prior: 51044168!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				(cartaDeMano empardaCon: cartaDePie) 
					ifTrue: [ 	estadoEnfrentamiento := EnfrentamientoEmpardado de: self. ]
					ifFalse: [ estadoEnfrentamiento := EnfrentamientoConGanador de: self ganadoPor: self ganadorDelEnfrentamiento]
			]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 21:15:33' prior: 51044192!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [
			(cartaDeMano empardaCon: cartaDePie) 
					ifTrue: [ 	estadoEnfrentamiento := EnfrentamientoEmpardado de: self. ]
					ifFalse: [ estadoEnfrentamiento := EnfrentamientoConGanador de: self ganadoPor: self ganadorDelEnfrentamiento]
			]

	
	! !

!methodRemoval: EnfrentamientoTerminado #empardado stamp: 'FG 7/5/2021 21:15:53'!
empardado 
	^ empardado.!
!EnfrentamientoEmpardado methodsFor: 'no messages' stamp: 'FG 7/5/2021 21:16:08' overrides: 51044377!
empardado

	^ true.! !
!EnfrentamientoDeTrucoTest methodsFor: 'test' stamp: 'FG 7/5/2021 21:17:03' prior: 51043439!
test03ManoNoPuedeJugarSiJuegaElPie

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Pie.
		
	self should: [rondaDeTruco manoJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self deny: rondaDeTruco estaJugandoLaMano.
				self assert: rondaDeTruco estaJugandoElPie.
			]. 
	! !
!EnfrentamientoDeTrucoTest methodsFor: 'test' stamp: 'FG 7/5/2021 21:17:07' prior: 51043320!
test02PieNoPuedeJugarSiJuegaLaMano

	| rondaDeTruco |
	
	rondaDeTruco := EnfrentamientoDeTruco empezandoPor: #Mano.
	
	self should: [rondaDeTruco pieJuega: (CartaDeTruco copaCon: 4)]
		raise: Error
		withExceptionDo: [:anError | 
				self assert: anError messageText equals:  EnfrentamientoDeTruco errorDeJugadaInvalida.
				self assert: rondaDeTruco estaJugandoLaMano.
			]. ! !

!methodRemoval: EnfrentamientoDeTruco #numero stamp: 'FG 7/5/2021 21:17:11'!
numero

	^ 1.!

Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas cartaDeMano cartaDePie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #EnfrentamientoDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'FG 7/5/2021 21:17:59'!
Object subclass: #EnfrentamientoDeTruco
	instanceVariableNames: 'estadoEnfrentamiento numeroDeJugadas cartaDeMano cartaDePie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!EnfrentamientoDeTruco methodsFor: 'testing' stamp: 'FG 7/5/2021 21:18:18' prior: 51043925!
initializeWith: unJugador

	numeroDeJugadas := 0.
	estadoEnfrentamiento := EstadoDeEnfrentamiento de: self dondeEmpieza: unJugador.! !
!EstadoDeEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:19:31'!
ganador 

	self error: EnfrentamientoDeTruco errorDeJuegoNoTerminado.! !
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:19:53'!
errorDeJuegoNoTerminado

	^ 'Error - Juego no terminado'! !
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:21:03'!
errorEnfrentamientoSinGanador

	^ 'Error - Juego no terminado'! !
!EstadoDeEnfrentamiento methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:21:03' prior: 51046439!
ganador 

	self error: EnfrentamientoDeTruco errorEnfrentamientoSinGanador.! !

!methodRemoval: EnfrentamientoDeTruco class #errorDeJuegoNoTerminado stamp: 'FG 7/5/2021 21:21:03'!
errorDeJuegoNoTerminado

	^ 'Error - Juego no terminado'!
!EnfrentamientoDeTruco class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:21:17' prior: 51046450!
errorEnfrentamientoSinGanador

	^ 'Error - Enfrentamiento sin ganador'! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 21:22:20'!
terminarEnfrentamiento

	^ (cartaDeMano empardaCon: cartaDePie) 
					ifTrue: [ 	estadoEnfrentamiento := EnfrentamientoEmpardado de: self. ]
					ifFalse: [ estadoEnfrentamiento := EnfrentamientoConGanador de: self ganadoPor: self ganadorDelEnfrentamiento]! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 21:22:20' prior: 51046338!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [
				self terminarEnfrentamiento
			]
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 21:22:29' prior: 51046484!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [ self terminarEnfrentamiento			].
	! !
!EnfrentamientoDeTruco methodsFor: 'juega privado' stamp: 'FG 7/5/2021 21:22:34' prior: 51046495!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	
	cartaDeMano := unaCarta.
	
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [ self terminarEnfrentamiento			].
	! !
!EnfrentamientoDeTruco methodsFor: 'acciones privado' stamp: 'FG 7/5/2021 21:23:36' prior: 51046355!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [ self terminarEnfrentamiento.]

	
	! !
!EnfrentamientoDeTruco methodsFor: 'acciones privado' stamp: 'FG 7/5/2021 21:23:40' prior: 51046517!
pieJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDePie := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoMano de: self.]
		ifFalse: [self terminarEnfrentamiento.]

	
	! !
!EnfrentamientoDeTruco methodsFor: 'acciones privado' stamp: 'FG 7/5/2021 21:23:54' prior: 51046506!
manoJuegaEnSuTurno: unaCarta

	numeroDeJugadas := numeroDeJugadas + 1.
	cartaDeMano := unaCarta.
	(numeroDeJugadas < 2) 
		ifTrue: [estadoEnfrentamiento := JugandoPie de: self.]
		ifFalse: [ self terminarEnfrentamiento			].
	! !

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 21:24:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaJugandoLaMano stamp: 'FG 7/5/2021 21:24:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 21:24:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 21:24:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:24:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test05JugadorPuedeGanarEnLaSegundaRonda stamp: 'FG 7/5/2021 21:24:52'!
PASSED!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:24:53'!
PASSED!
!EstadoDeEnfrentamiento methodsFor: 'testing' stamp: 'FG 7/5/2021 21:25:52' prior: 51042782!
estaJugandoElPie

	^ false.! !
!EstadoDeEnfrentamiento methodsFor: 'testing' stamp: 'FG 7/5/2021 21:26:04' prior: 51042777!
estaJugandoLaMano

	false.! !
!EnfrentamientoConGanador class methodsFor: 'no messages' stamp: 'FG 7/5/2021 21:27:30' overrides: 51044137!
de: unEnfrentamiento ganadoPor: unGanador

	^ self new initializeDe: unEnfrentamiento GanadoPor: unGanador.! !

!methodRemoval: EnfrentamientoTerminado #ganador stamp: 'FG 7/5/2021 21:28:10'!
ganador

	^ ganador.!

!methodRemoval: EnfrentamientoTerminado #estaJugandoElPie stamp: 'FG 7/5/2021 21:28:31'!
estaJugandoElPie
	^ false.!

!methodRemoval: EnfrentamientoTerminado #estaJugandoLaMano stamp: 'FG 7/5/2021 21:28:33'!
estaJugandoLaMano
	^ false.!

!methodRemoval: EnfrentamientoTerminado class #de:ganadoPor: stamp: 'FG 7/5/2021 21:29:43'!
de: unEnfrentamiento ganadoPor: unGanador

	^ self new initializeDe: unEnfrentamiento GanadoPor: unGanador.!

!methodRemoval: EnfrentamientoTerminado class #empardadoDe: stamp: 'FG 7/5/2021 21:29:47'!
empardadoDe: unEnfrentamiento

	^ self new initializeEmpardadoDe: unEnfrentamiento.!
!EnfrentamientoConGanador methodsFor: 'no messages' stamp: 'FG 7/5/2021 21:30:31' overrides: 51046456!
ganador 

	^ ganador! !

!methodRemoval: EnfrentamientoTerminado #initializeDe:GanadoPor: stamp: 'FG 7/5/2021 21:31:57'!
initializeDe: unEnfrentamiento GanadoPor: unGanador

	enfrentamiento := unEnfrentamiento. 
	empardado := false.
	ganador := unGanador.
!

!methodRemoval: EnfrentamientoTerminado #initializeEmpardadoDe: stamp: 'FG 7/5/2021 21:32:01'!
initializeEmpardadoDe: unEnfrentamiento

	enfrentamiento := unEnfrentamiento.
	empardado := true.
!
!EstadoDeEnfrentamiento methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:33:03'!
manoJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.! !
!EstadoDeEnfrentamiento methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:33:15'!
pieJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.! !

!methodRemoval: EnfrentamientoTerminado #manoJuega: stamp: 'FG 7/5/2021 21:33:20'!
manoJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.!

!methodRemoval: EnfrentamientoTerminado #pieJuega: stamp: 'FG 7/5/2021 21:33:22'!
pieJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.!

!methodRemoval: JugandoMano #pieJuega: stamp: 'FG 7/5/2021 21:33:46'!
pieJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.!

!methodRemoval: JugandoPie #manoJuega: stamp: 'FG 7/5/2021 21:34:15'!
manoJuega: unaCarta

	enfrentamiento jugadorJuegaCuandoNoEsSuTurno.!

!methodRemoval: JugandoPie #estaJugandoLaMano stamp: 'FG 7/5/2021 21:34:29'!
estaJugandoLaMano
	^ false.!

!methodRemoval: JugandoMano #estaJugandoElPie stamp: 'FG 7/5/2021 21:34:34'!
estaJugandoElPie
	^ false.!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:35:00'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 21:35:00'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 21:35:00'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 21:35:00'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:35:00'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 21:35:00'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 21:35:00'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:35:23'!
ERROR!
!EstadoDeEnfrentamiento methodsFor: 'testing' stamp: 'FG 7/5/2021 21:35:36' prior: 51046604!
estaJugandoLaMano

	^ false.! !

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:36:02'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:36:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 21:36:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 21:36:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 21:36:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:36:04'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 21:36:04'!
ERROR!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 21:36:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:36:10'!
ERROR!
!EnfrentamientoConGanador methodsFor: 'ganador' stamp: 'FG 7/5/2021 21:36:54'!
initializeDe: unEnfrentamiento GanadoPor: unGanador

	enfrentamiento := unEnfrentamiento.
	ganador := unGanador..! !
!EnfrentamientoConGanador methodsFor: 'ganador' stamp: 'FG 7/5/2021 21:36:56' prior: 51046765!
initializeDe: unEnfrentamiento GanadoPor: unGanador

	enfrentamiento := unEnfrentamiento.
	ganador := unGanador.! !

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 21:37:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaJugandoLaMano stamp: 'FG 7/5/2021 21:37:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 21:37:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 21:37:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:37:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test05JugadorPuedeGanarEnLaSegundaRonda stamp: 'FG 7/5/2021 21:37:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:37:09'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'FG 7/5/2021 21:40:18'!
test07NoSePuedeSeguirJugandoLaRondaUnaVezQueTermino

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 5).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 5).
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco anchoDeEspada) ]
		raise:  Error
		description: rondaDeTruco errorDeJuegoTerminado.
	
	

	

	
	! !
!RondaDeTruco class methodsFor: 'no messages' stamp: 'FG 7/5/2021 21:40:41'!
errorDeJuegoTermiando

	^ 'Error - Juego Termiando'! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'FG 7/5/2021 21:40:45' prior: 51046849!
errorDeJuegoTermiando

	^ 'Error - Juego Terminado'! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'FG 7/5/2021 21:41:11' prior: 51046829!
test07NoSePuedeSeguirJugandoLaRondaUnaVezQueTermino

	|rondaDeTruco|
	
	rondaDeTruco := RondaDeTruco new.
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 5).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 5).
	
	rondaDeTruco manoJuega: (CartaDeTruco oroCon: 7).
	rondaDeTruco pieJuega: (CartaDeTruco espadaCon: 7).
	
	self assert: rondaDeTruco termino.
	self assert: rondaDeTruco ganador equals: #Pie.
	
	self should: [rondaDeTruco manoJuega: (CartaDeTruco anchoDeEspada) ]
		raise:  Error
		description: RondaDeTruco errorDeJuegoTerminado.
	
	

	

	
	! !
!RondaDeTruco class methodsFor: 'errors' stamp: 'FG 7/5/2021 21:41:21'!
errorDeJuegoTerminado

	^ 'Error - Juego Terminado'! !

!methodRemoval: RondaDeTruco class #errorDeJuegoTermiando stamp: 'FG 7/5/2021 21:41:22'!
errorDeJuegoTermiando

	^ 'Error - Juego Terminado'!
!EstadoDeRonda methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:42:27'!
manoJuega: unaCarta

	ronda jugarCuandoElJuegoEst�Terminado.! !
!RondaTerminada methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:42:43' overrides: 51046888!
manoJuega: unaCarta

	ronda jugarCuandoElJuegoEst�Terminado.! !
!RondaDeTruco methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:43:13'!
jugarCuandoRondaTerminada

	self error: RondaDeTruco errorDeJuegoTerminado.! !
!RondaTerminada methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:43:29' prior: 51046893 overrides: 51046888!
manoJuega: unaCarta

	ronda jugarCuandoRondaTerminada.! !
!RondaTerminada methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:43:32'!
pieJuega: unaCarta

	ronda jugarCuandoRondaTerminada.! !
!EstadoDeRonda methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:43:47' prior: 51046888!
manoJuega: unaCarta

	self subclassResponsibility.! !
!EstadoDeRonda methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:44:06'!
pieJuega: unaCarta

	ronda jugarCuandoRondaTerminada.! !
!EstadoDeRonda methodsFor: 'acciones' stamp: 'FG 7/5/2021 21:44:16' prior: 51046917!
pieJuega: unaCarta

	self subclassResponsibility.! !

!testRun: #RondaDeTrucoTest #test07NoSePuedeSeguirJugandoLaRondaUnaVezQueTermino stamp: 'FG 7/5/2021 21:44:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test01RondaDeTrucoEmpiezaJugandoLaMano stamp: 'FG 7/5/2021 21:44:38'!
PASSED!

!testRun: #RondaDeTrucoTest #test02EnElSegundoEnfrentamientoComienzaElGanadorDelPrimero stamp: 'FG 7/5/2021 21:44:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test03EnElTercerEnfrentamientoComienzaElGanadorDelSegundo stamp: 'FG 7/5/2021 21:44:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test04AlTerminarLaTerceraRondaDebeHaberUnGanador stamp: 'FG 7/5/2021 21:44:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test05JugadorPuedeGanarEnLaSegundaRonda stamp: 'FG 7/5/2021 21:44:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test06SegundaRondaDefineSiLaPrimeraFueParda stamp: 'FG 7/5/2021 21:44:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test07NoSePuedeSeguirJugandoLaRondaUnaVezQueTermino stamp: 'FG 7/5/2021 21:44:39'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test01EnfrentamientoEmpiezaJugandoElPrimerJugador stamp: 'FG 7/5/2021 21:44:44'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test02PieNoPuedeJugarSiJuegaLaMano stamp: 'FG 7/5/2021 21:44:44'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test03ManoNoPuedeJugarSiJuegaElPie stamp: 'FG 7/5/2021 21:44:44'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test04SePasaAlTurnoDelSiguienteJugadorLuegoDeJugarUnaCarta stamp: 'FG 7/5/2021 21:44:44'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test05LuegoDeQueAmbosJugadoresJugaranUnaCartaElEnfrentamientoTermina stamp: 'FG 7/5/2021 21:44:44'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test06ElGanadorDelEnfrentamientoEsDecididoPorQuienTieneLaMejorCarta stamp: 'FG 7/5/2021 21:44:44'!
PASSED!

!testRun: #EnfrentamientoDeTrucoTest #test07ElEnfrentamientoPuedeTerminarEnEmparde stamp: 'FG 7/5/2021 21:44:44'!
PASSED!