
----End fileIn of C:\Users\sabri\Downloads\ISW1-2021-1C-2doParcial.st----!

TestCase subclass: #TrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #TrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 17:35:33'!
TestCase subclass: #TrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRenamed: #TrucoTest as: #RondaDeTrucoTest stamp: 'sgs 7/5/2021 17:38:19'!
Smalltalk renameClassNamed: #TrucoTest as: #RondaDeTrucoTest!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 17:40:05'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest class methodsFor: 'nil' stamp: 'sgs 7/5/2021 17:40:01'!
test01NuevaRondaDeTrucoConDosJugadores
	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	! !

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 18:00:14'!
Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest class methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:00:08'!
test01
	| rondaDeTruco jugadorA |
	
	rondaDeTruco _  RondaDeTruco new.
	
	jugadorA _ Jugador new.
	
	rondaDeTruco agregarJugador:jugadorA.
	 
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco noPuedeJugarRondaConSoloUnJugador equals: anError messageText.]! !
!RondaDeTruco methodsFor: 'nil' stamp: 'sgs 7/5/2021 18:02:03'!
noPuedeJugarRondaConSoloUnJugador
	
	^'No puedo jugar, falta agregar jugador'! !

!methodRemoval: RondaDeTrucoTest class #test01NuevaRondaDeTrucoConDosJugadores stamp: 'sgs 7/5/2021 18:02:19'!
test01NuevaRondaDeTrucoConDosJugadores
	| rondaDeTruco |
	
	rondaDeTruco := RondaDeTruco new.
	!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'sgs 7/5/2021 18:02:49'!
test01
	| rondaDeTruco  |
	
	rondaDeTruco _  RondaDeTruco new.
	 
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco noPuedeJugarRondaConSoloUnJugador equals: anError messageText.]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:03:21'!
cantidadDeJugadoresInsuficienteParaJugar
	
	^'No puedo jugar, falta agregar jugador'! !

!methodRemoval: RondaDeTruco #noPuedeJugarRondaConSoloUnJugador stamp: 'sgs 7/5/2021 18:03:21'!
noPuedeJugarRondaConSoloUnJugador
	
	^'No puedo jugar, falta agregar jugador'!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:03:36' prior: 50908076!
test01
	| rondaDeTruco  |
	
	rondaDeTruco _  RondaDeTruco new.
	 
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !

	^ self error: self cantidadDeJugadoresInsuficienteParaJugar !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:04:17'!
enfrentarJugadores
	^ self error: self cantidadDeJugadoresInsuficienteParaJugar.! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:04:44'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:05:52' prior: 50908100!
test01
	| rondaDeTruco  jugadorA |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.

	rondaDeTruco agregarJugador: jugadorA.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:06:33'!
agregarJugador: jugador ! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 18:08:17'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cantidadDeJugadores'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:08:16' prior: 50908138!
agregarJugador: unJugador
	
	cantidadDeJugadores _ cantidadDeJugadores +1.  ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:08:53' prior: 50908123!
test01
	| rondaDeTruco  jugadorA |
	
	rondaDeTruco _  RondaDeTruco initialize.
	 	
	jugadorA _ Jugador new.

	rondaDeTruco agregarJugador: jugadorA.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !
!RondaDeTruco class methodsFor: 'nil' stamp: 'sgs 7/5/2021 18:09:54' overrides: 16883149!
initialize
	
	^ self new initialize.! !
!RondaDeTruco methodsFor: 'nil' stamp: 'sgs 7/5/2021 18:10:06' overrides: 16896425!
initialize
	cantidadDeJugadores _ 0.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:12:23' prior: 50908157!
test01
	| rondaDeTruco  jugadorA |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.

	rondaDeTruco agregarJugador: jugadorA.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !

!methodRemoval: RondaDeTrucoTest class #test01 stamp: 'sgs 7/5/2021 18:12:31'!
test01
	| rondaDeTruco jugadorA |
	
	rondaDeTruco _  RondaDeTruco new.
	
	jugadorA _ Jugador new.
	
	rondaDeTruco agregarJugador:jugadorA.
	 
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco noPuedeJugarRondaConSoloUnJugador equals: anError messageText.]!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:13:02' prior: 50908181!
test01
	| rondaDeTruco  jugadorA |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.

	rondaDeTruco agregarJugador: jugadorA.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:13:16'!
test02
	| rondaDeTruco  jugadorA |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.

	rondaDeTruco agregarJugador: jugadorA.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:13:26' prior: 50908210!
test01
	| rondaDeTruco   |
	
	rondaDeTruco _  RondaDeTruco new.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:15:05' prior: 50908225!
test02
	| rondaDeTruco  jugadorA jugadorB |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.
	jugadorB _ Jugador new.
	
	rondaDeTruco agregarJugador: jugadorA.
	rondaDeTruco agregarJugador: jugadorB.

	self assert: (rondaDeTruco enfrentarJugadores).! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:16:36' prior: 50908114!
enfrentarJugadores
	
	(cantidadDeJugadores = 2) ifFalse: [^ self error: self cantidadDeJugadoresInsuficienteParaJugar.]! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:16:42'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'sgs 7/5/2021 18:16:42'!
ERROR!

!testRun: #RondaDeTrucoTest #test02 stamp: 'sgs 7/5/2021 18:16:42'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:17:01' prior: 50908265!
enfrentarJugadores
	
	(cantidadDeJugadores = 2) ifFalse: [^ self error: self cantidadDeJugadoresInsuficienteParaJugar.].
	^ true .! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:17:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'sgs 7/5/2021 18:17:04'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:17:32'!
test03
	| rondaDeTruco  jugadorA jugadorB jugadorC |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.
	jugadorB _ Jugador new.
	jugadorC _ Jugador new.	
	
	rondaDeTruco agregarJugador: jugadorA.
	rondaDeTruco agregarJugador: jugadorB.

	self assert: (rondaDeTruco enfrentarJugadores).! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:18:42' prior: 50908291!
test03
	| rondaDeTruco  jugadorA jugadorB jugadorC |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.
	jugadorB _ Jugador new.
	jugadorC _ Jugador new.	
	
	rondaDeTruco agregarJugador: jugadorA.
	rondaDeTruco agregarJugador: jugadorB.
	
	self 
		should: [ rondaDeTruco agregarJugador: jugadorC. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco noSePuedeAgregarALaRondaMasDeDosJugadores equals: anError messageText.]! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:19:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'sgs 7/5/2021 18:19:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'sgs 7/5/2021 18:19:49'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03 stamp: 'sgs 7/5/2021 18:19:49'!
FAILURE!
!RondaDeTruco methodsFor: 'nil' stamp: 'sgs 7/5/2021 18:20:25'!
noSePuedeAgregarALaRondaMasDeDosJugadores
	
	^'No se puede agregar m�s jugadores'! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:20:41' prior: 50908151!
agregarJugador: unJugador
	
	
	cantidadDeJugadores _ cantidadDeJugadores +1.  ! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:21:57' prior: 50908337!
agregarJugador: unJugador
	
	
	(cantidadDeJugadores = 2) ifTrue: [^ self error: self noSePuedeAgregarALaRondaMasDeDosJugadores .].
	
	cantidadDeJugadores _ cantidadDeJugadores + 1.! !

!testRun: #RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:22:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test02 stamp: 'sgs 7/5/2021 18:22:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test03 stamp: 'sgs 7/5/2021 18:22:00'!
PASSED!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 18:24:56'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cantidadDeJugadores estado'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:24:53'!
initializarEstado

	^ estado _  #JugadorA! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:25:08'!
initializarCantidadDeJugadores

	cantidadDeJugadores _ 0.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:25:26' prior: 50908176 overrides: 16896425!
initialize
	
	self 
		initializarCantidadDeJugadores;
		initializarEstado.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:32:46'!
test04
	| rondaDeTruco jugadorA jugadorB cantidadDeCartasDeUnJugadorAlInicialLaRonda |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.
	jugadorB _ Jugador new.
	
	rondaDeTruco agregarJugador: jugadorA.
	rondaDeTruco agregarJugador: jugadorB.
	
	cantidadDeCartasDeUnJugadorAlInicialLaRonda _ 0.
"	
	rondaDeTruco repartirCartas.
	
	self assert: (rondaDeTruco enfrentarJugadores)."! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:41:36' prior: 50908383!
test04
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco createPeso.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:42:20' prior: 50908399!
test04
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:43:28' prior: 50908405!
test04
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:43:43'!
test01n
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:44:04'!
crearRonda
	
	^ self new initialize.! !
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 18:44:22' prior: 50908371!
initializarCantidadDeJugadores

	cantidadDeJugadores _ 2.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:44:40'!
cantidadDeJugadores
	
	^ cantidadDeJugadores ! !

!methodRemoval: RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:47:51'!
test01
	| rondaDeTruco   |
	
	rondaDeTruco _  RondaDeTruco new.
	
	self 
		should: [ rondaDeTruco enfrentarJugadores. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco cantidadDeJugadoresInsuficienteParaJugar equals: anError messageText.]!

!methodRemoval: RondaDeTrucoTest #test02 stamp: 'sgs 7/5/2021 18:47:57'!
test02
	| rondaDeTruco  jugadorA jugadorB |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.
	jugadorB _ Jugador new.
	
	rondaDeTruco agregarJugador: jugadorA.
	rondaDeTruco agregarJugador: jugadorB.

	self assert: (rondaDeTruco enfrentarJugadores).!

!methodRemoval: RondaDeTrucoTest #test03 stamp: 'sgs 7/5/2021 18:48:02'!
test03
	| rondaDeTruco  jugadorA jugadorB jugadorC |
	
	rondaDeTruco _  RondaDeTruco new.
	 	
	jugadorA _ Jugador new.
	jugadorB _ Jugador new.
	jugadorC _ Jugador new.	
	
	rondaDeTruco agregarJugador: jugadorA.
	rondaDeTruco agregarJugador: jugadorB.
	
	self 
		should: [ rondaDeTruco agregarJugador: jugadorC. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
			self assert: rondaDeTruco noSePuedeAgregarALaRondaMasDeDosJugadores equals: anError messageText.]!

!methodRemoval: RondaDeTrucoTest #test04 stamp: 'sgs 7/5/2021 18:48:14'!
test04
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	!

!classRemoval: #Jugador stamp: 'sgs 7/5/2021 18:48:21'!
Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!methodRemoval: RondaDeTruco #agregarJugador: stamp: 'sgs 7/5/2021 18:48:28'!
agregarJugador: unJugador
	
	
	(cantidadDeJugadores = 2) ifTrue: [^ self error: self noSePuedeAgregarALaRondaMasDeDosJugadores .].
	
	cantidadDeJugadores _ cantidadDeJugadores + 1.!

!methodRemoval: RondaDeTruco #cantidadDeJugadoresInsuficienteParaJugar stamp: 'sgs 7/5/2021 18:48:51'!
cantidadDeJugadoresInsuficienteParaJugar
	
	^'No puedo jugar, falta agregar jugador'!

!methodRemoval: RondaDeTruco #initializarEstado stamp: 'sgs 7/5/2021 18:49:03'!
initializarEstado

	^ estado _  #JugadorA!

!methodRemoval: RondaDeTruco #noSePuedeAgregarALaRondaMasDeDosJugadores stamp: 'sgs 7/5/2021 18:49:07'!
noSePuedeAgregarALaRondaMasDeDosJugadores
	
	^'No se puede agregar m�s jugadores'!

!methodRemoval: RondaDeTruco class #initialize stamp: 'sgs 7/5/2021 18:49:27'!
initialize
	
	^ self new initialize.!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:49:40' prior: 50908279!
enfrentarJugadores
	
	! !
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 18:50:01' prior: 50908377 overrides: 16896425!
initialize
	
	self 
		initializarCantidadDeJugadores.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:50:33'!
test01
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test01n stamp: 'sgs 7/5/2021 18:50:33'!
test01n
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:51:07'!
test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test01 stamp: 'sgs 7/5/2021 18:51:16'!
test01
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidaDejugadores equals: 2.
	
	
	
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:51:47' prior: 50908546!
test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidadDeJugadores equals: 2.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:53:04'!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidadDeJugadores equals: 2.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:54:37' prior: 50908571!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:54:54'!
cantidadDeCartasDeMano
	 ^ 3.
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:55:01'!
cantidadDeCartasDePie
	 ^ 3.
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:58:30'!
test03LasCartasDeManoSonDistintasALasCartasDePie

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	"
	self assert: (rondaDeTruco cantidadDeCartasDeMano equals: 3).
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	"
	
	
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 18:58:54'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cantidadDeJugadores estado mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:58:51' prior: 50908592!
cantidadDeCartasDeMano
	 
	^ mano size.
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 18:59:18'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cantidadDeJugadores estado cartasDeMano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:59:18' prior: 50908620!
cantidadDeCartasDeMano
	 
	^ cartasDeMano size.
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 18:59:48'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'cantidadDeJugadores estado cartasDeMano cartasDePie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 18:59:46' prior: 50908596!
cantidadDeCartasDePie
	 
	^ cartasDePie size.
	! !
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 19:01:11' prior: 50908527 overrides: 16896425!
initialize
	
	cartasDeMano _ OrderedCollection new.
	cartasDePie _ OrderedCollection new.
	
	self repartirCartas.! !
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 19:01:20'!
repartirCartas

	! !

!methodRemoval: RondaDeTruco #initializarCantidadDeJugadores stamp: 'sgs 7/5/2021 19:01:26'!
initializarCantidadDeJugadores

	cantidadDeJugadores _ 2.!
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 19:04:59' prior: 50908660!
repartirCartas
	
	self asignarCartas: cartasDeMano. 
	self asignarCartas: cartasDePie.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:41:55' prior: 50908600!
test03LasCartasDeManoSonDistintasALasCartasDePie

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano.
	
	rondaDeTruco repartirCartaALaMano:CartaDeTruco initializePalo: #basto numero: 2. 
	rondaDeTruco repartirCartaALaMano: CartaDeTruco initializePalo: #copa numero: 3. 


	rondaDeTruco repartirCartaALaMano:CartaDeTruco initializePalo: #oro numero: 5. 
	rondaDeTruco repartirCartaAlPie: CartaDeTruco initializePalo: #espada numero: 12.
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:42:46'!
repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco
	
	rondaDeTruco repartirCartaALaMano:CartaDeTruco initializePalo: #basto numero: 2. 
	rondaDeTruco repartirCartaALaMano: CartaDeTruco initializePalo: #copa numero: 3. 
	rondaDeTruco repartirCartaALaMano: CartaDeTruco initializePalo: #oro numero: 3. 

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:44:04' prior: 50908581!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:45:04'!
repartirCartaALaMano: unaCarta

	 cartasDeMano add: unaCarta.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:47:33' prior: 50908675!
test03LasCartasDeManoSonDistintasALasCartasDePie

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano.
	
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:47:46' prior: 50908726!
test03LasCartasDeManoSonDistintasALasCartasDePie

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:48:27' prior: 50908694!
repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco
	
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco initializePalo: #basto numero: 2). 
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco initializePalo: #copa numero: 3). 
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco initializePalo: #oro numero: 3). 

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:52:40'!
test03NoPuedenTenerCartasEnComun

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:58:43'!
tiradaDeCasrtasParaLaMano
	
	| tiradaDeCartas |
	tiradaDeCartas _ OrderedCollection.
	
	tiradaDeCartas add: (CartaDeTruco initializePalo: #basto numero: 2).
	tiradaDeCartas add:(CartaDeTruco initializePalo: #copa numero: 3).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #oro numero: 3). 

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:58:52' prior: 50908769!
tiradaDeCasrtasParaLaMano
	
	| tiradaDeCartas |
	tiradaDeCartas _ OrderedCollection.
	
	tiradaDeCartas add: (CartaDeTruco initializePalo: #basto numero: 2).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #copa numero: 3).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #oro numero: 3). 

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 19:59:20' prior: 50908782!
tiradaDeCasrtasParaLaMano
	
	| tiradaDeCartas |
	tiradaDeCartas _ OrderedCollection.
	
	tiradaDeCartas add: (CartaDeTruco initializePalo: #basto numero: 2).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #copa numero: 3).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #oro numero: 3). 

	^tiradaDeCartas .
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:00:58' prior: 50908707!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	rondaDeTruco asignarCartasALaMano: self tiradaDeCasrtasParaLaMano.
	
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:04:30'!
asignarCartasALaMano: conjuntoDeCartas

	conjuntoDeCartas do:[:unaCarta | cartasDeMano add: unaCarta ].	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:10:35' prior: 50908809!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	rondaDeTruco asignarCartasALaMano: self tiradaDeCasrtasParaLaMano.
	rondaDeTruco asignarCartasALPie: self tiradaDeCasrtasParaLaMano.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:10:43' prior: 50908829!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	rondaDeTruco asignarCartasALaMano: self tiradaDeCasrtasParaLaMano.
	rondaDeTruco asignarCartasALPie: self tiradaDeCasrtasParaElPie.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:12:34'!
tiradaDeCasrtasParaElPie
	
	| tiradaDeCartas |
	tiradaDeCartas _ OrderedCollection.
	
	tiradaDeCartas add: (CartaDeTruco initializePalo: #copa numero: 2).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #espada numero: 10).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #oro numero: 1). 

	^tiradaDeCartas .
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:13:56'!
repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco
	
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco initializePalo:  #copa numero: 2).
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco initializePalo: #espada numero: 10).
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco initializePalo: #oro numero: 1). 
	
	! !

!methodRemoval: RondaDeTrucoTest #tiradaDeCasrtasParaElPie stamp: 'sgs 7/5/2021 20:14:02'!
tiradaDeCasrtasParaElPie
	
	| tiradaDeCartas |
	tiradaDeCartas _ OrderedCollection.
	
	tiradaDeCartas add: (CartaDeTruco initializePalo: #copa numero: 2).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #espada numero: 10).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #oro numero: 1). 

	^tiradaDeCartas .
	!

!methodRemoval: RondaDeTrucoTest #tiradaDeCasrtasParaLaMano stamp: 'sgs 7/5/2021 20:14:08'!
tiradaDeCasrtasParaLaMano
	
	| tiradaDeCartas |
	tiradaDeCartas _ OrderedCollection.
	
	tiradaDeCartas add: (CartaDeTruco initializePalo: #basto numero: 2).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #copa numero: 3).
	tiradaDeCartas add: (CartaDeTruco initializePalo: #oro numero: 3). 

	^tiradaDeCartas .
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:14:59' prior: 50908845!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:15:29'!
ERROR!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:15:29'!
ERROR!

!testRun: #RondaDeTrucoTest #test03LasCartasDeManoSonDistintasALasCartasDePie stamp: 'sgs 7/5/2021 20:15:29'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:15:29'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:15:39'!
ERROR!
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 20:16:08' prior: 50908654 overrides: 16896425!
initialize
	
	cartasDeMano _ OrderedCollection new.
	cartasDePie _ OrderedCollection new.
	! !

!methodRemoval: RondaDeTruco #repartirCartas stamp: 'sgs 7/5/2021 20:16:20'!
repartirCartas
	
	self asignarCartas: cartasDeMano. 
	self asignarCartas: cartasDePie.!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:19:44'!
repartirCartaALPie: unaCarta

	 cartasDePie add: unaCarta.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:21:14' prior: 50908761!
test03NoPuedenTenerCartasEnComun

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALPie: (CartaDeTruco initializePalo: #basto numero: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: RondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:21:24'!
losJugadoresNoPuedenTenerCartasIguales! !

!methodRemoval: RondaDeTrucoTest #test03LasCartasDeManoSonDistintasALasCartasDePie stamp: 'sgs 7/5/2021 20:21:40'!
test03LasCartasDeManoSonDistintasALasCartasDePie

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	
	
	!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:27:44' prior: 50908957!
repartirCartaALPie: unaCarta

	
	(cartasDeMano includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	cartasDePie add: unaCarta.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:28:01'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:28:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:28:01'!
ERROR!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:28:04'!
ERROR!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'sgs 7/5/2021 20:28:36'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'sgs 7/5/2021 20:28:37'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'sgs 7/5/2021 20:28:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:28:37'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:28:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:28:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:29:00'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:29:41' prior: 50908562!
test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self assert: 2 equals: rondaDeTruco cantidadDeJugadores.
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:29:48' prior: 50908437!
cantidadDeJugadores
	
	^ 2 ! !

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'sgs 7/5/2021 20:29:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'sgs 7/5/2021 20:29:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'sgs 7/5/2021 20:29:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'sgs 7/5/2021 20:29:54'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'sgs 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:29:54'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:29:54'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:29:54'!
ERROR!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:30:00'!
ERROR!

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:31:30'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:31:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:31:30'!
ERROR!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:31:33'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:33:18' prior: 50908748!
repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco
	
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco bastoCon:  2). 
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco copaCon: 3). 
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 3). 

	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:33:44' prior: 50908873!
repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco
	
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco copaCon: 2).
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco espadaCon: 10).
	rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 1). 
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:33:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:33:49'!
FAILURE!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:33:49'!
ERROR!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:33:52'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:34:33' prior: 50909219!
repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco
	
	rondaDeTruco repartirCartaALPie: (CartaDeTruco copaCon: 2).
	rondaDeTruco repartirCartaALPie: (CartaDeTruco espadaCon: 10).
	rondaDeTruco repartirCartaALPie: (CartaDeTruco oroCon: 1). 
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:35:08'!
repartirCartaAlPie: unaCarta

	
	(cartasDeMano includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	cartasDePie add: unaCarta.! !

!methodRemoval: RondaDeTruco #repartirCartaALPie: stamp: 'sgs 7/5/2021 20:35:08'!
repartirCartaALPie: unaCarta

	
	(cartasDeMano includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	cartasDePie add: unaCarta.!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:35:34' prior: 50909245!
repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco
	
	rondaDeTruco repartirCartaAlPie: (CartaDeTruco copaCon: 2).
	rondaDeTruco repartirCartaAlPie: (CartaDeTruco espadaCon: 10).
	rondaDeTruco repartirCartaAlPie: (CartaDeTruco oroCon: 1). 
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:35:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:35:39'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:35:39'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:35:39'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:35:50' prior: 50908963!
test03NoPuedenTenerCartasEnComun

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco initializePalo: #basto numero: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: RondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:35:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:35:59'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:35:59'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:35:59'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:36:14' prior: 50909298!
test03NoPuedenTenerCartasEnComun

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: RondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:36:17'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:36:17'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:37:06' prior: 50908980!
losJugadoresNoPuedenTenerCartasIguales
	^'Solo jugamos con un maso, por lo tanto los jugadores no pueden tener cartas iguales.'! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:37:22' prior: 50909330!
test03NoPuedenTenerCartasEnComun

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:37:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:37:26'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:37:26'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:38:03'!
test03NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test03NoPuedenTenerCartasEnComun stamp: 'sgs 7/5/2021 20:38:07'!
test03NoPuedenTenerCartasEnComun

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:38:47'!
test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:38:58' prior: 50909421!
test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:39:01' prior: 50909439!
test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 		1).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:39:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:39:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:39:09'!
PASSED!

!testRun: #RondaDeTrucoTest #test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:39:09'!
FAILURE!

!testRun: #RondaDeTrucoTest #test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:39:09'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:40:09' prior: 50908720!
repartirCartaALaMano: unaCarta

	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:40:24'!
PASSED!

!testRun: #RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:40:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:40:25'!
PASSED!

!testRun: #RondaDeTrucoTest #test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:40:25'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:42:22' prior: 50909457!
test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie
	| rondaDeTruco |
	"No asigne un  orden para repartir porque no lo pide en el enunciado, por eso es que puedo testear esto, sin necesidad de haber rapartido primero alguna de la mano."
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 		1).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:43:20'!
test04CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:43:32'!
test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test03NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:43:32'!
test03NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:43:41'!
test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie
	| rondaDeTruco |
	"No asigne un  orden para repartir porque no lo pide en el enunciado, por eso es que puedo testear esto, sin necesidad de haber rapartido primero alguna de la mano."
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 		1).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:43:41'!
test04NoSePuedenRepartirleALaManoCartasQueYaTieneElPie
	| rondaDeTruco |
	"No asigne un  orden para repartir porque no lo pide en el enunciado, por eso es que puedo testear esto, sin necesidad de haber rapartido primero alguna de la mano."
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco oroCon: 		1).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	!

!methodRemoval: RondaDeTrucoTest #test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:43:49'!
test02CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:45:48'!
test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	! !

!methodRemoval: RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres stamp: 'sgs 7/5/2021 20:46:01'!
test04CantidadDeCartasConLasQueEmpiezaCadaJugadorEsTres


	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
		
	self assert: rondaDeTruco cantidadDeCartasDeMano equals: 3.
	self assert: rondaDeTruco cantidadDeCartasDePie equals: 3.
	
	
	
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:46:41' prior: 50909651!
test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:47:51' prior: 50909682!
test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self 
		should: [rondaDeTruco jugarRonda. ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:47:59'!
noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:48:21' prior: 50909705!
noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador

	^ 'Aun quedan cartas por repartir.'	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:48:32'!
jugarRonda
	
	! !

!methodRemoval: RondaDeTruco #enfrentarJugadores stamp: 'sgs 7/5/2021 20:48:32'!
enfrentarJugadores
	
	!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:48:47' prior: 50909717!
jugarRonda
	
	^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador 
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:48:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:48:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:48:50'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 20:48:50'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:50:38'!
test05NoSePudeRepartirALaManoMasDeTresCartas

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self 
		should: [rondaDeTruco jugarRonda. ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:51:16' prior: 50909746!
test05NoSePudeRepartirALaManoMasDeTresCartas

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaALaMano: (CartaDeTruco espadaCon: 11).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:51:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:51:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:51:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 20:51:22'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:51:22'!
FAILURE!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:51:22'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:52:14' prior: 50909494!
repartirCartaALaMano: unaCarta

	(cartasDeMano > 3) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:52:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:52:17'!
ERROR!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:52:17'!
ERROR!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 20:52:17'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:52:17'!
ERROR!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:52:23'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:52:42' prior: 50909802!
repartirCartaALaMano: unaCarta

	(cartasDeMano size > 3) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:52:43' prior: 50909837!
repartirCartaALaMano: unaCarta

	(cartasDeMano size > 3) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:52:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:52:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:52:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 20:52:47'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:52:47'!
FAILURE!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:52:47'!
FAILURE!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:53:28' prior: 50909849!
repartirCartaALaMano: unaCarta

	(cartasDeMano size > 2) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:53:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:53:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:53:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 20:53:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:53:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:54:05'!
test06NoSePudeRepartirAlPieMasDeTresCartas

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco espadaCon: 11).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:55:01' prior: 50909256!
repartirCartaAlPie: unaCarta

	(cartasDeMano size > 2) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDeMano includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	cartasDePie add: unaCarta.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:55:05' prior: 50909933!
repartirCartaAlPie: unaCarta

	(cartasDePie size > 2) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDeMano includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	cartasDePie add: unaCarta.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 20:55:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 20:55:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 20:55:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 20:55:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 20:55:15'!
PASSED!

!testRun: #RondaDeTrucoTest #test06NoSePudeRepartirAlPieMasDeTresCartas stamp: 'sgs 7/5/2021 20:55:15'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 20:59:03'!
test07ElPieNoPuedeEmpezarAJugar
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco espadaCon: 11).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:01:16' prior: 50909979!
test07ElPieNoPuedeEmpezarAJugar
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	
	self 
		should: [rondaDeTruco enfrentar: #Pie con: (CartaDeTruco espadaCon: 11) contra:#Mano con:(CartaDeTruco espadaCon: 11) ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:09:37' prior: 50909997!
test07ElPieNoPuedeEmpezarAJugar
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	
	self 
		should: [rondaDeTruco enfrentarManoCon: (CartaDeTruco espadaCon: 11) contraPieCon:(CartaDeTruco espadaCon: 11) ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:16:55' prior: 50910018!
test07ElPieNoPuedeEmpezarAJugar
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	
	self 
		should: [rondaDeTruco enfrentarManoCon: self unaCartaDeLaMano contraPieCon: self unaCartaDelPie.]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:17:17'!
unaCartaDeLaMano
	CartaDeTruco bastoCon:  2! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:17:20' prior: 50910059!
unaCartaDeLaMano
	^CartaDeTruco bastoCon:  2! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:17:41'!
unaCartaDelPie
	^CartaDeTruco copaCon: 2! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:18:41'!
enfrentarManoCon: unaCartaDeLaMano contraPieCon: unaCartaDelPie
! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:23:27' prior: 50910039!
test07ElPieNoPuedeEmpezarAJugar
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	
	self 
		should: [rondaDeTruco jugaPieCon: self unaCartaDelPie.]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noPuedeComenzarAJugarPieAlComienzoDeLaRonda equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:23:54'!
noPuedeComenzarAJugarPieAlComienzoDeLaRonda

	^ 'El pie no puede comenzar a jugar al comienzo de la ronda.'	
	! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:25:15' prior: 50909884!
repartirCartaALaMano: unaCarta
"Tengo que sacar este codigo repetido que tambi�n aparece en el pie"
	(cartasDeMano size > 2) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:25:27' prior: 50910079!
test07ElPieNoPuedeEmpezarAJugar
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	self repartirUnConjuntoDeCartasValidoAlPie: rondaDeTruco.
	
	self 
		should: [rondaDeTruco jugaPieCon: self unaCartaDelPie.]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noPuedeComenzarAJugarPieAlComienzoDeLaRonda equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !

!methodRemoval: RondaDeTruco #jugarRonda stamp: 'sgs 7/5/2021 21:26:20'!
jugarRonda
	
	^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador 
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:26:52' prior: 50909690!
test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres

	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self 
		should: [rondaDeTruco  jugaManoCon: self unaCartaDeLaMano. ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador equals: anError messageText.
			 ]
	
	
	
	
	
	
	! !

----SNAPSHOT----(5 July 2021 21:27:14) CuisUniversity-4532.image priorSource: 18389914!

!methodRemoval: RondaDeTruco #enfrentarManoCon:contraPieCon: stamp: 'sgs 7/5/2021 21:27:25'!
enfrentarManoCon: unaCartaDeLaMano contraPieCon: unaCartaDelPie
!

!methodRemoval: RondaDeTruco #asignarCartasALaMano: stamp: 'sgs 7/5/2021 21:28:24'!
asignarCartasALaMano: conjuntoDeCartas

	conjuntoDeCartas do:[:unaCarta | cartasDeMano add: unaCarta ].	!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:31:19'!
jugaPieCon:  unaCarta

	^self error: self noPuedeComenzarAJugarPieAlComienzoDeLaRonda.! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 21:31:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 21:31:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 21:31:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:31:23'!
ERROR!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 21:31:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test06NoSePudeRepartirAlPieMasDeTresCartas stamp: 'sgs 7/5/2021 21:31:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ElPieNoPuedeEmpezarAJugar stamp: 'sgs 7/5/2021 21:31:23'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:31:23'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'sgs 7/5/2021 21:31:42'!
jugaManoCon:  unaCarta
! !
!RondaDeTrucoTest methodsFor: 'cartas de cada jugador' stamp: 'sgs 7/5/2021 21:35:12' prior: 50910064!
unaCartaDeLaMano
	
	^CartaDeTruco bastoCon:  2! !
!RondaDeTrucoTest methodsFor: 'cartas de cada jugador' stamp: 'sgs 7/5/2021 21:35:15' prior: 50910069!
unaCartaDelPie
	
	^CartaDeTruco copaCon: 2! !
!RondaDeTruco methodsFor: 'initializacion' stamp: 'sgs 7/5/2021 21:37:11' prior: 50908946 overrides: 16896425!
initialize
	
	cartasDeMano _ OrderedCollection new.
	cartasDePie _ OrderedCollection new.
	estado _ #Mano
	 
	! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 21:37:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 21:37:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 21:37:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:37:34'!
FAILURE!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 21:37:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test06NoSePudeRepartirAlPieMasDeTresCartas stamp: 'sgs 7/5/2021 21:37:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ElPieNoPuedeEmpezarAJugar stamp: 'sgs 7/5/2021 21:37:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:37:34'!
FAILURE!

Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Jugador category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 21:41:35'!
Object subclass: #Jugador
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Jugador subclass: #Mano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Mano category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 21:41:47'!
Jugador subclass: #Mano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

Jugador subclass: #Pie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Pie category: 'ISW1-2021-1C-2doParcial' stamp: 'sgs 7/5/2021 21:41:51'!
Jugador subclass: #Pie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRenamed: #Jugador as: #JugadorDeTruco stamp: 'sgs 7/5/2021 21:42:03'!
Smalltalk renameClassNamed: #Jugador as: #JugadorDeTruco!
!RondaDeTrucoTest methodsFor: 'test' stamp: 'sgs 7/5/2021 21:44:15' prior: 50909555!
test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano
	| rondaDeTruco |
	
	rondaDeTruco _  RondaDeTruco crearRonda.
	
	self repartirUnConjuntoDeCartasValidoALaMano: rondaDeTruco.
	
	self 
		should: [rondaDeTruco repartirCartaAlPie: (CartaDeTruco bastoCon: 2).  ]
		raise: Error -MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: rondaDeTruco losJugadoresNoPuedenTenerCartasIguales equals: anError messageText.
			 ]
	
	
	
	! !

!classRemoval: #Mano stamp: 'sgs 7/5/2021 21:44:41'!
JugadorDeTruco subclass: #Mano
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #Pie stamp: 'sgs 7/5/2021 21:44:42'!
JugadorDeTruco subclass: #Pie
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classRemoval: #JugadorDeTruco stamp: 'sgs 7/5/2021 21:44:42'!
Object subclass: #JugadorDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'repartir cartas' stamp: 'sgs 7/5/2021 21:50:37' prior: 50910104!
repartirCartaALaMano: unaCarta
"Tengo que sacar este codigo repetido que tambi�n aparece en el pie, probablemente tenga que crear la clase JugadorDeTruco y las subclases Pie y Mano para poder sacar el codigo repetido y hacer doble dispach"
	(cartasDeMano size > 2) ifTrue: [^self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador ].
	(cartasDePie includes: unaCarta) ifTrue: [^self error: self losJugadoresNoPuedenTenerCartasIguales].
	 cartasDeMano add: unaCarta.! !

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'sgs 7/5/2021 21:52:30'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInv�lida stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:52:31'!
FAILURE!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06NoSePudeRepartirAlPieMasDeTresCartas stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ElPieNoPuedeEmpezarAJugar stamp: 'sgs 7/5/2021 21:52:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:52:31'!
FAILURE!
!RondaDeTruco methodsFor: 'jugar' stamp: 'sgs 7/5/2021 21:52:53' prior: 50910207!
jugaManoCon:  unaCarta
	^ self error: self noSePuedeComenzarAJugarSinAntesRepartirtTresCartasACadaJugador
! !

!testRun: #RondaDeTrucoTest #test01CantidadDeJugadoresDeUnaRondaDeTrucoEsDos stamp: 'sgs 7/5/2021 21:52:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedenRepartirleAlPieCartasQueYaTieneLaMano stamp: 'sgs 7/5/2021 21:52:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test03NoSePuedenRepartirleALaManoCartasQueYaTieneElPie stamp: 'sgs 7/5/2021 21:52:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test04CantidadDeCartasConLasQueEmpiezaAJugarEsTres stamp: 'sgs 7/5/2021 21:52:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePudeRepartirALaManoMasDeTresCartas stamp: 'sgs 7/5/2021 21:52:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test06NoSePudeRepartirAlPieMasDeTresCartas stamp: 'sgs 7/5/2021 21:52:57'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ElPieNoPuedeEmpezarAJugar stamp: 'sgs 7/5/2021 21:52:57'!
PASSED!

----SNAPSHOT----(5 July 2021 21:53:07) CuisUniversity-4532.image priorSource: 18512238!