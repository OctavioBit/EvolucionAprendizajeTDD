
----End fileIn of C:\Users\jampuero\Downloads\ISW1-2021-1C-2doParcial.st----!

Object subclass: #JugadorDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #JugadorDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 17:45:40'!
Object subclass: #JugadorDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

TestCase subclass: #JugadorDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #JugadorDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 17:45:54'!
TestCase subclass: #JugadorDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!JugadorDeTrucoTest methodsFor: 'no messages' stamp: 'ja 7/5/2021 17:46:01'!
test01! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:46:39'!
test01NoSePuedeCrearUnJugadorSinCartas! !

CustomTemplate new yourself; templateErrorMessage.!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:49:00' prior: 50869974!
test01NoSePuedeCrearUnJugadorSinCartas

	self should: [ JugadorDeTruco with: OrderedCollection new]
		raise: Error
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco ].! !

!methodRemoval: JugadorDeTrucoTest #test01 stamp: 'ja 7/5/2021 17:49:04'!
test01!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:49:30' prior: 50869981!
test01NoSePuedeCrearUnJugadorSinCartas

	self should: [ JugadorDeTruco with: OrderedCollection new]
		raise: Error
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco noSePuedeCrearUnJugadorSinCartasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:54:19' prior: 50869994!
test01NoSePuedeCrearUnJugadorSinCartas

	self should: [ JugadorDeTruco conCartas: OrderedCollection new]
		raise: Error
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco noSePuedeCrearUnJugadorSinCartasErrorDescription].! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 17:54:37'!
ERROR!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:54:51' prior: 50870006!
test01NoSePuedeCrearUnJugadorSinCartas

	self should: [ JugadorDeTruco conCartas: OrderedCollection new]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco noSePuedeCrearUnJugadorSinCartasErrorDescription].! !

CustomTemplate new yourself; templateErrorMessage.!
!CustomTemplate methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:55:28' prior: 50867235!
templateErrorMessage
	
	^'self should: [ ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: ].'! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 17:55:50'!
ERROR!
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 17:56:01'!
conCartas: anOrderedCollection 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeConCartas: anOrderedCollection ! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 17:56:35' prior: 50870047!
conCartas: unaColeccionDeCartas 
	
	^self new initializeCon: unaColeccionDeCartas ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 17:56:46'!
ERROR!

!classDefinition: #JugadorDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 17:56:55'!
Object subclass: #JugadorDeTruco
	instanceVariableNames: 'unaColeccionDeCartas_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 17:56:55'!
initializeCon: unaColeccionDeCartas 
	self shouldBeImplemented.
	unaColeccionDeCartas_CHANGE_ME := unaColeccionDeCartas.! !

!classDefinition: #JugadorDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 17:57:15'!
Object subclass: #JugadorDeTruco
	instanceVariableNames: 'unaColeccionDeCartas_CHANGE_ME cartas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 17:57:13' prior: 50870074!
initializeCon: unaColeccionDeCartas 
	
	cartas := unaColeccionDeCartas.! !

Object subclass: #JugadorDeTruco
	instanceVariableNames: 'cartas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #JugadorDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 17:57:31'!
Object subclass: #JugadorDeTruco
	instanceVariableNames: 'cartas'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 17:58:09' prior: 50870056!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	^self new initializeCon: unaColeccionDeCartas ! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 17:58:12' prior: 50870109!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 17:58:22'!
ERROR!
!JugadorDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 17:58:36'!
noSePuedeCrearUnJugadorSinCartasErrorDescription
	self shouldBeImplemented.! !


errorMessage _ CustomStringParserToErrorMessage toParse: 
'noSePuedeCrearUnJugadorSinCartasErrorDescription'.
errorMessage parse.!
!JugadorDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 17:58:59' prior: 50870130!
noSePuedeCrearUnJugadorSinCartasErrorDescription
	
	^  'No se puede crear un jugador sin cartas.' ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 17:59:00'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 17:59:00'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 17:59:42'!
test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3

	self should: [ JugadorDeTruco conCartas: OrderedCollection new]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco noSePuedeCrearUnJugadorSinCartasErrorDescription].! !

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 18:01:05'!
ERROR!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInvï¿½lida stamp: 'ja 7/5/2021 18:01:05'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 18:01:05'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:01:15' prior: 50870153!
test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3

	! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3 stamp: 'ja 7/5/2021 18:01:17'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ja 7/5/2021 18:01:20'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInvï¿½lida stamp: 'ja 7/5/2021 18:01:20'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:06:09' prior: 50870234!
test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco noSePuedeCrearUnJugadorSinCartasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:06:34' prior: 50870308!
test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3 stamp: 'ja 7/5/2021 18:06:36'!
FAILURE!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:07:56'!
test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!methodRemoval: JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3 stamp: 'ja 7/5/2021 18:07:56'!
test02NoSePuedeCrearJugadorConUnaCantidadeMenorA3

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:08:01'!
FAILURE!
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:08:32' prior: 50870118!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	unaColeccionDeCartas size < 3: [self error: self cantidadDeCartasInvalidasErrorDescription]
	
	^self new initializeCon: unaColeccionDeCartas ! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:08:35' prior: 50870387!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	unaColeccionDeCartas size < 3: [self error: self cantidadDeCartasInvalidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !

errorMessage _ CustomStringParserToErrorMessage toParse: 
'cantidadDeCartasInvalidasErrorDescription'.
errorMessage parse.!
!JugadorDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 18:09:38'!
cantidadDeCartasInvalidasErrorDescription
	
	^   'Cantidad de cartas invalidas.' ! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:09:55'!
ERROR!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:10:09'!
ERROR!
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:10:37' prior: 50870399!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	unaColeccionDeCartas size < 3 ifTrue: [self error: self cantidadDeCartasInvalidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:10:53' prior: 50870429!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	(unaColeccionDeCartas size < 3) ifTrue: [self error: self cantidadDeCartasInvalidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:10:59'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:10:59'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:10:59'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:12:07' prior: 50870347!
test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:12:32' prior: 50870466!
test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: sieteDeEspada with: sieteDeOro) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:13:14'!
FAILURE!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:12:07' prior: 50870487!
test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:13:28'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:13:28'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:13:28'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:13:32'!
test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:13:50' prior: 50870514!
test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada|
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:13:53' prior: 50870567!
test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:13:54'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:13:54'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:13:54'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:13:54'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:14:06' prior: 50870546!
test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: sieteDeEspada with: sieteDeOro) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:14:07'!
FAILURE!
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:14:40' prior: 50870442!
conCartas: unaColeccionDeCartas 
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	((unaColeccionDeCartas size < 3) or:[unaColeccionDeCartas size > 3]) ifTrue: [self error: self cantidadDeCartasInvalidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:14:44'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:14:44'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:14:44'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:14:44'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:15:30'!
test03NoSePuedeCrearJugadorConCartasRepetidas

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:16:59'!
test04NoSePuedeCrearJugadorConCartasRepetidas

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!methodRemoval: JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:16:59'!
test03NoSePuedeCrearJugadorConCartasRepetidas

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:17:09'!
test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: sieteDeEspada with: sieteDeOro) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].! !

!methodRemoval: JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:17:09'!
test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3

	| anchoDeBasto anchoDeEspada sieteDeEspada sieteDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	sieteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeOro _ CartaDeTruco oroCon: 7.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: sieteDeEspada with: sieteDeOro) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cantidadDeCartasInvalidasErrorDescription].!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:17:23'!
FAILURE!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:19:26' prior: 50870692!
test04NoSePuedeCrearJugadorConCartasRepetidas

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cartasRepetidasErrorDescription].! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:19:38' prior: 50870645!
conCartas: unaColeccionDeCartas 
	
	| posiblesCartasRepetidas |
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	((unaColeccionDeCartas size < 3) or:[unaColeccionDeCartas size > 3]) ifTrue: [self error: self cantidadDeCartasInvalidasErrorDescription].
	
	posiblesCartasRepetidas _ unaColeccionDeCartas select:[:unaCarta | unaColeccionDeCartas occurrencesOf: unaCarta > 1].
	posiblesCartasRepetidas ifNotEmpty: [self error: self cartasRepetidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !

errorMessage _ CustomStringParserToErrorMessage toParse: 
'cartasRepetidasErrorDescription'.
errorMessage parse. !
!JugadorDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 18:20:28'!
cartasRepetidasErrorDescription
	
	^  'Cartas repetidas.' ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:20:39'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:20:39'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 18:20:39'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:20:39'!
ERROR!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:20:39'!
ERROR!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:21:09'!
ERROR!
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:21:38' prior: 50870795!
conCartas: unaColeccionDeCartas 
	
	| posiblesCartasRepetidas |
	
	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	((unaColeccionDeCartas size < 3) or:[unaColeccionDeCartas size > 3]) ifTrue: [self error: self cantidadDeCartasInvalidasErrorDescription].
	
	posiblesCartasRepetidas _ unaColeccionDeCartas select:[:unaCarta | (unaColeccionDeCartas occurrencesOf: unaCarta) > 1].
	posiblesCartasRepetidas ifNotEmpty: [self error: self cartasRepetidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:21:42'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:21:42'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 18:21:42'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:21:42'!
PASSED!
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:23:59'!
test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas

	| anchoDeBasto anchoDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.

	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cartasRepetidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:24:26' prior: 50870884!
test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas

	| anchoDeBasto anchoDeEspada siesteDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: anchoDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cartasRepetidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:24:34' prior: 50870902!
test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas

	| anchoDeBasto anchoDeEspada siesteDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	self should: [ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada) ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: JugadorDeTruco cartasRepetidasErrorDescription].! !
!JugadorDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:26:25' prior: 50870922!
test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	
	self assert: jugadorDeTruco primerCarta = anchoDeBasto.
	self assert: jugadorDeTruco segundaCarta = anchoDeEspada.
	self assert: jugadorDeTruco tercerCarta = siesteDeEspada.! !

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 18:27:27'!
ERROR!
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 18:28:09'!
primerCarta

	^ cartas first.! !
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 18:28:21'!
segundaCarta

	^ cartas second .! !
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 18:28:28'!
tercerCarta

	^ cartas third .! !

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 18:28:33'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:28:33'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:28:33'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 18:28:33'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:28:33'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 18:28:33'!
PASSED!

TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTrucoTest category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 18:30:26'!
TestCase subclass: #RondaDeTrucoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

CustomTemplate new yourself; templateErrorMessage. !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 18:36:12'!
Object subclass: #RondaDeTruco
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTrucoTest methodsFor: 'no messages' stamp: 'ja 7/5/2021 18:36:33'!
test01SePuedeCrearUnaRondaDeTrucoSoloParaJugadoresDeTruco

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	
	 self should: [ RondaDeTruco conMano: jugadorDeTruco yPie: #X]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 18:36:41'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 18:36:41'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 18:36:41'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 18:36:41'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 18:36:41'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:37:18'!
test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	
	 self should: [ RondaDeTruco conMano: jugadorDeTruco yPie: #X]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !

!methodRemoval: RondaDeTrucoTest #test01SePuedeCrearUnaRondaDeTrucoSoloParaJugadoresDeTruco stamp: 'ja 7/5/2021 18:37:18'!
test01SePuedeCrearUnaRondaDeTrucoSoloParaJugadoresDeTruco

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	
	 self should: [ RondaDeTruco conMano: jugadorDeTruco yPie: #X]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:37:26'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:37:30'!
conMano: aJugadorDeTruco yPie: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeConMano: aJugadorDeTruco yPie: aSymbol ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:39:07' prior: 50871113!
conMano: unJugadorMano yPie: unJugadorPie
	
	(unJugadorPie isKindOf: JugadorDeTruco ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:39:14'!
ERROR!
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:39:23'!
jugadorInvalidoErrorDescription
	self shouldBeImplemented.! !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:39:33' prior: 50871137!
jugadorInvalidoErrorDescription
	
	^ 'Jugador invalido'! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:39:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:39:34'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:39:59'!
test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	
	 self should: [ RondaDeTruco conMano: #X yPie: jugadorDeTruco]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:40:01'!
ERROR!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:40:52' prior: 50871123!
conMano: unJugadorMano yPie: unJugadorPie
	
	((unJugadorPie isKindOf: JugadorDeTruco) or:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:41:02' prior: 50871183!
conMano: unJugadorMano yPie: unJugadorPie
	
	((unJugadorPie isKindOf: JugadorDeTruco) 
	or:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:41:08'!
ERROR!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 18:41:47'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 18:41:50'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'no messages' stamp: 'ja 7/5/2021 18:41:45'!
initializeConMano: unJugadorMano yPie: unJugadorPie 

	mano _ unJugadorMano.
	pie _ unJugadorPie ! !

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:42:02'!
FAILURE!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:42:43'!
FAILURE!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:42:43'!
FAILURE!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:43:18'!
FAILURE!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:44:08' prior: 50871195!
conMano: unJugadorMano yPie: unJugadorPie
	
	((unJugadorPie isKindOf: JugadorDeTruco) 
	and:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:44:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:44:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:44:12'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:44:12'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:46:08'!
test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	
	 self should: [ RondaDeTruco conMano: #X yPie: jugadorDeTruco]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:46:56' prior: 50871275!
test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).	
	
	 self should: [ RondaDeTruco conMano: jugadorMano yPie: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:47:26' prior: 50871298!
test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).	
	
	 self should: [ RondaDeTruco conMano: jugadorMano yPie: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]. ! !

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 18:51:08'!
FAILURE!


errorMessage _ CustomStringParserToErrorMessage toParse: 
'losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription'.
errorMessage parse. !
!RondaDeTruco class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:51:44'!
losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription
	
	^  'Los jugadores de truco no pueden tener cartas iguales.' ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:52:12' prior: 50871248!
conMano: unJugadorMano yPie: unJugadorPie
	
	((unJugadorPie isKindOf: JugadorDeTruco) 
	and:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:55:26' prior: 50871369!
conMano: unJugadorMano yPie: unJugadorPie
	
	| cartasDePie |
	((unJugadorPie isKindOf: JugadorDeTruco) 
	and:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	cartasDePie _ unJugadorPie cartas.
	unJugadorMano cartas do:[:unaCarta | (cartasDePie includes: unaCarta) ifTrue:[self error: self losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 18:55:34' prior: 50871381!
conMano: unJugadorMano yPie: unJugadorPie
	
	| cartasDePie |
	
	((unJugadorPie isKindOf: JugadorDeTruco) 
	and:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	
	cartasDePie _ unJugadorPie cartas.
	unJugadorMano cartas do:[:unaCarta | (cartasDePie includes: unaCarta) ifTrue:[self error: self losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 18:56:01'!
cartas

	^ cartas .! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:56:40' prior: 50871325!
test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).	
	
	 self should: [ RondaDeTruco conMano: jugadorMano yPie: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 18:56:47' prior: 50871422!
test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: anchoDeEspada with: siesteDeEspada).	
	
	 self should: [ RondaDeTruco conMano: jugadorMano yPie: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]. ! !

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:56:48'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:56:49'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 18:56:49'!
PASSED!
!JugadorDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 18:57:06' prior: 50871418!
cartas

	^ cartas copy.! !

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 18:57:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:57:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 18:57:11'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 18:57:11'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:17:07'!
test04JugadorManoGanaLaRonda

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda ganador |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: anchoDeEspada with: siesteDeEspada).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ganador _ ronda jugarRonda.
	self assert: ganador = jugadorMano.
	
		! !

!testRun: #RondaDeTrucoTest #test04JugadorManoGanaLaRonda stamp: 'ja 7/5/2021 19:17:29'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:18:55' prior: 50871516!
test04JugadorManoGanaLaRonda

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda ganador cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: anchoDeEspada with: siesteDeEspada).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ganador _ ronda jugarRonda.
	self assert: ganador = jugadorMano.
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:19:07' prior: 50871544!
test04JugadorManoGanaLaRonda

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda ganador cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ganador _ ronda jugarRonda.
	self assert: ganador = jugadorMano.
	
		! !

!testRun: #RondaDeTrucoTest #test04JugadorManoGanaLaRonda stamp: 'ja 7/5/2021 19:19:14'!
ERROR!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:20:18'!
jugarRonda

	! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:26:39' prior: 50871603!
jugarRonda

! !

CustomTemplate new yourself; templateErrorMessage. !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:43:35'!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda ganador cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco objectNameMustBeSymbolErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:43:53' prior: 50871612!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda ganador cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco ]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:44:03' prior: 50871647!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco ]. 
	
	
		! !

!methodRemoval: RondaDeTrucoTest #test04JugadorManoGanaLaRonda stamp: 'ja 7/5/2021 19:44:10'!
test04JugadorManoGanaLaRonda

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda ganador cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ganador _ ronda jugarRonda.
	self assert: ganador = jugadorMano.
	
		!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:44:48' prior: 50871681!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:45:11' prior: 50871742!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !

!methodRemoval: RondaDeTruco #jugarRonda stamp: 'ja 7/5/2021 19:45:50'!
jugarRonda

!
!RondaDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 19:46:19'!
jugadorNoPuedePonerMasDeUnaCartaErrorDescription
	
	^  'Jugador No Puede Poner Mas De Una Carta' ! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 19:49:35'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 19:49:41'!
Object subclass: #Enfrentamiento
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:49:30'!
juegaPrimerCarta: unJugador

	primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:50:48' prior: 50871836!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador]! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:51:50' prior: 50871842!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador].
					
	primerEnfrentamiento jugar.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:52:25' prior: 50871852!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador].
					
	^ primerEnfrentamiento jugar.! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:53:06' prior: 50871863!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador.
						^ primerEnfrentamiento jugar.].
					
	! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 19:53:25' prior: 50871874!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador.
						^ primerEnfrentamiento jugar].
					
	! !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 19:54:06'!
ERROR!
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:54:15'!
conPrimerJugador: aJugadorDeTruco 
	self shouldBeImplemented.! !
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:54:38' prior: 50871899!
conPrimerJugador: unJugadorDeTruco 
	
	^ self new initializeCon: unJugadorDeTruco ! !

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 19:55:28'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Enfrentamiento methodsFor: 'no messages' stamp: 'ja 7/5/2021 19:55:26'!
initializeCon: unJugadorDeTruco 

	primerJugador _ unJugadorDeTruco ! !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 19:55:46'!
ERROR!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:56:57'!
agregarSegundoJugador: unJugadorDeTruco

	(primerJugador  = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ]! !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 19:57:03'!
ERROR!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:57:35' prior: 50871928!
agregarSegundoJugador: unJugadorDeTruco

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ]! !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 19:59:11'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:59:43' prior: 50871777!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:59:49'!
jugadorNoPuedePonerMasDeUnaCartaErrorDescription
	
	^  'Jugador No Puede Poner Mas De Una Carta' ! !

!methodRemoval: RondaDeTruco class #jugadorNoPuedePonerMasDeUnaCartaErrorDescription stamp: 'ja 7/5/2021 20:00:10'!
jugadorNoPuedePonerMasDeUnaCartaErrorDescription
	
	^  'Jugador No Puede Poner Mas De Una Carta' !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:00:16'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:00:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:00:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:00:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:00:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:00:18'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:01:09' prior: 50871952!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 19:59:43' prior: 50872023!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:01:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:01:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:01:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:01:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:01:46'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:02:02'!
test05

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:03:28' prior: 50871885!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador].
					
	! !

!testRun: #RondaDeTrucoTest #test05 stamp: 'ja 7/5/2021 20:03:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:03:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:03:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:03:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:03:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test05 stamp: 'ja 7/5/2021 20:03:33'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:03:54' prior: 50872106!
test05

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:05:02'!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !

!methodRemoval: RondaDeTrucoTest #test05 stamp: 'ja 7/5/2021 20:05:02'!
test05

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:05:08' prior: 50872203!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:05:22' prior: 50872269!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento NoSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:05:26' prior: 50872303!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription]. 
	
	
		! !

errorMessage _ CustomStringParserToErrorMessage toParse: 
'noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription'.
errorMessage parse. !
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:06:36'!
noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription
	
	^   'No se puede jugar si solo un jugador tiro una carta.' ! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:06:55'!
jugar

	^ primerEnfrentamiento jugar.
					
	! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:07:28'!
jugar

	! !

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 20:08:23'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primerJugador segundoJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:08:21' prior: 50872389!
jugar

	primerJugador ifNil:[self error: self class noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription.].
	segundoJugador ifNil:[self error: self class noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription.]! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:08:26' prior: 50872401!
jugar

	primerJugador ifNil:[self error: self class noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription].
	segundoJugador ifNil:[self error: self class noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription.]! !

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:08:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:08:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:08:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:08:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:08:45'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:08:45'!
PASSED!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:11:03' prior: 50872411!
jugar

	(primerJugador isNil or:[ segundoJugador isNil]) ifTrue:[self error: self class noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription.]! !

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:11:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:11:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:11:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:11:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:11:06'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:11:06'!
PASSED!
!Enfrentamiento class methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:11:28'!
noSePuedeJugarErrorDescription
	
	^   'No se puede jugar si solo un jugador tiro una carta.' ! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:11:28' prior: 50872444!
jugar

	(primerJugador isNil or:[ segundoJugador isNil]) ifTrue:[self error: self class noSePuedeJugarErrorDescription.]! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:11:28' prior: 50872338!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarErrorDescription]. 
	
	
		! !

!methodRemoval: Enfrentamiento class #noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription stamp: 'ja 7/5/2021 20:11:28'!
noSePuedeJugarSiSoloUnJugadorTiroUnaCartaErrorDescription
	
	^   'No se puede jugar si solo un jugador tiro una carta.' !

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:11:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:11:31'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:15:03'!
test06ManoGanaElPrimerEnfrentamiento

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:16:14' prior: 50872553!
test06ManoGanaElPrimerEnfrentamiento

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro ganadorPrimerEnfrentamiento |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: (OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada).
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
		
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:17:00'!
cartasParaJugadorMano

	| anchoDeBasto anchoDeEspada siesteDeEspada |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:17:14' prior: 50871064!
test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	
	 self should: [ RondaDeTruco conMano: jugadorDeTruco yPie: #X]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:17:28' prior: 50872630!
test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco

	| jugadorDeTruco |
	
	jugadorDeTruco _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	
	 self should: [ RondaDeTruco conMano: jugadorDeTruco yPie: #X]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:17:33'!
PASSED!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:17:33'!
ERROR!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:17:33'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:17:48' prior: 50871156!
test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorDeTruco |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	jugadorDeTruco _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	
	 self should: [ RondaDeTruco conMano: #X yPie: jugadorDeTruco]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:17:55' prior: 50872696!
test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco

	| jugadorDeTruco |
	
	jugadorDeTruco _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	
	 self should: [ RondaDeTruco conMano: #X yPie: jugadorDeTruco]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorInvalidoErrorDescription]. ! !

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:18:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:18:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:18:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:18:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:18:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:18:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:18:00'!
ERROR!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:18:00'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:18:38' prior: 50872052!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: (OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro).	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:19:11'!
cartasParaJugadorPie

	| sieteDeBasto cuatroDeCopa cuatroDeOro |
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	^ OrderedCollection with: sieteDeBasto with: cuatroDeCopa with: cuatroDeOro.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:19:24' prior: 50872762!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro |
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:19:34' prior: 50872801!
test04JugadorManoNoPuedeJugarVecesConsecutivas

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda juegaPrimerCarta: jugadorMano ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento jugadorNoPuedePonerMasDeUnaCartaErrorDescription]. 
	
	
		! !

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:19:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:19:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:19:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:19:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:19:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:19:37'!
PASSED!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:19:37'!
ERROR!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:19:37'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:19:59' prior: 50872489!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

		| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:20:02' prior: 50872878!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarErrorDescription]. 
	
	
		! !

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:20:04'!
PASSED!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:20:04'!
ERROR!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:20:04'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:20:28' prior: 50872898!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugar]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:20:40' prior: 50872587!
test06ManoGanaElPrimerEnfrentamiento

	| anchoDeBasto anchoDeEspada siesteDeEspada jugadorMano jugadorPie sieteDeBasto ronda cuatroDeCopa cuatroDeOro ganadorPrimerEnfrentamiento |
	
	anchoDeBasto _ CartaDeTruco anchoDeBasto.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	sieteDeBasto _ CartaDeTruco bastoCon: 7.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
		
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:20:52' prior: 50872967!
test06ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
		
	
		! !

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:20:58'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:21:40' prior: 50872995!
test06ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:21:54' prior: 50873015!
test06ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:22:17' prior: 50873034!
test06ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:23:01' prior: 50872482!
jugar

	(primerJugador isNil or:[ segundoJugador isNil]) ifTrue:[self error: self class noSePuedeJugarErrorDescription.].
	
	! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:24:39' prior: 50871940!
agregarSegundoJugador: unJugadorDeTruco

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:25:58' prior: 50872140!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador primerCarta]].
					
	! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:26:50'!
agregarSegundoJugador: unJugadorDeTruco poniendo: unaCarta

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	! !

!methodRemoval: Enfrentamiento #agregarSegundoJugador: stamp: 'ja 7/5/2021 20:27:10'!
agregarSegundoJugador: unJugadorDeTruco

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 20:27:53'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primerJugador segundoJugador cartaPrimerJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!

!classDefinition: #Enfrentamiento category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 20:27:55'!
Object subclass: #Enfrentamiento
	instanceVariableNames: 'primerJugador segundoJugador cartaPrimerJugador cartaSegundoJugador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:27:51' prior: 50873100!
agregarSegundoJugador: unJugadorDeTruco poniendo: unaCarta

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	cartaPrimerJugador _ unaCarta value: primerJugador .
	cartaSegundoJugador _ unaCarta value: segundoJugador.! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:27:57' prior: 50873136!
agregarSegundoJugador: unJugadorDeTruco poniendo: unaCarta

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	
	cartaPrimerJugador _ unaCarta value: primerJugador .
	cartaSegundoJugador _ unaCarta value: segundoJugador.! !

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:28:50'!
ERROR!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:29:16' prior: 50873149!
agregarSegundoJugador: unJugadorDeTruco poniendo: unaCarta

	(primerJugador = unJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	
	segundoJugador _ unJugadorDeTruco.
	cartaPrimerJugador _ unaCarta value: primerJugador .
	cartaSegundoJugador _ unaCarta value: segundoJugador.! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:29:22' prior: 50873165!
agregarSegundoJugador: otroJugadorDeTruco poniendo: unaCarta

	(primerJugador = otroJugadorDeTruco ) ifTrue: [ self error: self class jugadorNoPuedePonerMasDeUnaCartaErrorDescription ].
	
	segundoJugador _ otroJugadorDeTruco.
	cartaPrimerJugador _ unaCarta value: primerJugador .
	cartaSegundoJugador _ unaCarta value: segundoJugador.! !

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:30:41'!
FAILURE!
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:31:42' prior: 50873072!
jugar

	(primerJugador isNil or:[ segundoJugador isNil]) ifTrue:[self error: self class noSePuedeJugarErrorDescription.].
	
	(cartaPrimerJugador mataA: cartaSegundoJugador) ifTrue:[ ^ primerJugador ]! !

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:31:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:31:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:31:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:31:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:31:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:31:46'!
PASSED!

!testRun: #RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:31:46'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:32:28'!
test07ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:33:04'!
test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !

!methodRemoval: RondaDeTrucoTest #test06ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:33:04'!
test06ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _  ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:33:40' prior: 50873250!
test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	
	self should: [ronda juegaPrimerCarta: jugadorPie .]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento manoJuegaPrimeroErrorDescription]. 
	
		
	
		! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:35:06' prior: 50873089!
juegaPrimerCarta: unJugador

	primerEnfrentamiento ifNil:[ 
		(unJugador = mano) ifFalse:[ self error: self class manoJuegaPrimeroErrorDescription].
		primerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[primerEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador primerCarta]].
					
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:35:14' prior: 50873289!
test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	
	self should: [ronda juegaPrimerCarta: jugadorPie .]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco manoJuegaPrimeroErrorDescription]. 
	
		
	
		! !
!RondaDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 20:35:31'!
manoJuegaPrimeroErrorDescription

	^ 'Mano juega primero'! !

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 20:35:36'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:35:37'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:35:49' prior: 50873231!
test07ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 20:37:14'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento ganadorPrimerEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:37:13' prior: 50872384!
jugar

	^ ganadorPrimerEnfrentamiento _ primerEnfrentamiento jugar.
					
	! !

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:38:53'!
PASSED!

CustomTemplate new yourself; templateErrorMessage. !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:40:27'!
test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugar.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	 self should: [ronda juegaSegundaCarta: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
	
	
		! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 20:43:22'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento ganadorPrimerEnfrentamiento segundoEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:43:20'!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador primerCarta]].
					
	! !
!RondaDeTruco class methodsFor: 'error description' stamp: 'ja 7/5/2021 20:43:53'!
jugadorNoPuedeEmpezarEnfrentamientoErrorDescription
	
	^  'Jugador no puede empezar enfrentamiento'! !

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:43:56'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 20:43:56'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:45:09'!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugar.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	 self should: [ronda juegaSegundaCarta: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:46:03' prior: 50873538!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugar.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	 
	
		! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 20:47:00'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 20:47:00'!
PASSED!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 20:47:26'!
jugarPrimerEnfrentamiento

	^ ganadorPrimerEnfrentamiento _ primerEnfrentamiento jugar.
					
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:47:26' prior: 50873565!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	 
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:47:26' prior: 50873444!
test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	 self should: [ronda juegaSegundaCarta: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:47:26' prior: 50872947!
test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	
	self should: [ronda jugarPrimerEnfrentamiento]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: Enfrentamiento noSePuedeJugarErrorDescription]. 
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:47:26' prior: 50873379!
test07ManoGanaElPrimerEnfrentamiento

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		
	
		! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:47:26' prior: 50873626!
jugarPrimerEnfrentamiento

	^ ganadorPrimerEnfrentamiento _ primerEnfrentamiento jugar.
					
	! !

!methodRemoval: RondaDeTruco #jugar stamp: 'ja 7/5/2021 20:47:26'!
jugar

	^ ganadorPrimerEnfrentamiento _ primerEnfrentamiento jugar.
					
	!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 20:47:32'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 20:47:32'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:48:36' prior: 50873633!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _  ronda jugar.
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:48:59' prior: 50873775!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _  ronda jugar.
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:49:20' prior: 50873802!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _  ronda jugar.
	
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:49:40' prior: 50873831!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _  ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 20:49:42'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 20:49:49' prior: 50873860!
test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 20:59:20'!
ERROR!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 21:00:02'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento ganadorPrimerEnfrentamiento segundoEnfrentamiento ganadorSegundoEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 21:00:01'!
jugar

	^ ganadorSegundoEnfrentamiento _ segundoEnfrentamiento jugar.
					
	! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:00:13'!
ERROR!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 21:01:01' prior: 50873936!
jugar

	ganadorSegundoEnfrentamiento _ segundoEnfrentamiento jugar.
	
	(ganadorPrimerEnfrentamiento = ganadorSegundoEnfrentamiento) ifTrue: [^ ganadorPrimerEnfrentamiento]
					
	! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:01:15'!
ERROR!

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 21:01:51'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento ganadorPrimerEnfrentamiento segundoEnfrentamiento ganadorSegundoEnfrentamiento ganador'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 21:01:49' prior: 50873946!
jugar

	ganadorSegundoEnfrentamiento _ segundoEnfrentamiento jugar.
	
	(ganadorPrimerEnfrentamiento = ganadorSegundoEnfrentamiento) ifTrue: [^ ganador _ ganadorPrimerEnfrentamiento]
					
	! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:02:06'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:02:13'!
ganador
	self shouldBeImplemented.
	^ganador! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:02:15' prior: 50873983!
ganador
	
	^ganador! !

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:02:18'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:02:18'!
PASSED!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:03:48'!
test10

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:04:15'!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		! !

!methodRemoval: RondaDeTrucoTest #test10 stamp: 'ja 7/5/2021 21:04:17'!
test10

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	ronda juegaSegundaCarta: ganadorPrimerEnfrentamiento.
	ronda juegaSegundaCarta: jugadorPie.
	
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	self assert: ganadorPrimerEnfrentamiento = jugadorMano.
	self assert: ganadorSegundoEnfrentamiento = jugadorMano.
	self assert: jugadorMano = ronda ganador.
		!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:12:10' prior: 50874058!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:12:17' prior: 50874112!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:13:23' prior: 50874131!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda ganadorPrimerEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ganadorPrimerEnfrentamiento _ ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:13:29' prior: 50874149!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorMano.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPie .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
		! !
!Enfrentamiento methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:17:12' prior: 50873196!
jugar

	(primerJugador isNil or:[ segundoJugador isNil]) ifTrue:[self error: self class noSePuedeJugarErrorDescription.].
	
	(cartaPrimerJugador mataA: cartaSegundoJugador) ifTrue:[ ^ primerJugador ].
	(cartaPrimerJugador empardaCon: cartaSegundoJugador) ifTrue:[^ nil].! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 21:18:33'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento ganadorPrimerEnfrentamiento segundoEnfrentamiento ganadorSegundoEnfrentamiento ganador empardaron'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 21:18:31' prior: 50873725!
jugarPrimerEnfrentamiento

	ganadorPrimerEnfrentamiento _ primerEnfrentamiento jugar.
					
	ganadorPrimerEnfrentamiento ifNil:[empardaron _ true]
							ifNotNil: [^ ganadorPrimerEnfrentamiento ]! !

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:18:42'!
ERROR!
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:18:48'!
empardaronLaPrimerMano
	self shouldBeImplemented.! !
!RondaDeTruco methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:18:53' prior: 50874220!
empardaronLaPrimerMano
	
	^ empardaron ! !
!RondaDeTruco methodsFor: 'initialization' stamp: 'ja 7/5/2021 21:19:11' prior: 50871225!
initializeConMano: unJugadorMano yPie: unJugadorPie 

	mano _ unJugadorMano.
	pie _ unJugadorPie.
	empardaron _ false! !

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:19:17'!
FAILURE!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:19:57' prior: 50874168!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConParda.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConParda .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:20:23'!
cartasParaJugadorManoConParda

	| anchoDeBasto anchoDeEspada siesteDeEspada |
	
	anchoDeBasto _ CartaDeTruco oroCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:20:54'!
cartasParaJugadorManoConPardaEnLaPrimerCarta

	| anchoDeBasto anchoDeEspada siesteDeEspada |
	
	anchoDeBasto _ CartaDeTruco oroCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:20:54' prior: 50874241!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConParda .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
		! !

!methodRemoval: RondaDeTrucoTest #cartasParaJugadorManoConParda stamp: 'ja 7/5/2021 21:20:54'!
cartasParaJugadorManoConParda

	| anchoDeBasto anchoDeEspada siesteDeEspada |
	
	anchoDeBasto _ CartaDeTruco oroCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: anchoDeBasto with: anchoDeEspada with: siesteDeEspada
	
	!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:21:11' prior: 50874270!
cartasParaJugadorManoConPardaEnLaPrimerCarta

	| cuatroDeOro anchoDeEspada siesteDeEspada |
	
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: cuatroDeOro with: anchoDeEspada with: siesteDeEspada
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:21:26' prior: 50874283!
test10SePuedeEmpardarLaPrimerMano

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
		! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:21:47'!
cartasParaJugadorPieConPardaEnLaPrimerCarta

	| cuatroDeOro anchoDeEspada siesteDeEspada |
	
	cuatroDeOro _ CartaDeTruco bastoCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: cuatroDeOro with: anchoDeEspada with: siesteDeEspada
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:22:11' prior: 50874344!
cartasParaJugadorPieConPardaEnLaPrimerCarta

	| cuatroDeOro cuatroDeCopa |
	
	cuatroDeOro _ CartaDeTruco bastoCon: 4.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	^ OrderedCollection with: cuatroDeOro with: cuatroDeCopa with: cuatroDeOro
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:22:39' prior: 50874357!
cartasParaJugadorPieConPardaEnLaPrimerCarta

	| cuatroDeOro cuatroDeCopa cuatroDeBasto |
	
	cuatroDeBasto _ CartaDeTruco bastoCon: 4.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	^ OrderedCollection with: cuatroDeOro with: cuatroDeCopa with: cuatroDeOro
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:22:46' prior: 50874369!
cartasParaJugadorPieConPardaEnLaPrimerCarta

	| cuatroDeOro cuatroDeCopa cuatroDeBasto |
	
	cuatroDeBasto _ CartaDeTruco bastoCon: 4.
	cuatroDeCopa _ CartaDeTruco copaCon: 4.
	cuatroDeOro _ CartaDeTruco oroCon: 4.
	
	^ OrderedCollection with: cuatroDeBasto with: cuatroDeCopa with: cuatroDeOro
	
	! !

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:23:03'!
ERROR!
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:23:41' prior: 50874313!
cartasParaJugadorManoConPardaEnLaPrimerCarta

	| cuatroDeOro anchoDeEspada siesteDeEspada cuatroDeEspada |
	
	cuatroDeEspada _ CartaDeTruco espadaCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: cuatroDeOro with: anchoDeEspada with: siesteDeEspada
	
	! !
!RondaDeTrucoTest methodsFor: 'as yet unclassified' stamp: 'ja 7/5/2021 21:23:47' prior: 50874398!
cartasParaJugadorManoConPardaEnLaPrimerCarta

	| anchoDeEspada siesteDeEspada cuatroDeEspada |
	
	cuatroDeEspada _ CartaDeTruco espadaCon: 4.
	anchoDeEspada _ CartaDeTruco anchoDeEspada.
	siesteDeEspada _ CartaDeTruco espadaCon: 7.
	
	^ OrderedCollection with: cuatroDeEspada with: anchoDeEspada with: siesteDeEspada
	
	! !

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:23:53'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInvï¿½lida stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:25:13'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:25:13'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:29:30'!
test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
		! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:31:21'!
verificarCantidadDeCartasDe: unaColeccionDeCartas

	unaColeccionDeCartas ifEmpty: [self error: self noSePuedeCrearUnJugadorSinCartasErrorDescription].
	((unaColeccionDeCartas size < 3) or:[unaColeccionDeCartas size > 3]) ifTrue: [self error: self cantidadDeCartasInvalidasErrorDescription]! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:31:21' prior: 50870848!
conCartas: unaColeccionDeCartas 
	
	| posiblesCartasRepetidas |
	
	self verificarCantidadDeCartasDe: unaColeccionDeCartas.
	
	posiblesCartasRepetidas _ unaColeccionDeCartas select:[:unaCarta | (unaColeccionDeCartas occurrencesOf: unaCarta) > 1].
	posiblesCartasRepetidas ifNotEmpty: [self error: self cartasRepetidasErrorDescription].
	
	^self new initializeCon: unaColeccionDeCartas ! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:32:14'!
verificarQueNoHayaCartasRepetidasEn: unaColeccionDeCartas 
	
	| posiblesCartasRepetidas |
	
	posiblesCartasRepetidas _ unaColeccionDeCartas select:[:unaCarta | (unaColeccionDeCartas occurrencesOf: unaCarta) > 1].
	posiblesCartasRepetidas ifNotEmpty: [self error: self cartasRepetidasErrorDescription].
	! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:32:57' prior: 50874621!
conCartas: unaColeccionDeCartas 
	
	
	
	self verificarCantidadDeCartasDe: unaColeccionDeCartas.
	self verificarQueNoHayaCartasRepetidasEn: unaColeccionDeCartas.
	
	^self new initializeCon: unaColeccionDeCartas ! !
!JugadorDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:33:02' prior: 50874649!
conCartas: unaColeccionDeCartas 
	
	
	self verificarCantidadDeCartasDe: unaColeccionDeCartas.
	self verificarQueNoHayaCartasRepetidasEn: unaColeccionDeCartas.
	
	^self new initializeCon: unaColeccionDeCartas ! !

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 21:33:03'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 21:33:03'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 21:33:03'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 21:33:03'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 21:33:03'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInvï¿½lida stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:33:10'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:33:10'!
PASSED!
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:34:34'!
verificarQueSeanJugadores: unJugadorMano y: unJugadorPie
	
	((unJugadorPie isKindOf: JugadorDeTruco) 
	and:[unJugadorMano isKindOf: JugadorDeTruco] ) ifFalse:[ self error: self jugadorInvalidoErrorDescription].
	! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:35:00' prior: 50871400!
conMano: unJugadorMano yPie: unJugadorPie
	
	| cartasDePie |
	
	self verificarQueSeanJugadores: unJugadorMano y: unJugadorPie.
	cartasDePie _ unJugadorPie cartas.
	unJugadorMano cartas do:[:unaCarta | (cartasDePie includes: unaCarta) ifTrue:[self error: self losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:35:53' prior: 50874824!
conMano: unJugadorMano yPie: unJugadorPie
	
	| cartasDePie |
	
	self verificarQueSeanJugadores: unJugadorMano y: unJugadorPie.
	self verificarQueNoHayaCartasRepetidasDe: unJugadorMano en: unJugadorPie.
	cartasDePie _ unJugadorPie cartas.
	unJugadorMano cartas do:[:unaCarta | (cartasDePie includes: unaCarta) ifTrue:[self error: self losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]].
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:36:14'!
verificarQueNoHayaCartasRepetidasDe: unJugadorMano en: unJugadorPie
	
	| cartasDePie |
	
	cartasDePie _ unJugadorPie cartas.
	unJugadorMano cartas do:[:unaCarta | (cartasDePie includes: unaCarta) ifTrue:[self error: self losJugadoresDeTrucoNoPuedenTenerCartasIgualesErrorDescription]].
	! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:36:21' prior: 50874840!
conMano: unJugadorMano yPie: unJugadorPie
	
	
	
	self verificarQueSeanJugadores: unJugadorMano y: unJugadorPie.
	self verificarQueNoHayaCartasRepetidasDe: unJugadorMano en: unJugadorPie.
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !
!RondaDeTruco class methodsFor: 'instance creation' stamp: 'ja 7/5/2021 21:36:27' prior: 50874871!
conMano: unJugadorMano yPie: unJugadorPie
	
	self verificarQueSeanJugadores: unJugadorMano y: unJugadorPie.
	self verificarQueNoHayaCartasRepetidasDe: unJugadorMano en: unJugadorPie.
	
	^self new initializeConMano: unJugadorMano yPie: unJugadorPie ! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:36:29'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInvï¿½lida stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:36:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:36:31'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:36:50' prior: 50874589!
test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
		! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:37:29' prior: 50875063!
test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	self should: [ronda juegaSegundaCarta: jugadorPie]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError |  
			self assert: anError messageText equals: RondaDeTruco jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
	
		! !
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:38:24' prior: 50873481!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento ) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador primerCarta]].
					
	! !
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:38:50' prior: 50875108!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador primerCarta]].
					
	! !
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:39:38' prior: 50875123!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		(empardaron and:[unJugador = ganadorPrimerEnfrentamiento not]) ifTrue:[self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador primerCarta]].
					
	! !

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:39:41'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:39:41'!
PASSED!
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:40:22'!
test12

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
		! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:40:43' prior: 50875204!
test12

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:40:50' prior: 50875223!
test12

	| jugadorMano jugadorPie ronda |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		
	
	ronda jugar.! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:41:06' prior: 50875243!
test12

	| jugadorMano jugadorPie ronda ganadorSegundoEnfrentamiento |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		
	
	ganadorSegundoEnfrentamiento _ ronda jugar.! !
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:41:42' prior: 50875138!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		(empardaron and:[unJugador = ganadorPrimerEnfrentamiento not]) ifTrue:[self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador segundaCarta ]].
					
	! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:42:19' prior: 50875263!
test12

	| jugadorMano jugadorPie ronda ganadorSegundoEnfrentamiento ganador |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		
	
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	ronda juegaTercerCarta: jugadorMano.
	ronda juegaTercerCarta: jugadorPie.	
	
	ganador _ ronda jugar.
	! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:42:40' prior: 50875305!
test12

	| jugadorMano jugadorPie ronda ganadorSegundoEnfrentamiento ganador |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		
	
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	ronda juegaTercerCarta: jugadorMano.
	ronda juegaTercerCarta: jugadorPie.	
	
	ganador _ ronda jugar.
	
	self assert: ganador = jugadorMano.
	! !
!RondaDeTrucoTest methodsFor: 'tests' stamp: 'ja 7/5/2021 21:43:07' prior: 50875331!
test12

	| jugadorMano jugadorPie ronda ganadorSegundoEnfrentamiento ganador |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	ronda juegaTercerCarta: jugadorMano.
	ronda juegaTercerCarta: jugadorPie.	
	
	ganador _ ronda jugar.
	
	self assert: ganador = jugadorMano.
	! !

!classDefinition: #RondaDeTruco category: 'ISW1-2021-1C-2doParcial' stamp: 'ja 7/5/2021 21:44:08'!
Object subclass: #RondaDeTruco
	instanceVariableNames: 'mano pie primerEnfrentamiento ganadorPrimerEnfrentamiento segundoEnfrentamiento ganadorSegundoEnfrentamiento ganador empardaron tercerEnfrentamiento'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-2doParcial'!
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:44:06'!
juegaTercerCarta: unJugador

	tercerEnfrentamiento ifNil:[ 
		(unJugador = ganadorSegundoEnfrentamiento) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		
		tercerEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[tercerEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador tercerCarta ]].
					
	! !

!testRun: #RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:44:30'!
ERROR!
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:45:19' prior: 50875285!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		(empardaron and:[(unJugador = ganadorPrimerEnfrentamiento) not]) ifTrue:[self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador segundaCarta ]].
					
	! !

!testRun: #RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:45:22'!
ERROR!

!testRun: #RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:45:34'!
ERROR!

!testRun: #RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:48:08'!
ERROR!
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:49:35' prior: 50875414!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento or:[empardaron]) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		"(empardaron and:[(unJugador = ganadorPrimerEnfrentamiento) not]) ifTrue:[self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription]."
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador segundaCarta ]].
					
	! !

!testRun: #RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:49:37'!
FAILURE!

!testRun: #RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:50:07'!
FAILURE!

!methodRemoval: RondaDeTrucoTest #test12 stamp: 'ja 7/5/2021 21:50:41'!
test12

	| jugadorMano jugadorPie ronda ganadorSegundoEnfrentamiento ganador |
	
	jugadorMano _ JugadorDeTruco conCartas: self cartasParaJugadorManoConPardaEnLaPrimerCarta.
	jugadorPie _ JugadorDeTruco conCartas: self cartasParaJugadorPieConPardaEnLaPrimerCarta .	
	
	ronda _ RondaDeTruco conMano: jugadorMano yPie: jugadorPie.
	ronda juegaPrimerCarta: jugadorMano.
	ronda juegaPrimerCarta: jugadorPie.
	ronda jugarPrimerEnfrentamiento.
	
	self assert: ronda empardaronLaPrimerMano.
	
	ronda juegaSegundaCarta: jugadorMano.
	ronda juegaSegundaCarta: jugadorPie.		
	ganadorSegundoEnfrentamiento _ ronda jugar.
	
	ronda juegaTercerCarta: jugadorMano.
	ronda juegaTercerCarta: jugadorPie.	
	
	ganador _ ronda jugar.
	
	self assert: ganador = jugadorMano.
	!
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:51:00' prior: 50875441!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento or:[empardaron]) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador segundaCarta ]].
					
	! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:51:02'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:51:02'!
FAILURE!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:51:02'!
FAILURE!
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:49:35' prior: 50875492!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento or:[empardaron]) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		"(empardaron and:[(unJugador = ganadorPrimerEnfrentamiento) not]) ifTrue:[self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription]."
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador segundaCarta ]].
					
	! !
!RondaDeTruco methodsFor: 'juego' stamp: 'ja 7/5/2021 21:51:30' prior: 50875555!
juegaSegundaCarta: unJugador

	segundoEnfrentamiento ifNil:[ 
		(unJugador = ganadorPrimerEnfrentamiento ) ifFalse:[ self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		(empardaron and:[(unJugador = ganadorPrimerEnfrentamiento) not]) ifTrue:[self error: self class jugadorNoPuedeEmpezarEnfrentamientoErrorDescription].
		segundoEnfrentamiento _ Enfrentamiento conPrimerJugador: unJugador]
					ifNotNil:[segundoEnfrentamiento agregarSegundoJugador: unJugador poniendo:[:jugador | jugador segundaCarta ]].
					
	! !

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:51:31'!
PASSED!

!testRun: #CartaDeTrucoTest #test01SonIgualesConMismoPaloYNumero stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test02SonDistintasConDistintoPalo stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test03SonDistintasConNumeroAunqueIgualPalo stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test04CartasIgualesTienenElMismoHash stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test05UnaCartaEsDistintaACualquierObjetoQueNoSeaCarta stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test07NoHayCartaDeTrucoConNumeroOcho stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test08NoHayCartaDeTrucoConNumeroNueve stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test09LosPalosDeLaCartaDeTrucoSonBastoOroEspadaYCopa stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test10NoSePuedeCrearCartaConNumeroMenorAUno stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test11NoSePuedeCrearCartaConNumeroMayorADoce stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test12ElNumeroDeLaCartaDebeSerEntero stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test13LaTablaDeValoresEsCorrecta stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test14HayCartasQueNoSonPardas stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test15HayCartasQuePierdenConOtras stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test16SieteDeCopasYDeBastoEsSieteFalso stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test17SieteDeOroYDeEspadaNoSonSieteFalso stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test18AnchoDeOroYDeCopaSonAnchoFalsos stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test19AnchoDeEspadaYDeBastosNoSonAnchoFalsos stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #CartaDeTrucoTest #test20FallaBuscandoValorDeCartaInvï¿½lida stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #JugadorDeTrucoTest #test01NoSePuedeCrearUnJugadorSinCartas stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #JugadorDeTrucoTest #test02NoSePuedeCrearJugadorConUnaCantidaDeCartasMenorA3 stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #JugadorDeTrucoTest #test03NoSePuedeCrearJugadorConUnaCantidaDeCartasMayorA3 stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #JugadorDeTrucoTest #test04NoSePuedeCrearJugadorConCartasRepetidas stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #JugadorDeTrucoTest #test05SePuedeCrearJugadorCorrectamenteYConoceSusCartas stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test01NoSePuedeCrearUnaRondaDeTrucoSiPieNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test02NoSePuedeCrearUnaRondaDeTrucoSiManoNoEsJugadorDeTruco stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test03LosJugadoresDeTrucoNoPuedenTenerCartasIguales stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test04JugadorManoNoPuedeJugarVecesConsecutivas stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test05NoSePuedeJugarSiSoloUnJugadorTiroUnaCarta stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test06LaPrimerCartaDelPrimerEnfrentamientoLaTieneQuePonerLaMano stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test07ManoGanaElPrimerEnfrentamiento stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test08ElJugadorQuePierdeElPrimerEnfrentamientoNoPuedeEmpezarElSegundoEnfrentamiento stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test09ManoGanaElPrimerYSegundoEnfrentamientoYGanaLaRonda stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test10SePuedeEmpardarLaPrimerMano stamp: 'ja 7/5/2021 21:51:34'!
PASSED!

!testRun: #RondaDeTrucoTest #test11SiSeEmpardaElPrimerEnfrentamientoPieNoPuedeJugarPrimero stamp: 'ja 7/5/2021 21:51:34'!
PASSED!