!classRemoval: #MerchantProcessor stamp: 'ms 6/17/2021 12:07:50'!
Object subclass: #MerchantProcessor
	instanceVariableNames: 'hasCredit hasNoCredit isStolen isFake'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #EditorialTestObject stamp: 'ms 6/17/2021 12:07:51'!
Object subclass: #EditorialTestObject
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/17/2021 12:07:51'!
Object subclass: #CreditCard
	instanceVariableNames: 'owner number expirationDate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/17/2021 12:07:51'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/17/2021 12:07:51'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #MerchantProcessorTest stamp: 'ms 6/17/2021 12:07:52'!
TestCase subclass: #MerchantProcessorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCardTest stamp: 'ms 6/17/2021 12:07:52'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/17/2021 12:07:52'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/17/2021 12:07:52'!
TestCase subclass: #CartTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Downloads\TusLibros (4).st----!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutanEmptyCart stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test02CheckOutACartWithOneItemAndTheTotalIsCorrect stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test03ValidateDebitCorrectlyWithMPAndManyItemsOfCart stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test05CanNotCheckoutWhenTheCreditCartHasNoCredit stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test06CanNotCheckoutWhenTheCreditCardIsStolen stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CashierTest #test07CanNotCheckoutWhenTheCreditCardIsFake stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/17/2021 12:08:09'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/17/2021 12:08:09'!
PASSED!
!CashierTest methodsFor: 'nil' stamp: 'ms 6/17/2021 12:11:35'!
CanNotCheckOutWhenDeCreditCardHasDebit: aDebit shouldThrowError: anErrorBlock

 | creditCard cart aSalesBook cashier |

    	cart := cartObjectTest createCart.
    	cart add: cartObjectTest itemSellByTheStore.
	creditCard := cartObjectTest createValidCreditCard.
    	aSalesBook := OrderedCollection new.

 	debit := aDebit .

	cashier := Cashier toCheckout: cart charging: creditCard on: cartObjectTest today registeringOn: aSalesBook using: self.

    anErrorBlock value.
! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:13:05' prior: 51054560!
test06CanNotCheckoutWhenTheCreditCardIsStolen
	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsStolen].
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit  shouldThrowError: [:cashier :aSalesBook|
		self should: [cashier checkOut ]
    			raise: Error
   			 withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsStolen.
                    self assert: aSalesBook isEmpty]]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 12:13:17' prior: 51055085!
CanNotCheckOutWhenDeCreditCardHasDebit: aDebit shouldThrowError: anErrorBlock

 | creditCard cart aSalesBook cashier |

    	cart := cartObjectTest createCart.
    	cart add: cartObjectTest itemSellByTheStore.
	creditCard := cartObjectTest createValidCreditCard.
    	aSalesBook := OrderedCollection new.

 	debit := aDebit .

	cashier := Cashier toCheckout: cart charging: creditCard on: cartObjectTest today registeringOn: aSalesBook using: self.

    anErrorBlock value: cashier  value: aSalesBook 
! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:13:19' prior: 51055103!
test06CanNotCheckoutWhenTheCreditCardIsStolen
	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsStolen].
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit  shouldThrowError: [:cashier :aSalesBook |
		self should: [cashier checkOut ]
    			raise: Error
   			 withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsStolen.
                    self assert: aSalesBook isEmpty]]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutanEmptyCart stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test02CheckOutACartWithOneItemAndTheTotalIsCorrect stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test03ValidateDebitCorrectlyWithMPAndManyItemsOfCart stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test05CanNotCheckoutWhenTheCreditCartHasNoCredit stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test06CanNotCheckoutWhenTheCreditCardIsStolen stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CashierTest #test07CanNotCheckoutWhenTheCreditCardIsFake stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/17/2021 12:13:21'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/17/2021 12:13:21'!
PASSED!
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:14:16' prior: 51054535!
test05CanNotCheckoutWhenTheCreditCartHasNoCredit

	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardHasNoCredit].
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [:cashier :aSalesBook |
		self should: [cashier checkOut ]
    raise: Error
    withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardHasNoCredit.
                    self assert: aSalesBook isEmpty]]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutanEmptyCart stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test02CheckOutACartWithOneItemAndTheTotalIsCorrect stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test03ValidateDebitCorrectlyWithMPAndManyItemsOfCart stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test05CanNotCheckoutWhenTheCreditCartHasNoCredit stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test06CanNotCheckoutWhenTheCreditCardIsStolen stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CashierTest #test07CanNotCheckoutWhenTheCreditCardIsFake stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/17/2021 12:14:18'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/17/2021 12:14:18'!
PASSED!
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:14:57' prior: 51054585!
test07CanNotCheckoutWhenTheCreditCardIsFake

   debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsFake].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [ :cashier :aSalesBook |

    self should: [cashier checkOut ]
    raise: Error
    withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsFake.
                    self assert: aSalesBook isEmpty] ]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutanEmptyCart stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test02CheckOutACartWithOneItemAndTheTotalIsCorrect stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test03ValidateDebitCorrectlyWithMPAndManyItemsOfCart stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test05CanNotCheckoutWhenTheCreditCartHasNoCredit stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test06CanNotCheckoutWhenTheCreditCardIsStolen stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CashierTest #test07CanNotCheckoutWhenTheCreditCardIsFake stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/17/2021 12:14:58'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/17/2021 12:14:58'!
PASSED!
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:17:28' prior: 51055219!
test05CanNotCheckoutWhenTheCreditCartHasNoCredit

	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardHasNoCredit].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [:cashier :aSalesBook |
		self should: [cashier checkOut ]
    		raise: Error
    		withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardHasNoCredit.
                    								self assert: aSalesBook isEmpty]]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:17:31' prior: 51055377!
test05CanNotCheckoutWhenTheCreditCartHasNoCredit

	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardHasNoCredit].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [:cashier :aSalesBook |
		self should: [cashier checkOut ]
    		raise: Error
    		withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardHasNoCredit.
                    							     self assert: aSalesBook isEmpty]]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:17:49' prior: 51055140!
test06CanNotCheckoutWhenTheCreditCardIsStolen
	
	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsStolen].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit  shouldThrowError: [:cashier :aSalesBook |
		self should: [cashier checkOut ]
    		      raise: Error
   		      withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsStolen.
                    								   self assert: aSalesBook isEmpty]]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 12:18:10' prior: 51055298!
test07CanNotCheckoutWhenTheCreditCardIsFake

   debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsFake].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [ :cashier :aSalesBook |
	self should: [cashier checkOut ]
    	      raise: Error
             withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsFake.
                    						          self assert: aSalesBook isEmpty] ]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 13:03:18' prior: 51055413!
test06CanNotCheckoutWhenTheCreditCardIsStolen
	
	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsStolen].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit  shouldThrowError: [:cashier :aSalesBook |
		self should: [cashier checkOut ]
    		raise: Error
   		withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsStolen.
                    							     self assert: aSalesBook isEmpty]]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 13:03:33' prior: 51055431!
test07CanNotCheckoutWhenTheCreditCardIsFake

   	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsFake].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [ :cashier :aSalesBook |
		self should: [cashier checkOut ]
    	       raise: Error
              withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsFake.
                    						           self assert: aSalesBook isEmpty] ]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 13:03:41' prior: 51055467!
test07CanNotCheckoutWhenTheCreditCardIsFake

   	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsFake].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [ :cashier :aSalesBook |
		self should: [cashier checkOut ]
    	       raise: Error
               withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsFake.
                    						           self assert: aSalesBook isEmpty] ]! !
!CashierTest methodsFor: 'testing' stamp: 'ms 6/17/2021 13:03:47' prior: 51055485!
test07CanNotCheckoutWhenTheCreditCardIsFake

   	debit := [ :totalToPay :theCreditCard | self error: Cashier describeErrorCreditCardIsFake].
	
	self CanNotCheckOutWhenDeCreditCardHasDebit: debit shouldThrowError: [ :cashier :aSalesBook |
		self should: [cashier checkOut ]
    	        raise: Error
               withExceptionDo: [ :anError | self assert: anError messageText = Cashier describeErrorCreditCardIsFake.
                    						           self assert: aSalesBook isEmpty] ]! !

!classRemoval: #EditorialTestObject stamp: 'ms 6/17/2021 20:36:10'!
Object subclass: #EditorialTestObject
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/17/2021 20:36:10'!
Object subclass: #CreditCard
	instanceVariableNames: 'owner number expirationDate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/17/2021 20:36:11'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/17/2021 20:36:11'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCardTest stamp: 'ms 6/17/2021 20:36:11'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/17/2021 20:36:11'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'cartObjectTest debit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/17/2021 20:36:12'!
TestCase subclass: #CartTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\TusLibros-33.st----!

Object subclass: #RestInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/17/2021 20:38:20'!
Object subclass: #RestInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #RestInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceTest category: 'TusLibros' stamp: 'ms 6/17/2021 20:38:27'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/17/2021 20:39:09'!
test01CreateCartWhenTheUserIsInvalid
	|cart|
	cart := 0! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:45:52' prior: 51056142!
test01CreateCartWhenTheUserIsInvalid
	|cart invalidClientId password restInterface|
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId.
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:45:59'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:45:59'!
ERROR!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:45:59'!
ERROR!
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/17/2021 20:46:33'!
createInvalidClientId

	^''! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:47:23' prior: 51056147!
test01CreateCartWhenTheUserIsInvalid
	|cart invalidClientId password restInterface|
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple"
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:48:30' prior: 51056220!
test01CreateCartWhenTheUserIsInvalid
	|cart invalidClientId password restInterface|
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple, ademas se podria usar crear un user invalido, y que te devuelva una user con clientId invalido y psw valida"
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterface methodsFor: 'nil' stamp: 'ms 6/17/2021 20:50:22'!
createCartFor: aClientId  authenticatedBy: aPassword

	aClientId isValid ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser]
	! !
!RestInterface class methodsFor: 'nil' stamp: 'ms 6/17/2021 20:50:41'!
describeErrorCanNotCreateCartInvalidUser

	^'Can not create a Cart'! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:50:58'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:50:58'!
FAILURE!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:50:58'!
FAILURE!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/17/2021 20:52:33'!
Object subclass: #RestInterface
	instanceVariableNames: 'validClientsId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:52:32' prior: 51056262!
createCartFor: aClientId  authenticatedBy: aPassword

	(validClientsId include:aClientId) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser]
	! !
!RestInterface methodsFor: 'nil' stamp: 'ms 6/17/2021 20:52:47' overrides: 16896425!
initialize

	validClientsId := OrderedCollection  new.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:52:58' prior: 51056335!
createCartFor: aClientId  authenticatedBy: aPassword

	(validClientsId include: aClientId) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser]
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:53:00' prior: 51056349!
createCartFor: aClientId  authenticatedBy: aPassword

	(validClientsId includes: aClientId) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser]
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:53:05'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:53:05'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:54:48'!
test02CreateCartWhenTheUserIsInvalid
	|cart clientId invalidPassword restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple, ademas se podria usar crear un user invalido, y que te devuelva una user con clientId invalido y psw valida"
	invalidPassword := ' '.
	
	self should:[ restInterface createCartFor: clientId  authenticatedBy: invalidPassword.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:54:52'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:54:52'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:54:52'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:54:58'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:54:58'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:54:58'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:02'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:02'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:02'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:15'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:23'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:23'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:55:23'!
ERROR!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:55:45'!
createValidClientId

	^'Alan Kay'! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:56:03' prior: 51056464!
test02CreateCartWhenTheUserIsInvalid
	|cart clientId invalidPassword restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple, ademas se podria usar crear un user invalido, y que te devuelva una user con clientId invalido y psw valida"
	restInterface add: clientId.
	invalidPassword := ' '.
	
	self should:[ restInterface createCartFor: clientId  authenticatedBy: invalidPassword.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:56:21'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:56:21'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:56:21'!
ERROR!
!RestInterface methodsFor: 'nil' stamp: 'ms 6/17/2021 20:56:39'!
add: aClientId

	! !

!classDefinition: #RestInterfaceTest category: 'TusLibros' stamp: 'ms 6/17/2021 20:56:58'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:56:56' prior: 51056711!
createValidClientId

	^lastId + 1! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:57:49'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:57:49'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:57:49'!
ERROR!
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/17/2021 20:58:17' overrides: 16927572!
setUp

	lastId := 0.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:58:37'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:58:37'!
PASSED!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 20:59:47' prior: 51056794!
add: aClientId

	validClientsId  add: aClientId.
	! !

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:59:48'!
FAILURE!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:59:51'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:59:51'!
FAILURE!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 20:59:51'!
FAILURE!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:00:20' prior: 51056344 overrides: 16896425!
initialize

	validClientsId := Dictionary  new.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:02:21'!
add: aClientId with: aPassword

	validClientsId  at: aClientId put: aPassword
	! !

!methodRemoval: RestInterface #add: stamp: 'ms 6/17/2021 21:02:27'!
add: aClientId

	validClientsId  add: aClientId.
	!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:04:49' prior: 51056240!
test01CreateCartWhenTheUserIsInvalid
	|cart invalidClientId password restInterface invalidUser |
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple, ademas se podria usar crear un user invalido, y que te devuelva una user con clientId invalido y psw valida"
	invalidUser := self createInvalidUser.
	password := 'password'.
	
	self should:[ "restInterface createCartFor: invalidClientId  authenticatedBy: password."
	restInterface createCartFor: invalidUser]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:05:10' prior: 51057002!
test01CreateCartWhenTheUserIsInvalid
	|cart invalidClientId password restInterface invalidUser |
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple, ademas se podria usar crear un user invalido, y que te devuelva una user con clientId invalido y psw valida"
	password := 'password'.
	invalidUser := self createInvalidUser.
	
	self should:[ "restInterface createCartFor: invalidClientId  authenticatedBy: password."
	restInterface createCartFor: invalidUser]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:05:17' prior: 51057028!
test01CreateCartWhenTheUserIsInvalid
	|cart invalidClientId password restInterface invalidUser |
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId. "esto junto con las pass deberia ser un dic, pero por ahora me quedo con la sol mas simple, ademas se podria usar crear un user invalido, y que te devuelva una user con clientId invalido y psw valida"
	password := 'password'.
	
	invalidUser := self createInvalidUser.
	
	self should:[ "restInterface createCartFor: invalidClientId  authenticatedBy: password."
	restInterface createCartFor: invalidUser]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/17/2021 21:06:15'!
createInvalidUser

	^ 0! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:11:15' prior: 51056358!
createCartFor: aClientId  authenticatedBy: aPassword

	(validClientsId includes: aClientId) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser]
	"AutenticationSistem "
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 21:11:17'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:11:17'!
FAILURE!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:11:17'!
ERROR!

!methodRemoval: RestInterfaceTest #createInvalidUser stamp: 'ms 6/17/2021 21:11:50'!
createInvalidUser

	^ 0!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:12:13' prior: 51057054!
test01CreateCartWhenTheUserIsInvalid
	|invalidClientId password restInterface |
	
	restInterface := RestInterface  new.
	invalidClientId := self createInvalidClientId. 
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'set up' stamp: 'ms 6/17/2021 21:13:12' prior: 51056866 overrides: 16927572!
setUp

	lastId := 1.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:13:17'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:13:17'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:13:17'!
ERROR!

Object subclass: #AutenticationSistem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #AutenticationSistem category: 'TusLibros' stamp: 'ms 6/17/2021 21:14:00'!
Object subclass: #AutenticationSistem
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:14:08' prior: 51056987 overrides: 16896425!
initialize

	validClientsId := AutenticationSistem  new.! !

Object subclass: #NameOfSubclass
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #NameOfSubclass category: 'TusLibros' stamp: 'ms 6/17/2021 21:14:19'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #NameOfSubclass stamp: 'ms 6/17/2021 21:14:24'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #AutenticationSistem
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #AutenticationSistem category: 'TusLibros' stamp: 'ms 6/17/2021 21:14:34'!
Object subclass: #AutenticationSistem
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!AutenticationSistem methodsFor: 'nil' stamp: 'ms 6/17/2021 21:14:53' overrides: 16896425!
initialize

	validUsers := Dictionary new.! !

Object subclass: #RestInterface
	instanceVariableNames: 'autentucationSistem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/17/2021 21:16:08'!
Object subclass: #RestInterface
	instanceVariableNames: 'autentucationSistem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:16:12' prior: 51057237 overrides: 16896425!
initialize

	autentucationSistem := AutenticationSistem  new.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:16:48' prior: 51057084!
createCartFor: aClientId  authenticatedBy: aPassword

	(autentucationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser]
	"AutenticationSistem "
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:16:57' prior: 51057296!
createCartFor: aClientId  authenticatedBy: aPassword

	(autentucationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	! !
!AutenticationSistem methodsFor: 'nil' stamp: 'ms 6/17/2021 21:19:03'!
validate: aClientId with: aPassword 

	validUsers at: aClientId ifAbsent: [^false]! !
!AutenticationSistem methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:19:41' prior: 51057315!
validate: aClientId with: aPassword 

	^validUsers includesKey: aClientId.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:20:08'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:20:08'!
ERROR!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:20:08'!
ERROR!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:20:17' prior: 51056716!
test02CreateCartWhenTheUserIsInvalid
	|cart clientId invalidPassword restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	restInterface add: clientId.
	invalidPassword := ' '.
	
	self should:[ restInterface createCartFor: clientId  authenticatedBy: invalidPassword.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !

!methodRemoval: RestInterface #add:with: stamp: 'ms 6/17/2021 21:22:09'!
add: aClientId with: aPassword

	validClientsId  at: aClientId put: aPassword
	!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:24:31' prior: 51057382!
test02CreateCartWhenTheUserIsInvalid
	|cart clientId invalidPassword restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	restInterface add: clientId with: 'clientIdPass'.
	invalidPassword := ' '.
	
	self should:[ restInterface createCartFor: clientId  authenticatedBy: invalidPassword.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterface methodsFor: 'nil' stamp: 'ms 6/17/2021 21:25:36'!
add: aClientId with: aPassword

	AutenticationSistem add: aClientId with: aPassword.! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/17/2021 21:26:09'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:26:09' prior: 51057290 overrides: 16896425!
initialize

	autenticationSistem := AutenticationSistem  new.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:26:09' prior: 51057306!
createCartFor: aClientId  authenticatedBy: aPassword

	(autenticationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:26:17' prior: 51057422!
add: aClientId with: aPassword

	autenticationSistem add: aClientId with: aPassword.! !
!AutenticationSistem methodsFor: 'nil' stamp: 'ms 6/17/2021 21:26:39'!
add: aClientId with: aPassword.

	validUsers at: aClientId put: aPassword.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:26:50'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:26:50'!
FAILURE!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/17/2021 21:26:50'!
FAILURE!
!AutenticationSistem methodsFor: 'as yet unclassified' stamp: 'ms 6/17/2021 21:32:19' prior: 51057321!
validate: aClientId with: aPassword 

	(validUsers includesKey: aClientId) 
	ifTrue: [
		(aPassword isEqualTo: (validUsers at: aClientId )) 
		ifTrue: [^true].
	] .
	^false.! !

!classRemoval: #StoreTestObjectsFactory stamp: 'ms 6/18/2021 00:12:13'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'ms 6/18/2021 00:12:13'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterface stamp: 'ms 6/18/2021 00:12:14'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/18/2021 00:12:14'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/18/2021 00:12:14'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/18/2021 00:12:14'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #AutenticationSistem stamp: 'ms 6/18/2021 00:12:15'!
Object subclass: #AutenticationSistem
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterfaceTest stamp: 'ms 6/18/2021 00:12:15'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/18/2021 00:12:15'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/18/2021 00:12:15'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\TusLibros-33.st----!

!classRemoval: #StoreTestObjectsFactory stamp: 'ms 6/18/2021 00:13:36'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'ms 6/18/2021 00:13:36'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/18/2021 00:13:37'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/18/2021 00:13:37'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/18/2021 00:13:37'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/18/2021 00:13:37'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/18/2021 00:13:38'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\TusLibrosMIO.st----!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:14:12'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:14:12'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:16:59' prior: 51058459!
test01CreateCartWhenTheUserIsInvalid
	|invalidClientId password restInterface |
	
	restInterface := self createInterface.
	invalidClientId := self createInvalidClientId. 
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/18/2021 00:17:44'!
createInterface

^ RestInterface autenticateBy	: self.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:24:46' prior: 51058950!
createInterface

"falta"! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:25:04' prior: 51058934!
test01CreateCartWhenTheUserIsInvalid
	|invalidClientId password restInterface |
	
	restInterface :=RestInterface  new.
	invalidClientId := self createInvalidClientId. 
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:25:05'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:25:05'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:27:53'!
test03CreateCartWithValidUser
	|cartId clientId password restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	 
	self assert: (restInterface listCart: cartId) isEmpty.
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:27:57'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/18/2021 00:27:57'!
ERROR!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/18/2021 00:27:57'!
ERROR!
!RestInterface methodsFor: 'nil' stamp: 'ms 6/18/2021 00:30:19'!
listCart: aCartId

	^ OrderedCollection  new.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:30:31'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/18/2021 00:30:31'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:31:17'!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	 
	self assert: (restInterface listCart: cartId) isEmpty.
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:32:02' prior: 51059160!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn |
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	isbn := self getProductId
	self assert: (restInterface listCart: cartId) isEmpty.
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:32:20' prior: 51059175!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn |
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	isbn := self getProductId.
	self assert: (restInterface listCart: cartId) isEmpty.
	! !

!classDefinition: #RestInterfaceTest category: 'TusLibros' stamp: 'ms 6/18/2021 00:33:06'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastId lastIsbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'set up' stamp: 'ms 6/18/2021 00:33:04' prior: 51058494 overrides: 16927572!
setUp

	lastId := 1.
	lastIsbn := 1.
	! !

!classDefinition: #RestInterfaceTest category: 'TusLibros' stamp: 'ms 6/18/2021 00:33:36'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:33:36' prior: 51058455!
createValidClientId

	^lastClientId + 1! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:33:36' prior: 51059215 overrides: 16927572!
setUp

	lastClientId := 1.
	lastIsbn := 1.
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/18/2021 00:33:38'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/18/2021 00:33:38'!
ERROR!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/18/2021 00:33:38'!
ERROR!
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/18/2021 00:34:00'!
getProductId

^ lastIsbn +1.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:34:14' prior: 51059191!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn |
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	isbn := self getProductId.
	
	self assert: (restInterface listCart: cartId) isEmpty.
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/18/2021 00:38:51' prior: 51059305!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn items |
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	isbn := self getProductId.
	
	restInterface addToCart: cartId aBookId: isbn withQuantity: 1
.
	items := restInterface listCart: cartId .
	self assert: (items includes: isbn).
	self assert: (items occurrencesOf: isbn) equals: 2.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/18/2021 00:39:01'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/18/2021 00:39:01'!
ERROR!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/18/2021 00:39:01'!
ERROR!
!RestInterface methodsFor: 'nil' stamp: 'ms 6/18/2021 00:41:32'!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity
"falta implemnetar "! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/18/2021 00:41:34'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/18/2021 00:41:35'!
FAILURE!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/18/2021 00:41:35'!
FAILURE!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/21/2021 09:45:21'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 09:45:21'!
FAILURE!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 09:45:21'!
FAILURE!

Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/21/2021 09:46:16'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 09:47:36' prior: 51058759!
createCartFor: aClientId  authenticatedBy: aPassword

	(autenticationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	
	^ lastCartId +1.
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 09:47:45' prior: 51058769 overrides: 16896425!
initialize

	autenticationSistem := AutenticationSistem  new.
	lastCartId := 1.! !

TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn storeTestObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterfaceTest category: 'TusLibros' stamp: 'ms 6/21/2021 09:48:52'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn storeTestObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'set up' stamp: 'ms 6/21/2021 09:49:07' prior: 51059234 overrides: 16927572!
setUp

	lastClientId := 1.
	lastIsbn := 1.
	storeTestObject := StoreTestObjectsFactory new.
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 09:51:08' prior: 51059321!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn items storeTestObjectlocal|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password.
	isbn := self getProductId.
	storeTestObjectlocal := StoreTestObjectsFactory new initilizeCartId: cartId.
	
	restInterface addToCart: cartId aBookId: isbn withQuantity: 1
.
	items := restInterface listCart: cartId .
	self assert: (items includes: isbn).
	self assert: (items occurrencesOf: isbn) equals: 2.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:04:12' prior: 51059584!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn items  catalog|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	catalog := storeTestObject defaultCatalog.
	
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog:catalog.
	isbn := self getProductId.
	
	restInterface addToCart: cartId aBookId: isbn withQuantity: 1
.
	items := restInterface listCart: cartId .
	self assert: (items includes: isbn).
	self assert: (items occurrencesOf: isbn) equals: 2.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:04:58'!
createCartFor: aClientId  authenticatedBy: aPassword withCatalog: catalog 

	(autenticationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	
	^ lastCartId +1.
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:04:58' prior: 51058476!
test02CreateCartWhenTheUserIsInvalid
	|cart clientId invalidPassword restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	restInterface add: clientId with: 'clientIdPass'.
	invalidPassword := ' '.
	
	self should:[ restInterface createCartFor: clientId  authenticatedBy: invalidPassword withCatalog: catalog.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:04:58' prior: 51059028!
test03CreateCartWithValidUser
	|cartId clientId password restInterface|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog: catalog.
	 
	self assert: (restInterface listCart: cartId) isEmpty.
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:04:58' prior: 51058960!
test01CreateCartWhenTheUserIsInvalid
	|invalidClientId password restInterface |
	
	restInterface :=RestInterface  new.
	invalidClientId := self createInvalidClientId. 
	password := 'password'.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password withCatalog: catalog.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !

!methodRemoval: RestInterface #createCartFor:authenticatedBy: stamp: 'ms 6/21/2021 10:04:58'!
createCartFor: aClientId  authenticatedBy: aPassword

	(autenticationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	
	^ lastCartId +1.
	!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:05:42' prior: 51059631!
createCartFor: aClientId  authenticatedBy: aPassword withCatalog: catalog 

	(autenticationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	
	Cart acceptingItemsOf: catalog .
	
	
	^ lastCartId +1.
	! !

Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/21/2021 10:06:22'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:06:36' prior: 51059557 overrides: 16896425!
initialize

	autenticationSistem := AutenticationSistem  new.
	lastCartId := 1.
	carts  := Dictionary new.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:07:49' prior: 51059704!
createCartFor: aClientId  authenticatedBy: aPassword withCatalog: catalog 

	| cart |
	(autenticationSistem validate: aClientId with: aPassword ) ifFalse: [^Error signal: self class describeErrorCanNotCreateCartInvalidUser].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	
	 carts at: lastCartId put: cart.
	
	^ lastCartId
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/21/2021 10:09:29'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:09:29'!
FAILURE!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:09:29'!
FAILURE!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:18:56' prior: 51059403!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity

	|cart|
	cart:= carts at: aCartId .
	
	cart add: aQuantity of: anIsbn .! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:19:42' prior: 51059100!
listCart: aCartId
	
	|cart|
	cart := carts at: aCartId .
	
	"^ OrderedCollection  new."! !
!Cart methodsFor: 'nil' stamp: 'ms 6/21/2021 10:21:17'!
listItems

	^items ! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:21:19' prior: 51059821!
listCart: aCartId
	
	|cart|
	cart := carts at: aCartId .
	^cart listItems. 
	
	"^ OrderedCollection  new."! !

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:21:29'!
ERROR!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:21:29'!
ERROR!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:23:52' prior: 51059608!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn items  catalog|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	catalog := storeTestObject defaultCatalog.
	
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog:catalog.
	"isbn := self getProductId."
	
	restInterface addToCart: cartId aBookId: 'validBook' withQuantity: 1
.
	items := restInterface listCart: cartId .
	self assert: (items includes: 'validBook').
	self assert: (items occurrencesOf: 'validBook') equals: 1.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:24:00' prior: 51059844!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn items  catalog|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	catalog := storeTestObject defaultCatalog.
	
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog:catalog.
	"isbn := self getProductId."
	
	restInterface addToCart: cartId aBookId: 'validBook' withQuantity: 1.
	
	items := restInterface listCart: cartId .
	self assert: (items includes: 'validBook').
	self assert: (items occurrencesOf: 'validBook') equals: 1.! !

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:24:05'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:25:22' prior: 51059868!
test04CreateCartWithValidUserAndAItem
	|cartId clientId password restInterface isbn items  catalog|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	catalog := storeTestObject defaultCatalog.
	
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog:catalog.
	isbn := 'validBook'.
	
	restInterface addToCart: cartId aBookId: isbn  withQuantity: 1.
	
	items := restInterface listCart: cartId .
	self assert: (items includes: isbn).
	self assert: (items occurrencesOf: isbn) equals: 1.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:25:24'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/21/2021 10:25:26'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:25:26'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:26:16' prior: 51059677!
test01CreateCartWhenTheUserIsInvalid
	|invalidClientId password restInterface catalog|
	
	restInterface :=RestInterface  new.
	invalidClientId := self createInvalidClientId. 
	password := 'password'.
	catalog := storeTestObject defaultCatalog.
	
	self should:[ restInterface createCartFor: invalidClientId  authenticatedBy: password withCatalog: catalog.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:26:28' prior: 51059642!
test02CreateCartWhenTheUserIsInvalid
	|clientId invalidPassword restInterface catalog|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	restInterface add: clientId with: 'clientIdPass'.
	invalidPassword := ' '.
	
	catalog := storeTestObject defaultCatalog.
	
	self should:[ restInterface createCartFor: clientId  authenticatedBy: invalidPassword withCatalog: catalog.]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = RestInterface describeErrorCanNotCreateCartInvalidUser.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:26:46' prior: 51059661!
test03CreateCartWithValidUser
	|cartId clientId password restInterface catalog|
	
	restInterface := RestInterface  new.
	clientId := self createValidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	catalog := storeTestObject defaultCatalog.
	
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog: catalog.
	 
	self assert: (restInterface listCart: cartId) isEmpty.
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #RestInterfaceTest #test01CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #RestInterfaceTest #test02CreateCartWhenTheUserIsInvalid stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #RestInterfaceTest #test03CreateCartWithValidUser stamp: 'ms 6/21/2021 10:26:48'!
PASSED!

!testRun: #RestInterfaceTest #test04CreateCartWithValidUserAndAItem stamp: 'ms 6/21/2021 10:26:48'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:31:29'!
test05listPurchasesWithInvalidClient
	|cartId clientId password restInterface isbn items  catalog|
	
	restInterface := RestInterface  new.
	clientId := self createInvalidClientId. 
	password := 'clientIdPass'.
	restInterface add: clientId with: password.
	catalog := storeTestObject defaultCatalog.
	
	cartId := restInterface createCartFor: clientId authenticatedBy:password withCatalog:catalog.
	isbn := 'validBook'.
	
	restInterface addToCart: cartId aBookId: isbn  withQuantity: 1.
	
	items := restInterface listCart: cartId .
	self assert: (items includes: isbn).
	self assert: (items occurrencesOf: isbn) equals: 1.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/21/2021 10:36:38' prior: 51059830!
listCart: aCartId
	
	|cart|
	cart := carts at: aCartId .
	^cart listItems. 
	! !

!classRemoval: #StoreTestObjectsFactory stamp: 'ms 6/22/2021 14:59:47'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'ms 6/22/2021 14:59:48'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterface stamp: 'ms 6/22/2021 14:59:48'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/22/2021 14:59:48'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/22/2021 14:59:49'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/22/2021 14:59:49'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #AutenticationSistem stamp: 'ms 6/22/2021 14:59:50'!
Object subclass: #AutenticationSistem
	instanceVariableNames: 'validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterfaceTest stamp: 'ms 6/22/2021 14:59:50'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn storeTestObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/22/2021 14:59:51'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/22/2021 14:59:52'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Downloads\TusLibros (5).st----!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:00:11'!
PASSED!

Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'ms 6/22/2021 15:12:22'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard class methodsFor: 'instance creation' stamp: 'ms 6/22/2021 15:14:23'!
expiringOn: aMonth withOwner: anOwner  
	
	^self new initializeExpiringOn: aMonth! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:14:23' prior: 51061178!
notExpiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber + 1) withOwner: anOwner! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:14:23' prior: 51061171!
expiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber - 1) withOwner: anOwner! !

!methodRemoval: CreditCard class #expiringOn: stamp: 'ms 6/22/2021 15:14:23'!
expiringOn: aMonth 
	
	^self new initializeExpiringOn: aMonth!
!CreditCard class methodsFor: 'instance creation' stamp: 'ms 6/22/2021 15:14:53'!
expiringOn: aMonth withOwner: anOwner andWithNumber: aNumber   
	
	^self new initializeExpiringOn: aMonth! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:14:53' prior: 51061325!
expiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber - 1) withOwner: anOwner andWithNumber: aNumber! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:14:53' prior: 51061317!
notExpiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber + 1) withOwner: anOwner andWithNumber: aNumber! !

!methodRemoval: CreditCard class #expiringOn:withOwner: stamp: 'ms 6/22/2021 15:14:53'!
expiringOn: aMonth withOwner: anOwner  
	
	^self new initializeExpiringOn: aMonth!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:15:51' prior: 51061351!
notExpiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber + 1) withOwner: (self validUserId) andWithNumber: 1234567887654321! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:16:03' prior: 51061343!
expiredCreditCard
	
	^CreditCard expiringOn: (Month month: today monthIndex year: today yearNumber - 1) withOwner: (self validUserId) andWithNumber: 1234567887654321! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 15:21:56'!
test12CheckOut

	| userID userPassword catalog cartID isbn interface invalidUserID creditCardNumber creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	invalidUserID := 'David West'. 
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	interface chechOutACart: cartID withCreditCardNumber: (creditCard number) andCreditCardDateExpiration: (creditCard expirationDate) withOwner: (creditCard owner).
	
	self assert: 1
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

TestCase subclass: #CreditCardTest
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'ms 6/22/2021 15:28:03'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #CreditCardTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'ms 6/22/2021 15:28:19'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCardTest methodsFor: 'nil' stamp: 'ms 6/22/2021 15:28:43' overrides: 16927572!
setUp

	cartObjectTest := StoreTestObjectsFactory new! !
!CreditCardTest methodsFor: 'nil' stamp: 'ms 6/22/2021 15:29:53'!
test01CanNotCreateCreditCardWithEmptyName

	|  aExpirationDate|
	
	aExpirationDate := cartObjectTest createValidExpirationDate.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: '' andWithNumber: 1234567887654321]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeEmptyName . ]
	
	! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:30:49'!
test02CanNotCreateCreditCardWithANumberSizeOtherThan16

	| aExpirationDate |
	
	aExpirationDate := cartObjectTest createValidExpirationDate.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: cartObjectTest validUserId andWithNumber: 1234567887654321]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeinvalidCreditCardNumber ]! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:31:51'!
test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate

	| aCreditCard aExpirationDate owner creditCardNumber|
	
	aExpirationDate := cartObjectTest createValidExpirationDate.
	owner := cartObjectTest validUserId .
	creditCardNumber := 1234567887654321.
	
	aCreditCard := CreditCard expiringOn: aExpirationDate withOwner:  owner andWithNumber:creditCardNumber .
	
	self assert: (aCreditCard owner) equals: owner.
	self assert: (aCreditCard creditCardNumber) equals: creditCardNumber.
	self assert: (aCreditCard expirationDate) equals: aExpirationDate
	! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:32:13' prior: 51061445!
test01CanNotCreateCreditCardWithEmptyName

	|  aExpirationDate|
	
	aExpirationDate := cartObjectTest notExpiredCreditCard.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: '' andWithNumber: 1234567887654321]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeEmptyName . ]
	
	! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:32:16' prior: 51061459!
test02CanNotCreateCreditCardWithANumberSizeOtherThan16

	| aExpirationDate |
	
	aExpirationDate := cartObjectTest notExpiredCreditCard.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: cartObjectTest validUserId andWithNumber: 1234567887654321]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeinvalidCreditCardNumber ]! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:32:22' prior: 51061475!
test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate

	| aCreditCard aExpirationDate owner creditCardNumber|
	
	aExpirationDate := cartObjectTest notExpiredCreditCard.
	owner := cartObjectTest validUserId .
	creditCardNumber := 1234567887654321.
	
	aCreditCard := CreditCard expiringOn: aExpirationDate withOwner:  owner andWithNumber:creditCardNumber .
	
	self assert: (aCreditCard owner) equals: owner.
	self assert: (aCreditCard creditCardNumber) equals: creditCardNumber.
	self assert: (aCreditCard expirationDate) equals: aExpirationDate
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:36:35'!
FAILURE!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:36:35'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:36:35'!
ERROR!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:36:35'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:36:35'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:36:39'!
FAILURE!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:36:39'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:36:39'!
ERROR!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:36:39'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:36:39'!
ERROR!
!CreditCard class methodsFor: 'nil' stamp: 'ms 6/22/2021 15:37:24'!
errorDescribeEmptyName

	^'Can not create credit cart with an empty name'! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:37:36'!
errorDescribeinvalidCreditCardNumber

	^'Can not create a credit card with invalid credit card number'! !

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:37:46'!
FAILURE!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:37:46'!
FAILURE!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:37:49'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:37:49'!
FAILURE!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:37:49'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:37:50'!
ERROR!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:37:50'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:37:50'!
ERROR!
!CreditCard methodsFor: 'initialization' stamp: 'ms 6/22/2021 15:39:08'!
initializeExpiringOn: aMonth withOwner: anOwner  
	
	expiration := aMonth ! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:39:08' prior: 51061336!
expiringOn: aMonth withOwner: anOwner andWithNumber: aNumber   
	
	^self new initializeExpiringOn: aMonth withOwner: anOwner! !

!methodRemoval: CreditCard #initializeExpiringOn: stamp: 'ms 6/22/2021 15:39:08'!
initializeExpiringOn: aMonth 
	
	expiration := aMonth !
!CreditCard methodsFor: 'initialization' stamp: 'ms 6/22/2021 15:39:32'!
initializeExpiringOn: aMonth withOwner: anOwner withNumber: aNumber   
	
	expiration := aMonth ! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:39:33' prior: 51061864!
expiringOn: aMonth withOwner: anOwner andWithNumber: aNumber   
	
	^self new initializeExpiringOn: aMonth withOwner: anOwner withNumber: aNumber! !

!methodRemoval: CreditCard #initializeExpiringOn:withOwner: stamp: 'ms 6/22/2021 15:39:33'!
initializeExpiringOn: aMonth withOwner: anOwner  
	
	expiration := aMonth !
!CreditCard methodsFor: 'initialization' stamp: 'ms 6/22/2021 15:40:02' prior: 51061875!
initializeExpiringOn: aMonth withOwner: anOwner withNumber: aNumber   
	
	expiration := aMonth .
	owner  := anOwner .
	number := aNumber ! !
!CreditCard methodsFor: 'nil' stamp: 'ms 6/22/2021 15:40:50'!
owner

	^owner ! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:41:01'!
expirationDate

	^expiration ! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:41:08'!
creditCardNumber

	^number ! !
!CreditCard methodsFor: 'testing' stamp: 'ms 6/22/2021 15:41:39'!
validateCreditCardNumber: aCreditCardNumber.

	((aCreditCardNumber numberOfDigitsInBase: 10) ~= 16) ifTrue: [^Error signal: self class errorDescribeinvalidCreditCardNumber]! !
!CreditCard methodsFor: 'testing' stamp: 'ms 6/22/2021 15:41:48'!
validateName: aOwner

	aOwner isEmpty ifTrue: [^Error signal: self class errorDescribeEmptyName]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:41:52'!
FAILURE!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:41:52'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:41:52'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:41:52'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:43:59' prior: 51061374!
expiredCreditCard
	
	^CreditCard expiringOn: self expiredDate withOwner: (self validUserId) andWithNumber: 1234567887654321! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:44:13'!
expiredDate
(Month month: today monthIndex year: today yearNumber - 1)
	! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:44:20' prior: 51062025!
expiredCreditCard
	
	^CreditCard expiringOn: (self expiredDate) withOwner: (self validUserId) andWithNumber: 1234567887654321! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:44:46' prior: 51061365!
notExpiredCreditCard
	
	^CreditCard expiringOn: (self notExpiredDate) withOwner: (self validUserId) andWithNumber: 1234567887654321! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:44:53'!
notExpiredDate

	^(Month month: today monthIndex year: today yearNumber + 1)! !
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'ms 6/22/2021 15:45:02' prior: 51062032!
expiredDate
	
	^(Month month: today monthIndex year: today yearNumber - 1)
	! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:45:12' prior: 51061528!
test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate

	| aCreditCard aExpirationDate owner creditCardNumber|
	
	aExpirationDate := cartObjectTest notExpiredDate.
	owner := cartObjectTest validUserId .
	creditCardNumber := 1234567887654321.
	
	aCreditCard := CreditCard expiringOn: aExpirationDate withOwner:  owner andWithNumber:creditCardNumber .
	
	self assert: (aCreditCard owner) equals: owner.
	self assert: (aCreditCard creditCardNumber) equals: creditCardNumber.
	self assert: (aCreditCard expirationDate) equals: aExpirationDate
	! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:45:16' prior: 51061512!
test02CanNotCreateCreditCardWithANumberSizeOtherThan16

	| aExpirationDate |
	
	aExpirationDate := cartObjectTest notExpiredDate.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: cartObjectTest validUserId andWithNumber: 1234567887654321]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeinvalidCreditCardNumber ]! !
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:45:20' prior: 51061497!
test01CanNotCreateCreditCardWithEmptyName

	|  aExpirationDate|
	
	aExpirationDate := cartObjectTest notExpiredDate.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: '' andWithNumber: 1234567887654321]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeEmptyName . ]
	
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:45:23'!
FAILURE!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:45:23'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:45:23'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:45:23'!
ERROR!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:45:26'!
FAILURE!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:45:26'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:45:29'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:45:48'!
FAILURE!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:45:48'!
FAILURE!
!CreditCard methodsFor: 'initialization' stamp: 'ms 6/22/2021 15:46:51' prior: 51061895!
initializeExpiringOn: aMonth withOwner: anOwner withNumber: aNumber   
	
	self validateName: anOwner.
	self validateCreditCardNumber: aNumber.
	
	expiration := aMonth .
	owner  := anOwner .
	number := aNumber ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:46:53'!
FAILURE!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:46:53'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:46:53'!
ERROR!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:47:04'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:47:06'!
FAILURE!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:47:06'!
FAILURE!
!CreditCardTest methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 15:47:22' prior: 51062086!
test02CanNotCreateCreditCardWithANumberSizeOtherThan16

	| aExpirationDate |
	
	aExpirationDate := cartObjectTest notExpiredDate.
	
	self should: [CreditCard expiringOn: aExpirationDate withOwner: cartObjectTest validUserId andWithNumber: 12345678]
	raise: Error
	withExceptionDo: [ :anError |
			self assert: anError messageText = CreditCard errorDescribeinvalidCreditCardNumber ]! !

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:47:23'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:47:26'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:47:29'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:47:31'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:47:33'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:47:33'!
ERROR!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:47:33'!
ERROR!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 15:56:59' prior: 51061382!
test12CheckOut

	| userID userPassword catalog cartID isbn interface invalidUserID creditCardNumber creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	invalidUserID := 'David West'. 
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface chechOutACart: cartID withCreditCardNumber: (creditCard number) andCreditCardDateExpiration: (creditCard expirationDate) withOwner: (creditCard owner).
	
	self assert: 1
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 15:57:15' prior: 51062479!
test12CheckOut

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface chechOutACart: cartID withCreditCardNumber: (creditCard number) andCreditCardDateExpiration: (creditCard expirationDate) withOwner: (creditCard owner).
	
	self assert: 1
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 15:59:02' prior: 51062515!
test12CheckOut

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface chechOutACart: cartID withCreditCardNumber: (creditCard number) andCreditCardDateExpiration: (creditCard expirationDate) withOwner: (creditCard owner).
	
	self assert: transactionID equals: 1.
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 15:59:06'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:59:06'!
ERROR!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 15:59:06'!
ERROR!
!RestInterface methodsFor: 'nil' stamp: 'ms 6/22/2021 15:59:56'!
chechOutACart: cartID withCreditCardNumber: aNumber andCreditCardDateExpiration: anExpirationDate withOwner: anOwner

! !

Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/22/2021 16:00:42'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'ms 6/22/2021 16:00:54' prior: 51061052 overrides: 16896425!
initialize

	lastCartId := 0.
	lastTransactionId := 0.
	carts  := Dictionary new.
	listPurchases := Dictionary new.! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 16:06:30' prior: 51062682!
chechOutACart: cartID withCreditCardNumber: aNumber andCreditCardDateExpiration: anExpirationDate withOwner: anOwner

	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 16:06:33'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 16:06:33'!
ERROR!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 16:06:33'!
ERROR!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 16:06:50' prior: 51062549!
test12CheckOut

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface chechOutACart: cartID withCreditCardNumber: (creditCard creditCardNumber) andCreditCardDateExpiration: (creditCard expirationDate) withOwner: (creditCard owner).
	
	self assert: transactionID equals: 1.
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 16:06:59'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 16:07:49'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 16:07:51'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 16:07:51'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 16:08:15'!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface chechOutACart: cartID withCreditCardNumber: (creditCard creditCardNumber) andCreditCardDateExpiration: (creditCard expirationDate) withOwner: (creditCard owner).
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 16:43:56' prior: 51062713!
chechOutACart: cartID withCreditCardNumber: aNumber andCreditCardDateExpiration: anExpirationDate withOwner: anOwner
	
	|cart cashier|
	
	cart := carts at: cartID.
	cashier :=  
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 16:44:07' prior: 51063181!
chechOutACart: cartID withCreditCardNumber: aNumber andCreditCardDateExpiration: anExpirationDate withOwner: anOwner
	
	|cart cashier|
	
	cart := carts at: cartID.
	cashier :=  1.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 19:23:17'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 19:23:17'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 19:35:42' prior: 51063145!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface chechOutACart: cartID withCreditCard: creditCard.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 19:39:26'!
checkOutACart: cartID withCreditCard: aCreditCard
	
	|cart cashier aDate aMerchantProcessor |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchantProcessor on: aDate registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 19:39:54' prior: 51063303!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 19:55:13' prior: 51063335!
checkOutACart: cartID withCreditCard: aCreditCard
	
	|cart cashier aMerchantProcessor |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchantProcessor on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 19:58:20' prior: 51063382!
checkOutACart: cartID withCreditCard: aCreditCard
	
	|cart cashier |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: (CashierTest new) on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 20:10:58'!
checkOutACart: cartID withCreditCard: aCreditCard and: aMerchanProcessor
	
	|cart cashier |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 20:11:02' prior: 51063349!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard and: self.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

!methodRemoval: RestInterface #checkOutACart:withCreditCard:and: stamp: 'ms 6/22/2021 20:11:53'!
checkOutACart: cartID withCreditCard: aCreditCard and: aMerchanProcessor
	
	|cart cashier |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 20:12:05' prior: 51063424!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 20:12:07'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 20:12:07'!
ERROR!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 20:12:07'!
ERROR!

(CashierTest new)!

----STARTUP---- (22 June 2021 22:25:03) as C:\Users\malka\Documents\2021\Inge Sist 1\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\TusLibrostest13 que validar.st----!

!classDefinition: #RestInterfaceTest category: 'TusLibros' stamp: 'ms 6/22/2021 22:33:30'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn storeTestObject debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/22/2021 22:33:28'!
debit: anAmount from: aCreditCard 

	^debitBehavior value: anAmount value: aCreditCard ! !
!RestInterfaceTest methodsFor: 'set up' stamp: 'ms 6/22/2021 22:34:07' prior: 51064252 overrides: 16927572!
setUp

	lastClientId := 1.
	storeTestObject := StoreTestObjectsFactory new.	
	debitBehavior := [ :anAmount :aCreditCard | ]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:35:12' prior: 51064219!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	debitBehavior := [ :anAmount :aCreditCard | | debitedAmout debitedCreditCard | 
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:35:50' prior: 51064825!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID debitedAmout debitedCreditCard|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	debitBehavior := [ :anAmount :aCreditCard |  
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ].
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:36:42' prior: 51064863!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID debitedAmout debitedCreditCard|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	"debitBehavior := [ :anAmount :aCreditCard |  
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ]."
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard.
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 22:38:02'!
checkOutACart: cartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	|cart cashier aDate aMerchantProcessor |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchantProcessor on: aDate registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !

!methodRemoval: RestInterface #checkOutACart:withCreditCard: stamp: 'ms 6/22/2021 22:38:02'!
checkOutACart: cartID withCreditCard: aCreditCard
	
	|cart cashier aDate aMerchantProcessor |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchantProcessor on: aDate registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:38:31' prior: 51064900!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID debitedAmout debitedCreditCard|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	"debitBehavior := [ :anAmount :aCreditCard |  
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ]."
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 22:38:41' prior: 51064937!
checkOutACart: cartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	|cart cashier aDate aMerchantProcessor |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: aDate registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 22:38:58' prior: 51065004!
checkOutACart: cartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	|cart cashier |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime  now)registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 22:39:04' prior: 51065019!
checkOutACart: cartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	|cart cashier |
	
	cart := carts at: cartID.
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime  now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:39:08'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:39:09'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:39:09'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:39:09'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:39:09'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:39:09'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:39:09'!
PASSED!

!methodRemoval: RestInterface #chechOutACart:withCreditCardNumber:andCreditCardDateExpiration:withOwner: stamp: 'ms 6/22/2021 22:39:17'!
chechOutACart: cartID withCreditCardNumber: aNumber andCreditCardDateExpiration: anExpirationDate withOwner: anOwner
	
	|cart cashier|
	
	cart := carts at: cartID.
	cashier :=  1.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:39:39' prior: 51064185!
test12CheckOut

	| userID userPassword catalog cartID isbn interface creditCard transactionID|

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1.
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:39:41'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:39:41'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:40:54' prior: 51064966!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID  |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	"debitBehavior := [ :anAmount :aCreditCard |  
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ]."
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1."esto no estoy segura hay que preguntar a nico"
	
	"self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]"! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:41:04'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:41:04'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:41:39' prior: 51065292!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard transactionID  |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	"debitBehavior := [ :anAmount :aCreditCard |  
		debitedAmout := anAmount.
		debitedCreditCard := aCreditCard ]."
	
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:41:49' prior: 51065429!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:42:06' prior: 51065460!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
"	interface addToCart: cartID aBookId: isbn  withQuantity: 2."
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:42:54' prior: 51065487!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
"	interface addToCart: cartID aBookId: isbn  withQuantity: 2."
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = Cashier cartCanNotBeEmptyErrorMessage.]! !

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:43:00'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:45:14' prior: 51065514!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
"	interface addToCart: cartID aBookId: isbn  withQuantity: 2."
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface cartCanNotBeEmptyErrorMessage.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:45:38' prior: 51065544!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface cartCanNotBeEmptyErrorMessage.]! !

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:45:55'!
ERROR!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:45:55'!
ERROR!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:46:26' prior: 51065571!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartCanNotBeEmpty.]! !

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:46:28'!
ERROR!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:46:29'!
ERROR!
!RestInterface class methodsFor: 'describe errors' stamp: 'ms 6/22/2021 22:46:50'!
describeErrorCartCanNotBeEmpty

	^ 'Can not check out an empty cart'! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:46:52'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:46:52'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:47:59'!
test14CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface cartCanNotBeEmptyErrorMessage.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:48:28'!
test13CheckOutWithEmptyCart

	| userID userPassword catalog cartID interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartCanNotBeEmpty.]! !

!methodRemoval: RestInterfaceTest #test13CheckOutWithInvalid stamp: 'ms 6/22/2021 22:48:28'!
test13CheckOutWithInvalid

	| userID userPassword catalog cartID interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartCanNotBeEmpty.]!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:50:00' prior: 51065735!
test14CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"este test va a tirar error al intentar agregar => es necesario?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]! !

!testRun: #RestInterfaceTest #test14CheckOutWithInvalid stamp: 'ms 6/22/2021 22:50:05'!
FAILURE!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalid stamp: 'ms 6/22/2021 22:50:05'!
FAILURE!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:51:08'!
test15CheckOutWithInvalidCreditCard

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"este test va a tirar error al intentar agregar => es necesario?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:52:09' prior: 51065844!
test15CheckOutWithInvalidCreditCard

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCanNotChargeAnExpiredCreditCard]! !

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:52:11'!
ERROR!
!RestInterface class methodsFor: 'nil' stamp: 'ms 6/22/2021 22:52:22'!
describeErrorCanNotChargeAnExpiredCreditCard

	^'Can not charge an expired credit card'.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithEmptyCart stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalid stamp: 'ms 6/22/2021 22:52:24'!
FAILURE!

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:52:24'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalid stamp: 'ms 6/22/2021 22:52:24'!
FAILURE!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:54:04' prior: 51065873!
test15CheckOutWithInvalidCreditCard

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"lo mismo pasa con este test, que el error me lo va a tirar en cashier al querer crearlo..."
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCanNotChargeAnExpiredCreditCard]! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/22/2021 22:55:28' prior: 51065034!
checkOutACart: cartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	|cart cashier |
	
	cart := carts at: cartID.
	self assertIsNotExpired: aCreditCard on: (DateAndTime  now).
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime  now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'nil' stamp: 'ms 6/22/2021 22:55:46'!
assertIsNotExpired: aCreditCard on: aDate
	
	(aCreditCard isExpiredOn: aDate) ifTrue: [ self error: self describeErrorCanNotChargeAnExpiredCreditCard ]! !

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:55:55'!
FAILURE!

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:55:55'!
FAILURE!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/22/2021 22:56:39' prior: 51066065!
assertIsNotExpired: aCreditCard on: aDate
	
	(aCreditCard isExpiredOn: aDate) ifTrue: [ Error signal: self class describeErrorCanNotChargeAnExpiredCreditCard ]! !

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:56:41'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:56:54' prior: 51066018!
test15CheckOutWithInvalidCreditCard

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"lo mismo pasa con este test, que el error me lo va a tirar en cashier al querer crearlo..., es necesario testear?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCanNotChargeAnExpiredCreditCard]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:57:19'!
test14CheckOutWithInvalidCartID

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"este test va a tirar error al intentar agregar => es necesario?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]! !

!methodRemoval: RestInterfaceTest #test14CheckOutWithInvalid stamp: 'ms 6/22/2021 22:57:19'!
test14CheckOutWithInvalid

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"este test va a tirar error al intentar agregar => es necesario?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:57:33'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithEmptyCart stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/22/2021 22:57:34'!
FAILURE!

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:57:34'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/22/2021 22:57:34'!
FAILURE!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:58:28' prior: 51066123!
test14CheckOutWithInvalidCartID

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID :=''.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"este test va a tirar error al intentar agregar => es necesario?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]! !

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithEmptyCart stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/22/2021 22:58:34'!
ERROR!

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:58:34'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/22/2021 22:58:34'!
ERROR!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/22/2021 22:59:38' prior: 51066290!
test14CheckOutWithInvalidCartID

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	
	userID :=''.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	"este test va a tirar error al intentar crear el cartId, pues o esta mal el user o la pass => es necesario?"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithEmptyCart stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/22/2021 22:59:40'!
ERROR!

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/22/2021 22:59:40'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/22/2021 22:59:40'!
ERROR!

Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Clock category: 'TusLibros' stamp: 'ms 6/23/2021 18:14:11'!
Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 18:23:08'!
test17CheckCartIsInvalidAfter30min

	| userID userPassword catalog cartID isbn interface creditCard clock|

	interface := storeTestObject defaultInterface.
	clock := Clock new.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	 clock forward: 30. "anAmountOfTime"
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartIDIsInvalidAfter30Min]! !
!Clock methodsFor: 'nil' stamp: 'ms 6/23/2021 18:24:19'!
forward: anAmountOfTime

	! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 18:24:28' prior: 51066520!
test17CheckCartIsInvalidAfter30min

	| userID userPassword catalog cartID isbn interface creditCard clock|

	interface := storeTestObject defaultInterface.
	clock := Clock new.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	 clock forward: 30. 
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartIDIsInvalidAfter30Min]! !
!RestInterface class methodsFor: 'describe errors' stamp: 'ms 6/23/2021 18:25:13'!
describeErrorCartIDIsInvalidAfter30Min

	^ 'Can not continue buying with a cartID after 30 minutes'! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/23/2021 18:26:21'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 18:26:19' prior: 51064573!
createCartFor: aUserID  authenticatedBy: aUserPassword withCatalog: catalog 

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	time := 0.
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 18:26:37' prior: 51066597!
createCartFor: aUserID  authenticatedBy: aUserPassword withCatalog: catalog 

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	time := Clock new.
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 18:27:05' prior: 51066616!
createCartFor: aUserID  authenticatedBy: aUserPassword withCatalog: catalog 

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	time := Clock new.
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !

!classDefinition: #Clock category: 'TusLibros' stamp: 'ms 6/23/2021 18:27:25'!
Object subclass: #Clock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Clock methodsFor: 'nil' stamp: 'ms 6/23/2021 18:27:24' overrides: 16896425!
initialize

	time := 0.! !
!Clock methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 18:28:01' prior: 51066548!
forward: anAmountOfTime
	
	time := time + anAmountOfTime 	! !
!Clock methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 18:28:07' prior: 51066665!
forward: anAmountOfTime
	
	time := time + anAmountOfTime ! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/23/2021 18:33:32'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId clocl'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 18:33:32' prior: 51066635!
createCartFor: aUserID  authenticatedBy: aUserPassword withCatalog: catalog 

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	clocl := Clock new.
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/23/2021 18:33:44'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 18:33:44' prior: 51066685!
createCartFor: aUserID  authenticatedBy: aUserPassword withCatalog: catalog 

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	clock := Clock new.
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 18:35:05' prior: 51066714!
createCartFor: aUserID  authenticatedBy: aUserPassword withCatalog: catalog 

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !

Object subclass: #SessionCart
	instanceVariableNames: 'cart clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #SessionCart category: 'TusLibros' stamp: 'ms 6/23/2021 18:42:41'!
Object subclass: #SessionCart
	instanceVariableNames: 'cart clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 18:45:01' prior: 51066552!
test17CheckCartIsInvalidAfter30min

	| userID userPassword catalog cartID isbn interface creditCard sessionCart|

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	 sessionCart forward: 30. 
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartIDIsInvalidAfter30Min]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 18:45:03'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test09listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test12CheckOut stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test13CheckOutWithEmptyCart stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test14CheckOutWithInvalidCartID stamp: 'ms 6/23/2021 18:45:04'!
ERROR!

!testRun: #RestInterfaceTest #test15CheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 18:45:04'!
PASSED!

!testRun: #RestInterfaceTest #test17CheckCartIsInvalidAfter30min stamp: 'ms 6/23/2021 18:45:04'!
ERROR!
!SessionCart methodsFor: 'nil' stamp: 'ms 6/23/2021 18:45:38'!
forward: anAmountOfTime

	clock := clock + anAmountOfTime! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 18:46:48' prior: 51066900!
forward: anAmountOfTime

	clock := clock + anAmountOfTime
	clock >= 30 ifTrue:[ "^error de la interfaz"]! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 18:55:56' prior: 51066905!
forward: anAmountOfTime

	clock := clock + anAmountOfTime! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:11:59'!
test1730MinutosDspNoSePuedeHacerElAdd

	| userID userPassword catalog cartID isbn interface creditCard sessionCart|

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	catalog := storeTestObject defaultCatalog.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword withCatalog:catalog.
	
	sessionCart forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!classRemoval: #StoreTestObjectsFactory stamp: 'ms 6/23/2021 19:13:03'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #SessionCart stamp: 'ms 6/23/2021 19:13:03'!
Object subclass: #SessionCart
	instanceVariableNames: 'cart clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'ms 6/23/2021 19:13:03'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterface stamp: 'ms 6/23/2021 19:13:03'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/23/2021 19:13:04'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Clock stamp: 'ms 6/23/2021 19:13:04'!
Object subclass: #Clock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/23/2021 19:13:04'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/23/2021 19:13:05'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterfaceTest stamp: 'ms 6/23/2021 19:13:05'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn storeTestObject debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCardTest stamp: 'ms 6/23/2021 19:13:05'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/23/2021 19:13:05'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/23/2021 19:13:06'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Downloads\TusLibros (7).st----!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:14:16'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:14:17'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:14:17'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:15:21'!
test1730MinutosDspNoSePuedeHacerElAdd

	| userID userPassword catalog cartID isbn interface creditCard sessionCart|

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	sessionCart forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:15:31'!
ERROR!

Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId catalog sessionCarts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/23/2021 19:17:01'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId catalog sessionCarts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:17:26' prior: 51068354!
test1730MinutosDspNoSePuedeHacerElAdd

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterface methodsFor: 'initialization' stamp: 'ms 6/23/2021 19:17:47' prior: 51068037 overrides: 16896425!
initialize

	lastCartId := 0.
	lastTransactionId := 0.
	carts  := Dictionary new.
	listPurchases := Dictionary new.
	sessionCarts  := Dictionary new.! !

Object subclass: #SessionCart
	instanceVariableNames: 'cart time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #SessionCart category: 'TusLibros' stamp: 'ms 6/23/2021 19:18:57'!
Object subclass: #SessionCart
	instanceVariableNames: 'cart time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:18:58' prior: 51068006!
createCartFor: aUserID  authenticatedBy: aUserPassword  

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	sessionCarts at: lastCartId put: SessionCart new.
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !
!SessionCart methodsFor: 'nil' stamp: 'ms 6/23/2021 19:19:56' overrides: 16896425!
initialize

	! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:20:18' prior: 51068444!
createCartFor: aUserID  authenticatedBy: aUserPassword  

	| cart cartsOfUser |
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	sessionCarts at: lastCartId put: (SessionCart createSeasionWithCartID: lastCartId).
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !
!SessionCart class methodsFor: 'nil' stamp: 'ms 6/23/2021 19:20:50'!
createSeasionWithCartID: aCartID

	^ self new createSessionWith: aCartID.! !

!classDefinition: #SessionCart category: 'TusLibros' stamp: 'ms 6/23/2021 19:21:27'!
Object subclass: #SessionCart
	instanceVariableNames: 'cart time cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:21:26'!
createSessionWith: aCartID

	cartID := aCartID .
	time:= 0.

	! !

Object subclass: #SessionCart
	instanceVariableNames: 'time cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #SessionCart category: 'TusLibros' stamp: 'ms 6/23/2021 19:21:33'!
Object subclass: #SessionCart
	instanceVariableNames: 'time cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!methodRemoval: SessionCart #initialize stamp: 'ms 6/23/2021 19:21:38'!
initialize

	!

Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Clock category: 'TusLibros' stamp: 'ms 6/23/2021 19:22:10'!
Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:22:11' prior: 51068501!
createSessionWith: aCartID

	cartID := aCartID .
	time:= Clock new.

	! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:22:25' prior: 51068531!
createSessionWith: aCartID

	cartID := aCartID .
	time:= 0

	! !

!classRemoval: #Clock stamp: 'ms 6/23/2021 19:22:29'!
Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:22:40' prior: 51068537!
createSessionWith: aCartID

	cartID := aCartID .
	time:= 0.

	! !
!RestInterface methodsFor: 'nil' stamp: 'ms 6/23/2021 19:23:46'!
sessionCartBy: cartID 

	^ sessionCarts at: cartID ifAbsent: [^ Error signal: self class describeErrorSessionCartIsExpired]! !
!RestInterface class methodsFor: 'nil' stamp: 'ms 6/23/2021 19:24:02'!
describeErrorSessionCartIsExpired

	^'Session Cart Is Expired'! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:26:13' prior: 51068553!
sessionCartBy: cartID 

	^ sessionCarts at: cartID! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:26:16' prior: 51068566!
sessionCartBy: cartID 

	^ sessionCarts at: cartID ifAbsent: [^ Error signal: self class describeErrorSessionCartIsExpired]! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:26:37' prior: 51068571!
sessionCartBy: cartID 

	^ sessionCarts at: cartID ifAbsent: [^ Error signal: self class describeErroInvalidCartID]! !
!SessionCart methodsFor: 'nil' stamp: 'ms 6/23/2021 19:27:31'!
forwardTime: anAmountOfTime

	time := time + anAmountOfTime .! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:28:21' prior: 51067998!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity
	
    | cart |
	
    cart := self validateAndReturnCartOf: aCartId.

    cart add: aQuantity of: anIsbn.! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:30:49' prior: 51068589!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity
	
    | cart |
	
    cart := self validateAndReturnCartOf: aCartId.
    
    self validateCartIDIsExpired: aCartId ifTrue: [^ Error signal: self class  describeErrorSessionCartIsExpired].

    cart add: aQuantity of: anIsbn.! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:30:55' prior: 51068597!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity
	
    | cart |
	
    cart := self validateAndReturnCartOf: aCartId.
    
    (self validateCartIDIsExpired: aCartId) ifTrue: [^ Error signal: self class  describeErrorSessionCartIsExpired].

    cart add: aQuantity of: anIsbn.! !
!SessionCart methodsFor: 'nil' stamp: 'ms 6/23/2021 19:33:01'!
time

	^time! !
!RestInterface methodsFor: 'nil' stamp: 'ms 6/23/2021 19:33:03'!
validateCartIDIsExpired: aCartID

	|sesionCart|
	
	sesionCart := sessionCarts at:aCartID.
	
	((sesionCart time) >= 30) ifTrue: [].! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:33:42' prior: 51068623!
validateCartIDIsExpired: aCartID

	|sesionCart|
	
	sesionCart := sessionCarts at:aCartID.
	
	((sesionCart time) > 30) ifTrue: [^ Error signal: self class describeErrorSessionCartIsExpired ].! !

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:33:58'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:34:00'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:34:06'!
ERROR!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:34:06'!
FAILURE!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:34:06'!
FAILURE!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:34:06'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:34:06'!
ERROR!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:34:06'!
ERROR!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:34:06'!
ERROR!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:34:06'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:34:07'!
ERROR!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:34:07'!
PASSED!

!classDefinition: #Clock category: 'TusLibros' stamp: 'ms 6/23/2021 19:34:16'!
Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:21:58' prior: 51068548!
createSessionWith: aCartID

	cartID := aCartID .
	time:= Clock new.

	! !

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:34:24'!
ERROR!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:34:24'!
ERROR!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:34:57' prior: 51068768!
createSessionWith: aCartID

	cartID := aCartID .
	time:= 0.

	! !

!classRemoval: #Clock stamp: 'ms 6/23/2021 19:35:04'!
Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:35:11'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:35:14'!
ERROR!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:35:14'!
FAILURE!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:35:14'!
FAILURE!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:35:14'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:35:14'!
ERROR!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:35:14'!
ERROR!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:35:14'!
ERROR!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:35:14'!
ERROR!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:35:14'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:35:16'!
ERROR!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:35:16'!
FAILURE!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:35:16'!
FAILURE!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:35:16'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:35:16'!
ERROR!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:35:16'!
ERROR!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:35:16'!
ERROR!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:35:16'!
ERROR!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:35:16'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:35:27'!
ERROR!

(sesionCart time)!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:36:16'!
ERROR!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:36:37' prior: 51068631!
validateCartIDIsExpired: aCartID

	|sesionCart|
	
	sesionCart := sessionCarts at:aCartID.
	
	((sesionCart time) > 30) ifTrue: [^ Error signal: self class describeErrorSessionCartIsExpired ].
	
	^true! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:37:03' prior: 51068609!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity
	
    | cart |
	
    cart := self validateAndReturnCartOf: aCartId.
    
    self validateCartIDIsExpired: aCartId.

    cart add: aQuantity of: anIsbn.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:37:06'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:37:06'!
PASSED!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'ms 6/23/2021 19:37:13' prior: 51069030!
validateCartIDIsExpired: aCartID

	|sesionCart|
	
	sesionCart := sessionCarts at:aCartID.
	
	((sesionCart time) > 30) ifTrue: [^ Error signal: self class describeErrorSessionCartIsExpired ].
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:37:14'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:37:14'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:38:01'!
test1830MinutosDspNoSePuedeHacerElListCart

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:48:29' prior: 51069286!
test1830MinutosDspNoSePuedeHacerElListCart

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listCart: cartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:48:45'!
PASSED!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:48:45'!
FAILURE!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:48:45'!
FAILURE!
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:49:01' prior: 51068024!
listCart: aCartId  

	| cart |

	cart := self validateAndReturnCartOf: aCartId.
    	self validateCartIDIsExpired: aCartId.
	^ cart listItems.
! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/23/2021 19:49:04' prior: 51069458!
listCart: aCartId  

	| cart |

	cart := self validateAndReturnCartOf: aCartId.
	
    	self validateCartIDIsExpired: aCartId.
	
	^ cart listItems.
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:49:06'!
PASSED!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:49:06'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:49:16'!
test1930MinutosDspNoSePuedeHacerElListP

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listCart: cartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:49:38' prior: 51069591!
test1930MinutosDspNoSePuedeHacerElListP

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listPurchasesWithID: userID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:49:55'!
PASSED!

!testRun: #RestInterfaceTest #test1930MinutosDspNoSePuedeHacerElListP stamp: 'ms 6/23/2021 19:49:55'!
FAILURE!

!testRun: #RestInterfaceTest #test1930MinutosDspNoSePuedeHacerElListP stamp: 'ms 6/23/2021 19:49:55'!
FAILURE!
!RestInterface methodsFor: 'list purchases' stamp: 'ms 6/23/2021 19:50:56' prior: 51067968!
listPurchasesWithID: userID andPassword: userPassword 
"Puede ser mas de un carrito"

	| listCarts listPur |

	(self validate: userID with: userPassword ) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	
	listPur := OrderedCollection new.
	
	listCarts := listPurchases at: userID ifAbsent: [OrderedCollection new].
	listCarts do: [ :cartID | 
		self validateCartIDIsExpired: cartID.
		listPur addAllLast: ((carts at: cartID) listItems)].
	
	^ listPur
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:51:00'!
PASSED!

!testRun: #RestInterfaceTest #test1930MinutosDspNoSePuedeHacerElListP stamp: 'ms 6/23/2021 19:51:00'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:51:17'!
test2030MinutosDspNoSePuedeHacerElcheck

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listPurchasesWithID: userID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:51:57' prior: 51069906!
test2030MinutosDspNoSePuedeHacerElcheck

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test1930MinutosDspNoSePuedeHacerElListP stamp: 'ms 6/23/2021 19:51:59'!
PASSED!

!testRun: #RestInterfaceTest #test2030MinutosDspNoSePuedeHacerElcheck stamp: 'ms 6/23/2021 19:51:59'!
FAILURE!

!testRun: #RestInterfaceTest #test2030MinutosDspNoSePuedeHacerElcheck stamp: 'ms 6/23/2021 19:52:00'!
FAILURE!
!RestInterface methodsFor: 'check out' stamp: 'ms 6/23/2021 19:52:29' prior: 51068043!
checkOutACart: aCartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	| cart cashier |
	
	cart := self validateAndReturnCartOf: aCartID.
	
	self validateCartIDIsExpired: aCartID.
	
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime now) registeringOn: (OrderedCollection new).
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test1930MinutosDspNoSePuedeHacerElListP stamp: 'ms 6/23/2021 19:52:31'!
PASSED!

!testRun: #RestInterfaceTest #test2030MinutosDspNoSePuedeHacerElcheck stamp: 'ms 6/23/2021 19:52:31'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:56:56'!
test17CanNotAddItemsWithAnExpiredCartID

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!methodRemoval: RestInterfaceTest #test1730MinutosDspNoSePuedeHacerElAdd stamp: 'ms 6/23/2021 19:56:56'!
test1730MinutosDspNoSePuedeHacerElAdd

	| userID userPassword catalog cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:57:21'!
test18CanNotListCartItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listCart: cartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!methodRemoval: RestInterfaceTest #test1830MinutosDspNoSePuedeHacerElListCart stamp: 'ms 6/23/2021 19:57:21'!
test1830MinutosDspNoSePuedeHacerElListCart

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listCart: cartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:59:25'!
test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listPurchasesWithID: userID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!methodRemoval: RestInterfaceTest #test1930MinutosDspNoSePuedeHacerElListP stamp: 'ms 6/23/2021 19:59:25'!
test1930MinutosDspNoSePuedeHacerElListP

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listPurchasesWithID: userID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 19:59:56'!
test20CanNotCheckOutWithAnExpiredCartID

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!methodRemoval: RestInterfaceTest #test2030MinutosDspNoSePuedeHacerElcheck stamp: 'ms 6/23/2021 19:59:56'!
test2030MinutosDspNoSePuedeHacerElcheck

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/23/2021 20:01:12'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 20:02:05' prior: 51070229!
test17CanNotAddItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 20:02:30' prior: 51070561!
test17CanNotAddItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface creditCard |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 20:02:37' prior: 51070586!
test17CanNotAddItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/23/2021 20:02:39'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 20:03:19' prior: 51070278!
test18CanNotListCartItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listCart: cartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 20:03:24' prior: 51070609!
test17CanNotAddItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/23/2021 20:03:39' prior: 51070329!
test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listPurchasesWithID: userID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterface methodsFor: 'list purchases' stamp: 'ms 6/24/2021 15:14:11' prior: 51069767!
listPurchasesWithID: userID andPassword: userPassword 
"Puede ser mas de un carrito"

	| listCarts listPur totalAmount|

	(self validate: userID with: userPassword ) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	
	listPur := OrderedCollection new.
	
	listCarts := listPurchases at: userID ifAbsent: [OrderedCollection new].
	listCarts do: [ :cartID | 
		self validateCartIDIsExpired: cartID.
		listPur addAllLast: ((carts at: cartID) listItems).
		
		totalAmount := totalAmount + (carts at: cartID) total.
		
		].
	
	listPur add: totalAmount .
	
	^ listPur
! !
!RestInterface methodsFor: 'list purchases' stamp: 'ms 6/24/2021 15:14:35' prior: 51070707!
listPurchasesWithID: userID andPassword: userPassword 
"Puede ser mas de un carrito"

	| listCarts listPur totalAmount|

	(self validate: userID with: userPassword ) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	totalAmount := 0.
	listPur := OrderedCollection new.
	
	listCarts := listPurchases at: userID ifAbsent: [OrderedCollection new].
	listCarts do: [ :cartID | 
		self validateCartIDIsExpired: cartID.
		listPur addAllLast: ((carts at: cartID) listItems).
		
		totalAmount := totalAmount + (carts at: cartID) total.
		
		].
	
	listPur add: totalAmount .
	
	^ listPur
! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:21:27' prior: 51067536!
test11listPurchasesUserWithManyCarts

	| userID userPassword cart1ID cart2ID isbn1 isbn2 interface purchases |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.

	isbn1 := storeTestObject itemSellByTheStore.
	isbn2 := storeTestObject otherItemSellByTheStore.

	cart1ID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cart1ID aBookId: isbn1  withQuantity: 2.

	cart2ID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cart2ID aBookId: isbn2  withQuantity: 1.
	
	purchases := interface listPurchasesWithID: userID andPassword: userPassword.
	self deny: purchases isEmpty.
	self assert: purchases size equals: 3.
	self assert: (purchases at: 1) equals: isbn1.
	self assert: (purchases at: 2) equals: isbn1.
	self assert: (purchases at: 3) equals: isbn2.
	self assert: (purchases at: 4) equals: 40.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:23:13'!
ERROR!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:23:13'!
FAILURE!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:23:13'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:23:16'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:23:27'!
ERROR!

((carts at: cartID) listItems)!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:25:28'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:25:32'!
ERROR!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:26:33' prior: 51067521!
test10listPurchasesWithEmptyCart

	| userID userPassword items interface |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.

	interface createCartFor: userID authenticatedBy: userPassword.

	items := interface listPurchasesWithID: userID andPassword: userPassword.
	self deny: items isEmpty.
	self assert: (items at: 1) equals: 0.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:26:37'!
ERROR!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:26:37'!
FAILURE!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:26:37'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:27:04' prior: 51070924!
test10listPurchasesWithEmptyCart

	| userID userPassword items interface |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.

	interface createCartFor: userID authenticatedBy: userPassword.

	items := interface listPurchasesWithID: userID andPassword: userPassword.
	self deny: items isEmpty.
	self assert: items size equals: 1.
	self assert: (items at: 1) equals: 0.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:27:07'!
ERROR!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:27:07'!
FAILURE!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:27:07'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:27:33'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:27:52'!
ERROR!
!Cart methodsFor: 'total' stamp: 'ms 6/24/2021 15:28:24' prior: 51067734!
total

	^ items sum: [ :anItem | catalog at: anItem ] ifEmpty: 0! !

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:28:25'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:28:27'!
FAILURE!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:28:27'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:28:27'!
FAILURE!

((carts at: cartID) listItems)!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:31:57'!
FAILURE!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:31:57'!
FAILURE!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:32:05' prior: 51070751!
test11listPurchasesUserWithManyCarts

	| userID userPassword cart1ID cart2ID isbn1 isbn2 interface purchases |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.

	isbn1 := storeTestObject itemSellByTheStore.
	isbn2 := storeTestObject otherItemSellByTheStore.

	cart1ID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cart1ID aBookId: isbn1  withQuantity: 2.

	cart2ID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cart2ID aBookId: isbn2  withQuantity: 1.
	
	purchases := interface listPurchasesWithID: userID andPassword: userPassword.
	self deny: purchases isEmpty.
	self assert: purchases size equals: 4.
	self assert: (purchases at: 1) equals: isbn1.
	self assert: (purchases at: 2) equals: isbn1.
	self assert: (purchases at: 3) equals: isbn2.
	self assert: (purchases at: 4) equals: 40.! !

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:32:06'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:32:07'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:32:08'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:33:44'!
test13listPurchasesWithInvalidUserPassword

	| userID userPassword cartID isbn interface invalidUserID |

	interface := storeTestObject defaultInterface.
	userID := storeTestObject validUserId.
	invalidUserID := 'David West'. 
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.

	self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]! !

Object subclass: #Clock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Clock category: 'TusLibros' stamp: 'ms 6/24/2021 15:38:12'!
Object subclass: #Clock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'initialize' stamp: 'ms 6/24/2021 15:38:18' prior: 51068781!
createSessionWith: aCartID

	cartID := aCartID .
	time:= Clock new.

	! !
!SessionCart methodsFor: 'time reference' stamp: 'ms 6/24/2021 15:38:33' prior: 51068584!
forwardTime: anAmountOfTime

	time forwardTime: anAmountOfTime.! !
!Clock methodsFor: 'nil' stamp: 'ms 6/24/2021 15:38:53'!
forwardTime: anAmountOfTime

	time := time + anAmountOfTime ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:39:25'!
FAILURE!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:39:25'!
FAILURE!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:39:25'!
FAILURE!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:39:25'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:39:25'!
ERROR!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:39:27'!
ERROR!
!SessionCart methodsFor: 'time reference' stamp: 'ms 6/24/2021 15:40:12' prior: 51068620!
time

	^time time! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:40:19'!
FAILURE!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:40:19'!
FAILURE!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:40:19'!
FAILURE!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:40:19'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:40:19'!
ERROR!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:40:22'!
ERROR!
!Clock methodsFor: 'nil' stamp: 'ms 6/24/2021 15:40:31'!
time 

	^time! !
!Clock methodsFor: 'nil' stamp: 'ms 6/24/2021 15:40:42' overrides: 16896425!
initialize

	time := 0.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test13CanCheckOutCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test14CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:40:46'!
PASSED!

!classDefinition: #SessionCart category: 'TusLibros' stamp: 'ms 6/24/2021 15:41:27'!
Object subclass: #SessionCart
	instanceVariableNames: 'clock cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:41:27' prior: 51071563!
forwardTime: anAmountOfTime

	clock forwardTime: anAmountOfTime.! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:41:27' prior: 51071704!
time

	^clock time! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:41:27' prior: 51071557!
createSessionWith: aCartID

	cartID := aCartID .
	clock:= Clock new.

	! !

!classRemoval: #StoreTestObjectsFactory stamp: 'ms 6/24/2021 15:42:30'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today validUsers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #SessionCart stamp: 'ms 6/24/2021 15:42:31'!
Object subclass: #SessionCart
	instanceVariableNames: 'clock cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'ms 6/24/2021 15:42:31'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterface stamp: 'ms 6/24/2021 15:42:31'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId catalog sessionCarts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'ms 6/24/2021 15:42:32'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration owner number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Clock stamp: 'ms 6/24/2021 15:42:32'!
Object subclass: #Clock
	instanceVariableNames: 'time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'ms 6/24/2021 15:42:32'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'ms 6/24/2021 15:42:33'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #RestInterfaceTest stamp: 'ms 6/24/2021 15:42:33'!
TestCase subclass: #RestInterfaceTest
	instanceVariableNames: 'lastClientId lastIsbn storeTestObject debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCardTest stamp: 'ms 6/24/2021 15:42:34'!
TestCase subclass: #CreditCardTest
	instanceVariableNames: 'cartObjectTest'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'ms 6/24/2021 15:42:34'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'ms 6/24/2021 15:42:34'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of C:\Users\malka\Downloads\TusLibros (8).st----!
!Clock methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:43:38' overrides: 16896425!
initialize

	time := 0.! !

!methodRemoval: Clock #initializeTime: stamp: 'ms 6/24/2021 15:43:43'!
initializeTime: aTime

	time := aTime.!

!methodRemoval: Clock class #initialize: stamp: 'ms 6/24/2021 15:43:58'!
initialize: aTime

	^ self new initializeTime: aTime!
!SessionCart methodsFor: 'initialize' stamp: 'ms 6/24/2021 15:44:08' prior: 51073401!
createSessionWith: aCartID

	cartID := aCartID .
	time:= Clock new.

	! !

!classDefinition: #SessionCart category: 'TusLibros' stamp: 'ms 6/24/2021 15:44:17'!
Object subclass: #SessionCart
	instanceVariableNames: 'clock cartID'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:44:17' prior: 51073398!
time

	^clock! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:44:17' prior: 51073540!
createSessionWith: aCartID

	cartID := aCartID .
	clock:= Clock new.

	! !
!SessionCart methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:44:18' prior: 51073393!
forwardTime: anAmountOfTime

	clock := clock + anAmountOfTime .! !
!SessionCart methodsFor: 'time reference' stamp: 'ms 6/24/2021 15:44:21' prior: 51073553!
time

	^clock time! !
!SessionCart methodsFor: 'time reference' stamp: 'ms 6/24/2021 15:44:28' prior: 51073563!
forwardTime: anAmountOfTime

	clock forwardTime: anAmountOfTime! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:44:30'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:49:38' prior: 51072672!
test14CanCheckOutCart

	| userID userPassword cartID isbn interface creditCard transactionID|

	interface :=  RestInterface authenticateWith: storeTestObject validUsers AcceptingItemsOf: storeTestObject defaultCatalog registeringOn: OrderedCollection new .
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.

	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1.! !
!RestInterface class methodsFor: 'initialization' stamp: 'ms 6/24/2021 15:51:32'!
authenticateWith: validUsers AcceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchanProssesor   

	^ self new authenticateWith: validUsers acceptingItemsOf: aCatalog registeringOn: aSalesBook! !
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:51:32' prior: 51073518!
defaultInterface

	^ RestInterface authenticateWith: self validUsers AcceptingItemsOf: self defaultCatalog registeringOn: OrderedCollection new throught: aMerchanProssesor.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:51:32' prior: 51073706!
test14CanCheckOutCart

	| userID userPassword cartID isbn interface creditCard transactionID|

	interface :=  RestInterface authenticateWith: storeTestObject validUsers AcceptingItemsOf: storeTestObject defaultCatalog registeringOn: OrderedCollection new throught: aMerchanProssesor .
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.

	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1.! !

!methodRemoval: RestInterface class #authenticateWith:AcceptingItemsOf:registeringOn: stamp: 'ms 6/24/2021 15:51:32'!
authenticateWith: validUsers AcceptingItemsOf: aCatalog registeringOn: aSalesBook  

	^ self new authenticateWith: validUsers acceptingItemsOf: aCatalog registeringOn: aSalesBook!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 15:51:58' prior: 51073751!
test14CanCheckOutCart

	| userID userPassword cartID isbn interface creditCard transactionID|

	interface :=  RestInterface authenticateWith: storeTestObject validUsers AcceptingItemsOf: storeTestObject defaultCatalog registeringOn: OrderedCollection new throught: self .
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.

	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1.! !
!RestInterface methodsFor: 'authentication' stamp: 'ms 6/24/2021 15:53:03'!
authenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchanProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:53:03' prior: 51073732!
authenticateWith: validUsers AcceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchanProssesor   

	^ self new authenticateWith: validUsers acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchanProssesor! !

!methodRemoval: RestInterface #authenticateWith:acceptingItemsOf:registeringOn: stamp: 'ms 6/24/2021 15:53:03'!
authenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook  

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'ms 6/24/2021 15:53:57'!
Object subclass: #RestInterface
	instanceVariableNames: 'autenticationSistem lastCartId carts listPurchases validUsers lastTransactionId catalog sessionCarts saleBook merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'authentication' stamp: 'ms 6/24/2021 15:53:56' prior: 51073813!
authenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
	merchantProcessor := aMerchantProssesor   
! !
!RestInterface class methodsFor: 'initialization' stamp: 'ms 6/24/2021 15:54:06' prior: 51073822!
authenticateWith: validUsers AcceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	^ self new authenticateWith: validUsers acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor! !
!RestInterface methodsFor: 'authentication' stamp: 'ms 6/24/2021 15:58:56'!
initializeAndAuthenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
	merchantProcessor := aMerchantProssesor   
! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:58:56' prior: 51073863!
authenticateWith: validUsers AcceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	^ self new initializeAndAuthenticateWith: validUsers acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor! !

!methodRemoval: RestInterface #authenticateWith:acceptingItemsOf:registeringOn:throught: stamp: 'ms 6/24/2021 15:58:56'!
authenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
	merchantProcessor := aMerchantProssesor   
!
!RestInterface methodsFor: 'authentication' stamp: 'ms 6/24/2021 15:59:10' prior: 51073873!
initializeAndAuthenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
	merchantProcessor := aMerchantProssesor  .
	lastCartId := 0.
	lastTransactionId := 0.
	carts  := Dictionary new.
	listPurchases := Dictionary new.
	sessionCarts  := Dictionary new.
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:59:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:59:15'!
PASSED!

!methodRemoval: RestInterface #initialize stamp: 'ms 6/24/2021 15:59:34'!
initialize

	lastCartId := 0.
	lastTransactionId := 0.
	carts  := Dictionary new.
	listPurchases := Dictionary new.
	sessionCarts  := Dictionary new.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:59:35'!
PASSED!
!RestInterface methodsFor: 'initialization' stamp: 'ms 6/24/2021 15:59:51'!
initializeAuthenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
	merchantProcessor := aMerchantProssesor  .
	lastCartId := 0.
	lastTransactionId := 0.
	carts  := Dictionary new.
	listPurchases := Dictionary new.
	sessionCarts  := Dictionary new.
! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 15:59:51' prior: 51073884!
authenticateWith: validUsers AcceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	^ self new initializeAuthenticateWith: validUsers acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor! !

!methodRemoval: RestInterface #initializeAndAuthenticateWith:acceptingItemsOf:registeringOn:throught: stamp: 'ms 6/24/2021 15:59:51'!
initializeAndAuthenticateWith: users acceptingItemsOf: aCatalog registeringOn: aSalesBook throught: aMerchantProssesor   

	validUsers := users.
	catalog := aCatalog.
	saleBook := aSalesBook.
	merchantProcessor := aMerchantProssesor  .
	lastCartId := 0.
	lastTransactionId := 0.
	carts  := Dictionary new.
	listPurchases := Dictionary new.
	sessionCarts  := Dictionary new.
!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 15:59:54'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 15:59:55'!
PASSED!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:00:36' prior: 51073787!
test14CanCheckOutCart

	| userID userPassword cartID isbn interface creditCard transactionID|

	interface :=  self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.

	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	transactionID := interface checkOutACart: cartID withCreditCard: creditCard andWith: self. 
	
	self assert: transactionID equals: 1.! !
!RestInterfaceTest methodsFor: 'nil' stamp: 'ms 6/24/2021 16:00:49'!
defaultInterface

	^RestInterface authenticateWith: storeTestObject validUsers AcceptingItemsOf: storeTestObject defaultCatalog registeringOn: OrderedCollection new throught: self .! !

!methodRemoval: StoreTestObjectsFactory #defaultInterface stamp: 'ms 6/24/2021 16:01:18'!
defaultInterface

	^ RestInterface authenticateWith: self validUsers AcceptingItemsOf: self defaultCatalog registeringOn: OrderedCollection new throught: aMerchanProssesor.!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:01:26'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:01:26'!
ERROR!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:01:26'!
ERROR!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:01:27'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:01:27'!
ERROR!
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:01:32' prior: 51072406!
test01CanNotCreateCartWithInvalidUserID

	| invalidUserID userPassword interface |

	interface := self defaultInterface.
	invalidUserID := 'David West'. 
	userPassword := storeTestObject validUserPassword.

	self should:[interface createCartFor: invalidUserID authenticatedBy: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]
	! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'ms 6/24/2021 16:01:40' prior: 51074377!
defaultInterface

	^RestInterface authenticateWith: storeTestObject validUsers AcceptingItemsOf: storeTestObject defaultCatalog registeringOn: OrderedCollection new throught: self .! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:01:46' prior: 51072423!
test02CanNotCreateCartWithInvalidUserPassword

	| invalidUserPassword userID interface |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	invalidUserPassword := 'California'. 
	
	self should:[interface createCartFor: userID authenticatedBy: invalidUserPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]
	! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:01:50' prior: 51072440!
test03CanCreateCartWithValidUser

	| userID userPassword cartID interface |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	cartID := interface createCartFor: userID authenticatedBy: userPassword.

	self assert: (interface listCart: cartID) isEmpty.! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:01:54' prior: 51072454!
test04CanAddItemsToCart

    | cartID isbn items userID userPassword interface |

	interface := self defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.
	
	cartID := interface createCartFor: userID authenticatedBy: userPassword.

    	interface addToCart: cartID aBookId: isbn  withQuantity: 1.

    	items := interface listCart: cartID.
	
	self assert: (items includes: isbn).
	self assert: (items occurrencesOf: isbn) equals: 1.! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:01:57' prior: 51072474!
test05CanNotAddItemsToCartWithInvalidID

    | isbn userID userPassword interface invalidCartID |

	interface := self defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.
	invalidCartID := 0.
	
	interface createCartFor: userID authenticatedBy: userPassword.
	isbn := storeTestObject itemSellByTheStore.

	self should:[interface addToCart: invalidCartID aBookId: isbn withQuantity: 1]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:02' prior: 51072495!
test06CanNotAddInvalidItemsToCart

    | userID userPassword interface cartID invalidItem |

	interface := self defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.
	invalidItem := 'Design Patterns'.
	
	cartID := interface createCartFor: userID authenticatedBy: userPassword.

	self should:[interface addToCart: cartID aBookId: invalidItem withQuantity: 1]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidItem.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:06' prior: 51072515!
test07CanNotAddInvalidQuantityOfItemToCart

    | userID userPassword interface cartID isbn invalidQuantity |

	interface := self defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.
	invalidQuantity := -1.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.

	self should:[interface addToCart: cartID aBookId: isbn withQuantity: invalidQuantity]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidQuantity.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:10' prior: 51072537!
test08CanNotListCarWithInvalidCartID

    | interface invalidCartID |

	interface := self defaultInterface.
	invalidCartID := 0.
	
	self should:[interface listCart: invalidCartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID .]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:13' prior: 51072550!
test09CanListCartAndHasTheCorrectAmountOfItems

	| userID userPassword cartID isbn1 isbn2 interface |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn1 := storeTestObject itemSellByTheStore.
	isbn2 := storeTestObject otherItemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn1 withQuantity: 2.
	interface addToCart: cartID aBookId: isbn2 withQuantity: 3.
		
	self assert: ((interface listCart: cartID) occurrencesOf: isbn1) equals: 2.
	self assert: ((interface listCart: cartID) occurrencesOf: isbn2) equals: 3.! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:17' prior: 51072575!
test10listPurchasesWithEmptyCart

	| userID userPassword items interface |

	interface := self defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.

	interface createCartFor: userID authenticatedBy: userPassword.

	items := interface listPurchasesWithID: userID andPassword: userPassword.
	self assert: (items size) equals: 1.
	self assert: (items at: 1) equals: 0.! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:21' prior: 51072591!
test11listPurchasesUserWithManyCarts

	| userID userPassword cart1ID cart2ID isbn1 isbn2 interface purchases |

	interface := self defaultInterface.
	userID := storeTestObject validUserId. 
	userPassword := storeTestObject validUserPassword.

	isbn1 := storeTestObject itemSellByTheStore.
	isbn2 := storeTestObject otherItemSellByTheStore.

	cart1ID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cart1ID aBookId: isbn1  withQuantity: 2.

	cart2ID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cart2ID aBookId: isbn2  withQuantity: 1.
	
	purchases := interface listPurchasesWithID: userID andPassword: userPassword.
	self deny: purchases isEmpty.
	self assert: purchases size equals: 4.
	self assert: (purchases at: 1) equals: isbn1.
	self assert: (purchases at: 2) equals: isbn1.
	self assert: (purchases at: 3) equals: isbn2.
	self assert: (purchases at: 4) equals: 40.
! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:25' prior: 51072624!
test12listPurchasesWithInvalidUser

	| userID userPassword cartID isbn interface invalidUserID |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	invalidUserID := 'David West'. 
	userPassword := storeTestObject validUserPassword.
	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.

	self should:[	interface listPurchasesWithID: invalidUserID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:30' prior: 51072648!
test13listPurchasesWithInvalidUserPassword

	| userID invalidUserPassword cartID isbn interface userPassword |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	invalidUserPassword := 'Florida'.
	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.

	self should:[	interface listPurchasesWithID: userID andPassword: invalidUserPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidUserIDOrPassword.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:34' prior: 51072694!
test15CanNotCheckOutAnEmptyCart

	| userID userPassword cartID interface creditCard |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.
	
	creditCard := storeTestObject notExpiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCartCanNotBeEmpty.]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:38' prior: 51072715!
test16CanNotCheckOutWithInvalidCartID

	| invalidCartID interface creditCard |

	interface := self defaultInterface.
	creditCard := storeTestObject notExpiredCreditCard.
	invalidCartID := 0.	

	self should:[	interface checkOutACart: invalidCartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErroInvalidCartID]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:41' prior: 51072731!
test17CanNotAddItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface addToCart: cartID aBookId: isbn  withQuantity: 2.]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:44' prior: 51072753!
test18CanNotCheckOutWithInvalidCreditCard

	| userID userPassword cartID isbn interface creditCard |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.

	self should:[	interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorCanNotChargeAnExpiredCreditCard]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:48' prior: 51072778!
test19CanNotListCartItemsWithAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listCart: cartID]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:51' prior: 51072801!
test20CanNotCheckOutWithAnExpiredCartID

	| userID userPassword cartID isbn interface creditCard |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.
	
	creditCard := storeTestObject expiredCreditCard.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[interface checkOutACart: cartID withCreditCard: creditCard andWith: self]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !
!RestInterfaceTest methodsFor: 'testing' stamp: 'ms 6/24/2021 16:02:56' prior: 51072827!
test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID

	| userID userPassword cartID isbn interface  |

	interface := self defaultInterface.
	userID := storeTestObject validUserId.
	userPassword := storeTestObject validUserPassword.

	isbn := storeTestObject itemSellByTheStore.

	cartID := interface createCartFor: userID authenticatedBy: userPassword.
	
	interface addToCart: cartID aBookId: isbn  withQuantity: 2.
	
	(interface sessionCartBy: cartID) forwardTime: 35. 
	
	self should:[		interface listPurchasesWithID: userID andPassword: userPassword]
	raise: Error
	withExceptionDo: [ :anError |
		self assert: anError messageText = RestInterface describeErrorSessionCartIsExpired]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:03:01'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:03:27'!
PASSED!
!RestInterface methodsFor: 'list purchases' stamp: 'ms 6/24/2021 16:11:27' prior: 51073177!
listPurchasesWithID: userID andPassword: userPassword 
"Puede ser mas de un carrito"

	| listCarts listPur totalAmount |

	totalAmount := 0.

	(self validate: userID with: userPassword ) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].
	
	listPur := OrderedCollection new.
	
	listCarts := listPurchases at: userID ifAbsent: [OrderedCollection new].
	listCarts do: [ :cartID | 
		
		listPur addAllLast: (self listCart: cartID ).
		totalAmount := totalAmount + (carts at: cartID) total.

        ].

	listPur add: totalAmount.
	
	^ listPur
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:11:29'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:11:30'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:11:30'!
PASSED!
!RestInterface methodsFor: 'validations' stamp: 'ms 6/24/2021 16:13:24'!
validateUser: aUserID with: aUserPassword
	
	(self validate: aUserID with: aUserPassword) ifFalse: [^Error signal: self class describeErroInvalidUserIDOrPassword].! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/24/2021 16:13:33' prior: 51073215!
createCartFor: aUserID  authenticatedBy: aUserPassword  

	| cart cartsOfUser |
	
	self validateUser: aUserID with: aUserPassword.
	
	lastCartId := lastCartId +1.
	cart := Cart acceptingItemsOf: catalog .
	sessionCarts at: lastCartId put: (SessionCart createSeasionWithCartID: lastCartId).
	carts at: lastCartId put: cart.
	
	cartsOfUser := listPurchases at: aUserID ifAbsent: [OrderedCollection new].
	cartsOfUser add: lastCartId.
	listPurchases at: aUserID put: cartsOfUser.
	
	^ lastCartId! !
!RestInterface methodsFor: 'validations' stamp: 'ms 6/24/2021 16:14:25' prior: 51073266!
validate: aUserId with: aPassword 

	(validUsers includesKey: aUserId) 
	ifTrue: [ ^ aPassword isEqualTo: (validUsers at: aUserId )] .
	
	^ false.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:14:28'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:14:29'!
PASSED!
!RestInterface methodsFor: 'list purchases' stamp: 'ms 6/24/2021 16:14:46' prior: 51075217!
listPurchasesWithID: userID andPassword: userPassword 
"Puede ser mas de un carrito"

	| listCarts listPur totalAmount |

	totalAmount := 0.

	self validateUser: userID with: userPassword.
	
	listPur := OrderedCollection new.
	
	listCarts := listPurchases at: userID ifAbsent: [OrderedCollection new].
	listCarts do: [ :cartID | 
		
		listPur addAllLast: (self listCart: cartID ).
		totalAmount := totalAmount + (carts at: cartID) total.

        ].

	listPur add: totalAmount.
	
	^ listPur
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:14:48'!
PASSED!
!RestInterface methodsFor: 'list purchases' stamp: 'ms 6/24/2021 16:15:18' prior: 51075530!
listPurchasesWithID: userID andPassword: userPassword 

	| listCarts listPur totalAmount |

	totalAmount := 0.

	self validateUser: userID with: userPassword.
	
	listPur := OrderedCollection new.
	
	listCarts := listPurchases at: userID ifAbsent: [OrderedCollection new].
	listCarts do: [ :cartID | 
		
		listPur addAllLast: (self listCart: cartID ).
		totalAmount := totalAmount + (carts at: cartID) total.

        ].

	listPur add: totalAmount.
	
	^ listPur
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/24/2021 16:17:58' prior: 51073250!
checkOutACart: aCartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	| cart cashier |
	
	cart := self validateAndReturnCartOf: aCartID.
	
	self validateCartIDIsExpired: aCartID.
	
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime now) registeringOn: saleBook.
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !
!RestInterface methodsFor: 'validations' stamp: 'ms 6/24/2021 16:20:40' prior: 51073274!
validateAndReturnCartOf: aCartID
	

	self validateCartIDIsExpired: aCartID.
	
    ^ carts at: aCartID ifAbsent: [^Error signal: self class describeErroInvalidCartID].
! !
!RestInterface methodsFor: 'validations' stamp: 'ms 6/24/2021 16:21:05' prior: 51075712!
validateAndReturnCartOf: aCartID
	
	|cart|
    cart := carts at: aCartID ifAbsent: [^Error signal: self class describeErroInvalidCartID].

	self validateCartIDIsExpired: aCartID..
	
	^ cart! !
!RestInterface methodsFor: 'validations' stamp: 'ms 6/24/2021 16:21:10' prior: 51075721!
validateAndReturnCartOf: aCartID
	
	|cart|
	
   	cart := carts at: aCartID ifAbsent: [^Error signal: self class describeErroInvalidCartID].

	self validateCartIDIsExpired: aCartID..
	
	^ cart! !
!RestInterface methodsFor: 'validations' stamp: 'ms 6/24/2021 16:21:17' prior: 51075730!
validateAndReturnCartOf: aCartID
	
	|cart|
	
   	cart := carts at: aCartID ifAbsent: [^Error signal: self class describeErroInvalidCartID].

	self validateCartIDIsExpired: aCartID.
	
	^ cart! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/24/2021 16:21:28' prior: 51073206!
addToCart: aCartId aBookId: anIsbn withQuantity: aQuantity
	
    | cart |
	
    cart := self validateAndReturnCartOf: aCartId. 

    cart add: aQuantity of: anIsbn.! !
!RestInterface methodsFor: 'cart' stamp: 'ms 6/24/2021 16:21:34' prior: 51073235!
listCart: aCartId  

	| cart |

	cart := self validateAndReturnCartOf: aCartId.
	
	^ cart listItems.
! !
!RestInterface methodsFor: 'check out' stamp: 'ms 6/24/2021 16:21:39' prior: 51075696!
checkOutACart: aCartID withCreditCard: aCreditCard andWith: aMerchanProcessor 
	
	| cart cashier |
	
	cart := self validateAndReturnCartOf: aCartID.
	
	cashier :=  Cashier toCheckout: cart charging: aCreditCard throught: aMerchanProcessor on: (DateAndTime now) registeringOn: saleBook.
	
	cashier checkOut.
	
	lastTransactionId := lastTransactionId +1.
	^ lastTransactionId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CreditCardTest #test01CanNotCreateCreditCardWithEmptyName stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CreditCardTest #test02CanNotCreateCreditCardWithANumberSizeOtherThan16 stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardWasCreatedCorrectlyAndWeCanAccessToNameNumberAndExpirationDate stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test01CanNotCreateCartWithInvalidUserID stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test02CanNotCreateCartWithInvalidUserPassword stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test03CanCreateCartWithValidUser stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test04CanAddItemsToCart stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test05CanNotAddItemsToCartWithInvalidID stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test06CanNotAddInvalidItemsToCart stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test07CanNotAddInvalidQuantityOfItemToCart stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test08CanNotListCarWithInvalidCartID stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test09CanListCartAndHasTheCorrectAmountOfItems stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test10listPurchasesWithEmptyCart stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test11listPurchasesUserWithManyCarts stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test12listPurchasesWithInvalidUser stamp: 'ms 6/24/2021 16:21:40'!
PASSED!

!testRun: #RestInterfaceTest #test13listPurchasesWithInvalidUserPassword stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test14CanCheckOutCart stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test15CanNotCheckOutAnEmptyCart stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test16CanNotCheckOutWithInvalidCartID stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test17CanNotAddItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test18CanNotCheckOutWithInvalidCreditCard stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test19CanNotListCartItemsWithAnExpiredCartID stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test20CanNotCheckOutWithAnExpiredCartID stamp: 'ms 6/24/2021 16:21:41'!
PASSED!

!testRun: #RestInterfaceTest #test21CanNotListPurchasesFromAClientWhoHasAnExpiredCartID stamp: 'ms 6/24/2021 16:21:41'!
PASSED!