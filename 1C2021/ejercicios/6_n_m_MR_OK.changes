----STARTUP---- (13 May 2021 21:04:24) as F:\Computacion\Ingeniería de Software 1\CuisUniversity\CuisUniversity-4532.image!


TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverTests category: 'Mars-Rover' stamp: 'BW 5/13/2021 21:11:45'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'BW 5/13/2021 21:13:52'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTests methodsFor: 'no messages' stamp: 'BW 5/13/2021 21:12:19'!
test01
	|aMarsRover x y|
	aMarsRover := MarsRover withX: 0 Y: 0. ! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/13/2021 21:15:02' prior: 50989388!
test01
	|aMarsRover x y|
	x := 0.
	y := 0.
	aMarsRover := MarsRover position: x@y orientation: #N. ! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/13/2021 21:23:20' prior: 50989394!
test01 "testear 1) solo el estado, 2) el procesamiento del paquete o 3) los dos? (2)"
	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRover category: 'Mars-Rover' stamp: 'BW 5/13/2021 21:23:44'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:24:05'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'BW 5/13/2021 21:24:34'!
position: aPoint orientation: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializePosition: aPoint orientation: aSymbol ! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/13/2021 21:26:27' prior: 50989401!
test01 "testear 1) solo el estado, 2) el procesamiento del paquete o 3) los dos? (2)"
		"Testear COMPORTAMIENTO y assertar estado."
	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:34:11'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'BW 5/13/2021 21:34:50' prior: 50989429!
position: aPoint orientation: aSymbol 
	^self new initializePosition: aPoint orientation: aSymbol ! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:34:56'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:35:04'!
ERROR!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:35:36'!
ERROR!

!classDefinition: #MarsRover category: 'Mars-Rover' stamp: 'BW 5/13/2021 21:35:55'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRover category: 'Mars-Rover' stamp: 'BW 5/13/2021 21:35:55'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation point symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRover methodsFor: 'initialization' stamp: 'BW 5/13/2021 21:35:55'!
initializePosition: aPoint orientation: aSymbol 
	self shouldBeImplemented.
	point := aPoint.
	symbol := aSymbol.! !
!MarsRover methodsFor: 'initialization' stamp: 'BW 5/13/2021 21:36:27' prior: 50989485!
initializePosition: aPoint orientation: anOrientation
	position := aPoint.
	orientation := anOrientation.! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:36:30'!
ERROR!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/13/2021 21:36:47'!
processPackage: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/13/2021 21:36:53' prior: 50989500!
processPackage: aString 
	! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:36:55'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'BW 5/13/2021 21:37:07'!
position
	self shouldBeImplemented.
	^position! !
!MarsRover methodsFor: 'testing' stamp: 'BW 5/13/2021 21:37:15' prior: 50989511!
position
	
	^position! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:37:17'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:37:17'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/13/2021 21:37:34' prior: 50989439!
test01 "testear 1) solo el estado, 2) el procesamiento del paquete o 3) los dos? (2)"
		"Testear COMPORTAMIENTO y assertar estado."
	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:37:37'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'BW 5/13/2021 21:37:51'!
orientation
	self shouldBeImplemented.
	^orientation! !
!MarsRover methodsFor: 'testing' stamp: 'BW 5/13/2021 21:37:54' prior: 50989544!
orientation
	
	^orientation! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:37:56'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:37:56'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:38:00'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:38:00'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/13/2021 21:39:03'!
test02 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  x@(y+1) equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/13/2021 21:39:26' prior: 50989562!
test02 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/13/2021 21:39:28'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/13/2021 21:41:01' prior: 50989505!
processPackage: aString 
	position := (position x)@(position y + 1)! !

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/13/2021 21:41:03'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:41:03'!
FAILURE!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/13/2021 21:41:03'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:41:03'!
FAILURE!

(position x)@(position y + 1)!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/13/2021 21:42:16'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/13/2021 21:45:32' prior: 50989592!
processPackage: aPackage 
	position := (position x)@(position y + 1)! !

----QUIT----(13 May 2021 23:06:10) CuisUniversity-4532.image priorSource: 21046780!

----STARTUP---- (14 May 2021 20:31:51) as F:\Computacion\Ingeniería de Software 1\CuisUniversity\CuisUniversity-4532.image!


!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:34:58'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:35:01'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:35:01'!
FAILURE!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:35:01'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:35:01'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 20:36:09' prior: 50989610!
processPackage: aPackage 
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)]! !

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:36:12'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:36:15'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:36:15'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:36:15'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:37:00'!
test03

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:37:13' prior: 50989649!
test03

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:37:32'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 20:38:02' prior: 50989634!
processPackage: aPackage 
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].! !

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:38:11'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:38:12'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:38:12'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:38:12'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:43:08'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:43:08'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:43:08'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:43:08'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:44:04'!
test04

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:44:31' prior: 50989706!
test04

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #O equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:44:55' prior: 50989720!
test04

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #O equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test04 stamp: 'BW 5/14/2021 20:44:57'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 20:45:52' prior: 50989679!
processPackage: aPackage 
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].
	aPackage = 'l' ifTrue: [orientation := #O].! !

!testRun: #MarsRoverTests #test04 stamp: 'BW 5/14/2021 20:45:54'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:45:54'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:45:54'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:45:54'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'BW 5/14/2021 20:45:54'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:46:12'!
test05

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test05 stamp: 'BW 5/14/2021 20:46:14'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 20:46:42' prior: 50989748!
processPackage: aPackage 
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].
	aPackage = 'l' ifTrue: [orientation := #O].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test05 stamp: 'BW 5/14/2021 20:47:11'!
PASSED!

!testRun: #MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:47:11'!
PASSED!

!testRun: #MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:47:11'!
PASSED!

!testRun: #MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:47:11'!
PASSED!

!testRun: #MarsRoverTests #test04 stamp: 'BW 5/14/2021 20:47:11'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'BW 5/14/2021 20:47:11'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:49:45'!
test01EmptyPackageShouldntChangePositionOrState "testear 1) solo el estado, 2) el procesamiento del paquete o 3) los dos? (2)"
		"Testear COMPORTAMIENTO y assertar estado."
	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test01 stamp: 'BW 5/14/2021 20:49:45'!
test01 "testear 1) solo el estado, 2) el procesamiento del paquete o 3) los dos? (2)"
		"Testear COMPORTAMIENTO y assertar estado."
	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:51:42'!
test02ForwardPackageFacingNorthShouldIncrementY 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test02 stamp: 'BW 5/14/2021 20:51:43'!
test02 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:52:10'!
test03BackwardsPackageFacingNorthShouldIncrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test03 stamp: 'BW 5/14/2021 20:52:10'!
test03

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:52:18'!
test03BackwardsPackageFacingNorthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test03BackwardsPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 20:52:18'!
test03BackwardsPackageFacingNorthShouldIncrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:53:07'!
test04LeftPackageFacingNorthShouldChangeOrientationToWest

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #O equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test04 stamp: 'BW 5/14/2021 20:53:07'!
test04

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #O equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:53:15' prior: 50989928!
test04LeftPackageFacingNorthShouldChangeOrientationToWest

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #W equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 20:53:17'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 20:53:30' prior: 50989784!
processPackage: aPackage 
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 20:53:31'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 20:53:31'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 20:53:31'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 20:53:31'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 20:53:31'!
PASSED!

!testRun: #MarsRoverTests #test05 stamp: 'BW 5/14/2021 20:53:31'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:53:58'!
test05RightPackageFacingNorthShouldChangeOrientationToEast

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test05 stamp: 'BW 5/14/2021 20:53:58'!
test05

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 20:56:51'!
test06

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #E.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 20:56:54'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 20:59:14' prior: 50989974!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := (position x + 1)@(position y)].
	
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 20:59:15'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 20:59:15'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 20:59:16'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 20:59:16'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 20:59:16'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 20:59:16'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 20:59:16'!
PASSED!

|tupla|
tupla := (4@5).
tupla at: 1 put: 3.
tupla!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:02:56' prior: 50990048!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	
	aPackage = 'f' ifTrue: [position := (position x)@(position y + 1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:02:58'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:02:58'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:02:58'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:02:58'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:02:58'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:02:58'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:03:17' prior: 50990087!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	
	aPackage = 'f' ifTrue: [position := position + (0@1)].
	aPackage = 'b' ifTrue: [position := (position x)@(position y - 1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:03:18'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:03:18'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:03:18'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:03:18'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:03:18'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:03:18'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:03:38' prior: 50990122!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	
	aPackage = 'f' ifTrue: [position := position + (0@1)].
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:03:40'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:03:40'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:03:40'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:03:40'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:03:40'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:03:40'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:06:18'!
test07

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #O.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:06:33' prior: 50990191!
test07

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #O.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:06:38'!
FAILURE!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:06:45'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:07:14' prior: 50990157!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	(aPackage = 'f' and: [orientation = #W]) ifTrue: [^position := position + (-1@0)].
	
	aPackage = 'f' ifTrue: [position := position + (0@1)].
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:07:16'!
FAILURE!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:07:23' prior: 50990205!
test07

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #W.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:07:24'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:07:24'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:07:24'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:07:24'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:07:24'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:07:24'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:07:25'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:07:25'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:07:51' prior: 50990242!
test07

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #W.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:07:51'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:07:51'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:08:13'!
test08

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #S.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@(y-1) equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:08:16'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:08:48' prior: 50990223!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	(aPackage = 'f' and: [orientation = #W]) ifTrue: [^position := position + (-1@0)].
	(aPackage = 'f' and: [orientation = #S]) ifTrue: [^position := position + (0@-1)].
	
	aPackage = 'f' ifTrue: [position := position + (0@1)].
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:09:00'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:09:00'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:09:00'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:09:01'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:09:01'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:09:01'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:09:01'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:09:01'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:09:01'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:11:07' prior: 50990337!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	(aPackage = 'f' and: [orientation = #W]) ifTrue: [^position := position + (-1@0)].
	(aPackage = 'f' and: [orientation = #S]) ifTrue: [^position := position + (0@-1)].
	aPackage = 'f' ifTrue: [position := position + (0@1)].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:11:50' prior: 50990384!
processPackage: aPackage 
	
	(aPackage = 'f' and: [orientation = #E]) ifTrue: [^position := position + (1@0)].
	(aPackage = 'f' and: [orientation = #W]) ifTrue: [^position := position + (-1@0)].
	(aPackage = 'f' and: [orientation = #S]) ifTrue: [^position := position + (0@-1)].
	aPackage = 'f' ifTrue: [position := position + (0@1)].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:14:40' prior: 50990402!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [^position := position + (1@0)].
		orientation = #W ifTrue: [^position := position + (-1@0)].
		orientation = #S ifTrue: [^position := position + (0@-1)].
		position := position + (0@1) ].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:15:24' prior: 50990420!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [^position := position + (1@0)].
		orientation = #W ifTrue: [^position := position + (-1@0)].
		orientation = #S ifTrue: [^position := position + (0@-1)].
		orientation = #N ifTrue: [^position := position + (0@1)] ].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:15:30'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:15:30'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:15:30'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:15:30'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:15:30'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:15:30'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:15:31'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:15:31'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:16:36' prior: 50990436!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [position := position + (1@0)].
		orientation = #W ifTrue: [position := position + (-1@0)].
		orientation = #S ifTrue: [position := position + (0@-1)].
		orientation = #N ifTrue: [position := position + (0@1)] ].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:17:02' prior: 50990479!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [position := position + (1@0)].
		orientation = #W ifTrue: [position := position + (-1@0)].
		orientation = #S ifTrue: [position := position + (0@-1)].
		orientation = #N ifTrue: [position := position + (0@1)]. ].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:17:54'!
goForward	
	
	orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)].
	
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:18:20' prior: 50990496!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[self goForward].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:18:21'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:18:21'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:18:21'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:18:21'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:18:22'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:18:22'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:18:22'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:18:22'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:18:57' prior: 50990524!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[self goForward].
	
	aPackage = 'b' ifTrue: [position := position + (0@-1)].
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:18:59'!
PASSED!

!testRun: #MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:18:59'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:19:52'!
test06ForwardPackageFacingEastShouldIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #E.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test06 stamp: 'BW 5/14/2021 21:19:52'!
test06

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #E.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:20:22'!
test07ForwardPackageFacingWeastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #W.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test07 stamp: 'BW 5/14/2021 21:20:22'!
test07

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #W.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:20:45'!
test08ForwardPackageFacingSouthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #S.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@(y-1) equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!methodRemoval: MarsRoverTests #test08 stamp: 'BW 5/14/2021 21:20:45'!
test08

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #S.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@(y-1) equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:22:15'!
test09BackwardsPackageFacingEastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #E.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x-1)@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:22:19'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:23:58' prior: 50990560!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[self goForward].
	
	
	aPackage = 'b' ifTrue: [
		orientation = #E ifTrue: [position := position + (-1@0)].
		position := position + (0@-1).
		].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:25:10' prior: 50990694!
processPackage: aPackage 
	
	aPackage = 'f' ifTrue:[self goForward].
	
	
	aPackage = 'b' ifTrue: [
		orientation = #E ifTrue: [position := position + (-1@0)].
		orientation = #W ifTrue: [position := position + (1@0)].
		orientation = #S ifTrue: [position := position + (0@1)].
		orientation = #N ifTrue: [position := position + (0@-1)] ].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:25:47'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:25:48'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:25:48'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:25:48'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:26:10'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:26:11'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:34:33' prior: 50990706!
processPackage: aPackage

	 
	
	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [position := position + (1@0)].
		orientation = #W ifTrue: [position := position + (-1@0)].
		orientation = #S ifTrue: [position := position + (0@-1)].
		orientation = #N ifTrue: [position := position + (0@1)] ].
	
	
	aPackage = 'b' ifTrue: [
		orientation = #E ifTrue: [position := position + (-1@0)].
		orientation = #W ifTrue: [position := position + (1@0)].
		orientation = #S ifTrue: [position := position + (0@1)].
		orientation = #N ifTrue: [position := position + (0@-1)] ].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:35:49' prior: 50990797!
processPackage: aPackage

	 
	
	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [position := position + (1@0)].
		orientation = #W ifTrue: [position := position + (-1@0)].
		
		orientation = #S ifTrue: [position := position + (0@-1)].
		orientation = #N ifTrue: [position := position + (0@1)] ].
	
	
	aPackage = 'b' ifTrue: [
		orientation = #E ifTrue: [position := position + (-1@0)].
		orientation = #W ifTrue: [position := position + (1@0)].
		
		orientation = #S ifTrue: [position := position + (0@1)].
		orientation = #N ifTrue: [position := position + (0@-1)] ].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:35:54' prior: 50990821!
processPackage: aPackage

	aPackage = 'f' ifTrue:[
		orientation = #E ifTrue: [position := position + (1@0)].
		orientation = #W ifTrue: [position := position + (-1@0)].
		
		orientation = #S ifTrue: [position := position + (0@-1)].
		orientation = #N ifTrue: [position := position + (0@1)] ].
	
	
	aPackage = 'b' ifTrue: [
		orientation = #E ifTrue: [position := position + (-1@0)].
		orientation = #W ifTrue: [position := position + (1@0)].
		
		orientation = #S ifTrue: [position := position + (0@1)].
		orientation = #N ifTrue: [position := position + (0@-1)] ].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:37:39' prior: 50990845!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward ].
	
	
	aPackage = 'b' ifTrue: [
		orientation = #E ifTrue: [position := position + (-1@0)].
		orientation = #W ifTrue: [position := position + (1@0)].
		
		orientation = #S ifTrue: [position := position + (0@1)].
		orientation = #N ifTrue: [position := position + (0@-1)] ].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:38:32'!
goBackwards
	
	orientation = #E ifTrue: [position := position + (-1@0)].
	orientation = #W ifTrue: [position := position + (1@0)].
		
	orientation = #S ifTrue: [position := position + (0@1)].
	orientation = #N ifTrue: [position := position + (0@-1)]. 
	
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:39:06'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:39:06'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:39:07'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:39:07'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:39:07'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:39:07'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:39:07'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:39:07'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:39:07'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:39:25' prior: 50990869!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	
	
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:42:34' prior: 50990930!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:42:36'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:42:36'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:42:53' prior: 50990940!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	aPackage = 'l' ifTrue: [orientation := #W].
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:45:24'!
test10LeftPackageFacingEastShouldChangeOrientationToNorth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #E.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #N equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:45:26'!
FAILURE!

aMarsRover!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:47:56' prior: 50990983!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [
		orientation = #E ifTrue: [orientation := #N].
		orientation := #W.	
		
		].	
	
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:48:05'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:48:15'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:48:46' prior: 50991012!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [
		orientation = #E ifTrue: [orientation := #N].
		orientation = #N ifTrue: [orientation := #W].	
		
		].	
	
	aPackage = 'r' ifTrue: [orientation := #E].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:48:59' prior: 50991032!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [
		orientation = #E ifTrue: [orientation := #N].
		orientation = #N ifTrue: [orientation := #W] ].	
	
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:49:03'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:49:28'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:49:40'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:49:41'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:50:12' prior: 50991044!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [
		orientation = #E ifTrue: [^orientation := #N].
		orientation = #N ifTrue: [^orientation := #W] ].	
	
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:50:17'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:50:40'!
test11LeftPackageFacingWestShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #W.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #S equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:50:44'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:51:34' prior: 50991072!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [
		orientation = #E ifTrue: [^orientation := #N].
		orientation = #N ifTrue: [^orientation := #W].
		orientation = #W ifTrue: [^orientation := #S].
		orientation = #S ifTrue: [^orientation := #E].		 ].	
	
	aPackage = 'r' ifTrue: [orientation := #E].
	! !

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:51:37'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:51:38'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:51:38'!
PASSED!
!MarsRoverTests methodsFor: 'as yet unclassified' stamp: 'BW 5/14/2021 21:54:45'!
test12RightPackageFacingEastShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #E.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #S equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:54:46'!
FAILURE!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:57:04' prior: 50991107!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [
		orientation = #E ifTrue: [^orientation := #N].
		orientation = #N ifTrue: [^orientation := #W].
		orientation = #W ifTrue: [^orientation := #S].
		orientation = #S ifTrue: [^orientation := #E].		 ].	
	
	aPackage = 'r' ifTrue: [
		orientation = #E ifTrue: [^orientation := #S].
		orientation = #N ifTrue: [^orientation := #E].
		orientation = #W ifTrue: [^orientation := #N].
		orientation = #S ifTrue: [^orientation := #W].		 
		].
	! !

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:57:09'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:57:10'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:57:10'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:58:41'!
rotateLeft

	orientation = #E ifTrue: [^orientation := #N].
	orientation = #N ifTrue: [^orientation := #W].
	orientation = #W ifTrue: [^orientation := #S].
	orientation = #S ifTrue: [^orientation := #E].		 
	

	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:59:09' prior: 50991187!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	
	aPackage = 'r' ifTrue: [
		orientation = #E ifTrue: [^orientation := #S].
		orientation = #N ifTrue: [^orientation := #E].
		orientation = #W ifTrue: [^orientation := #N].
		orientation = #S ifTrue: [^orientation := #W].		 
		].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 21:59:31'!
rotateRight
	
	orientation = #E ifTrue: [^orientation := #S].
	orientation = #N ifTrue: [^orientation := #E].
	orientation = #W ifTrue: [^orientation := #N].
	orientation = #S ifTrue: [^orientation := #W].		 
		
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/14/2021 21:59:50'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/14/2021 21:59:51'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/14/2021 21:59:51'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/14/2021 21:59:51'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:59:51'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/14/2021 21:59:51'!
PASSED!
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 22:00:02' prior: 50991267!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 22:00:06' prior: 50991337!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !
!MarsRover methodsFor: 'zxlgvjsdf' stamp: 'BW 5/14/2021 22:00:13' prior: 50991347!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !
!MarsRover methodsFor: 'displacement operations' stamp: 'BW 5/14/2021 22:02:11' prior: 50990513!
goForward	
	
	orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)].
	
	! !

----QUIT----(14 May 2021 22:08:30) CuisUniversity-4532.image priorSource: 21054855!

----STARTUP---- (15 May 2021 10:36:36) as F:\Computacion\Ingeniería de Software 1\CuisUniversity\CuisUniversity-4532.image!


!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:37:04'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:37:05'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:37:05'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 10:39:00' prior: 50991357!
processPackage: aPackage

	aPackage = 'f' ifTrue:[self goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !

Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverOrientationState category: 'Mars-Rover' stamp: 'BW 5/15/2021 10:41:22'!
Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverOrientationState subclass: #FacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #FacingEast category: 'Mars-Rover' stamp: 'BW 5/15/2021 10:41:50'!
MarsRoverOrientationState subclass: #FacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverOrientationState subclass: #FacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #FacingWest category: 'Mars-Rover' stamp: 'BW 5/15/2021 10:41:56'!
MarsRoverOrientationState subclass: #FacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverOrientationState subclass: #FacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #FacingNorth category: 'Mars-Rover' stamp: 'BW 5/15/2021 10:41:59'!
MarsRoverOrientationState subclass: #FacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverOrientationState subclass: #FacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #FacingSouth category: 'Mars-Rover' stamp: 'BW 5/15/2021 10:42:05'!
MarsRoverOrientationState subclass: #FacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:52:40' prior: 50989844!
test02ForwardPackageFacingNorthShouldIncrementY 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:53:40' prior: 50989809!
test01EmptyPackageShouldntChangePositionOrState "testear 1) solo el estado, 2) el procesamiento del paquete o 3) los dos? (2)"
		"Testear COMPORTAMIENTO y assertar estado."
	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:54:07' prior: 50991514!
test01EmptyPackageShouldntChangePositionOrState 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := #N.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:55:41'!
faceNorth
	^#N! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:55:47'!
faceSouth
	^#S! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:55:54'!
faceEast
	^#E! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:56:00'!
faceWest
	^#W! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:56:45' prior: 50991532!
test01EmptyPackageShouldntChangePositionOrState 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:56:46'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:56:46'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:56:53' prior: 50991499!
test02ForwardPackageFacingNorthShouldIncrementY 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:56:59' prior: 50989898!
test03BackwardsPackageFacingNorthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:57:01'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:57:01'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:57:08' prior: 50989955!
test04LeftPackageFacingNorthShouldChangeOrientationToWest

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #W equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:57:13' prior: 50990006!
test05RightPackageFacingNorthShouldChangeOrientationToEast

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:57:29' prior: 50990596!
test06ForwardPackageFacingEastShouldIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: #E equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:57:30'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:57:30'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:57:40' prior: 50990676!
test09BackwardsPackageFacingEastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x-1)@y equals: aMarsRover position.
	self assert:  anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:57:50' prior: 50990993!
test10LeftPackageFacingEastShouldChangeOrientationToNorth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #N equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:57:56' prior: 50991168!
test12RightPackageFacingEastShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #S equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:58:55' prior: 50990622!
test07ForwardPackageFacingWeastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 10:58:56'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 10:58:57'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:58:57'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:58:57'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:59:07' prior: 50991088!
test11LeftPackageFacingWestShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  #S equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:59:19' prior: 50991904!
test11LeftPackageFacingWestShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  self faceSouth equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 10:59:22'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 10:59:23'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 10:59:23'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 10:59:23'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:59:23'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 10:59:23'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:59:31' prior: 50991825!
test12RightPackageFacingEastShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  self faceSouth equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:59:41' prior: 50991810!
test10LeftPackageFacingEastShouldChangeOrientationToNorth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert:  self faceNorth equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 10:59:50' prior: 50990649!
test08ForwardPackageFacingSouthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceSouth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@(y-1) equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 11:00:01' prior: 50991732!
test06ForwardPackageFacingEastShouldIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: self faceEast equals: aMarsRover orientation.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 11:00:09' prior: 50991717!
test05RightPackageFacingNorthShouldChangeOrientationToEast

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: self faceEast equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:00:10'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:00:10'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:00:11'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 11:00:21' prior: 50991702!
test04LeftPackageFacingNorthShouldChangeOrientationToWest

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: self faceWest equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:00:22'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:00:22'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:00:22'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:00:22'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:00:23'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:00:23'!
PASSED!
!MarsRover methodsFor: 'displacement operations' stamp: 'BW 5/15/2021 11:01:10' prior: 50991367!
goForward	
	
	"orientation goForward."
	
	orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)].
	
	! !

Object subclass: #MarsRoverOrientationState
	instanceVariableNames: 'aMarsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverOrientationState category: 'Mars-Rover' stamp: 'BW 5/15/2021 11:01:24'!
Object subclass: #MarsRoverOrientationState
	instanceVariableNames: 'aMarsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

Object subclass: #MarsRoverOrientationState
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverOrientationState category: 'Mars-Rover' stamp: 'BW 5/15/2021 11:02:20'!
Object subclass: #MarsRoverOrientationState
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRoverOrientationState methodsFor: 'no messages' stamp: 'BW 5/15/2021 11:02:29'!
initializeWith: aMarsRover

	marsRover := aMarsRover! !
!MarsRoverOrientationState class methodsFor: 'no messages' stamp: 'BW 5/15/2021 11:02:56'!
with: aMarsRover

	self new initializeWith: aMarsRover.! !
!MarsRover methodsFor: 'displacement operations' stamp: 'BW 5/15/2021 11:03:43' prior: 50992172!
goForward	
	
	"orientation goForward."
	
	"orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)]."
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 11:04:14' prior: 50991430!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 11:05:01' prior: 50992231!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:06:03'!
goForward
	! !
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:06:13' prior: 50992251!
goForward
	self subclassResponsibility.! !
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:07:09' prior: 50992255!
goForward
	self subclassResponsibility.! !
!FacingEast methodsFor: 'nil' stamp: 'BW 5/15/2021 11:09:10' overrides: 50992260!
goForward
	marsRover position: marsRover position + (1@0)
	! !
!MarsRover methodsFor: 'displacement operations' stamp: 'BW 5/15/2021 11:11:37'!
takeStep: aStep
	position := position + aStep.
	! !
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:12:00' prior: 50992264 overrides: 50992260!
goForward
	marsRover takeStep: 1@0
	! !
!FacingNorth methodsFor: 'no messages' stamp: 'BW 5/15/2021 11:12:38' overrides: 50992260!
goForward
	marsRover takeStep: 0@1.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:12:50'!
ERROR!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:12:50'!
ERROR!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:12:50'!
ERROR!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:12:50'!
ERROR!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:12:50'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:12:50'!
PASSED!
!FacingSouth methodsFor: 'no messages' stamp: 'BW 5/15/2021 11:13:52' overrides: 50992260!
goForward
	marsRover takeStep: 0@-1
! !
!FacingWest methodsFor: 'no messages' stamp: 'BW 5/15/2021 11:14:23' overrides: 50992260!
goForward
	marsRover takeStep: -1@0
! !

!methodRemoval: MarsRoverOrientationState class #with: stamp: 'BW 5/15/2021 11:18:53'!
with: aMarsRover

	self new initializeWith: aMarsRover.!

!methodRemoval: MarsRoverOrientationState #initializeWith: stamp: 'BW 5/15/2021 11:18:59'!
initializeWith: aMarsRover

	marsRover := aMarsRover!
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:19:07'!
goForward: aMarsRover
	self subclassResponsibility.! !

Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverOrientationState category: 'Mars-Rover' stamp: 'BW 5/15/2021 11:19:12'!
Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!methodRemoval: MarsRoverOrientationState #goForward: stamp: 'BW 5/15/2021 11:19:59'!
goForward: aMarsRover
	self subclassResponsibility.!
!FacingWest methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:44'!
goForward: aMarsRover
	marsRover takeStep: -1@0
! !
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:45'!
goForward: aMarsRover
	self subclassResponsibility.! !
!MarsRover methodsFor: 'displacement operations' stamp: 'BW 5/15/2021 11:20:45'!
goForward: aMarsRover	
	
	"orientation goForward."
	
	"orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)]."
	
	! !
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:45' overrides: 50992375!
goForward: aMarsRover
	marsRover takeStep: 1@0
	! !
!FacingNorth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:45' overrides: 50992375!
goForward: aMarsRover
	marsRover takeStep: 0@1.! !
!FacingSouth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:45' overrides: 50992375!
goForward: aMarsRover
	marsRover takeStep: 0@-1
! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:45' prior: 50992241!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'b' ifTrue: [self goBackwards].
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !

!methodRemoval: FacingWest #goForward stamp: 'BW 5/15/2021 11:20:45'!
goForward
	marsRover takeStep: -1@0
!

!methodRemoval: MarsRoverOrientationState #goForward stamp: 'BW 5/15/2021 11:20:45'!
goForward
	self subclassResponsibility.!

!methodRemoval: MarsRover #goForward stamp: 'BW 5/15/2021 11:20:45'!
goForward	
	
	"orientation goForward."
	
	"orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)]."
	
	!

!methodRemoval: FacingEast #goForward stamp: 'BW 5/15/2021 11:20:45'!
goForward
	marsRover takeStep: 1@0
	!

!methodRemoval: FacingNorth #goForward stamp: 'BW 5/15/2021 11:20:45'!
goForward
	marsRover takeStep: 0@1.!

!methodRemoval: FacingSouth #goForward stamp: 'BW 5/15/2021 11:20:46'!
goForward
	marsRover takeStep: 0@-1
!
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:20:56' prior: 50992393 overrides: 50992375!
goForward: aMarsRover
	aMarsRover takeStep: 1@0
	! !
!FacingNorth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:21:07' prior: 50992398 overrides: 50992375!
goForward: aMarsRover
	aMarsRover takeStep: 0@1.! !
!FacingSouth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:21:13' prior: 50992403 overrides: 50992375!
goForward: aMarsRover
	aMarsRover takeStep: 0@-1
! !
!FacingWest methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:21:18' prior: 50992370 overrides: 50992375!
goForward: aMarsRover
	aMarsRover takeStep: -1@0
! !
!MarsRoverTests methodsFor: 'orientation creation' stamp: 'BW 5/15/2021 11:22:08' prior: 50991552!
faceEast
	^FacingEast new.! !
!MarsRoverTests methodsFor: 'orientation creation' stamp: 'BW 5/15/2021 11:22:17' prior: 50991546!
faceNorth
	^FacingNorth new.! !
!MarsRoverTests methodsFor: 'orientation creation' stamp: 'BW 5/15/2021 11:22:27' prior: 50991549!
faceSouth
	^FacingSouth new.! !
!MarsRoverTests methodsFor: 'orientation creation' stamp: 'BW 5/15/2021 11:22:37' prior: 50991555!
faceWest
	^FacingWest new.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:22:46'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:22:46'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:22:46'!
FAILURE!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:22:46'!
FAILURE!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:22:46'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:22:46'!
FAILURE!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:22:46'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:22:47'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:22:47'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:22:47'!
FAILURE!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:22:47'!
FAILURE!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:22:47'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:23:05'!
FAILURE!

aMarsRover!

aMarsRover!

self faceEast!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:25:30'!
FAILURE!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 11:27:48' prior: 50992028!
test06ForwardPackageFacingEastShouldIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: anOrientation equals: aMarsRover orientation.! !

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:27:50'!
PASSED!
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:28:59'!
goBackwards: aMarsRover

	self subclassResponsibility.
	
	
	! !
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:29:55' overrides: 50992563!
goBackwards: aMarsRover
	
	aMarsRover takeStep: -1@0.
	
	! !
!FacingNorth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:31:24' overrides: 50992563!
goBackwards: aMarsRover
	
	aMarsRover takeStep: 0@-1.! !
!FacingSouth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:31:35' overrides: 50992563!
goBackwards: aMarsRover
	
	aMarsRover takeStep: 0@1.! !
!FacingWest methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:31:51' overrides: 50992563!
goBackwards: aMarsRover
	
	aMarsRover takeStep: 1@0.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:31:56'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:31:56'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:31:56'!
FAILURE!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:31:56'!
FAILURE!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:31:56'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:31:56'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:31:56'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:31:56'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:31:56'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:31:57'!
FAILURE!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:31:57'!
FAILURE!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:31:57'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 11:32:25' prior: 50992408!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	
	aPackage = 'l'  ifTrue: [self rotateLeft].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:32:33'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:32:33'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:32:33'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:32:33'!
FAILURE!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:32:34'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:32:34'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:32:34'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:32:34'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:32:34'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:32:34'!
FAILURE!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:32:34'!
FAILURE!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:32:34'!
FAILURE!

!methodRemoval: MarsRover #goBackwards stamp: 'BW 5/15/2021 11:32:55'!
goBackwards
	
	orientation = #E ifTrue: [position := position + (-1@0)].
	orientation = #W ifTrue: [position := position + (1@0)].
		
	orientation = #S ifTrue: [position := position + (0@1)].
	orientation = #N ifTrue: [position := position + (0@-1)]. 
	
	!

!methodRemoval: MarsRover #goForward: stamp: 'BW 5/15/2021 11:33:21'!
goForward: aMarsRover	
	
	"orientation goForward."
	
	"orientation = #E ifTrue: [position := position + (1@0)].
	orientation = #W ifTrue: [position := position + (-1@0)].
	
	orientation = #S ifTrue: [position := position + (0@-1)].
	orientation = #N ifTrue: [position := position + (0@1)]."
	
	!
!MarsRover methodsFor: 'displacement operations' stamp: 'BW 5/15/2021 11:33:26' prior: 50992269!
takeStep: aStep

	position := position + aStep.
	! !
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:34:26'!
rotateLeft: aMarsRover
	
	self subclassResponsibility .! !
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:36:48' overrides: 50992717!
rotateLeft: aMarsRover

	aMarsRover face: FacingNorth new. ! !
!MarsRover methodsFor: 'rotating operations' stamp: 'BW 5/15/2021 11:37:22'!
face: anOrientation
	orientation := anOrientation! !
!FacingNorth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:37:45' overrides: 50992717!
rotateLeft: aMarsRover

	aMarsRover face: FacingWest new. ! !
!FacingSouth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:37:57' overrides: 50992717!
rotateLeft: aMarsRover

	aMarsRover face: FacingEast new. ! !
!FacingWest methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:38:13' overrides: 50992717!
rotateLeft: aMarsRover

	aMarsRover face: FacingSouth new. ! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:38:21'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:38:21'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:38:22'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:38:22'!
FAILURE!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:38:22'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:38:22'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:38:22'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:38:22'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:38:22'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:38:22'!
FAILURE!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:38:22'!
FAILURE!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:38:22'!
FAILURE!
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:39:25'!
isEast
	self subclassResponsibility.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:39:35'!
isWest
	self subclassResponsibility.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:39:41'!
isNorth
	self subclassResponsibility.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:39:45'!
isSouth
	self subclassResponsibility.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:40:38' prior: 50992793!
isEast
	^false.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:40:51' prior: 50992801!
isNorth
	^false.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:40:55' prior: 50992805!
isSouth
	^false.! !
!MarsRoverOrientationState methodsFor: 'testing' stamp: 'BW 5/15/2021 11:40:59' prior: 50992797!
isWest
	^false.! !
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:41:22' overrides: 50992810!
isEast
	^true! !
!FacingNorth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:41:31' overrides: 50992814!
isNorth
	^true! !
!FacingSouth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:41:41' overrides: 50992818!
isSouth
	^true! !
!FacingWest methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 11:41:51' overrides: 50992822!
isWest
	^true.! !
!MarsRover methodsFor: 'testing' stamp: 'BW 5/15/2021 11:42:33'!
facesSouth
	^orientation isSouth! !
!MarsRover methodsFor: 'testing' stamp: 'BW 5/15/2021 11:42:40'!
facesNorth
	^orientation isNorth! !
!MarsRover methodsFor: 'testing' stamp: 'BW 5/15/2021 11:42:46'!
facesEast
	^orientation isEast! !
!MarsRover methodsFor: 'testing' stamp: 'BW 5/15/2021 11:42:54'!
facesWest
	^orientation isWest! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:43:04'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 11:43:04'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 11:43:04'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 11:43:04'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:43:04'!
FAILURE!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 11:43:05'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 11:43:05'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 11:43:05'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 11:43:05'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 11:43:05'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 11:43:05'!
FAILURE!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:43:05'!
FAILURE!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 11:43:05'!
FAILURE!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 11:43:26' prior: 50992107!
test04LeftPackageFacingNorthShouldChangeOrientationToWest

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:43:27'!
FAILURE!

aMarsRover!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 11:44:41' prior: 50992634!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'r' ifTrue: [self rotateRight].
	! !

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 11:44:45'!
PASSED!

----QUIT----(15 May 2021 11:47:50) CuisUniversity-4532.image priorSource: 21111263!

----STARTUP---- (15 May 2021 13:19:50) as F:\Computacion\Ingeniería de Software 1\CuisUniversity\CuisUniversity-4532.image!

!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:21:53' prior: 50991998!
test10LeftPackageFacingEastShouldChangeOrientationToNorth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:22:06' prior: 50991919!
test11LeftPackageFacingWestShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.! !

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:22:12'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:22:12'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:22:13'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:22:40' prior: 50992925!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	! !
!MarsRoverOrientationState methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 13:22:59'!
rotateRight: aMarsRover
	self subclassResponsibility ! !
!FacingEast methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 13:24:37' overrides: 50993036!
rotateRight: aMarsRover
	
	aMarsRover face: FacingSouth new.! !
!FacingNorth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 13:24:59' overrides: 50993036!
rotateRight: aMarsRover
	
	aMarsRover face: FacingEast new.! !
!FacingSouth methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 13:25:13' overrides: 50993036!
rotateRight: aMarsRover
	
	aMarsRover face: FacingWest new.! !
!FacingWest methodsFor: 'as yet unclassified' stamp: 'BW 5/15/2021 13:25:22' overrides: 50993036!
rotateRight: aMarsRover
	
	aMarsRover face: FacingNorth new.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:25:25'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:25:25'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:25:26'!
FAILURE!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:25:55' prior: 50992043!
test05RightPackageFacingNorthShouldChangeOrientationToEast

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesEast.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:26:14' prior: 50991983!
test12RightPackageFacingEastShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:26:37'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:26:37'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:26:52' prior: 50991559!
test01EmptyPackageShouldntChangePositionOrState 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:27:03' prior: 50991623!
test02ForwardPackageFacingNorthShouldIncrementY 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:27:12' prior: 50991638!
test03BackwardsPackageFacingNorthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:27:28' prior: 50992544!
test06ForwardPackageFacingEastShouldIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesEast! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:27:50' prior: 50991840!
test07ForwardPackageFacingWeastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:28:04' prior: 50992013!
test08ForwardPackageFacingSouthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceSouth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@(y-1) equals: aMarsRover position.
	self assert: aMarsRover facesSouth.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:28:15' prior: 50991795!
test09BackwardsPackageFacingEastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x-1)@y equals: aMarsRover position.
	self assert: aMarsRover facesEast.! !

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:28:21'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:28:22'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:28:22'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:28:22'!
PASSED!

!methodRemoval: MarsRover #rotateLeft stamp: 'BW 5/15/2021 13:29:30'!
rotateLeft

	orientation = #E ifTrue: [^orientation := #N].
	orientation = #N ifTrue: [^orientation := #W].
	orientation = #W ifTrue: [^orientation := #S].
	orientation = #S ifTrue: [^orientation := #E].		 
	

	!

!methodRemoval: MarsRover #rotateRight stamp: 'BW 5/15/2021 13:29:31'!
rotateRight
	
	orientation = #E ifTrue: [^orientation := #S].
	orientation = #N ifTrue: [^orientation := #E].
	orientation = #W ifTrue: [^orientation := #N].
	orientation = #S ifTrue: [^orientation := #W].		 
		
	!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:31:42'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:31:43'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:31:43'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:39:47'!
test13

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'ff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:40:06'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:41:29' prior: 50993025!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self]! !

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:41:30'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:41:30'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:41:30'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:41:30'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:41:30'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:41:30'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:41:31'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:41:31'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:41:38'!
test14

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'ff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:41:45' prior: 50993473!
test14

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 13:41:49'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:42:12' prior: 50993410!
processPackage: aPackage

	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self]! !

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 13:42:17'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:42:17'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:42:17'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:42:17'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:42:17'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:42:17'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:42:18'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 13:42:18'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:42:51' prior: 50993502!
processPackage: aPackage

	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self]! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:43:23'!
test15

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'bb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 13:43:25'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:44:01' prior: 50993572!
processPackage: aPackage

	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self]! !

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 13:44:01'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:44:02'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:44:03'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 13:44:03'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 13:44:03'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:45:03'!
test16

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'll'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.! !

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 13:45:05'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:45:31' prior: 50993605!
processPackage: aPackage

	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'll'  ifTrue: [orientation rotateLeft: self. orientation rotateLeft: self].	
	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self]! !

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 13:45:33'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:45:33'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:45:33'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:45:33'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:45:33'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 13:45:34'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 13:45:34'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 13:48:06'!
test17

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 13:48:18'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 13:49:08' prior: 50993695!
processPackage: aPackage

	
	aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'll'  ifTrue: [orientation rotateLeft: self. orientation rotateLeft: self].	
	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self].
	
	aPackage = 'lb' ifTrue: [orientation rotateLeft: self. orientation goBackwards: self.]! !

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 13:49:09'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 13:49:09'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 13:49:09'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 13:49:09'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 13:49:10'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 13:49:10'!
PASSED!
!FacingWest methodsFor: 'displacement operations' stamp: 'BW 5/15/2021 13:51:38' prior: 50992466 overrides: 50992375!
goForward: aMarsRover
	aMarsRover takeStep: -1@0! !

----QUIT----(15 May 2021 13:51:58) CuisUniversity-4532.image priorSource: 21161235!

----STARTUP---- (15 May 2021 20:36:19) as F:\Computacion\Ingeniería de Software 1\CuisUniversity\CuisUniversity-4532.image!


!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:37:12'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 20:37:12'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 20:37:12'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:37:13'!
PASSED!

'yusdfg' at: 1!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:45:25'!
processInstruction: anInstruction

	
	
	"aPackage = 'll'  ifTrue: [orientation rotateLeft: self. orientation rotateLeft: self].	"
	
	anInstruction = #f ifTrue:[orientation goForward: self].
	anInstruction = #l  ifTrue: [orientation rotateLeft: self].	
	anInstruction = #r ifTrue: [orientation rotateRight: self].
	anInstruction = #b ifTrue: [orientation goBackwards: self].
	
	"aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self].
	
	aPackage = 'lb' ifTrue: [orientation rotateLeft: self. orientation goBackwards: self.]"! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 20:45:27'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:45:28'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:45:28'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 20:45:28'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 20:45:28'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 20:45:28'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 20:45:28'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:45:28'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:45:55' prior: 50993791!
processPackage: aPackage

	
	"aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'll'  ifTrue: [orientation rotateLeft: self. orientation rotateLeft: self].	
	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self].
	
	aPackage = 'lb' ifTrue: [orientation rotateLeft: self. orientation goBackwards: self.]"! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:46:35' prior: 50994032!
processPackage: aPackage

	aPackage do: [:anInstruction | self processInstruction: anInstruction ].
	
	"aPackage = 'l'  ifTrue: [orientation rotateLeft: self].	
	aPackage = 'll'  ifTrue: [orientation rotateLeft: self. orientation rotateLeft: self].	
	
	aPackage = 'r' ifTrue: [orientation rotateRight: self].
	
	aPackage = 'b' ifTrue: [orientation goBackwards: self].
	aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	aPackage = 'f' ifTrue:[orientation goForward: self].
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self].
	
	aPackage = 'lb' ifTrue: [orientation rotateLeft: self. orientation goBackwards: self.]"! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 20:46:36'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 20:46:36'!
FAILURE!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 20:46:37'!
FAILURE!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 20:46:37'!
FAILURE!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:46:37'!
FAILURE!

'asfgs' at: 2!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:48:34' prior: 50993948!
processInstruction: anInstruction

	
	
	"aPackage = 'll'  ifTrue: [orientation rotateLeft: self. orientation rotateLeft: self].	"
	
	anInstruction = $f ifTrue:[orientation goForward: self].
	anInstruction = $l  ifTrue: [orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [orientation rotateRight: self].
	anInstruction = $b ifTrue: [orientation goBackwards: self].
	
	"aPackage = 'bb' ifTrue: [orientation goBackwards: self. orientation goBackwards: self].	
	
	
	aPackage = 'ff' ifTrue: [orientation goForward: self. orientation goForward: self].
	aPackage = 'fff' ifTrue: [orientation goForward: self. orientation goForward: self. orientation goForward: self].
	
	aPackage = 'lb' ifTrue: [orientation rotateLeft: self. orientation goBackwards: self.]"! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 20:48:36'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 20:48:37'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:48:37'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:48:48' prior: 50994144!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[orientation goForward: self].
	anInstruction = $l  ifTrue: [orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [orientation rotateRight: self].
	anInstruction = $b ifTrue: [orientation goBackwards: self].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:49:05' prior: 50994058!
processPackage: aPackage

	aPackage do: [:anInstruction | self processInstruction: anInstruction ].
	
	! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:49:49' prior: 50993775!
test17

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylf'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:49:55' prior: 50994246!
test17

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:50:05'!
test18

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylf'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:50:14' prior: 50994272!
test18

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 20:50:18'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:51:32' prior: 50994240!
processPackage: aPackage

	aPackage do: [:anInstruction | self processInstruction: anInstruction ].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:54:02' prior: 50994301!
processPackage: aPackage

	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self]. self processInstruction: anInstruction ].
	
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 20:54:03'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:54:04'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 20:54:04'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:54:47' prior: 50994285!
test18

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:55:03' prior: 50994375!
test18

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/15/2021 20:55:08'!
test19

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/15/2021 20:55:12'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:56:07' prior: 50994308!
processPackage: aPackage

	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self].
							self processInstruction: anInstruction ].
	
	! !

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/15/2021 20:56:09'!
FAILURE!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 20:56:25'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/15/2021 20:56:26'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 20:57:58' prior: 50994417!
processPackage: aPackage
	
	
	
	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self].
							self processInstruction: anInstruction ].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:01:28' prior: 50994493!
processPackage: aPackage
	
	
	
	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self].
							self processInstruction: anInstruction on: Error do: [^self] ].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:02:01' prior: 50994503!
processPackage: aPackage
	
	
	
	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self].
							self processInstruction: anInstruction  ].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:02:15' prior: 50994513!
processPackage: aPackage
	
	
	
	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self].
							self processInstruction: anInstruction on: Error do: [^self] ].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:03:27' prior: 50994523!
processPackage: aPackage
	
	
	
	aPackage do: [:anInstruction | (anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self].
							self processInstruction: anInstruction onUnknownInstructionDo: [^self] ].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:04:03'!
processInstruction: anInstruction onUnknownInstructionDo: aBlock
	
	anInstruction = $f ifTrue:[orientation goForward: self].
	anInstruction = $l  ifTrue: [orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [orientation rotateRight: self].
	anInstruction = $b ifTrue: [orientation goBackwards: self].
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:04:08' prior: 50994543!
processInstruction: anInstruction onUnknownInstructionDo: aBlock
	
	anInstruction = $f ifTrue:[orientation goForward: self].
	anInstruction = $l  ifTrue: [orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [orientation rotateRight: self].
	anInstruction = $b ifTrue: [orientation goBackwards: self].
	
	aBlock value.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 21:04:12'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 21:04:12'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 21:04:12'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/15/2021 21:04:12'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:04:36' prior: 50994556!
processInstruction: anInstruction onUnknownInstructionDo: aBlock
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
	
	aBlock value.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/15/2021 21:04:38'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/15/2021 21:04:55' prior: 50994533!
processPackage: aPackage
	
	
	
	aPackage do: [:anInstruction | "(anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self]."
							self processInstruction: anInstruction onUnknownInstructionDo: [^self] ].
	
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/15/2021 21:04:57'!
PASSED!

----QUIT----(15 May 2021 21:06:56) CuisUniversity-4532.image priorSource: 21191379!

----STARTUP---- (16 May 2021 20:31:07) as F:\Computacion\Ingeniería de Software 1\CuisUniversity\CuisUniversity-4532.image!


!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:32:53'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:32:54'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/16/2021 20:32:55'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 20:38:51' prior: 50994706!
processPackage: aPackage
	
	
	
	[aPackage do: [:anInstruction | "(anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self]."
							self processInstruction: anInstruction]] on: Error do: [^'Invalid Instruction Encountered. Stoping execution.']
	
	! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 20:40:07' prior: 50994228!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[orientation goForward: self].
	anInstruction = $l  ifTrue: [orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [orientation rotateRight: self].
	anInstruction = $b ifTrue: [orientation goBackwards: self].
	
	self error: self class unknownInstructionErrorMessage.
	
! !
!MarsRover class methodsFor: 'error' stamp: 'BW 5/16/2021 20:40:45'!
unknownInstructionErrorMessage
	^''! !
!MarsRover class methodsFor: 'error' stamp: 'BW 5/16/2021 20:41:14' prior: 50994872!
unknownInstructionErrorMessage
	^ 'Invalid Instruction Encountered. Stoping execution.'! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 20:41:42' prior: 50994847!
processPackage: aPackage
	
	
	
	[aPackage do: [:anInstruction | "(anInstruction = $y) ifTrue: [^self].
						      (anInstruction = $j) ifTrue: [^self]."
							self processInstruction: anInstruction]] on: Error do: [:error | ^error].
	
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:41:45'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:41:46'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/16/2021 20:41:46'!
FAILURE!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 20:42:01' prior: 50994859!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
	
	self error: self class unknownInstructionErrorMessage.
	
! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 20:42:03'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/16/2021 20:42:04'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:42:39' prior: 50994401!
test19

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 20:43:13' prior: 50994882!
processPackage: aPackage
	
	
	
	[aPackage do: [:anInstruction | self processInstruction: anInstruction]] on: Error do: [:errorMessage | ^errorMessage].
	
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:43:44'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/16/2021 20:43:45'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 20:46:09' prior: 50995045!
processPackage: aPackage
	
	
	
	[aPackage do: [:anInstruction | self processInstruction: anInstruction]] on: Error do: [:errorMessage | ^errorMessage].
	! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:48:00' prior: 50995031!
test19

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 20:50:16'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test13 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test14 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test15 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test16 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test17 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test18 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!

!testRun: #MarsRoverTests #test19 stamp: 'BW 5/16/2021 20:50:17'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:52:15'!
test13DoubleForwardPackageFacingNorthShouldAdd2ToY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'ff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test13 stamp: 'BW 5/16/2021 20:52:15'!
test13

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'ff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:52:58'!
test14DoubleForwardPackageFacingNorthShouldAdd3ToY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test14 stamp: 'BW 5/16/2021 20:52:58'!
test14

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:53:34'!
test15DoubleBackwardsPackageFacingNorthShouldSubstract2FromY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'bb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test15 stamp: 'BW 5/16/2021 20:53:34'!
test15

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'bb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:54:21'!
test16DoubleLeftPackageFacingNorthShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'll'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.! !

!methodRemoval: MarsRoverTests #test16 stamp: 'BW 5/16/2021 20:54:21'!
test16

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'll'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:55:12'!
test17LeftBackwardsPackageShouldChangeOrientationToWestAndIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test17 stamp: 'BW 5/16/2021 20:55:13'!
test17

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:56:00'!
test18MarsRoverShouldIgnoreInstruccionsFollowingY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test18 stamp: 'BW 5/16/2021 20:56:00'!
test18

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:56:19'!
test19MarsRoverShouldIgnoreInstruccionsFollowingJ

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test19 stamp: 'BW 5/16/2021 20:56:19'!
test19

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!

!testRun: #MarsRoverTests #test19MarsRoverShouldIgnoreInstruccionsFollowingJ stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test13DoubleForwardPackageFacingNorthShouldAdd2ToY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test14DoubleForwardPackageFacingNorthShouldAdd3ToY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test15DoubleBackwardsPackageFacingNorthShouldSubstract2FromY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test16DoubleLeftPackageFacingNorthShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test17LeftBackwardsPackageShouldChangeOrientationToWestAndIncrementX stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test18MarsRoverShouldIgnoreInstruccionsFollowingY stamp: 'BW 5/16/2021 20:56:23'!
PASSED!

!testRun: #MarsRoverTests #test19MarsRoverShouldIgnoreInstruccionsFollowingJ stamp: 'BW 5/16/2021 20:56:23'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:57:02'!
test01EmptyPackageShouldntChangePositionOrOrientation 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test01EmptyPackageShouldntChangePositionOrState stamp: 'BW 5/16/2021 20:57:02'!
test01EmptyPackageShouldntChangePositionOrState 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 20:57:22'!
test01EmptyPackageShouldntChangePositionNorOrientation 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test01EmptyPackageShouldntChangePositionOrOrientation stamp: 'BW 5/16/2021 20:57:22'!
test01EmptyPackageShouldntChangePositionOrOrientation 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:00:04'!
test02SingleForwardPackageShouldTakeStepForward 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test02ForwardPackageFacingNorthShouldIncrementY stamp: 'BW 5/16/2021 21:00:04'!
test02ForwardPackageFacingNorthShouldIncrementY 

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!

!methodRemoval: MarsRoverTests #test06ForwardPackageFacingEastShouldIncrementX stamp: 'BW 5/16/2021 21:00:14'!
test06ForwardPackageFacingEastShouldIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesEast!

!methodRemoval: MarsRoverTests #test07ForwardPackageFacingWeastShouldDecrementX stamp: 'BW 5/16/2021 21:00:17'!
test07ForwardPackageFacingWeastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: (x-1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!

!methodRemoval: MarsRoverTests #test08ForwardPackageFacingSouthShouldDecrementY stamp: 'BW 5/16/2021 21:00:20'!
test08ForwardPackageFacingSouthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceSouth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@(y-1) equals: aMarsRover position.
	self assert: aMarsRover facesSouth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:00:50'!
test03SingleBackwardsPackageShouldTakeStepBackwards

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth! !

!methodRemoval: MarsRoverTests #test03BackwardsPackageFacingNorthShouldDecrementY stamp: 'BW 5/16/2021 21:00:50'!
test03BackwardsPackageFacingNorthShouldDecrementY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth!

!methodRemoval: MarsRoverTests #test09BackwardsPackageFacingEastShouldDecrementX stamp: 'BW 5/16/2021 21:01:00'!
test09BackwardsPackageFacingEastShouldDecrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x-1)@y equals: aMarsRover position.
	self assert: aMarsRover facesEast.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:01:49'!
test04SingleLeftPackageShouldRotateCounterClockwise

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test04LeftPackageFacingNorthShouldChangeOrientationToWest stamp: 'BW 5/16/2021 21:01:49'!
test04LeftPackageFacingNorthShouldChangeOrientationToWest

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!

!methodRemoval: MarsRoverTests #test10LeftPackageFacingEastShouldChangeOrientationToNorth stamp: 'BW 5/16/2021 21:02:03'!
test10LeftPackageFacingEastShouldChangeOrientationToNorth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!

!methodRemoval: MarsRoverTests #test11LeftPackageFacingWestShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 21:02:05'!
test11LeftPackageFacingWestShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceWest.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:02:39'!
test05SingleRightPackageShouldRotateClockwise

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesEast.! !

!methodRemoval: MarsRoverTests #test05RightPackageFacingNorthShouldChangeOrientationToEast stamp: 'BW 5/16/2021 21:02:39'!
test05RightPackageFacingNorthShouldChangeOrientationToEast

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesEast.!

!methodRemoval: MarsRoverTests #test12RightPackageFacingEastShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 21:02:59'!
test12RightPackageFacingEastShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceEast.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:07:33'!
test14MultipleSameTypeOperationsShouldRepeatOperation

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test14DoubleForwardPackageFacingNorthShouldAdd3ToY stamp: 'BW 5/16/2021 21:07:33'!
test14DoubleForwardPackageFacingNorthShouldAdd3ToY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!

!methodRemoval: MarsRoverTests #test13DoubleForwardPackageFacingNorthShouldAdd2ToY stamp: 'BW 5/16/2021 21:08:25'!
test13DoubleForwardPackageFacingNorthShouldAdd2ToY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'ff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!

!methodRemoval: MarsRoverTests #test15DoubleBackwardsPackageFacingNorthShouldSubstract2FromY stamp: 'BW 5/16/2021 21:08:28'!
test15DoubleBackwardsPackageFacingNorthShouldSubstract2FromY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'bb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-2) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!

!methodRemoval: MarsRoverTests #test16DoubleLeftPackageFacingNorthShouldChangeOrientationToSouth stamp: 'BW 5/16/2021 21:08:30'!
test16DoubleLeftPackageFacingNorthShouldChangeOrientationToSouth

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'll'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesSouth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:09:56'!
test17MultipleDifferentTipeOperationsShouldExecuteInOrder

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test17LeftBackwardsPackageShouldChangeOrientationToWestAndIncrementX stamp: 'BW 5/16/2021 21:09:56'!
test17LeftBackwardsPackageShouldChangeOrientationToWestAndIncrementX

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:11:30'!
test18MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test18MarsRoverShouldIgnoreInstruccionsFollowingY stamp: 'BW 5/16/2021 21:11:30'!
test18MarsRoverShouldIgnoreInstruccionsFollowingY

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!

!methodRemoval: MarsRoverTests #test19MarsRoverShouldIgnoreInstruccionsFollowingJ stamp: 'BW 5/16/2021 21:11:36'!
test19MarsRoverShouldIgnoreInstruccionsFollowingJ

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbjlffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:11:57'!
test06MultipleSameTypeOperationsShouldRepeatOperation

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.! !

!methodRemoval: MarsRoverTests #test14MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:11:58'!
test14MultipleSameTypeOperationsShouldRepeatOperation

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:12:03'!
test07MultipleDifferentTipeOperationsShouldExecuteInOrder

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test17MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:12:03'!
test17MultipleDifferentTipeOperationsShouldExecuteInOrder

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:12:08'!
test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.! !

!methodRemoval: MarsRoverTests #test18MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:12:08'!
test18MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne

	|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest.!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:12:44'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:12:44'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:12:44'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:12:45'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:12:45'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:12:45'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:12:45'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:12:45'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:12:45'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:26:11'!
assertMarsRoverFacing: anOrientation afterPackage: aPackage moved: aDisplacement andFaces: anOrientationBlock

	|aMarsRover|
	
	aMarsRover := MarsRover position: 0@0 orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: aDisplacement equals: aMarsRover position.
	self assert: (anOrientationBlock value: aMarsRover)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:28:17' prior: 50995487!
test01EmptyPackageShouldntChangePositionNorOrientation 

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := ''.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@y equals: aMarsRover position.
	self assert: aMarsRover facesNorth."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: '' moved: 0@0 andFaces: [:aMarsRover | aMarsRover facesNorth].! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:28:20'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:29:01' prior: 50995516!
test02SingleForwardPackageShouldTakeStepForward 

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'f'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	aMarsRover processPackage: aPackage.
	self assert:  x@(y+1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'f' moved: 0@1 andFaces: [:aMarsRover | aMarsRover facesNorth].! !

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:29:02'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:30:33' prior: 50995589!
test03SingleBackwardsPackageShouldTakeStepBackwards

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'b'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y-1) equals: aMarsRover position.
	self assert: aMarsRover facesNorth"
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'b' moved: 0@-1 andFaces: [:aMarsRover | aMarsRover facesNorth].! !

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:30:35'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:30:35'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:31:05' prior: 50995633!
test04SingleLeftPackageShouldRotateCounterClockwise

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'l'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesWest."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'l' moved: 0@0 andFaces: [:aMarsRover | aMarsRover facesWest].! !

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:31:07'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:31:07'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:31:07'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:31:07'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:31:07'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:31:07'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:31:07'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:31:28' prior: 50995693!
test05SingleRightPackageShouldRotateClockwise

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'r'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: x@y equals: aMarsRover position.
	self assert: aMarsRover facesEast."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'r' moved: 0@0 andFaces: [:aMarsRover | aMarsRover facesEast].! !

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:31:32'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:31:32'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:31:52' prior: 50995888!
test06MultipleSameTypeOperationsShouldRepeatOperation

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'fff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  x@(y+3) equals: aMarsRover position.
	self assert: aMarsRover facesNorth."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'fff' moved: 0@3 andFaces: [:aMarsRover | aMarsRover facesNorth].! !

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:31:54'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:31:54'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:32:34' prior: 50995917!
test07MultipleDifferentTipeOperationsShouldExecuteInOrder

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lb'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'lb' moved: 1@0 andFaces: [:aMarsRover | aMarsRover facesWest].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:33:25' prior: 50995947!
test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne

	"|aMarsRover x y aPackage anOrientation|
	x := 0.
	y := 0.
	anOrientation := self faceNorth.
	aPackage := 'lbylffff'.
	aMarsRover := MarsRover position: x@y orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert:  (x+1)@y equals: aMarsRover position.
	self assert: aMarsRover facesWest."
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'lbylffff' moved: 1@0 andFaces: [:aMarsRover | aMarsRover facesWest].! !

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:33:26'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:33:26'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:33:35' prior: 50996329!
test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne

	self assertMarsRoverFacing: self faceNorth afterPackage: 'lbylffff' moved: 1@0 andFaces: [:aMarsRover | aMarsRover facesWest].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:33:42' prior: 50996310!
test07MultipleDifferentTipeOperationsShouldExecuteInOrder
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'lb' moved: 1@0 andFaces: [:aMarsRover | aMarsRover facesWest].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:33:57' prior: 50996257!
test06MultipleSameTypeOperationsShouldRepeatOperation
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'fff' moved: 0@3 andFaces: [:aMarsRover | aMarsRover facesNorth].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:34:03' prior: 50996205!
test05SingleRightPackageShouldRotateClockwise

	self assertMarsRoverFacing: self faceNorth afterPackage: 'r' moved: 0@0 andFaces: [:aMarsRover | aMarsRover facesEast].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:34:11' prior: 50996153!
test04SingleLeftPackageShouldRotateCounterClockwise

	self assertMarsRoverFacing: self faceNorth afterPackage: 'l' moved: 0@0 andFaces: [:aMarsRover | aMarsRover facesWest].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:34:17' prior: 50996100!
test03SingleBackwardsPackageShouldTakeStepBackwards
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'b' moved: 0@-1 andFaces: [:aMarsRover | aMarsRover facesNorth].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:34:23' prior: 50996048!
test02SingleForwardPackageShouldTakeStepForward 
	
	self assertMarsRoverFacing: self faceNorth afterPackage: 'f' moved: 0@1 andFaces: [:aMarsRover | aMarsRover facesNorth].! !
!MarsRoverTests methodsFor: 'tests' stamp: 'BW 5/16/2021 21:34:29' prior: 50996026!
test01EmptyPackageShouldntChangePositionNorOrientation 
	
	self assertMarsRoverFacing: self faceNorth afterPackage: '' moved: 0@0 andFaces: [:aMarsRover | aMarsRover facesNorth].! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:37:16' prior: 50995115!
processPackage: aPackage
	
	
	
	"[aPackage do: [:anInstruction | self processInstruction: anInstruction]] on: Error do: [:errorMessage | ^errorMessage]."
	
	aPackage do: [:anInstruction | self processInstruction: anInstruction onUnknownInstructionDo: [^self] ].! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:37:34' prior: 50996453!
processPackage: aPackage
	
	
	
	"[aPackage do: [:anInstruction | self processInstruction: anInstruction]] on: Error do: [:errorMessage | ^errorMessage]."
	
	aPackage do: [:anInstruction | self processInstruction: anInstruction onUnknownInstructionDo: [^self] ].
	! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:37:36'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:37:36'!
PASSED!
!MarsRoverTests methodsFor: 'asserts' stamp: 'BW 5/16/2021 21:38:41' prior: 50996012!
assertMarsRoverFacing: anOrientation afterPackage: aPackage moved: aDisplacement andFaces: anOrientationBlock

	|aMarsRover initialPosition|
	
	initialPosition := 0@0.
	
	aMarsRover := MarsRover position: initialPosition orientation: anOrientation. 
	
	aMarsRover processPackage: aPackage.
	
	self assert: initialPosition + aDisplacement equals: aMarsRover position.
	self assert: (anOrientationBlock value: aMarsRover)! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:38:42'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:38:42'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:38:42'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:38:42'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:38:42'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:38:43'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:38:43'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:38:43'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:39:01' prior: 50996465!
processPackage: aPackage
	
	
	
	[aPackage do: [:anInstruction | self processInstruction: anInstruction]] on: Error do: [:errorMessage | ^errorMessage].
	
	! !

!methodRemoval: MarsRover #processInstruction:onUnknownInstructionDo: stamp: 'BW 5/16/2021 21:39:31'!
processInstruction: anInstruction onUnknownInstructionDo: aBlock
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
	
	aBlock value.!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:44:38' prior: 50994955!
processInstruction: anInstruction

	|aCorrectInstruction|
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
	
	self error: self class unknownInstructionErrorMessage.
	
! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:44:50' prior: 50996576!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
	
	self error: self class unknownInstructionErrorMessage.
	
! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:44:52'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:44:52'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:46:30' prior: 50996591!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
	
	self error: self class unknownInstructionErrorMessage.
	
! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:48:47' prior: 50996635!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].
		
	self error: self class unknownInstructionErrorMessage.
	
! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:48:56'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:48:56'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:48:57'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:48:57'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:48:57'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:48:57'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:48:57'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:48:57'!
PASSED!
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:49:02' prior: 50996649!
processInstruction: anInstruction
	
	anInstruction = $f ifTrue:[^orientation goForward: self].
	anInstruction = $l  ifTrue: [^orientation rotateLeft: self].	
	anInstruction = $r ifTrue: [^orientation rotateRight: self].
	anInstruction = $b ifTrue: [^orientation goBackwards: self].

	self error: self class unknownInstructionErrorMessage.
	
! !
!MarsRover methodsFor: 'packageProcessing' stamp: 'BW 5/16/2021 21:49:18' prior: 50996554!
processPackage: aPackage
	
	[aPackage do: [:anInstruction | self processInstruction: anInstruction]] on: Error do: [:errorMessage | ^errorMessage].
	
	! !
!FacingEast methodsFor: 'displacement operations' stamp: 'BW 5/16/2021 21:51:17' prior: 50992569 overrides: 50992563!
goBackwards: aMarsRover
	
	"aMarsRover takeStep: -1@0."
	FacingWest new goForward: aMarsRover.
	! !

Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverOrientationState category: 'Mars-Rover' stamp: 'BW 5/16/2021 21:54:31'!
Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverOrientationState subclass: #FacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #FacingNorth category: 'Mars-Rover' stamp: 'BW 5/16/2021 21:55:12'!
MarsRoverOrientationState subclass: #FacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:56:20'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:56:20'!
PASSED!
!FacingEast methodsFor: 'displacement operations' stamp: 'BW 5/16/2021 21:56:28' prior: 50996716 overrides: 50992563!
goBackwards: aMarsRover
	
	FacingWest new goForward: aMarsRover.
	! !
!FacingNorth methodsFor: 'displacement operations' stamp: 'BW 5/16/2021 21:56:48' prior: 50992574 overrides: 50992563!
goBackwards: aMarsRover
	
	FacingSouth new goForward: aMarsRover.! !
!FacingSouth methodsFor: 'displacement operations' stamp: 'BW 5/16/2021 21:57:03' prior: 50992579 overrides: 50992563!
goBackwards: aMarsRover
	
	FacingNorth new goForward: aMarsRover.! !
!FacingWest methodsFor: 'displacement operations' stamp: 'BW 5/16/2021 21:57:13' prior: 50992584 overrides: 50992563!
goBackwards: aMarsRover
	
	FacingEast new goForward: aMarsRover.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:57:27'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:57:28'!
PASSED!
!FacingEast methodsFor: 'rotating operations' stamp: 'BW 5/16/2021 21:58:15' prior: 50993041 overrides: 50993036!
rotateRight: aMarsRover
	
	"aMarsRover face: FacingSouth new."
	FacingWest new rotateLeft: aMarsRover.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:58:16'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:58:16'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:58:16'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:58:17'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:58:17'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:58:17'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:58:17'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:58:17'!
PASSED!
!FacingEast methodsFor: 'rotating operations' stamp: 'BW 5/16/2021 21:58:21' prior: 50996832 overrides: 50993036!
rotateRight: aMarsRover
	
	FacingWest new rotateLeft: aMarsRover.! !
!FacingNorth methodsFor: 'rotating operations' stamp: 'BW 5/16/2021 21:58:39' prior: 50993047 overrides: 50993036!
rotateRight: aMarsRover
	
	FacingSouth new rotateLeft: aMarsRover.! !
!FacingSouth methodsFor: 'rotating operations' stamp: 'BW 5/16/2021 21:58:49' prior: 50993053 overrides: 50993036!
rotateRight: aMarsRover
	
	FacingNorth new rotateLeft: aMarsRover.! !
!FacingWest methodsFor: 'rotating operations' stamp: 'BW 5/16/2021 21:58:57' prior: 50993059 overrides: 50993036!
rotateRight: aMarsRover
	
	FacingEast new rotateLeft: aMarsRover.! !

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 21:58:58'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 21:58:59'!
PASSED!

!classRemoval: #FacingWest stamp: 'BW 5/16/2021 22:01:28'!
MarsRoverOrientationState subclass: #FacingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #FacingSouth stamp: 'BW 5/16/2021 22:01:29'!
MarsRoverOrientationState subclass: #FacingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #FacingNorth stamp: 'BW 5/16/2021 22:01:30'!
MarsRoverOrientationState subclass: #FacingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #FacingEast stamp: 'BW 5/16/2021 22:01:30'!
MarsRoverOrientationState subclass: #FacingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRoverOrientationState stamp: 'BW 5/16/2021 22:01:31'!
Object subclass: #MarsRoverOrientationState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRover stamp: 'BW 5/16/2021 22:01:32'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation point symbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRoverTests stamp: 'BW 5/16/2021 22:01:32'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

----End fileIn of F:\Computacion\Ingeniería de Software 1\CuisUniversity\Mars-Rover.st----!

!testRun: #MarsRoverTests #test01EmptyPackageShouldntChangePositionNorOrientation stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test02SingleForwardPackageShouldTakeStepForward stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test03SingleBackwardsPackageShouldTakeStepBackwards stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test04SingleLeftPackageShouldRotateCounterClockwise stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test05SingleRightPackageShouldRotateClockwise stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test06MultipleSameTypeOperationsShouldRepeatOperation stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test07MultipleDifferentTipeOperationsShouldExecuteInOrder stamp: 'BW 5/16/2021 22:02:06'!
PASSED!

!testRun: #MarsRoverTests #test08MarsRoverShouldIgnoreInstruccionsFollowingAnInvalidOne stamp: 'BW 5/16/2021 22:02:06'!
PASSED!