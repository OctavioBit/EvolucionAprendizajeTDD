----STARTUP---- (10 June 2021 18:39:55) as /home/caro/Downloads/linux64/CuisUniversity-4532.image!


TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'CD 6/10/2021 18:40:58'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'nil' stamp: 'CD 6/10/2021 18:44:30'!
test01CannotCheckoutAnEmptyCart

	| cart |
	

	
! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'CD 6/10/2021 18:45:05' prior: 50866704!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	
	

	
! !
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 18:45:40' overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := OrderedCollection with: aBook.! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'CD 6/10/2021 18:47:35'!
Object subclass: #Cashier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 18:47:20' prior: 50866709!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	
	self should: [ | aMerchantProcessor aValidCreditCard | Cashier for: cart payingWith: aValidCreditCard validatingWith: aMerchantProcessor ] raise: Error withMessageText: Cashier invalidCart.
	
	

	
! !
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 18:49:45' prior: 50866715 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := OrderedCollection with: aBook.
! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 18:51:32' prior: 50866728!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	

	
	

	
! !

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'CD 6/10/2021 18:51:45'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog aValidCreditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'CD 6/10/2021 18:51:46'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog aValidCreditCard aMerchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 18:51:43' prior: 50866741 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := OrderedCollection with: aBook.
	aValidCreditCard := ''.
	aMerchantProcessor := ''.
! !

GregorianMonthOfYear!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'CD 6/10/2021 19:12:02'!
Object subclass: #CreditCard
	instanceVariableNames: 'owner number expirationDate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 19:11:49' prior: 50866771 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := OrderedCollection with: aBook.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date today. 
! !
!CreditCard class methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:18:50'!
withOwner: aPerson number: aNumber expirationDate: aDate

	^ self new withOwner: aPerson number: aNumber expirationDate: aDate.! !
!CreditCard methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:19:47'!
withOwner: aPerson number: aNumber expirationDate: aDate

	owner := aPerson.
	number := aNumber.
	expirationDate := aDate.! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 19:25:35' prior: 50866748!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	
	self should: [ Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor ] raise: Error withMessageText: Cashier invalidCartMessage.
	

	
	

	
! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 19:26:30' prior: 50866812!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	
	
	
	
	

	
	

	
! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 19:27:27' prior: 50866823!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	
	self should: [ Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor ] raise: Error withMessageText: Cashier invalidCartMessage.
	

	
	

	
! !
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 19:27:52' prior: 50866788 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := OrderedCollection with: aBook.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 19:28:15' prior: 50866829!
test01CannotCheckoutAnEmptyCart

	| cart |
	cart := Cart initializeWith: aCatalog.
	
	self should: [ Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor ] raise: Error withMessageText: Cashier invalidCartMessage.
	

	
	

	
! !

TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog aValidCreditCard aMerchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'CD 6/10/2021 19:28:28'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog aValidCreditCard aMerchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier class methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:31:04'!
for: cart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor

	^ self new for: cart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor.! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'CD 6/10/2021 19:31:55'!
Object subclass: #Cashier
	instanceVariableNames: 'cart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'CD 6/10/2021 19:31:57'!
Object subclass: #Cashier
	instanceVariableNames: 'cart creditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'CD 6/10/2021 19:31:59'!
Object subclass: #Cashier
	instanceVariableNames: 'cart creditCard merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:31:51'!
for: aCart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor

	cart := aCart.
	creditCard := aCreditCard.
	merchantProcessor := aMerchantProcessor.! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:51:44'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:51:44'!
ERROR!
!Cashier class methodsFor: 'validation-errors' stamp: 'CD 6/10/2021 19:53:40'!
invalidCartMessage

	^ 'Cannot checkout invalid cart'.! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:53:53'!
FAILURE!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:53:53'!
FAILURE!
!Cashier class methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:56:03' prior: 50866877!
for: cart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor

	cart isEmpty ifTrue: [Cashier invalidCartMessage ].
	^ self new for: cart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor.! !
!Cashier class methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:56:38'!
validateCartIsNotEmpty: cart

	^ cart isEmpty ifTrue: [Cashier invalidCartMessage ]! !
!Cashier class methodsFor: 'initializers' stamp: 'CD 6/10/2021 19:56:38' prior: 50866931!
for: cart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor

	self validateCartIsNotEmpty: cart.
	^ self new for: cart payingWith: aCreditCard withMerchantProcessor: aMerchantProcessor.! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:57:02'!
FAILURE!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:57:02'!
FAILURE!
!Cashier class methodsFor: 'validation-errors' stamp: 'CD 6/10/2021 19:57:45' prior: 50866941!
validateCartIsNotEmpty: cart

	^ cart isEmpty ifTrue: [self error: self invalidCartMessage ].! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 19:57:50'!
PASSED!
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 20:03:42'!
test02CheckingOutSingleBookGivesBookPriceAsTotal

! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 20:03:55' prior: 50866972!
test02CheckingOutSingleBookGivesBookPriceAsTotal

	| cart |
	cart := Cart initializeWith: aCatalog.
	! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 20:06:48' prior: 50866977!
test02CheckingOutSingleBookGivesBookPriceAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: aBook copiesOf: 1.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: aBook price.
	! !
!Cashier methodsFor: 'initializers' stamp: 'CD 6/10/2021 20:18:21'!
checkout

	! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:21:33' prior: 50866995!
checkout
! !
!Cart methodsFor: 'accesors' stamp: 'CD 6/10/2021 20:27:00'!
bookPrice: book

	^ catalog at: book.! !
!Cart methodsFor: 'accesors' stamp: 'CD 6/10/2021 20:27:14'!
items

	^ items.! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:30:56' prior: 50866998!
checkout

	^ cart items inject: 0 into: [ :accum :item | (cart bookPrice: item) + accum]. ! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:32:34' prior: 50867009!
checkout

	^ cart items inject: 0 into: [ :accum :item | (cart items at: item)*(cart bookPrice: item) + accum]. ! !
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 20:35:28' prior: 50866841 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := (Dictionary new) add: aBook -> 10.5.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 20:35:50' prior: 50866983!
test02CheckingOutSingleBookGivesBookPriceAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: aBook copiesOf: 1.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 10.5.
	! !

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:35:52'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:35:52'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:36:50'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:36:53'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:36:53'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:39:27'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:39:27'!
ERROR!
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 20:42:21' prior: 50867022 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.5.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:42:25'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:42:25'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:42:59'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:42:59'!
ERROR!
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 20:43:37' prior: 50867069 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.5.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 20:44:07' prior: 50867032!
test02CheckingOutSingleBookGivesBookPriceAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 1 copiesOf: aBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 10.5.
	! !

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:44:08'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:44:08'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:44:21'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:44:21'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:44:21'!
ERROR!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 20:44:31'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 20:44:31'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 20:44:31'!
PASSED!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 20:44:31'!
PASSED!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 20:44:31'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:44:52'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:44:52'!
ERROR!
!Cart methodsFor: 'assertions' stamp: 'CD 6/10/2021 20:46:28' prior: 50866557!
assertIsValidBook: aBook

	(catalog includesKey: aBook) ifFalse: [self error: Cart invalidBookMessage].

	! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:46:31'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:46:31'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:46:31'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:46:50'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:46:50'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:46:50'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:47:33'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:47:36'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:47:36'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:48:18'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:48:18'!
ERROR!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:48:18'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:49:55' prior: 50867015!
checkout

	^ cart items inject: 0 into: [ :accum :item | (cart items occurrencesOf: item)*(cart bookPrice: item) + accum]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:49:58'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:49:58'!
PASSED!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'CD 6/10/2021 20:52:55'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aBook invalidBook aCatalog aValidCreditCard aMerchantProcessor anotherBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'nil' stamp: 'CD 6/10/2021 20:52:53'!
test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 2 copiesOf: aBook.
	cart add: 1 copiesOf: anotherBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 10.5.
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'CD 6/10/2021 20:53:29' prior: 50867226!
test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 2 copiesOf: aBook.
	cart add: 1 copiesOf: anotherBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 30.
	! !
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 20:53:53' prior: 50867094 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	anotherBook := 'Concrete Mathematics'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.5.
	aCatalog add: anotherBook -> 9.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:54:16'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:54:16'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:55:04' prior: 50867204!
checkout

	^ cart items inject: 0 into: [ :accum :item | ((cart items occurrencesOf: item)*(cart bookPrice: item)) + accum]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:55:09'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:55:09'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:55:09'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:55:09'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:55:39' prior: 50867273!
checkout

	^ cart items inject: 0 into: [ :item :accum | ((cart items occurrencesOf: item)*(cart bookPrice: item)) + accum]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:55:41'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:55:41'!
ERROR!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:55:41'!
ERROR!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:56:59' prior: 50867294!
checkout

	^ cart items inject: 0 into: [ :accum :item | ((cart items occurrencesOf: item)*(cart bookPrice: item)) + accum]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:57:01'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:57:01'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:57:01'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:57:01'!
FAILURE!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 20:58:54' prior: 50867311!
checkout

	^ cart items sum: [:item | (cart items occurrencesOf: item)*(cart bookPrice: item)]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:58:56'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:58:56'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:58:56'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:58:56'!
FAILURE!
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 20:59:42' prior: 50867254 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	anotherBook := 'Concrete Mathematics'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.
	aCatalog add: anotherBook -> 9.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 20:59:47'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 20:59:47'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 20:59:47'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 20:59:55' prior: 50867105!
test02CheckingOutSingleBookGivesBookPriceAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 1 copiesOf: aBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 10.
	! !
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 21:00:11' prior: 50867240!
test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 2 copiesOf: aBook.
	cart add: 1 copiesOf: anotherBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 29.
	! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 21:00:14'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:00:14'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:00:14'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:00:14'!
FAILURE!
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 21:01:03' prior: 50867387!
test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 2 copiesOf: aBook.
	cart add: 1 copiesOf: anotherBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 29.
	! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 21:01:25' prior: 50867332!
checkout

	^ cart items sum: [:item | (cart items occurrencesOf: item)*(cart bookPrice: item)]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 21:01:45'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:01:45'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:01:45'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:01:45'!
FAILURE!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:02:19'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:02:26'!
FAILURE!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:02:26'!
FAILURE!

2*10!

2*10 + 1*9!

2*10 + 1*9!
!CashierTest methodsFor: 'tests' stamp: 'CD 6/10/2021 21:05:00' prior: 50867415!
test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal

	| cart cashier |
	cart := Cart initializeWith: aCatalog.
	cart add: 2 copiesOf: aBook.
	cart add: 1 copiesOf: anotherBook.
	cashier := Cashier for: cart payingWith: aValidCreditCard withMerchantProcessor: aMerchantProcessor.
	
	self assert: cashier checkout equals: 29.5. 
	! !
!CashierTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 21:05:06' prior: 50867353 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	anotherBook := 'Concrete Mathematics'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.
	aCatalog add: anotherBook -> 9.5.
	aValidCreditCard := CreditCard withOwner: 'John Gibson' number: '12345678' expirationDate: Date tomorrow. 
! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 21:05:28' prior: 50867428!
checkout

	^ cart items sum: [:item | cart bookPrice: item]. ! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 21:05:30'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:05:30'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:05:30'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 21:11:08'!
total

	^ cart items sum: [:item | cart bookPrice: item]! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 21:11:08' prior: 50867487!
checkout

	^ self total. ! !
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 21:11:29' prior: 50867507!
checkout

	^ cart items sum: [:item | cart bookPrice: item]. ! !

!methodRemoval: Cashier #total stamp: 'CD 6/10/2021 21:11:32'!
total

	^ cart items sum: [:item | cart bookPrice: item]!
!Cashier methodsFor: 'checkout' stamp: 'CD 6/10/2021 21:11:50' prior: 50867511!
checkout

	^ cart total. ! !
!Cart methodsFor: 'total' stamp: 'CD 6/10/2021 21:12:22'!
total

	^ items sum: [:item | self bookPrice: item]! !
!Cart methodsFor: 'total' stamp: 'CD 6/10/2021 21:12:33' prior: 50867523!
total

	^ items sum: [:item | self bookPrice: item].! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 21:12:41'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:12:41'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:12:41'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:15:17'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:15:17'!
ERROR!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:15:17'!
FAILURE!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 21:15:17'!
FAILURE!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 21:15:17'!
ERROR!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 21:15:17'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:15:17'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:15:17'!
PASSED!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:15:24'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:15:24'!
ERROR!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:15:24'!
FAILURE!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 21:15:24'!
FAILURE!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 21:15:24'!
ERROR!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:15:33'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:15:35'!
ERROR!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:15:35'!
ERROR!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:16:06'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:16:06'!
ERROR!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:16:06'!
FAILURE!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 21:16:06'!
FAILURE!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 21:16:06'!
ERROR!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:16:17'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:16:19'!
ERROR!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:16:19'!
ERROR!
!CartTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 21:16:57' prior: 50866428 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aBook := 'Persuasion'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.
	aCatalog add: invalidBook -> 9.5.! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:01'!
FAILURE!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CashierTest #test02CheckingOutSingleBookGivesBookPriceAsTotal stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CashierTest #test03CheckingOutMultipleBooksGivesSumOfBookPricesAsTotal stamp: 'CD 6/10/2021 21:17:01'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:01'!
FAILURE!

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:17:07'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:17:07'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:07'!
FAILURE!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 21:17:07'!
PASSED!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 21:17:07'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:07'!
FAILURE!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:17:16'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:18'!
FAILURE!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:18'!
FAILURE!
!CartTest methodsFor: 'setUp' stamp: 'CD 6/10/2021 21:17:40' prior: 50867619 overrides: 16927572!
setUp

	aBook := 'Persuasion'.
	invalidBook := 'Concrete Mathematics'.
	aBook := 'Persuasion'.
	aCatalog := (Dictionary new).
	aCatalog add: aBook -> 10.! !

!testRun: #CartTest #test01NewCartIsEmpty stamp: 'CD 6/10/2021 21:17:43'!
PASSED!

!testRun: #CartTest #test02CartIsNonEmptyAfterAddingAnItem stamp: 'CD 6/10/2021 21:17:43'!
PASSED!

!testRun: #CartTest #test03CannotAddToCartItemsThatNotBelongToTheCatalog stamp: 'CD 6/10/2021 21:17:43'!
PASSED!

!testRun: #CartTest #test04CannotAddToCartANonPositiveQuantityOfItems stamp: 'CD 6/10/2021 21:17:43'!
PASSED!

!testRun: #CartTest #test05CanAddDuplicatedCopiesOfBook stamp: 'CD 6/10/2021 21:17:43'!
PASSED!