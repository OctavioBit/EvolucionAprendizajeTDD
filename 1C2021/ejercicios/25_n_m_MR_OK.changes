----STARTUP---- (13 May 2021 21:04:07) as C:\Users\Luciano\source\repos\gitlab\ingenieria-del-software-i\windows64\blabla.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'LM 5/13/2021 21:04:47'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/13/2021 21:10:29'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'no messages' stamp: 'LM 5/13/2021 21:10:16'!
test01

	| rover |
	rover := MarsRover new.

	self assert: (Point x: 0 y: 0) equals: rover location.
	self assert: $N equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:10:40' prior: 50859487!
test01

	| rover |
	
	rover := MarsRover new.

	self assert: (Point x: 0 y: 0) equals: rover location.
	self assert: $N equals: rover direction.! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:10:42'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:11:06'!
location
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:11:26' prior: 50859505!
location

	^Point x: 0 y: 0! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:11:27'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:11:35'!
direction
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:11:50' prior: 50859516!
direction

	^$N! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:11:58'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:11:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:13:26' prior: 50859495!
test01

	| rover |
	
	rover := MarsRover new.

	self assert: (Point x: 0 y: 0) equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:32:24' prior: 50859521!
direction

	^#N! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:34:41' prior: 50859530!
test01

	| rover |
	
	rover := MarsRover startAt: 0@0 facing: #N.

	self assert: (rover isAt: 0@0 facing: #N).! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:34:46'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'LM 5/13/2021 21:34:53'!
startAt: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeStartAt: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'LM 5/13/2021 21:35:34' prior: 50859551!
startAt: aLocation facing: aDirection

	
	^self new initializeStartAt: aLocation facing: aDirection! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:35:36'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/13/2021 21:35:56'!
Object subclass: #MarsRover
	instanceVariableNames: 'location'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/13/2021 21:35:57'!
Object subclass: #MarsRover
	instanceVariableNames: 'location direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'LM 5/13/2021 21:35:57'!
initializeStartAt: aLocation facing: aDirection 
	self shouldBeImplemented.
	location := aLocation.
	direction := aDirection.! !
!MarsRover methodsFor: 'initialization' stamp: 'LM 5/13/2021 21:36:12' prior: 50859582!
initializeStartAt: aLocation facing: aDirection 

	location := aLocation.
	direction := aDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:36:14'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:36:20'!
isAt: aPoint facing: aSymbol 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:36:38' prior: 50859597!
isAt: aPoint facing: aSymbol 

	^true! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:36:40'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:36:40'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:37:43'!
test02

	| rover |
	
	rover := MarsRover startAt: 0@0 facing: #N.
	
	rover processCommands: ''.

	self assert: (rover isAt: 0@0 facing: #N).! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/13/2021 21:37:43'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:37:51'!
processCommands: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:38:14' prior: 50859621!
processCommands: aSequenceOfCommands 

	! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/13/2021 21:38:16'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:38:16'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/13/2021 21:38:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/13/2021 21:38:55'!
test03

	| rover |
	
	rover := MarsRover startAt: 0@0 facing: #N.
	
	rover processCommands: 'f'.

	self assert: (rover isAt: 0@1 facing: #N).! !

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/13/2021 21:38:55'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/13/2021 21:38:55'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/13/2021 21:38:55'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/13/2021 21:38:55'!
PASSED!

----STARTUP---- (16 May 2021 17:09:46) as C:\Users\Luciano\source\repos\gitlab\ingenieria-del-software-i\windows64\blabla.image!


TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'LM 5/16/2021 17:13:00'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

0@0!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/16/2021 17:21:37'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'LM 5/16/2021 17:21:23'!
test01

	| rover |
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:21:49' prior: 50859487!
test01

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:21:49'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:22:08'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'LM 5/16/2021 17:22:19'!
at: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'LM 5/16/2021 17:23:07' prior: 50859509!
at: aLocation facing: aDirection

	^self new initializeAt: aLocation facing: aDirection! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:23:08'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/16/2021 17:23:31'!
Object subclass: #MarsRover
	instanceVariableNames: 'location'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/16/2021 17:23:31'!
Object subclass: #MarsRover
	instanceVariableNames: 'location direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'LM 5/16/2021 17:23:31'!
initializeAt: aLocation facing: aDirection 
	self shouldBeImplemented.
	location := aLocation.
	direction := aDirection.! !
!MarsRover methodsFor: 'initialization' stamp: 'LM 5/16/2021 17:23:46' prior: 50859540!
initializeAt: aLocation facing: aDirection 

	location := aLocation.
	direction := aDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:23:47'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:23:55'!
process: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:24:39' prior: 50859555!
process: aSequenceOfCommands

	! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:24:41'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:24:48'!
location
	self shouldBeImplemented.
	^location! !
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:24:54' prior: 50859566!
location

	^location! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:25:01'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:25:05'!
direction
	self shouldBeImplemented.
	^direction! !
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:25:09' prior: 50859577!
direction

	^direction! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:25:11'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:25:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:27:28'!
test02

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:27:28'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:29:25' prior: 50859560!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:29:27'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:29:27'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:29:27'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:30:00'!
test03

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:30:00'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:30:27' prior: 50859601!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].! !

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:30:29'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:30:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:30:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:30:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:31:10'!
test04

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #E equals: rover direction.! !

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:31:10'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:31:45' prior: 50859625!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].! !

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:31:48'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:31:48'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:31:48'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:31:48'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:31:48'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:32:20'!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:32:20'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:32:43' prior: 50859653!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].! !

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:32:46'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:32:46'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:32:46'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:32:46'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:32:46'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:32:46'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:40:13'!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: #E equals: rover direction.! !

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:40:13'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:41:27' prior: 50859685!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].! !

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:41:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:42:35'!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rb'.
	
	self assert: -1@0 equals: rover location.
	self assert: #E equals: rover direction.! !

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:42:35'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:42:58' prior: 50859721!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].! !

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:43:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:43:34'!
test09

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lb'.
	
	self assert: 1@0 equals: rover location.
	self assert: #W equals: rover direction.! !

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:43:34'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:44:03' prior: 50859762!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].! !

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:44:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:44:19'!
test08

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: #W equals: rover direction.! !

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:44:19'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:44:41' prior: 50859807!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].! !

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:44:42'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:45:05' prior: 50859857!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].! !

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:45:06'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:49:03'!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:49:03'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:49:57' prior: 50859881!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].! !

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:50:08'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:50:09'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:50:09'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:53:52' prior: 50859925!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:53:52'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:54:24' prior: 50859936!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		location := 0@0.
		direction := #W
	].! !

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:54:27'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:54:39'!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rrrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 17:54:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:55:49' prior: 50860047!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 17:55:49'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:56:10' prior: 50859996!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		location := 0@0.
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		location := 0@0.
		direction := #S
	].! !

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 17:56:13'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:56:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 17:56:14'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:56:26'!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #E equals: rover direction.! !

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 17:56:26'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:56:52' prior: 50860095!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		location := 0@0.
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		location := 0@0.
		direction := #E
	].! !

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 17:56:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:03:19'!
test13

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #E equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:03:26' prior: 50860151!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:03:39' prior: 50860084!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:49:03' prior: 50859985!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:06:05'!
test14

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:06:05'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:13:38' prior: 50860162!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := #E
	].

	aSequenceOfCommands = 'ff' ifTrue: [
		location := 2@0
	].! !

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:13:40'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:14:00' prior: 50860269!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := #E
	].

	aSequenceOfCommands = 'ff' ifTrue: [
		location := 0@2
	].! !

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:14:01'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 18:14:01'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 18:14:01'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 18:14:01'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:14:01'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 18:14:01'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:14:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:14:51'!
test15

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:14:51'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:15:30' prior: 50860302!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := #E
	].

	aSequenceOfCommands = 'ff' ifTrue: [
		location := 0@2
	].
	aSequenceOfCommands = 'bb' ifTrue: [
		location := 0@-2
	].! !

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 18:15:31'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:15:32'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:15:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:31:14'!
test16

	| rover |
	
	rover := MarsRover at: 0@0 facing: #E.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:31:14'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:31:42' prior: 50860378!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:33:59' prior: 50860458!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [	direction := #E].
		direction = #E ifTrue: [direction := #S].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:34:09'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:34:09'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:34:09'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:36:12' prior: 50860490!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [^	direction := #E].
		direction = #E ifTrue: [^direction := #S].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:36:14'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:36:17'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 18:36:17'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 18:36:17'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 18:36:17'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:36:17'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 18:36:17'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:36:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:39:03'!
test17

	| rover |
	
	rover := MarsRover at: 0@0 facing: #S.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 18:39:11'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:39:36' prior: 50860566!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [^	direction := #E].
		direction = #E ifTrue: [^direction := #S].
		direction = #S ifTrue: [^direction := #W].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:39:37'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:39:38'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:39:38'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 18:39:38'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:39:50'!
test18

	| rover |
	
	rover := MarsRover at: 0@0 facing: #W.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 18:39:50'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:40:09' prior: 50860652!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [^	direction := #E].
		direction = #E ifTrue: [^direction := #S].
		direction = #S ifTrue: [^direction := #W].
		direction = #W ifTrue: [^direction := #N].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 18:40:12'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 18:40:13'!
PASSED!

Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #CardinalPoint category: 'MarsRover' stamp: 'LM 5/16/2021 18:47:17'!
Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'LM 5/16/2021 18:48:01'!
CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'LM 5/16/2021 18:48:08'!
CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'LM 5/16/2021 18:48:12'!
CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'LM 5/16/2021 18:48:16'!
CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!East class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:01:49'!
rotateClockwise

	^South! !
!CardinalPoint class methodsFor: 'nil' stamp: 'LM 5/16/2021 19:02:08'!
rotateClockwise

	self subclassResponsibility! !
!North class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:02:25' overrides: 50860877!
rotateClockwise

	^East! !
!South class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:02:40' overrides: 50860877!
rotateClockwise

	^West! !
!West class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:02:52' overrides: 50860877!
rotateClockwise

	^North! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:05:36' prior: 50860740!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := South].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := West].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:06:28' prior: 50860894!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := South].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!CardinalPoint class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:06:46'!
rotateAntiClockwise

	self subclassResponsibility! !
!East class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:03' overrides: 50860961!
rotateAntiClockwise

	^North! !
!North class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:14' overrides: 50860961!
rotateAntiClockwise

	^West! !
!South class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:26' overrides: 50860961!
rotateAntiClockwise

	^East! !
!West class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:36' overrides: 50860961!
rotateAntiClockwise

	^South! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:08:07' prior: 50859496!
test01

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:08:47' prior: 50859590!
test02

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:08:57' prior: 50859614!
test03

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:07' prior: 50859642!
test04

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:17' prior: 50859674!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:26' prior: 50859710!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:39' prior: 50859751!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rb'.
	
	self assert: -1@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:51' prior: 50859846!
test08

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:00' prior: 50859796!
test09

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lb'.
	
	self assert: 1@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:11' prior: 50860250!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:23' prior: 50860241!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:34' prior: 50860232!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:48' prior: 50860223!
test13

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:57' prior: 50860258!
test14

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:06' prior: 50860367!
test15

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:20' prior: 50860447!
test16

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:41' prior: 50860641!
test17

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:51' prior: 50860729!
test18

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:11:54'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:11:55'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:14:14'!
test19

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:14:14'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:15:32' prior: 50860927!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [direction := South].
		direction = East ifTrue: [direction := West].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:15:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:15:50'!
test20

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:15:50'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:16:12' prior: 50861203!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [direction := South].
		direction = East ifTrue: [direction := West].
		direction = South ifTrue: [direction := North].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:16:13'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:16:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:16:13'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:16:13'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:16:14'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:16:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:16:14'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:16:41' prior: 50861297!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:16:45'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:16:48'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:16:48'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:16:48'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:16:48'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:16:48'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:16:48'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:16:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:17:08'!
test21

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:17:08'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:18:17' prior: 50861386!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:18:22'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:18:22'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:18:23'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:20:56' prior: 50861486!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:24:38' prior: 50861577!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := direction rotateClockwise
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := direction rotateAntiClockwise
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := direction rotateClockwise
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := direction rotateAntiClockwise
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].! !

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:24:50'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:24:50'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:24:51'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:28:37' prior: 50861623!
process: aSequenceOfCommands

	(aSequenceOfCommands select: [:char | char = $r]) sum timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands select: [:char | char = $l]) sum timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:28:59'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:30:55' prior: 50861723!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:30:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:33:50'!
test22

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:33:50'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:35:52' prior: 50861751!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:35:55'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:35:56'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:35:56'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:35:56'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:35:56'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:35:56'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:35:56'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:36:21'!
test23

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:36:21'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:36:55' prior: 50861838!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
	].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:36:59'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:37:26'!
test24

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:37:26'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:37:49' prior: 50861930!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:37:50'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:37:51'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:38:28'!
test25

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction.! !

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 19:38:35'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:39:06' prior: 50862026!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:39:09'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 19:39:10'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:40:36'!
test26

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction.! !

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 19:40:36'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:41:00' prior: 50862126!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:41:01'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 19:41:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:41:20'!
test27

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction.! !

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 19:41:20'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:41:39' prior: 50862231!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:41:40'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 19:41:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:46:29'!
test28

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: North equals: rover direction.! !

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 19:46:29'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:48:04' prior: 50862340!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'frf' ifTrue: [
		location := 1@1.
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 19:48:07'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:48:35' prior: 50862441!
test28

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction.! !

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 19:48:39'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 19:48:40'!
PASSED!

----STARTUP---- (16 May 2021 20:36:01) as C:\Users\Luciano\source\repos\gitlab\ingenieria-del-software-i\windows64\blabla.image!


!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:03'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:03'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:03'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'LM 5/16/2021 17:21:23'!
test01

	| rover |
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:21:49' prior: 50862593!
test01

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover class methodsFor: 'instance creation' stamp: 'LM 5/16/2021 17:22:19'!
at: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'LM 5/16/2021 17:23:07' prior: 50862610!
at: aLocation facing: aDirection

	^self new initializeAt: aLocation facing: aDirection! !

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:03'!
Object subclass: #MarsRover
	instanceVariableNames: 'location'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:03'!
Object subclass: #MarsRover
	instanceVariableNames: 'location direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'LM 5/16/2021 17:23:31'!
initializeAt: aLocation facing: aDirection 
	self shouldBeImplemented.
	location := aLocation.
	direction := aDirection.! !
!MarsRover methodsFor: 'initialization' stamp: 'LM 5/16/2021 17:23:46' prior: 50862638!
initializeAt: aLocation facing: aDirection 

	location := aLocation.
	direction := aDirection.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:23:55'!
process: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:24:39' prior: 50862651!
process: aSequenceOfCommands

	! !
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:24:48'!
location
	self shouldBeImplemented.
	^location! !
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:24:54' prior: 50862660!
location

	^location! !
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:25:05'!
direction
	self shouldBeImplemented.
	^direction! !
!MarsRover methodsFor: 'accessing' stamp: 'LM 5/16/2021 17:25:09' prior: 50862668!
direction

	^direction! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:27:28'!
test02

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:29:25' prior: 50862656!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:30:00'!
test03

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:30:27' prior: 50862686!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:31:10'!
test04

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #E equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:31:45' prior: 50862701!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:32:20'!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:32:43' prior: 50862717!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:40:13'!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: #E equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:41:27' prior: 50862735!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:42:35'!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rb'.
	
	self assert: -1@0 equals: rover location.
	self assert: #E equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:42:58' prior: 50862755!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:43:34'!
test09

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lb'.
	
	self assert: 1@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:44:03' prior: 50862777!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:44:19'!
test08

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:44:41' prior: 50862802!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:45:05' prior: 50862829!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:49:03'!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:49:57' prior: 50862850!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:53:52' prior: 50862871!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:54:24' prior: 50862880!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		location := 0@0.
		direction := #W
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:54:39'!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rrrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:55:49' prior: 50862939!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:56:10' prior: 50862913!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		location := 0@0.
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		location := 0@0.
		direction := #S
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:56:26'!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #E equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:56:52' prior: 50862957!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		location := 0@0.
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		location := 0@0.
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		location := 0@0.
		direction := #E
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:03:19'!
test13

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #E equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:03:26' prior: 50862985!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:03:39' prior: 50862948!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 17:49:03' prior: 50862904!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:06:05'!
test14

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:13:38' prior: 50862994!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := #E
	].

	aSequenceOfCommands = 'ff' ifTrue: [
		location := 2@0
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:14:00' prior: 50863069!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := #E
	].

	aSequenceOfCommands = 'ff' ifTrue: [
		location := 0@2
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:14:51'!
test15

	| rover |
	
	rover := MarsRover at: 0@0 facing: #N.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:15:30' prior: 50863100!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := #W
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := #S
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := #E
	].

	aSequenceOfCommands = 'ff' ifTrue: [
		location := 0@2
	].
	aSequenceOfCommands = 'bb' ifTrue: [
		location := 0@-2
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:31:14'!
test16

	| rover |
	
	rover := MarsRover at: 0@0 facing: #E.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #S equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:31:42' prior: 50863139!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [direction := #E].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:33:59' prior: 50863180!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [	direction := #E].
		direction = #E ifTrue: [direction := #S].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:36:12' prior: 50863212!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [^	direction := #E].
		direction = #E ifTrue: [^direction := #S].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:39:03'!
test17

	| rover |
	
	rover := MarsRover at: 0@0 facing: #S.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #W equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:39:36' prior: 50863246!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [^	direction := #E].
		direction = #E ifTrue: [^direction := #S].
		direction = #S ifTrue: [^direction := #W].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:39:50'!
test18

	| rover |
	
	rover := MarsRover at: 0@0 facing: #W.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: #N equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 18:40:09' prior: 50863289!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := #E
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := #W
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction = #N ifTrue: [^	direction := #E].
		direction = #E ifTrue: [^direction := #S].
		direction = #S ifTrue: [^direction := #W].
		direction = #W ifTrue: [^direction := #N].
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := #S].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := #W].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := #W].
	aSequenceOfCommands = 'll' ifTrue: [direction := #S].
	aSequenceOfCommands = 'lll' ifTrue: [direction := #E].! !

!classDefinition: #CardinalPoint category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #CardinalPoint category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
Object subclass: #CardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:05'!
CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'LM 5/16/2021 20:36:06'!
CardinalPoint subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!East class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:01:49'!
rotateClockwise

	^South! !
!CardinalPoint class methodsFor: 'nil' stamp: 'LM 5/16/2021 19:02:08'!
rotateClockwise

	self subclassResponsibility! !
!North class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:02:25' overrides: 50863439!
rotateClockwise

	^East! !
!South class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:02:40' overrides: 50863439!
rotateClockwise

	^West! !
!West class methodsFor: 'no messages' stamp: 'LM 5/16/2021 19:02:52' overrides: 50863439!
rotateClockwise

	^North! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:05:36' prior: 50863333!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := South].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [direction := West].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:06:28' prior: 50863456!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [direction := South].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!CardinalPoint class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:06:46'!
rotateAntiClockwise

	self subclassResponsibility! !
!East class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:03' overrides: 50863523!
rotateAntiClockwise

	^North! !
!North class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:14' overrides: 50863523!
rotateAntiClockwise

	^West! !
!South class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:26' overrides: 50863523!
rotateAntiClockwise

	^East! !
!West class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:07:36' overrides: 50863523!
rotateAntiClockwise

	^South! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:08:07' prior: 50862602!
test01

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:08:47' prior: 50862677!
test02

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:08:57' prior: 50862692!
test03

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:07' prior: 50862708!
test04

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:17' prior: 50862726!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:26' prior: 50862746!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:39' prior: 50862768!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rb'.
	
	self assert: -1@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:09:51' prior: 50862820!
test08

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:00' prior: 50862793!
test09

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lb'.
	
	self assert: 1@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:11' prior: 50863052!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:23' prior: 50863043!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:34' prior: 50863034!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:48' prior: 50863025!
test13

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:10:57' prior: 50863060!
test14

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:06' prior: 50863130!
test15

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:20' prior: 50863171!
test16

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:41' prior: 50863280!
test17

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:11:51' prior: 50863324!
test18

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:14:14'!
test19

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:15:32' prior: 50863489!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [direction := South].
		direction = East ifTrue: [direction := West].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:15:50'!
test20

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:16:12' prior: 50863719!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [direction := South].
		direction = East ifTrue: [direction := West].
		direction = South ifTrue: [direction := North].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:16:41' prior: 50863764!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:17:08'!
test21

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:18:17' prior: 50863802!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [direction := West].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [direction := South].
	aSequenceOfCommands = 'lll' ifTrue: [direction := East].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:20:56' prior: 50863849!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := East
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := East
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := West
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:24:38' prior: 50863889!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
		direction := direction rotateClockwise
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
		direction := direction rotateAntiClockwise
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
		direction := direction rotateClockwise
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
		direction := direction rotateAntiClockwise
	].
	
	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:28:37' prior: 50863935!
process: aSequenceOfCommands

	(aSequenceOfCommands select: [:char | char = $r]) sum timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands select: [:char | char = $l]) sum timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:30:55' prior: 50863984!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [location := 0@1].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:33:50'!
test22

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:35:52' prior: 50864010!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:36:21'!
test23

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:36:55' prior: 50864044!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
	].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:37:26'!
test24

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:37:49' prior: 50864081!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [location := 0@2].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:38:28'!
test25

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:39:06' prior: 50864120!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:40:36'!
test26

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:41:00' prior: 50864160!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:41:20'!
test27

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:41:39' prior: 50864203!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:46:29'!
test28

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:48:04' prior: 50864247!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'frf' ifTrue: [
		location := 1@1.
	].
	aSequenceOfCommands = 'rf' ifTrue: [
		location := 1@0.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 19:48:35' prior: 50864284!
test28

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 20:40:37'!
test29

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rf'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 20:40:37'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 20:41:34' prior: 50864293!
process: aSequenceOfCommands

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].
	
	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [^location := 1@0].
		direction = East ifTrue: [^location := 0@-1].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 20:41:36'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 20:44:01' prior: 50864352!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [^location := 1@0].
		direction = East ifTrue: [^location := 0@-1].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		location := 1@0.
	].

	(aSequenceOfCommands count: [:char | char = $r]) timesRepeat: [direction := direction rotateClockwise].
	(aSequenceOfCommands count: [:char | char = $l]) timesRepeat: [direction := direction rotateAntiClockwise].! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 20:44:02'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 20:52:42' prior: 50864396!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction := direction rotateClockwise.
		direction = North ifTrue: [^location := 1@0].
		direction = East ifTrue: [^location := 0@-1].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction := direction rotateClockwise.
		location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := direction rotateAntiClockwise.
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := direction rotateClockwise.
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := direction rotateAntiClockwise.
		location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 20:52:43'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 20:55:09' prior: 50864440!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [^location := 1@0].
		direction = East ifTrue: [^location := 0@-1].
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction := direction rotateClockwise.
		location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := direction rotateAntiClockwise.
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := direction rotateClockwise.
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := direction rotateAntiClockwise.
		location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
		direction := direction rotateClockwise.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
		direction := direction rotateAntiClockwise.
	].! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 20:55:24'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:04:04' prior: 50864508!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			direction := South.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction := East.
		location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:04:10'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:04:10'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:04:11'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:04:11'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:05:29' prior: 50864576!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction := East.
		^location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:05:31'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:05:33'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:05:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:06:10' prior: 50864341!
test29

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:06:10'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:06:38' prior: 50864728!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction := East.
		^location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:06:39'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:06:40'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:07:01'!
test30

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rf'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.! !

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:07:01'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:07:20' prior: 50864891!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction := East.
		^location := 1@1.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:07:21'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:07:22'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:08:51'!
test31

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'frf'.
	
	self assert: 1@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:08:51'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:09:48' prior: 50865058!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction = North ifTrue: [
			direction := East.
			^location := 1@1.
		].
		direction = East ifTrue: [
			direction := South.
			^location := 1@-1.
		].
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:09:49'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:09:50'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:10:35'!
test32

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'frf'.
	
	self assert: -1@-1 equals: rover location.
	self assert: West equals: rover direction.! !

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:10:35'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:11:02' prior: 50865230!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction = North ifTrue: [
			direction := East.
			^location := 1@1.
		].
		direction = East ifTrue: [
			direction := South.
			^location := 1@-1.
		].
		direction = South ifTrue: [
			direction := West.
			^location := -1@-1.
		].
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:11:02'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:11:03'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:11:04'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:11:04'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:11:04'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:11:04'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:11:28'!
test33

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'frf'.
	
	self assert: -1@1 equals: rover location.
	self assert: North equals: rover direction.! !

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:11:28'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:11:50' prior: 50865408!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction = North ifTrue: [
			direction := East.
			^location := 1@1.
		].
		direction = East ifTrue: [
			direction := South.
			^location := 1@-1.
		].
		direction = South ifTrue: [
			direction := West.
			^location := -1@-1.
		].
		direction = West ifTrue: [
			direction := North.
			^location := -1@1.
		].
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:11:53'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:11:53'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:11:53'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:11:53'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:11:53'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:11:53'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:18:53' prior: 50865591!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		self process: 'f'.
		self process: 'rf'.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:19:06'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:11:50' prior: 50865768!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := 0@1].
		direction = East ifTrue: [^location := 1@0].
		direction = South ifTrue: [^location := 0@-1].
		direction = West ifTrue: [^location := -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		direction = North ifTrue: [^location := 0@2].
		direction = East ifTrue: [^location := 2@0].
		direction = South ifTrue: [^location := 0@-2].
		direction = West ifTrue: [^location := -2@0].
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction = North ifTrue: [
			direction := East.
			^location := 1@1.
		].
		direction = East ifTrue: [
			direction := South.
			^location := 1@-1.
		].
		direction = South ifTrue: [
			direction := West.
			^location := -1@-1.
		].
		direction = West ifTrue: [
			direction := North.
			^location := -1@1.
		].
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:26:10' prior: 50865860!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + 0@1].
		direction = East ifTrue: [^location := location + 1@0].
		direction = South ifTrue: [^location := location + 0@-1].
		direction = West ifTrue: [^location := location + -1@0].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		self process: 'f'.
		self process: 'f'.
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction = North ifTrue: [
			direction := East.
			^location := 1@1.
		].
		direction = East ifTrue: [
			direction := South.
			^location := 1@-1.
		].
		direction = South ifTrue: [
			direction := West.
			^location := -1@-1.
		].
		direction = West ifTrue: [
			direction := North.
			^location := -1@1.
		].
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:26:14'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:26:51' prior: 50865958!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + (0@1)].
		direction = East ifTrue: [^location := location + (1@0)].
		direction = South ifTrue: [^location := location + (0@-1)].
		direction = West ifTrue: [^location := location + (-1@0)].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		self process: 'f'.
		self process: 'f'.
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		direction = North ifTrue: [
			location := 1@0.
			^direction := East.
		].
		direction = East ifTrue: [
			location := 0@-1.
			^direction := South.
		].
		direction = South ifTrue: [
			location := -1@0.
			^direction := West.
		].
		direction = West ifTrue: [
			location := 0@1.
			^direction := North.
		].
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		direction = North ifTrue: [
			direction := East.
			^location := 1@1.
		].
		direction = East ifTrue: [
			direction := South.
			^location := 1@-1.
		].
		direction = South ifTrue: [
			direction := West.
			^location := -1@-1.
		].
		direction = West ifTrue: [
			direction := North.
			^location := -1@1.
		].
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:26:55'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:26:55'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:26:56'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:26:57'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:26:57'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:26:57'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:28:57' prior: 50866055!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + (0@1)].
		direction = East ifTrue: [^location := location + (1@0)].
		direction = South ifTrue: [^location := location + (0@-1)].
		direction = West ifTrue: [^location := location + (-1@0)].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		self process: 'f'.
		self process: 'f'.
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		self process: 'r'.
		self process: 'f'.
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		self process: 'f'.
		self process: 'r'.
		self process: 'f'.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		direction = North ifTrue: [^direction := South].
		direction = East ifTrue: [^direction := West].
		direction = South ifTrue: [^direction := North].
		direction = West ifTrue: [^direction := East].
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:29:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:29:03'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:31:02' prior: 50866229!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + (0@1)].
		direction = East ifTrue: [^location := location + (1@0)].
		direction = South ifTrue: [^location := location + (0@-1)].
		direction = West ifTrue: [^location := location + (-1@0)].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		self process: 'f'.
		self process: 'f'.
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		self process: 'r'.
		self process: 'f'.
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		self process: 'f'.
		self process: 'r'.
		self process: 'f'.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		direction := West.
		^location := -1@0.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [location := 0@-1].
	aSequenceOfCommands = 'bb' ifTrue: [location := 0@-2].
	aSequenceOfCommands = 'rb' ifTrue: [
		direction := East.
		^location := -1@0.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		direction := West.
		^location := 1@0.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		self process: 'r'.
		self process: 'r'.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		self process: 'r'.
		self process: 'r'.
		self process: 'r'.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		self process: 'l'.
		self process: 'l'.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		self process: 'l'.
		self process: 'l'.
		self process: 'l'.
	].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:31:05'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:31:06'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:33:12' prior: 50866386!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + (0@1)].
		direction = East ifTrue: [^location := location + (1@0)].
		direction = South ifTrue: [^location := location + (0@-1)].
		direction = West ifTrue: [^location := location + (-1@0)].
	].
	aSequenceOfCommands = 'ff' ifTrue: [
		self process: 'f'.
		self process: 'f'.
	].
	
	aSequenceOfCommands = 'rf' ifTrue: [
		self process: 'r'.
		self process: 'f'.
	].
	aSequenceOfCommands = 'frf' ifTrue: [
		self process: 'f'.
		self process: 'r'.
		self process: 'f'.
	].
	aSequenceOfCommands = 'lf' ifTrue: [
		self process: 'l'.
		self process: 'f'.
	].
	
	aSequenceOfCommands = 'b' ifTrue: [
		direction = North ifTrue: [^location := location - (0@1)].
		direction = East ifTrue: [^location := location - (1@0)].
		direction = South ifTrue: [^location := location - (0@-1)].
		direction = West ifTrue: [^location := location - (-1@0)].
	].
	aSequenceOfCommands = 'bb' ifTrue: [
		self process: 'b'.
		self process: 'b'.
	].
	aSequenceOfCommands = 'rb' ifTrue: [
		self process: 'r'.
		self process: 'b'.
	].
	aSequenceOfCommands = 'lb' ifTrue: [
		self process: 'l'.
		self process: 'b'.
	].

	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'rr' ifTrue: [
		self process: 'r'.
		self process: 'r'.
	].
	aSequenceOfCommands = 'rrr' ifTrue: [
		self process: 'r'.
		self process: 'r'.
		self process: 'r'.
	].
	
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].
	aSequenceOfCommands = 'll' ifTrue: [
		self process: 'l'.
		self process: 'l'.
	].
	aSequenceOfCommands = 'lll' ifTrue: [
		self process: 'l'.
		self process: 'l'.
		self process: 'l'.
	].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:33:19'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:33:20'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:38:48' prior: 50866525!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + (0@1)].
		direction = East ifTrue: [^location := location + (1@0)].
		direction = South ifTrue: [^location := location + (0@-1)].
		direction = West ifTrue: [^location := location + (-1@0)].
	].
	aSequenceOfCommands = 'b' ifTrue: [
		direction = North ifTrue: [^location := location - (0@1)].
		direction = East ifTrue: [^location := location - (1@0)].
		direction = South ifTrue: [^location := location - (0@-1)].
		direction = West ifTrue: [^location := location - (-1@0)].
	].
	aSequenceOfCommands = 'r' ifTrue: [
		direction = North ifTrue: [^direction := East].
		direction = East ifTrue: [^direction := South].
		direction = South ifTrue: [^direction := West].
		direction = West ifTrue: [^direction := North].
	].
	aSequenceOfCommands = 'l' ifTrue: [
		direction = North ifTrue: [^direction := West].
		direction = East ifTrue: [^direction := North].
		direction = South ifTrue: [^direction := East].
		direction = West ifTrue: [^direction := South].
	].

	aSequenceOfCommands do: [:command | self process: command asString].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:38:52'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:38:53'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:43:09' prior: 50866672!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [
		direction = North ifTrue: [^location := location + (0@1)].
		direction = East ifTrue: [^location := location + (1@0)].
		direction = South ifTrue: [^location := location + (0@-1)].
		direction = West ifTrue: [^location := location + (-1@0)].
	].
	aSequenceOfCommands = 'b' ifTrue: [
		direction = North ifTrue: [^location := location - (0@1)].
		direction = East ifTrue: [^location := location - (1@0)].
		direction = South ifTrue: [^location := location - (0@-1)].
		direction = West ifTrue: [^location := location - (-1@0)].
	].
	aSequenceOfCommands = 'r' ifTrue: [^direction := direction rotateClockwise	].
	aSequenceOfCommands = 'l' ifTrue: [^direction := direction rotateAntiClockwise	].

	aSequenceOfCommands do: [:command | self process: command asString].! !
!CardinalPoint class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:43:39'!
asVector

	self subclassResponsibility! !
!East class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:45:55' overrides: 50866819!
asVector

	^1@0! !
!North class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:46:39' overrides: 50866819!
asVector

	^0@1! !
!South class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:47:02' overrides: 50866819!
asVector

	^0@-1! !
!West class methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:47:34' overrides: 50866819!
asVector

	^-1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:48:29' prior: 50866790!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [^location := location + direction asVector].
	aSequenceOfCommands = 'b' ifTrue: [^location := location - direction asVector].
	aSequenceOfCommands = 'r' ifTrue: [^direction := direction rotateClockwise	].
	aSequenceOfCommands = 'l' ifTrue: [^direction := direction rotateAntiClockwise	].

	aSequenceOfCommands do: [:command | self process: command asString].! !

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:49:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:49:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:49:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:49:20'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:49:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:51:37'!
test34

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 's'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 21:59:47' prior: 50866840!
process: aSequenceOfCommands

	aSequenceOfCommands = 'f' ifTrue: [^location := location + direction asVector].
	aSequenceOfCommands = 'b' ifTrue: [^location := location - direction asVector].
	aSequenceOfCommands = 'r' ifTrue: [^direction := direction rotateClockwise	].
	aSequenceOfCommands = 'l' ifTrue: [^direction := direction rotateAntiClockwise	].

	aSequenceOfCommands do: [:command |
		(#($f $b $r $l) includes: command) ifTrue: [
			self process: command asString
		]
	].! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 21:59:52'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!

!testRun: #MarsRoverTest #test34 stamp: 'LM 5/16/2021 21:59:53'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 22:01:50'!
processSingleCommand: aCommand

	aCommand = $f ifTrue: [^location := location + direction asVector].
	aCommand = $b ifTrue: [^location := location - direction asVector].
	aCommand = $r ifTrue: [^direction := direction rotateClockwise	].
	aCommand = $l ifTrue: [^direction := direction rotateAntiClockwise	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 22:02:27' prior: 50866942!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:command | self processSingleCommand: command].! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 22:02:33'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!

!testRun: #MarsRoverTest #test34 stamp: 'LM 5/16/2021 22:02:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 22:03:05'!
test35

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'sffr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 22:03:19'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 22:03:20'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 22:03:20'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 22:03:20'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 22:03:20'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 22:03:20'!
PASSED!

!testRun: #MarsRoverTest #test34 stamp: 'LM 5/16/2021 22:03:20'!
PASSED!

!testRun: #MarsRoverTest #test35 stamp: 'LM 5/16/2021 22:03:20'!
FAILURE!

!testRun: #MarsRoverTest #test35 stamp: 'LM 5/16/2021 22:03:20'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LM 5/16/2021 22:08:27' prior: 50867052!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:command |
		(#($f $b $r $l) includes: command) ifTrue: [
			self processSingleCommand: command
		] ifFalse: [
			^self
		].
	].! !

!testRun: #MarsRoverTest #test35 stamp: 'LM 5/16/2021 22:08:45'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LM 5/16/2021 22:08:49'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test21 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test22 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test23 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test24 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test25 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test26 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test27 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test34 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

!testRun: #MarsRoverTest #test35 stamp: 'LM 5/16/2021 22:08:50'!
PASSED!

----SNAPSHOT----(16 May 2021 22:19:32) blabla.image priorSource: 16890008!

----QUIT----(16 May 2021 22:19:36) blabla.image priorSource: 17141443!

----STARTUP---- (17 May 2021 10:11:56) as C:\Users\Luciano\source\repos\gitlab\ingenieria-del-software-i\windows64\blabla.image!


!methodRemoval: MarsRoverTest #test07 stamp: 'LM 5/17/2021 10:18:58'!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rb'.
	
	self assert: -1@0 equals: rover location.
	self assert: East equals: rover direction.!

!methodRemoval: MarsRoverTest #test09 stamp: 'LM 5/17/2021 10:19:13'!
test09

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lb'.
	
	self assert: 1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:21:19'!
test05a

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test05 stamp: 'LM 5/17/2021 10:21:19'!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:21:24'!
test06a

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test06 stamp: 'LM 5/17/2021 10:21:24'!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:21:59'!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test16 stamp: 'LM 5/17/2021 10:21:59'!
test16

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:22:14'!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test17 stamp: 'LM 5/17/2021 10:22:14'!
test17

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:22:35'!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test18 stamp: 'LM 5/17/2021 10:22:35'!
test18

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:24:06'!
test08a

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test08 stamp: 'LM 5/17/2021 10:24:06'!
test08

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:25:38'!
test03a

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test22 stamp: 'LM 5/17/2021 10:25:38'!
test22

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:25:55'!
test04a

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test23 stamp: 'LM 5/17/2021 10:25:55'!
test23

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:26:15'!
test05f

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test24 stamp: 'LM 5/17/2021 10:26:15'!
test24

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:27:12'!
test03f

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test03a stamp: 'LM 5/17/2021 10:27:12'!
test03a

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:27:19'!
test04f

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test04a stamp: 'LM 5/17/2021 10:27:19'!
test04a

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:28:26'!
test06ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test14 stamp: 'LM 5/17/2021 10:28:26'!
test14

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:28:53'!
test07ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test25 stamp: 'LM 5/17/2021 10:28:53'!
test25

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:29:10'!
test08ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test26 stamp: 'LM 5/17/2021 10:29:10'!
test26

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:29:29'!
test09ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test27 stamp: 'LM 5/17/2021 10:29:29'!
test27

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:30:36'!
test10b

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test03 stamp: 'LM 5/17/2021 10:30:36'!
test03

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:31:20'!
test11bb

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test15 stamp: 'LM 5/17/2021 10:31:20'!
test15

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:31:45'!
test12r

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test04 stamp: 'LM 5/17/2021 10:31:45'!
test04

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:32:16'!
test13r

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test05 stamp: 'LM 5/17/2021 10:32:16'!
test05

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:32:28'!
test14r

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test06 stamp: 'LM 5/17/2021 10:32:28'!
test06

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:32:38'!
test15r

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test07 stamp: 'LM 5/17/2021 10:32:38'!
test07

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:32:56'!
test16rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test19 stamp: 'LM 5/17/2021 10:32:56'!
test19

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:33:05'!
test17rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test20 stamp: 'LM 5/17/2021 10:33:05'!
test20

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:33:18'!
test18rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test21 stamp: 'LM 5/17/2021 10:33:18'!
test21

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:34:12'!
test19l

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test05a stamp: 'LM 5/17/2021 10:34:12'!
test05a

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:34:33'!
test20ll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test12 stamp: 'LM 5/17/2021 10:34:33'!
test12

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:34:56'!
test21lll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test13 stamp: 'LM 5/17/2021 10:34:56'!
test13

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:35:31'!
test19rrr

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test11 stamp: 'LM 5/17/2021 10:35:31'!
test11

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:35:41'!
test20l

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test19l stamp: 'LM 5/17/2021 10:35:41'!
test19l

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:35:46'!
test21ll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test20ll stamp: 'LM 5/17/2021 10:35:46'!
test20ll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:35:51'!
test22lll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test21lll stamp: 'LM 5/17/2021 10:35:51'!
test21lll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:36:31'!
test23lll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test22lll stamp: 'LM 5/17/2021 10:36:31'!
test22lll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:36:35'!
test22ll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test21ll stamp: 'LM 5/17/2021 10:36:35'!
test21ll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:36:41'!
test21l

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test20l stamp: 'LM 5/17/2021 10:36:41'!
test20l

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:36:46'!
test20rrr

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test19rrr stamp: 'LM 5/17/2021 10:36:46'!
test19rrr

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:36:54'!
test19rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test18rr stamp: 'LM 5/17/2021 10:36:54'!
test18rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:37:02'!
test18rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test17rr stamp: 'LM 5/17/2021 10:37:02'!
test17rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:37:08'!
test17rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test16rr stamp: 'LM 5/17/2021 10:37:08'!
test16rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:37:17'!
test16rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test10 stamp: 'LM 5/17/2021 10:37:17'!
test10

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:38:25'!
test24rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test06a stamp: 'LM 5/17/2021 10:38:25'!
test06a

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:49:21'!
test25rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rf'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!testRun: #MarsRoverTest #test25rf stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test03f stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test04f stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test05f stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test06ff stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test07ff stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test08a stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test08ff stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test09ff stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test10b stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test11bb stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test12r stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test13r stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test14r stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test15r stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test16rr stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test17rr stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test18rr stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test19rr stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test20rrr stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test21l stamp: 'LM 5/17/2021 10:49:21'!
PASSED!

!testRun: #MarsRoverTest #test22ll stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test23lll stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test24rf stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test25rf stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test28 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test29 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test30 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test31 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test32 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test33 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test34 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!

!testRun: #MarsRoverTest #test35 stamp: 'LM 5/17/2021 10:49:22'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:49:33'!
test26rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test29 stamp: 'LM 5/17/2021 10:49:33'!
test29

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:49:44'!
test27rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rf'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test30 stamp: 'LM 5/17/2021 10:49:44'!
test30

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rf'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:50:07'!
test28frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test28 stamp: 'LM 5/17/2021 10:50:07'!
test28

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:50:18'!
test29frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'frf'.
	
	self assert: 1@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test31 stamp: 'LM 5/17/2021 10:50:18'!
test31

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'frf'.
	
	self assert: 1@-1 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:50:24'!
test30frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'frf'.
	
	self assert: -1@-1 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test32 stamp: 'LM 5/17/2021 10:50:24'!
test32

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'frf'.
	
	self assert: -1@-1 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:50:31'!
test31frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'frf'.
	
	self assert: -1@1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test33 stamp: 'LM 5/17/2021 10:50:31'!
test33

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'frf'.
	
	self assert: -1@1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:51:29'!
test32singleInvalidCommand

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 's'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test34 stamp: 'LM 5/17/2021 10:51:29'!
test34

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 's'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:55:22'!
test33invalidCommandAtTheBeginning

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'sffr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test35 stamp: 'LM 5/17/2021 10:55:22'!
test35

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'sffr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:56:10'!
test01emptySequence

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test01 stamp: 'LM 5/17/2021 10:56:10'!
test01

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:57:00'!
test02advanceFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test02 stamp: 'LM 5/17/2021 10:57:00'!
test02

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:57:17'!
test03advanceFacingEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test03f stamp: 'LM 5/17/2021 10:57:17'!
test03f

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:57:45'!
test04advanceFacingSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test04f stamp: 'LM 5/17/2021 10:57:45'!
test04f

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:57:57'!
test05advanceFacingWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test05f stamp: 'LM 5/17/2021 10:57:57'!
test05f

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:58:55'!
test28lf

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test08a stamp: 'LM 5/17/2021 10:58:55'!
test08a

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:59:34'!
test06advanceTwiceFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test06ff stamp: 'LM 5/17/2021 10:59:35'!
test06ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 10:59:59'!
test07advanceTwiceFacingEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test07ff stamp: 'LM 5/17/2021 10:59:59'!
test07ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:00:10'!
test08advanceTwiceFacingSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test08ff stamp: 'LM 5/17/2021 11:00:10'!
test08ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:00:18'!
test09advanceTwiceFacingWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test09ff stamp: 'LM 5/17/2021 11:00:18'!
test09ff

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:02:05'!
test10advanceBackwardsFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test10b stamp: 'LM 5/17/2021 11:02:05'!
test10b

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:02:31'!
test11advanceBackwardsTwiceFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test11bb stamp: 'LM 5/17/2021 11:02:32'!
test11bb

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:03:18'!
test12turnRightFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test12r stamp: 'LM 5/17/2021 11:03:18'!
test12r

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:03:24'!
test13turnRightFromEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test13r stamp: 'LM 5/17/2021 11:03:25'!
test13r

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:03:33'!
test14turnRightFromSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test14r stamp: 'LM 5/17/2021 11:03:33'!
test14r

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:03:39'!
test15turnRightFromWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test15r stamp: 'LM 5/17/2021 11:03:39'!
test15r

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:04:00'!
test16turnRightTwiceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test16rr stamp: 'LM 5/17/2021 11:04:00'!
test16rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:04:06'!
test17turnRightTwiceFromEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test17rr stamp: 'LM 5/17/2021 11:04:06'!
test17rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:04:13'!
test18turnRightTwiceFromSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test18rr stamp: 'LM 5/17/2021 11:04:13'!
test18rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:04:21'!
test19turnRightTwiceFromWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test19rr stamp: 'LM 5/17/2021 11:04:21'!
test19rr

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:04:56'!
test20turnRightThriceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test20rrr stamp: 'LM 5/17/2021 11:04:56'!
test20rrr

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:06:21'!
test21turnLeftFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test21l stamp: 'LM 5/17/2021 11:06:21'!
test21l

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:06:59'!
test22turnLeftTwiceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test22ll stamp: 'LM 5/17/2021 11:06:59'!
test22ll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:07:18'!
test23turnLeftThriceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test23lll stamp: 'LM 5/17/2021 11:07:18'!
test23lll

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:08:03'!
test24turnRightFromNorthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test24rf stamp: 'LM 5/17/2021 11:08:03'!
test24rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:08:17'!
test25turnRightFromEastAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rf'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test25rf stamp: 'LM 5/17/2021 11:08:17'!
test25rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'rf'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:08:28'!
test26turnRightFromSouthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test26rf stamp: 'LM 5/17/2021 11:08:28'!
test26rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'rf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:08:37'!
test27turnRightFromWestAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rf'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test27rf stamp: 'LM 5/17/2021 11:08:38'!
test27rf

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'rf'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:09:01'!
test28turnLeftFromNorthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test28lf stamp: 'LM 5/17/2021 11:09:01'!
test28lf

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:12:13'!
test29advanceTurnRightFromNorthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction.! !

!methodRemoval: MarsRoverTest #test28frf stamp: 'LM 5/17/2021 11:12:13'!
test28frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:12:25'!
test30advanceTurnRightFromEastAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'frf'.
	
	self assert: 1@-1 equals: rover location.
	self assert: South equals: rover direction.! !

!methodRemoval: MarsRoverTest #test29frf stamp: 'LM 5/17/2021 11:12:25'!
test29frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: East.
	
	rover process: 'frf'.
	
	self assert: 1@-1 equals: rover location.
	self assert: South equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:12:38'!
test31advanceTurnRightFromSouthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'frf'.
	
	self assert: -1@-1 equals: rover location.
	self assert: West equals: rover direction.! !

!methodRemoval: MarsRoverTest #test30frf stamp: 'LM 5/17/2021 11:12:38'!
test30frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: South.
	
	rover process: 'frf'.
	
	self assert: -1@-1 equals: rover location.
	self assert: West equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:12:50'!
test32advanceTurnRightFromWestAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'frf'.
	
	self assert: -1@1 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test31frf stamp: 'LM 5/17/2021 11:12:50'!
test31frf

	| rover |
	
	rover := MarsRover at: 0@0 facing: West.
	
	rover process: 'frf'.
	
	self assert: -1@1 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:12:57'!
test33singleInvalidCommand

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 's'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test32singleInvalidCommand stamp: 'LM 5/17/2021 11:12:57'!
test32singleInvalidCommand

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 's'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'LM 5/17/2021 11:13:03'!
test34invalidCommandAtTheBeginning

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'sffr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.! !

!methodRemoval: MarsRoverTest #test33invalidCommandAtTheBeginning stamp: 'LM 5/17/2021 11:13:03'!
test33invalidCommandAtTheBeginning

	| rover |
	
	rover := MarsRover at: 0@0 facing: North.
	
	rover process: 'sffr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction.!

!testRun: #MarsRoverTest #test01emptySequence stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test02advanceFacingNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test03advanceFacingEast stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test04advanceFacingSouth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test05advanceFacingWest stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test06advanceTwiceFacingNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test07advanceTwiceFacingEast stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test08advanceTwiceFacingSouth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test09advanceTwiceFacingWest stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test10advanceBackwardsFacingNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test11advanceBackwardsTwiceFacingNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test12turnRightFromNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test13turnRightFromEast stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test14turnRightFromSouth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test15turnRightFromWest stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test16turnRightTwiceFromNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test17turnRightTwiceFromEast stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test18turnRightTwiceFromSouth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test19turnRightTwiceFromWest stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test20turnRightThriceFromNorth stamp: 'LM 5/17/2021 11:13:12'!
PASSED!

!testRun: #MarsRoverTest #test21turnLeftFromNorth stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test22turnLeftTwiceFromNorth stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test23turnLeftThriceFromNorth stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test24turnRightFromNorthAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test25turnRightFromEastAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test26turnRightFromSouthAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test27turnRightFromWestAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test28turnLeftFromNorthAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test29advanceTurnRightFromNorthAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test30advanceTurnRightFromEastAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test31advanceTurnRightFromSouthAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test32advanceTurnRightFromWestAndAdvance stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test33singleInvalidCommand stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

!testRun: #MarsRoverTest #test34invalidCommandAtTheBeginning stamp: 'LM 5/17/2021 11:13:13'!
PASSED!

----SNAPSHOT----(17 May 2021 11:21:46) blabla.image priorSource: 17141519!

----STARTUP---- (17 May 2021 16:23:17) as C:\Users\Luciano\source\repos\gitlab\ingenieria-del-software-i\windows64\blabla.image!

!CardinalPoint methodsFor: 'converting' stamp: 'LM 5/17/2021 16:24:46'!
asVector

	self subclassResponsibility! !

!methodRemoval: CardinalPoint class #asVector stamp: 'LM 5/17/2021 16:24:47'!
asVector

	self subclassResponsibility!
!CardinalPoint methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:24:51'!
rotateAntiClockwise

	self subclassResponsibility! !

!methodRemoval: CardinalPoint class #rotateAntiClockwise stamp: 'LM 5/17/2021 16:24:51'!
rotateAntiClockwise

	self subclassResponsibility!
!CardinalPoint methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:24:54'!
rotateClockwise

	self subclassResponsibility! !

!methodRemoval: CardinalPoint class #rotateClockwise stamp: 'LM 5/17/2021 16:24:54'!
rotateClockwise

	self subclassResponsibility!
!East methodsFor: 'converting' stamp: 'LM 5/17/2021 16:25:13' overrides: 50868934!
asVector

	^1@0! !

!methodRemoval: East class #asVector stamp: 'LM 5/17/2021 16:25:13'!
asVector

	^1@0!
!East methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:17' overrides: 50868942!
rotateAntiClockwise

	^North! !

!methodRemoval: East class #rotateAntiClockwise stamp: 'LM 5/17/2021 16:25:17'!
rotateAntiClockwise

	^North!
!East methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:20' overrides: 50868951!
rotateClockwise

	^South! !

!methodRemoval: East class #rotateClockwise stamp: 'LM 5/17/2021 16:25:20'!
rotateClockwise

	^South!
!North methodsFor: 'converting' stamp: 'LM 5/17/2021 16:25:26' overrides: 50868934!
asVector

	^0@1! !

!methodRemoval: North class #asVector stamp: 'LM 5/17/2021 16:25:26'!
asVector

	^0@1!
!North methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:28' overrides: 50868942!
rotateAntiClockwise

	^West! !

!methodRemoval: North class #rotateAntiClockwise stamp: 'LM 5/17/2021 16:25:28'!
rotateAntiClockwise

	^West!
!North methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:31' overrides: 50868951!
rotateClockwise

	^East! !

!methodRemoval: North class #rotateClockwise stamp: 'LM 5/17/2021 16:25:31'!
rotateClockwise

	^East!
!South methodsFor: 'converting' stamp: 'LM 5/17/2021 16:25:38' overrides: 50868934!
asVector

	^0@-1! !

!methodRemoval: South class #asVector stamp: 'LM 5/17/2021 16:25:38'!
asVector

	^0@-1!
!South methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:41' overrides: 50868942!
rotateAntiClockwise

	^East! !

!methodRemoval: South class #rotateAntiClockwise stamp: 'LM 5/17/2021 16:25:41'!
rotateAntiClockwise

	^East!
!South methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:44' overrides: 50868951!
rotateClockwise

	^West! !

!methodRemoval: South class #rotateClockwise stamp: 'LM 5/17/2021 16:25:44'!
rotateClockwise

	^West!
!West methodsFor: 'converting' stamp: 'LM 5/17/2021 16:25:52' overrides: 50868934!
asVector

	^-1@0! !

!methodRemoval: West class #asVector stamp: 'LM 5/17/2021 16:25:52'!
asVector

	^-1@0!
!West methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:55' overrides: 50868942!
rotateAntiClockwise

	^South! !

!methodRemoval: West class #rotateAntiClockwise stamp: 'LM 5/17/2021 16:25:55'!
rotateAntiClockwise

	^South!
!West methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:25:58' overrides: 50868951!
rotateClockwise

	^North! !

!methodRemoval: West class #rotateClockwise stamp: 'LM 5/17/2021 16:25:58'!
rotateClockwise

	^North!
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:27:37' prior: 50868221!
test01emptySequence

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: ''.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:27:46' prior: 50868238!
test02advanceFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'f'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:27:53' prior: 50868255!
test03advanceFacingEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East new.
	
	rover process: 'f'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:02' prior: 50868272!
test04advanceFacingSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South new.
	
	rover process: 'f'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:08' prior: 50868289!
test05advanceFacingWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West new.
	
	rover process: 'f'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:20' prior: 50868323!
test06advanceTwiceFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'ff'.
	
	self assert: 0@2 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:27' prior: 50868340!
test07advanceTwiceFacingEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East new.
	
	rover process: 'ff'.
	
	self assert: 2@0 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:39' prior: 50868357!
test08advanceTwiceFacingSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South new.
	
	rover process: 'ff'.
	
	self assert: 0@-2 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:45' prior: 50868374!
test09advanceTwiceFacingWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West new.
	
	rover process: 'ff'.
	
	self assert: -2@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:52' prior: 50868391!
test10advanceBackwardsFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'b'.
	
	self assert: 0@-1 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:28:58' prior: 50868408!
test11advanceBackwardsTwiceFacingNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'bb'.
	
	self assert: 0@-2 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:05' prior: 50868426!
test12turnRightFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:12' prior: 50868443!
test13turnRightFromEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East new.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:19' prior: 50868460!
test14turnRightFromSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South new.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:25' prior: 50868477!
test15turnRightFromWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West new.
	
	rover process: 'r'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:32' prior: 50868494!
test16turnRightTwiceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:39' prior: 50868511!
test17turnRightTwiceFromEast

	| rover |
	
	rover := MarsRover at: 0@0 facing: East new.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:45' prior: 50868528!
test18turnRightTwiceFromSouth

	| rover |
	
	rover := MarsRover at: 0@0 facing: South new.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:29:53' prior: 50868545!
test19turnRightTwiceFromWest

	| rover |
	
	rover := MarsRover at: 0@0 facing: West new.
	
	rover process: 'rr'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:00' prior: 50868562!
test20turnRightThriceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'rrr'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:07' prior: 50868579!
test21turnLeftFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'l'.
	
	self assert: 0@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:13' prior: 50868596!
test22turnLeftTwiceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'll'.
	
	self assert: 0@0 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:21' prior: 50868613!
test23turnLeftThriceFromNorth

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'lll'.
	
	self assert: 0@0 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:28' prior: 50868630!
test24turnRightFromNorthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'rf'.
	
	self assert: 1@0 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:37' prior: 50868647!
test25turnRightFromEastAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: East new.
	
	rover process: 'rf'.
	
	self assert: 0@-1 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:45' prior: 50868664!
test26turnRightFromSouthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: South new.
	
	rover process: 'rf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:51' prior: 50868681!
test27turnRightFromWestAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: West new.
	
	rover process: 'rf'.
	
	self assert: 0@1 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:30:58' prior: 50868698!
test28turnLeftFromNorthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'lf'.
	
	self assert: -1@0 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:31:05' prior: 50868715!
test29advanceTurnRightFromNorthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'frf'.
	
	self assert: 1@1 equals: rover location.
	self assert: East equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:31:12' prior: 50868733!
test30advanceTurnRightFromEastAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: East new.
	
	rover process: 'frf'.
	
	self assert: 1@-1 equals: rover location.
	self assert: South equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:31:19' prior: 50868751!
test31advanceTurnRightFromSouthAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: South new.
	
	rover process: 'frf'.
	
	self assert: -1@-1 equals: rover location.
	self assert: West equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:31:26' prior: 50868769!
test32advanceTurnRightFromWestAndAdvance

	| rover |
	
	rover := MarsRover at: 0@0 facing: West new.
	
	rover process: 'frf'.
	
	self assert: -1@1 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:31:33' prior: 50868787!
test33singleInvalidCommand

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 's'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction class.! !
!MarsRoverTest methodsFor: 'testing' stamp: 'LM 5/17/2021 16:31:41' prior: 50868805!
test34invalidCommandAtTheBeginning

	| rover |
	
	rover := MarsRover at: 0@0 facing: North new.
	
	rover process: 'sffr'.
	
	self assert: 0@0 equals: rover location.
	self assert: North equals: rover direction class.! !

!testRun: #MarsRoverTest #test01emptySequence stamp: 'LM 5/17/2021 16:31:46'!
PASSED!

!testRun: #MarsRoverTest #test02advanceFacingNorth stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test03advanceFacingEast stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test04advanceFacingSouth stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test05advanceFacingWest stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test06advanceTwiceFacingNorth stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test07advanceTwiceFacingEast stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test08advanceTwiceFacingSouth stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test09advanceTwiceFacingWest stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test10advanceBackwardsFacingNorth stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test11advanceBackwardsTwiceFacingNorth stamp: 'LM 5/17/2021 16:31:47'!
PASSED!

!testRun: #MarsRoverTest #test12turnRightFromNorth stamp: 'LM 5/17/2021 16:31:47'!
FAILURE!

!testRun: #MarsRoverTest #test13turnRightFromEast stamp: 'LM 5/17/2021 16:31:47'!
FAILURE!

!testRun: #MarsRoverTest #test14turnRightFromSouth stamp: 'LM 5/17/2021 16:31:47'!
FAILURE!

!testRun: #MarsRoverTest #test15turnRightFromWest stamp: 'LM 5/17/2021 16:31:47'!
FAILURE!

!testRun: #MarsRoverTest #test16turnRightTwiceFromNorth stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test17turnRightTwiceFromEast stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test18turnRightTwiceFromSouth stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test19turnRightTwiceFromWest stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test20turnRightThriceFromNorth stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test21turnLeftFromNorth stamp: 'LM 5/17/2021 16:31:47'!
FAILURE!

!testRun: #MarsRoverTest #test22turnLeftTwiceFromNorth stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test23turnLeftThriceFromNorth stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test24turnRightFromNorthAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test25turnRightFromEastAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test26turnRightFromSouthAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test27turnRightFromWestAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test28turnLeftFromNorthAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test29advanceTurnRightFromNorthAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test30advanceTurnRightFromEastAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test31advanceTurnRightFromSouthAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test32advanceTurnRightFromWestAndAdvance stamp: 'LM 5/17/2021 16:31:47'!
ERROR!

!testRun: #MarsRoverTest #test33singleInvalidCommand stamp: 'LM 5/17/2021 16:31:48'!
PASSED!

!testRun: #MarsRoverTest #test34invalidCommandAtTheBeginning stamp: 'LM 5/17/2021 16:31:48'!
PASSED!

!testRun: #MarsRoverTest #test16turnRightTwiceFromNorth stamp: 'LM 5/17/2021 16:32:05'!
ERROR!

!testRun: #MarsRoverTest #test16turnRightTwiceFromNorth stamp: 'LM 5/17/2021 16:32:43'!
ERROR!

!testRun: #MarsRoverTest #test16turnRightTwiceFromNorth stamp: 'LM 5/17/2021 16:33:41'!
ERROR!
!East methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:17' prior: 50868966 overrides: 50868942!
rotateAntiClockwise

	^North new! !
!East methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:22' prior: 50868973 overrides: 50868951!
rotateClockwise

	^South new! !
!North methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:29' prior: 50868986 overrides: 50868942!
rotateAntiClockwise

	^West new! !
!North methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:34' prior: 50868993 overrides: 50868951!
rotateClockwise

	^East new! !
!South methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:39' prior: 50869006 overrides: 50868942!
rotateAntiClockwise

	^East new! !
!South methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:43' prior: 50869013 overrides: 50868951!
rotateClockwise

	^West new! !
!West methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:48' prior: 50869026 overrides: 50868942!
rotateAntiClockwise

	^South new! !
!West methodsFor: 'rotate' stamp: 'LM 5/17/2021 16:34:52' prior: 50869033 overrides: 50868951!
rotateClockwise

	^North new! !

!testRun: #MarsRoverTest #test01emptySequence stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test02advanceFacingNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test03advanceFacingEast stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test04advanceFacingSouth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test05advanceFacingWest stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test06advanceTwiceFacingNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test07advanceTwiceFacingEast stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test08advanceTwiceFacingSouth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test09advanceTwiceFacingWest stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test10advanceBackwardsFacingNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test11advanceBackwardsTwiceFacingNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test12turnRightFromNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test13turnRightFromEast stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test14turnRightFromSouth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test15turnRightFromWest stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test16turnRightTwiceFromNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test17turnRightTwiceFromEast stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test18turnRightTwiceFromSouth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test19turnRightTwiceFromWest stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test20turnRightThriceFromNorth stamp: 'LM 5/17/2021 16:34:57'!
PASSED!

!testRun: #MarsRoverTest #test21turnLeftFromNorth stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test22turnLeftTwiceFromNorth stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test23turnLeftThriceFromNorth stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test24turnRightFromNorthAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test25turnRightFromEastAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test26turnRightFromSouthAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test27turnRightFromWestAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test28turnLeftFromNorthAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test29advanceTurnRightFromNorthAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test30advanceTurnRightFromEastAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test31advanceTurnRightFromSouthAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test32advanceTurnRightFromWestAndAdvance stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test33singleInvalidCommand stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

!testRun: #MarsRoverTest #test34invalidCommandAtTheBeginning stamp: 'LM 5/17/2021 16:34:58'!
PASSED!

----QUIT----(17 May 2021 16:35:15) blabla.image priorSource: 17192857!