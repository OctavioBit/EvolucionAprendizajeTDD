

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (10 June 2021 14:47:57) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\TusLibros\windows64\CuisUniversity-4532.image!


TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'GR 6/10/2021 14:49:36'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'GR 6/10/2021 14:50:37'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #BookCatalog category: 'TusLibros' stamp: 'GR 6/10/2021 14:50:39'!
Object subclass: #BookCatalog
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'no messages' stamp: 'GR 6/10/2021 14:50:33'!
test01
	|cart|
	
	cart := Cart for: BookCatalog new.
	
	self assert: cart isEmpty.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:50:41'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:50:49'!
for: aBookCatalog 
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:51:07' prior: 50859367!
for: aBookCatalog 
	
 	^self new initializeFor: aBookCatalog.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:51:09'!
ERROR!

!classDefinition: #Cart category: 'TusLibros' stamp: 'GR 6/10/2021 14:51:15'!
Object subclass: #Cart
	instanceVariableNames: 'bookCatalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'GR 6/10/2021 14:51:15'!
initializeFor: aBookCatalog 
	self shouldBeImplemented.
	bookCatalog := aBookCatalog.! !
!Cart methodsFor: 'initialization' stamp: 'GR 6/10/2021 14:51:19' prior: 50859385!
initializeFor: aBookCatalog 
	bookCatalog := aBookCatalog.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:51:21'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:51:27'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:51:31' prior: 50859398!
isEmpty
	^true.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:51:35'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:51:35'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:51:39'!
test02
	|cart|
	
	cart := Cart for: BookCatalog new.
	
	self assert: cart isEmpty.! !

!classDefinition: #Book category: 'TusLibros' stamp: 'GR 6/10/2021 14:55:17'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:55:13' prior: 50859410!
test02
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 1 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 1 equals: cart amountOfItems.
	
	self assert: cart includes: book.! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:55:21'!
ERROR!
!Book class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:55:28'!
withISBN: aSmallInteger 
	self shouldBeImplemented.! !
!Book class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:57:42' prior: 50859436!
withISBN: anISBN
	^self new initializeWithISBN: anISBN .! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:57:45'!
ERROR!

!classDefinition: #Book category: 'TusLibros' stamp: 'GR 6/10/2021 14:57:50'!
Object subclass: #Book
	instanceVariableNames: 'iSBN'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Book methodsFor: 'initialization' stamp: 'GR 6/10/2021 14:57:50'!
initializeWithISBN: anISBN 
	self shouldBeImplemented.
	iSBN := anISBN.! !
!Book methodsFor: 'initialization' stamp: 'GR 6/10/2021 14:57:55' prior: 50859454!
initializeWithISBN: anISBN 
	
	iSBN := anISBN.! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:57:56'!
ERROR!

!classDefinition: #BookCatalog category: 'TusLibros' stamp: 'GR 6/10/2021 14:58:16'!
Object subclass: #BookCatalog
	instanceVariableNames: 'contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!BookCatalog methodsFor: 'no messages' stamp: 'GR 6/10/2021 14:58:14' overrides: 16896425!
initialize

	contents := OrderedCollection new.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:58:19'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:58:19'!
ERROR!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:58:19'!
ERROR!
!BookCatalog methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:58:25'!
add: aBook 
	self shouldBeImplemented.! !
!BookCatalog methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:58:34' prior: 50859484!
add: aBook 
	contents add: aBook.! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:58:36'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:59:13'!
addAsMany: aSmallInteger books: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:59:22' prior: 50859495!
addAsMany: anAmount books: aBook 
	! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'GR 6/10/2021 14:59:34'!
Object subclass: #Cart
	instanceVariableNames: 'bookCatalog contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 14:59:32' prior: 50859500!
addAsMany: anAmount books: aBook 

	contents add: aBook.
	! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:59:35'!
ERROR!
!Cart methodsFor: 'initialization' stamp: 'GR 6/10/2021 14:59:54' prior: 50859391!
initializeFor: aBookCatalog 
	bookCatalog := aBookCatalog.
	contents := OrderedCollection new.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 14:59:57'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:59:57'!
FAILURE!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 14:59:57'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:01:24' prior: 50859402!
isEmpty
	^contents isEmpty .! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:01:30'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:01:39'!
amountOfItems
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:01:49' prior: 50859537!
amountOfItems
	^contents size.! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:01:50'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:01:58'!
includes: aBook 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:02:23' prior: 50859548!
includes: aBook 
	^contents includes: aBook .! !

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:02:26'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:02:28'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:02:28'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:02:34'!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 1 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 1 equals: cart amountOfItems.
	
	self assert: cart includes: book.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:02:38' prior: 50859564!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 3 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 1 equals: cart amountOfItems.
	
	self assert: cart includes: book.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:02:41' prior: 50859577!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 1 equals: cart amountOfItems.
	
	self assert: cart includes: book.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:04:33' prior: 50859590!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 3 equals: cart amountOfItems.
	
	self assert: 3 equals: (cart howManyCopies: book).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:04:44' prior: 50859603!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 2 equals: cart amountOfItems.
	
	self assert: 2 equals: (cart howManyCopies: book).! !

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:04:49'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:05:18' prior: 50859511!
addAsMany: anAmount books: aBook 

	anAmount timesRepeat: [contents add: aBook copy].
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:05:36'!
howManyCopies: aBook 
	self shouldBeImplemented.! !

----End fileIn of D:\Facultad\2021-1C-IS1\CuisUniversity_win64\TusLibros\windows64\Packages\TerseGuide.pck.st----!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:06:56' prior: 50859637!
howManyCopies: aBook 
	^contents occurrencesOf: aBook.! !

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:06:59'!
FAILURE!
!Book methodsFor: 'nil' stamp: 'GR 6/10/2021 15:07:51' overrides: 16881029!
= aBook

	! !

!classDefinition: #Book category: 'TusLibros' stamp: 'GR 6/10/2021 15:08:00'!
Object subclass: #Book
	instanceVariableNames: 'ISBN'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Book methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:08:00' prior: 50859459!
initializeWithISBN: anISBN 
	
	ISBN := anISBN.! !
!Book methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:08:15' prior: 50862575 overrides: 16881029!
= aBook

	ISBN = aBook ISBN.

	! !
!Book methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:08:29'!
ISBN

	^ISBN .! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:08:33'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:08:33'!
ERROR!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:08:33'!
ERROR!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:08:37'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:09:34' prior: 50859631!
addAsMany: anAmount books: aBook 

	anAmount timesRepeat: [contents add: aBook].
	! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:09:41'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:09:41'!
ERROR!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:09:41'!
ERROR!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:09:44'!
ERROR!
!Book methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:09:56' prior: 50862590 overrides: 16881029!
= aBook

	^ISBN = aBook ISBN.

	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:10:05' prior: 50862606!
addAsMany: anAmount books: aBook 

	anAmount timesRepeat: [contents add: aBook copy].
	! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:10:06'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:10:06'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:10:06'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:10:10'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:10:10'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:10:10'!
PASSED!

!methodRemoval: Book #= stamp: 'GR 6/10/2021 15:10:31'!
= aBook

	^ISBN = aBook ISBN.

	!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:10:37'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:10:38'!
FAILURE!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:10:38'!
FAILURE!
!Book methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:10:59' overrides: 16881029!
= aBook

	ISBN = aBook ISBN.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:11:01'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:11:01'!
ERROR!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:11:01'!
ERROR!
!Book methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:11:10' prior: 50862654 overrides: 16881029!
= aBook

	^ISBN = aBook ISBN.! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:11:12'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:11:12'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:11:12'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:13:12' prior: 50859616!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 2 equals: cart amountOfItems.
	
	self assert: 2 equals: (cart howManyCopies: book).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:13:17' prior: 50862676!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 1 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 2 equals: cart amountOfItems.
	
	self assert: 2 equals: (cart howManyCopies: book).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:17:51' prior: 50862688!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 1 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart itemNotAvailableErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:17:55'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:18:04' prior: 50862700!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 2 equals: cart amountOfItems.
	
	self assert: 2 equals: (cart howManyCopies: book).! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:18:12'!
test04
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 1 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart itemNotAvailableErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:19:20'!
itemNotAvailableErrorMessage

	^'Item is not available for sale'! !

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:19:26'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:19:26'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:20:39' prior: 50862625!
addAsMany: anAmount books: aBook 

	(bookCatalog includes: aBook) ifFalse: [^self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook copy].
	! !

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:20:40'!
ERROR!
!BookCatalog methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:20:49'!
includes: aBook 
	self shouldBeImplemented.! !

!methodRemoval: BookCatalog #includes: stamp: 'GR 6/10/2021 15:21:01'!
includes: aBook 
	self shouldBeImplemented.!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:21:17' prior: 50862754!
addAsMany: anAmount books: aBook 

	(bookCatalog isAvailable: aBook) ifFalse: [^self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook copy].
	! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:21:20'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:21:20'!
ERROR!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:21:20'!
ERROR!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:21:20'!
ERROR!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:21:22'!
ERROR!
!BookCatalog methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:21:28'!
isAvailable: aBook 
	self shouldBeImplemented.! !
!BookCatalog methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:21:41' prior: 50862792!
isAvailable: aBook 
	^contents includes: aBook.! !

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:21:43'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:21:59'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:22:15'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:22:15'!
FAILURE!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:22:49'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:23:14' prior: 50862773!
addAsMany: anAmount books: aBook 

	(bookCatalog isAvailable: aBook) ifFalse: [^self error: self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook copy].
	! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:23:17'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:23:17'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:23:17'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:23:17'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:23:28'!
test05
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 1 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart itemNotAvailableErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:23:48' prior: 50862830!
test05
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 1 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart itemNotAvailableErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:24:17' prior: 50862845!
test05
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddZeroItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:24:20'!
FAILURE!
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:24:46'!
cannotAddZeroItemsErrorMessage

	^'Cannot add 0 items to cart'! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:24:51'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:24:51'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:24:51'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:24:51'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:24:51'!
FAILURE!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:24:51'!
FAILURE!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:25:00'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:25:00'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:25:00'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:25:00'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:25:00'!
FAILURE!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:25:00'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:25:41' prior: 50862813!
addAsMany: anAmount books: aBook 

	(anAmount = 0) ifTrue: [^self error: self class cannotAddZeroItemsErrorMessage ].

	(bookCatalog isAvailable: aBook) ifFalse: [^self error: self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook copy].
	! !

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:25:43'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:25:48'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:25:48'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:25:48'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:25:48'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:25:48'!
PASSED!

|dic book|

book := Book withISBN: 12345.

dic := Dictionary new.

dic add: book -> 2.

dic at: book!

|dic book1 book2|

book1 := Book withISBN: 12345.

book2 := book1 copy.

dic := Dictionary new.

dic add: book1 -> 2.

dic at: book2!

|dic book1 book2|

book1 := Book withISBN: 12345.

book2 := book1 copy.

dic := Dictionary new.

dic add: book1 -> 2.

dic!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:36:45'!
test06
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddZeroItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:36:52' prior: 50862944!
test06
	|cart catalog book list|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddZeroItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:37:12' prior: 50862959!
test06
	|cart catalog book list|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 1 books: book.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:37:41' prior: 50862975!
test06
	|cart catalog list|
	
	catalog := BookCatalog new.
	
	
	cart := Cart for: catalog.
	

	
	list := cart listItems.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:38:06' prior: 50862984!
test06
	|cart catalog list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	
	list := cart listItems.
	
	self assert: list isEmpty.! !

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:38:08'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:38:18'!
listItems
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:38:28' prior: 50863000!
listItems
	^Dictionary new.! !

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:39:21'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:41:31'!
test07 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 1 books: book.	
	list := cart listItems.
	
	self assert: 1 equals: (list at: book).
	self assert: 1 equals: list size.! !

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:41:32'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:43:12' prior: 50863004!
listItems

	|list|
	
	list := Dictionary new.
	
	contents do: [:aBook | list add: aBook -> 1].! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:43:13'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:43:14'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:43:14'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:43:14'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:43:14'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:43:14'!
PASSED!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:43:14'!
ERROR!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:43:14'!
ERROR!

|dic book1 book2|

book1 := Book withISBN: 12345.

book2 := book1 copy.

dic := Dictionary new.

dic add: book1 -> 2.

dic at: book1!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:44:38'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:45:01' prior: 50863037!
listItems

	|list|
	
	list := Dictionary new.
	
	contents do: [:aBook | list add: aBook -> 1].
	
	^list! !

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:45:02'!
PASSED!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:45:02'!
ERROR!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:45:02'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:46:00' prior: 50862908!
addAsMany: anAmount books: aBook 

	(anAmount = 0) ifTrue: [^self error: self class cannotAddZeroItemsErrorMessage ].

	(bookCatalog isAvailable: aBook) ifFalse: [^self error: self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook].
	! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:46:03'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:46:04'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:46:04'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:46:04'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:46:04'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:46:04'!
PASSED!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:46:04'!
PASSED!

!methodRemoval: Book #= stamp: 'GR 6/10/2021 15:46:30'!
= aBook

	^ISBN = aBook ISBN.!

!methodRemoval: Book #ISBN stamp: 'GR 6/10/2021 15:46:31'!
ISBN

	^ISBN .!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:46:41'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:46:45'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:46:58' prior: 50863023!
test07 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 2 books: book.	
	list := cart listItems.
	
	self assert: 2 equals: (list at: book).
	self assert: 1 equals: list size.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:47:03' prior: 50863142!
test07 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 1 books: book.	
	list := cart listItems.
	
	self assert: 1 equals: (list at: book).
	self assert: 1 equals: list size.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:47:09' prior: 50863154!
test07 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 1 books: book.	
	list := cart listItems.
	
	self assert: 1 equals: (list at: book).
	self assert: 1 equals: list size.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:47:15'!
test08 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 2 books: book.	
	list := cart listItems.
	
	self assert: 2 equals: (list at: book).
	self assert: 1 equals: list size.! !

!testRun: #CartTest #test08 stamp: 'GR 6/10/2021 15:47:16'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 15:51:51' prior: 50863067!
listItems

	|list|
	
	list := Dictionary new.
	
	contents do: [:aBook | list add: aBook -> (self howManyCopies: aBook)].
	
	^list! !

!testRun: #CartTest #test08 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

!testRun: #CartTest #test08 stamp: 'GR 6/10/2021 15:51:54'!
PASSED!

----SNAPSHOT----(10 June 2021 15:53:06) CuisUniversity-4532.image priorSource: 16885703!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:31:36' prior: 50863192!
listItems

	|list|
	
	list := Dictionary new.
	
	contents do: [:aBook | (list includesKey: aBook) ifFalse: [list add: aBook -> (self howManyCopies: aBook)]].
	
	^list! !

!testRun: #CartTest #test01 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test02 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test03 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test04 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test05 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test06 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test07 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!

!testRun: #CartTest #test08 stamp: 'GR 6/10/2021 16:31:38'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:35:17'!
test01CartShouldBeEmptyWhenCreated
	|cart|
	
	cart := Cart for: BookCatalog new.
	
	self assert: cart isEmpty.! !

!methodRemoval: CartTest #test01 stamp: 'GR 6/10/2021 16:35:17'!
test01
	|cart|
	
	cart := Cart for: BookCatalog new.
	
	self assert: cart isEmpty.!

!methodRemoval: CartTest #test02 stamp: 'GR 6/10/2021 16:35:47'!
test02
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 1 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 1 equals: cart amountOfItems.
	
	self assert: cart includes: book.!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:36:39'!
test02CartShouldAddCorrectAmountOfBooks
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 2 equals: cart amountOfItems.
	
	self assert: 2 equals: (cart howManyCopies: book).! !

!methodRemoval: CartTest #test03 stamp: 'GR 6/10/2021 16:36:39'!
test03
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	cart addAsMany: 2 books: book.
	
	self deny: cart isEmpty.
	
	self assert: 2 equals: cart amountOfItems.
	
	self assert: 2 equals: (cart howManyCopies: book).!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:36:56'!
test03CannotAddNotAvailableBook
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 1 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart itemNotAvailableErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !

!methodRemoval: CartTest #test04 stamp: 'GR 6/10/2021 16:36:56'!
test04
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 1 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart itemNotAvailableErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].!
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:38:01'!
cannotAddNonPositiveAmountOfItemsErrorMessage

	^'Cannot add 0 items to cart'! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:38:01' prior: 50863093!
addAsMany: anAmount books: aBook 

	(anAmount = 0) ifTrue: [^self error: self class cannotAddNonPositiveAmountOfItemsErrorMessage ].

	(bookCatalog isAvailable: aBook) ifFalse: [^self error: self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook].
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:38:01' prior: 50862860!
test05
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddNonPositiveAmountOfItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !

!methodRemoval: Cart class #cannotAddZeroItemsErrorMessage stamp: 'GR 6/10/2021 16:38:01'!
cannotAddZeroItemsErrorMessage

	^'Cannot add 0 items to cart'!
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:38:10' prior: 50863322!
cannotAddNonPositiveAmountOfItemsErrorMessage

	^'Cannot add less than one items to cart'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:39:09'!
test04CannotAddLessThanOneBook
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddNonPositiveAmountOfItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !

!methodRemoval: CartTest #test05 stamp: 'GR 6/10/2021 16:39:09'!
test05
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddNonPositiveAmountOfItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].!
!Cart class methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:39:33'!
cannotAddLessThanOneItemsErrorMessage

	^'Cannot add less than one items to cart'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:39:33' prior: 50863367!
test04CannotAddLessThanOneBook
	|cart catalog book|
	
	book := Book withISBN: 12345678.
	
	catalog := BookCatalog new.
	
	catalog add: book.
	
	cart := Cart for: catalog.
	
	self
		should: [cart addAsMany: 0 books: book]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: Cart cannotAddLessThanOneItemsErrorMessage equals: anError messageText.
			self assert: cart isEmpty.
		].! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:39:33' prior: 50863328!
addAsMany: anAmount books: aBook 

	(anAmount = 0) ifTrue: [^self error: self class cannotAddLessThanOneItemsErrorMessage ].

	(bookCatalog isAvailable: aBook) ifFalse: [^self error: self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook].
	! !

!methodRemoval: Cart class #cannotAddNonPositiveAmountOfItemsErrorMessage stamp: 'GR 6/10/2021 16:39:33'!
cannotAddNonPositiveAmountOfItemsErrorMessage

	^'Cannot add less than one items to cart'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:40:01'!
test05EmptyCartShouldReturnEmptyList
	|cart catalog list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	
	list := cart listItems.
	
	self assert: list isEmpty.! !

!methodRemoval: CartTest #test06 stamp: 'GR 6/10/2021 16:40:01'!
test06
	|cart catalog list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	
	list := cart listItems.
	
	self assert: list isEmpty.!

!methodRemoval: CartTest #test07 stamp: 'GR 6/10/2021 16:40:21'!
test07 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 1 books: book.	
	list := cart listItems.
	
	self assert: 1 equals: (list at: book).
	self assert: 1 equals: list size.!
!CartTest methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:40:50'!
test07ListShouldReflectItemsInCart 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 2 books: book.	
	list := cart listItems.
	
	self assert: 2 equals: (list at: book).
	self assert: 1 equals: list size.! !

!methodRemoval: CartTest #test08 stamp: 'GR 6/10/2021 16:40:50'!
test08 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 2 books: book.	
	list := cart listItems.
	
	self assert: 2 equals: (list at: book).
	self assert: 1 equals: list size.!

----SNAPSHOT----(10 June 2021 16:43:28) CuisUniversity-4532.image priorSource: 17010161!
!CartTest methodsFor: 'tests' stamp: 'GR 6/10/2021 16:44:13'!
test06ListShouldReflectItemsInCart 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 2 books: book.	
	list := cart listItems.
	
	self assert: 2 equals: (list at: book).
	self assert: 1 equals: list size.! !

!methodRemoval: CartTest #test07ListShouldReflectItemsInCart stamp: 'GR 6/10/2021 16:44:13'!
test07ListShouldReflectItemsInCart 
	|cart catalog book list|
	
	catalog := BookCatalog new.
	cart := Cart for: catalog.
	book := Book withISBN: 12345678.
	
	catalog add: book.
	cart addAsMany: 2 books: book.	
	list := cart listItems.
	
	self assert: 2 equals: (list at: book).
	self assert: 1 equals: list size.!

!classDefinition: #Cart category: 'TusLibros' stamp: 'GR 6/10/2021 16:44:28'!
Object subclass: #Cart
	instanceVariableNames: 'catalog contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:44:28' prior: 50863420!
addAsMany: anAmount books: aBook 

	(anAmount = 0) ifTrue: [^self error: self class cannotAddLessThanOneItemsErrorMessage ].

	(catalog isAvailable: aBook) ifFalse: [^self error: self class itemNotAvailableErrorMessage]. 

	anAmount timesRepeat: [contents add: aBook].
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'GR 6/10/2021 16:44:28' prior: 50859518!
initializeFor: aBookCatalog 
	catalog := aBookCatalog.
	contents := OrderedCollection new.! !

----SNAPSHOT----(10 June 2021 16:44:42) CuisUniversity-4532.image priorSource: 17018779!