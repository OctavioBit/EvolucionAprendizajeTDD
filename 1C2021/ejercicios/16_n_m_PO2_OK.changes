----STARTUP---- (31 May 2021 21:37:25) as C:\Users\cirob\Documents\Facultad\2021\1erCuatri\Inge1\Cuis\windows64\CuisUniversity-4532.image!


AccountTransaction subclass: #TransferenceParts
	instanceVariableNames: 'transference'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferenceParts category: 'Portfolio-Solucion' stamp: 'Ciro 5/31/2021 21:54:35'!
AccountTransaction subclass: #TransferenceParts
	instanceVariableNames: 'transference'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----QUIT----(31 May 2021 21:54:52) CuisUniversity-4532.image priorSource: 19126398!

----STARTUP---- (2 June 2021 15:27:21) as C:\Users\cirob\Documents\Facultad\2021\1erCuatri\Inge1\Cuis\windows64\CuisUniversity-4532.image!


Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 15:30:51'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 15:31:02'!
Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'no messages' stamp: 'Ciro 6/2/2021 15:31:12' overrides: 50928845!
accountSummary
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ OrderedCollection new.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]].
	
	report add: 'Balance = ', account balance asString.
	
	^ report! !
!TransferNet methodsFor: 'nil' stamp: 'Ciro 6/2/2021 15:31:21' overrides: 50929256!
transferNet
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ 0.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ report _ report + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ report _ report - aTransaction value ]].
	
	^ report! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:31:58' prior: 50928413!
test01ReturnReportFromAnEmptyReceptiveAccount

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: 0 equals: receptiveAccount balance.
	self assert: expectedReport equals: report accountSummary.! !

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 15:32:00'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 15:32:00'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithATransaction stamp: 'Ciro 6/2/2021 15:32:00'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 15:32:00'!
PASSED!

!testRun: #ReportTest #test04TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 15:32:00'!
PASSED!

!testRun: #ReportTest #test05TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 15:32:00'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:32:06' prior: 50928553!
test02ReturnReportFromAReceptiveAccountWithATransaction

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report accountSummary.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:32:12' prior: 50928805!
test03ReturnReportFromAReceptiveAccountWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report accountSummary.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:32:23' prior: 50929155!
test04TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report transferNet.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:32:28' prior: 50929307!
test05TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report transferNet.! !

!testRun: #ReportTest #test05TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 15:32:29'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 15:32:29'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithATransaction stamp: 'Ciro 6/2/2021 15:32:29'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 15:32:29'!
PASSED!

!testRun: #ReportTest #test04TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 15:32:29'!
PASSED!

!testRun: #ReportTest #test05TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 15:32:29'!
PASSED!

!methodRemoval: Report #accountSummary stamp: 'Ciro 6/2/2021 15:32:36'!
accountSummary
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ OrderedCollection new.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]].
	
	report add: 'Balance = ', account balance asString.
	
	^ report!

!methodRemoval: Report #transferNet stamp: 'Ciro 6/2/2021 15:32:40'!
transferNet
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ 0.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ report _ report + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ report _ report - aTransaction value ]].
	
	^ report!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 15:32:47'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithATransaction stamp: 'Ciro 6/2/2021 15:32:47'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 15:32:47'!
PASSED!

!testRun: #ReportTest #test04TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 15:32:47'!
PASSED!

!testRun: #ReportTest #test05TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 15:32:47'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:33:53'!
makeReport
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ OrderedCollection new.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]].
	
	report add: 'Balance = ', account balance asString.
	
	^ report! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:34:01'!
makeReport
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ 0.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ report _ report + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ report _ report - aTransaction value ]].
	
	^ report! !
!Report methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 15:34:11'!
makeReport

	self subclassResponsibility ! !
!Report methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 15:34:19' prior: 50929673!
makeReport

	^ self subclassResponsibility ! !
!Report methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 15:34:23' prior: 50929678!
makeReport

	^ self subclassResponsibility! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:35:02' prior: 50929444!
test01ReturnReportFromAnEmptyReceptiveAccount

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: 0 equals: receptiveAccount balance.
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:35:06' prior: 50929480!
test02ReturnReportFromAReceptiveAccountWithATransaction

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:35:08' prior: 50929496!
test03ReturnReportFromAReceptiveAccountWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:35:10' prior: 50929522!
test04TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 15:35:13' prior: 50929532!
test05TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report makeReport.! !

!methodRemoval: TransferNet #transferNet stamp: 'Ciro 6/2/2021 15:35:17'!
transferNet
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ 0.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ report _ report + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ report _ report - aTransaction value ]].
	
	^ report!

!methodRemoval: AccountSummary #accountSummary stamp: 'Ciro 6/2/2021 15:35:22'!
accountSummary
	
	| accountTransactions report |
	
	accountTransactions _ account transactions.
	report _ OrderedCollection new.
	
	accountTransactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]].
	
	report add: 'Balance = ', account balance asString.
	
	^ report!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 15:35:24'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithATransaction stamp: 'Ciro 6/2/2021 15:35:24'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 15:35:24'!
PASSED!

!testRun: #ReportTest #test04TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 15:35:24'!
PASSED!

!testRun: #ReportTest #test05TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 15:35:25'!
PASSED!
!Report methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 15:35:47' prior: 50929683!
makeReport

	self subclassResponsibility! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:00:56'!
test08TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:01:00'!
test07TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report makeReport.! !

!methodRemoval: ReportTest #test05TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:01:04'!
test05TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report makeReport.!

!methodRemoval: ReportTest #test04TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:01:07'!
test04TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report makeReport.!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:01:12'!
test06ReturnReportFromAReceptiveAccountWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report makeReport.! !

!methodRemoval: ReportTest #test03ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:01:15'!
test03ReturnReportFromAReceptiveAccountWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report makeReport.!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:01:40'!
test03ReturnReportFromAReceptiveAccountWithAWithdraw

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Withdraw register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100'.
	
	self assert: expectedReport equals: report makeReport.! !

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:01:44'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:01:50'!
test02ReturnReportFromAReceptiveAccountWithADeposit

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report makeReport.! !

!methodRemoval: ReportTest #test02ReturnReportFromAReceptiveAccountWithATransaction stamp: 'Ciro 6/2/2021 16:01:55'!
test02ReturnReportFromAReceptiveAccountWithATransaction

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100.' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report makeReport.!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:04:16'!
test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 20.
	expectedReport _ OrderedCollection with: 'Extracci�n por 100.' with: 'Balance = -100'.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:04:32' prior: 50930003!
test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 20.
	expectedReport _ OrderedCollection with: 'Entrada por transferencia de 20.' with: 'Balance = 20'.
	
	self assert: expectedReport equals: report makeReport.! !

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:04:33'!
PASSED!
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:04:51'!
test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	expectedReport _ OrderedCollection with: 'Entrada por transferencia de 20.' with: 'Balance = -20'.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:05:03' prior: 50930073!
test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	expectedReport _ OrderedCollection with: 'Salida por transferencia de 20.' with: 'Balance = -20'.
	
	self assert: expectedReport equals: report makeReport.! !

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:05:04'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:07:08'!
PASSED!
!ReportTest methodsFor: 'transferNet' stamp: 'Ciro 6/2/2021 16:07:17'!
test12TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report makeReport.! !
!ReportTest methodsFor: 'transferNet' stamp: 'Ciro 6/2/2021 16:07:52'!
test08TransferNetReportFromAnAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report makeReport.! !

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:07:59'!
PASSED!
!ReportTest methodsFor: 'transferNet' stamp: 'Ciro 6/2/2021 16:08:15'!
test09TransferNetReportFromAnAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report makeReport.! !

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:16'!
PASSED!
!ReportTest methodsFor: 'transferNet' stamp: 'Ciro 6/2/2021 16:08:36'!
test10TransferNetReportFromAnAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 30 equals: report makeReport.! !

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:37'!
PASSED!
!ReportTest methodsFor: 'transferNet' stamp: 'Ciro 6/2/2021 16:08:50'!
test11TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: -20 equals: report makeReport.! !

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:51'!
PASSED!

!methodRemoval: ReportTest #test08TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:08:58'!
test08TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report makeReport.!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 16:09:06'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 16:09:07'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:10:35' prior: 50929633 overrides: 50929834!
makeReport
	
	| report |
	
	report _ OrderedCollection new.
	
	account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]].
	
	report add: 'Balance = ', account balance asString.
	
	^ report! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:11:10' prior: 50930512 overrides: 50929834!
makeReport
	
	| report |
	
	report _ OrderedCollection new.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]]."
	
	account xxx: self.
	
	report add: 'Balance = ', account balance asString.
	
	^ report! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:12:37' prior: 50930537 overrides: 50929834!
makeReport
	
	| report |
	
	report _ OrderedCollection new.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]]."
	
	account xxx: self.
	
	report add: 'Balance = ', account balance asString.
	
	^ report! !

Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummary category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 16:12:46'!
Report subclass: #AccountSummary
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:13:01' prior: 50930563 overrides: 50929834!
makeReport
	
	summary _ OrderedCollection new.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [report add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [report add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [report add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [report add: 'Salida por transferencia de ', aTransaction value asString, '.' ]]."
	
	account xxx: self.
	
	summary add: 'Balance = ', account balance asString.
	
	^ summary! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:13:25' prior: 50929659 overrides: 50929834!
makeReport
	
	|report |
	report _ 0.
	
	account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ report _ report + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ report _ report - aTransaction value ]].
	
	^ report! !

Report subclass: #TransferNet
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNet category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 16:13:36'!
Report subclass: #TransferNet
	instanceVariableNames: 'transferNet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:13:50' prior: 50930627 overrides: 50929834!
makeReport
	
	transferNet _ 0.
	
	account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ transferNet _ transferNet + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ transferNet _ transferNet - aTransaction value ]].
	
	^ transferNet! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 16:13:59' prior: 50930601 overrides: 50929834!
makeReport
	
	summary _ OrderedCollection new.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [summary add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [summary add: 'Salida por transferencia de ', aTransaction value asString, '.' ]]."
	
	account xxx: self.
	
	summary add: 'Balance = ', account balance asString.
	
	^ summary! !
!Account methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 16:14:30'!
xxx: aReport

	self subclassResponsibility ! !
!Portfolio methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 16:14:58' overrides: 50930691!
xxx: aReport

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 16:15:03' overrides: 50930691!
xxx: aReport

	self subclassResponsibility ! !

----QUIT----(2 June 2021 16:15:33) CuisUniversity-4532.image priorSource: 19127060!

----STARTUP---- (2 June 2021 17:37:26) as C:\Users\cirob\Documents\Facultad\2021\1erCuatri\Inge1\Cuis\windows64\CuisUniversity-4532.image!

!ReceptiveAccount methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 17:38:55' prior: 50930701 overrides: 50930691!
xxx: aReport

	transactions do: [ :aTransaction | aTransaction zzz: aReport ]! !
!Portfolio methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 17:39:29' prior: 50930696 overrides: 50930691!
xxx: aReport

	accounts do: [ :anAccount | anAccount xxx: aReport]! !
!AccountTransaction methodsFor: 'value' stamp: 'Ciro 6/2/2021 17:40:07'!
zzz: aReport

	self subclassResponsibility ! !
!Deposit methodsFor: 'nil' stamp: 'Ciro 6/2/2021 17:43:00' overrides: 50930725!
zzz: aReport

	aReport cccDeposit: self! !
!TransferenceDeposit methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:43:24' overrides: 50930725!
zzz: aReport

	aReport cccTransferenceDeposit: self! !
!TransferenceWithdraw methodsFor: 'nil' stamp: 'Ciro 6/2/2021 17:43:37' overrides: 50930725!
zzz: aReport

	aReport cccTransferenceWithdraw: self! !
!Withdraw methodsFor: 'nil' stamp: 'Ciro 6/2/2021 17:43:49' overrides: 50930725!
zzz: aReport

	aReport cccWithdraw: self! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:45:00'!
cccDeposit: aDeposit

	^ summary add: 'Dep�sito por ', aDeposit value asString, '.'! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:45:02' prior: 50930748!
cccDeposit: aDeposit

	^ summary add: 'Dep�sito por ', aDeposit value asString! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:45:31'!
cccWithdraw: aWithdraw

	^ summary add: 'Dep�sito por ', aWithdraw value asString! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:45:42'!
cccTransferenceWithdraw: aTransferenceWithdraw

	^ summary add: 'Dep�sito por ', aTransferenceWithdraw value asString! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:45:53'!
cccTransferenceDeposit: aTransferenceDeposit

	^ summary add: 'Dep�sito por ', aTransferenceDeposit value asString! !
!ReportTest methodsFor: 'accountSummary' stamp: 'Ciro 6/2/2021 17:46:11' prior: 50928830!
collectionWithAllKindsOfTransactionsMessages

	^ OrderedCollection with: 'Dep�sito por 100' 
		with: 'Extracci�n por 50' 
		with: 'Salida por transferencia de 20' 
		with: 'Entrada por transferencia de 30' 
		with: 'Balance = 60'! !
!ReportTest methodsFor: 'accountSummary' stamp: 'Ciro 6/2/2021 17:46:19' prior: 50929972!
test02ReturnReportFromAReceptiveAccountWithADeposit

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'accountSummary' stamp: 'Ciro 6/2/2021 17:46:22' prior: 50929953!
test03ReturnReportFromAReceptiveAccountWithAWithdraw

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Withdraw register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Extracci�n por 100' with: 'Balance = -100'.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'accountSummary' stamp: 'Ciro 6/2/2021 17:46:26' prior: 50930023!
test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 20.
	expectedReport _ OrderedCollection with: 'Entrada por transferencia de 20' with: 'Balance = 20'.
	
	self assert: expectedReport equals: report makeReport.! !
!ReportTest methodsFor: 'accountSummary' stamp: 'Ciro 6/2/2021 17:46:29' prior: 50930094!
test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	expectedReport _ OrderedCollection with: 'Salida por transferencia de 20' with: 'Balance = -20'.
	
	self assert: expectedReport equals: report makeReport.! !

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 17:46:35'!
FAILURE!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 17:46:35'!
FAILURE!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 17:46:35'!
FAILURE!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 17:46:35'!
FAILURE!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 17:46:35'!
PASSED!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:47:26' prior: 50930760!
cccWithdraw: aWithdraw

	^ summary add: 'Extracci�n por ', aWithdraw value asString! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:47:59' prior: 50930766!
cccTransferenceWithdraw: aTransferenceWithdraw

	^ summary add: 'Salida por transferencia de ', aTransferenceWithdraw value asString! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:48:13' prior: 50930773!
cccTransferenceDeposit: aTransferenceDeposit

	^ summary add: 'Entrada por transferencia de ', aTransferenceDeposit value asString! !

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 17:48:16'!
PASSED!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:49:03' prior: 50930653 overrides: 50929834!
makeReport
	
	transferNet _ 0.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ transferNet _ transferNet + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ transferNet _ transferNet - aTransaction value ]]."
	
	account vvv: self.
	
	^ transferNet! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:49:56' prior: 50930973 overrides: 50929834!
makeReport
	
	transferNet _ 0.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ transferNet _ transferNet + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ transferNet _ transferNet - aTransaction value ]]."
	
	account xxx: self.
	
	^ transferNet! !
!TransferNet methodsFor: 'nil' stamp: 'Ciro 6/2/2021 17:51:05'!
cccDeposit: aDeposit! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:51:16'!
cccWithdraw: aWithdraw! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:52:00'!
cccTransferenceDeposit: aTransferenceDeposit

	^ transferNet + aTransferenceDeposit value! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:52:23' prior: 50931009!
cccTransferenceDeposit: aTransferenceDeposit

	transferNet _ transferNet + aTransferenceDeposit value! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 17:52:51'!
cccTransferenceWithdraw: aTransferenceWithdraw

	transferNet _ transferNet - aTransferenceWithdraw value! !

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 17:52:53'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 18:02:47'!
exploreTransactionsFor: aReport

	transactions do: [ :aTransaction | aTransaction zzz: aReport ]! !
!Account methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 18:02:47'!
exploreTransactionsFor: aReport

	self subclassResponsibility ! !
!Portfolio methodsFor: 'transactions' stamp: 'Ciro 6/2/2021 18:02:47' overrides: 50931078!
exploreTransactionsFor: aReport

	accounts do: [ :anAccount | anAccount xxx: aReport]! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:02:47' prior: 50930988 overrides: 50929834!
makeReport
	
	transferNet _ 0.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [ transferNet _ transferNet + aTransaction value ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [ transferNet _ transferNet - aTransaction value ]]."
	
	account exploreTransactionsFor: self.
	
	^ transferNet! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:02:47' prior: 50930667 overrides: 50929834!
makeReport
	
	summary _ OrderedCollection new.
	
	"account transactions do: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [summary add: 'Dep�sito por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: Withdraw) ifTrue: [summary add: 'Extracci�n por ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceDeposit) ifTrue: [summary add: 'Entrada por transferencia de ', aTransaction value asString, '.' ].
		(aTransaction isKindOf: TransferenceWithdraw) ifTrue: [summary add: 'Salida por transferencia de ', aTransaction value asString, '.' ]]."
	
	account exploreTransactionsFor: self.
	
	summary add: 'Balance = ', account balance asString.
	
	^ summary! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:02:47' prior: 50930720 overrides: 50930691!
xxx: aReport

	accounts do: [ :anAccount | anAccount exploreTransactionsFor: aReport]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:02:47' prior: 50931083 overrides: 50931078!
exploreTransactionsFor: aReport

	accounts do: [ :anAccount | anAccount exploreTransactionsFor: aReport]! !

!methodRemoval: ReceptiveAccount #xxx: stamp: 'Ciro 6/2/2021 18:02:47'!
xxx: aReport

	transactions do: [ :aTransaction | aTransaction zzz: aReport ]!

!methodRemoval: Account #xxx: stamp: 'Ciro 6/2/2021 18:02:47'!
xxx: aReport

	self subclassResponsibility !

!methodRemoval: Portfolio #xxx: stamp: 'Ciro 6/2/2021 18:02:47'!
xxx: aReport

	accounts do: [ :anAccount | anAccount exploreTransactionsFor: aReport]!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:02:57' prior: 50931105 overrides: 50929834!
makeReport
	
	summary _ OrderedCollection new.
	
	account exploreTransactionsFor: self.
	
	summary add: 'Balance = ', account balance asString.
	
	^ summary! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:03:02' prior: 50931090 overrides: 50929834!
makeReport
	
	transferNet _ 0.
	
	account exploreTransactionsFor: self.
	
	^ transferNet! !

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:03:07'!
PASSED!
!TransferenceDeposit methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:07:42'!
inspectFor: aReport

	aReport cccTransferenceDeposit: self! !
!AccountTransaction methodsFor: 'value' stamp: 'Ciro 6/2/2021 18:07:42'!
inspectFor: aReport

	self subclassResponsibility ! !
!TransferenceWithdraw methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:07:42' overrides: 50931224!
inspectFor: aReport

	aReport cccTransferenceWithdraw: self! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:07:42' overrides: 50931224!
inspectFor: aReport

	aReport cccWithdraw: self! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:07:42' overrides: 50931224!
inspectFor: aReport

	aReport cccDeposit: self! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:07:42' prior: 50931072 overrides: 50931078!
exploreTransactionsFor: aReport

	transactions do: [ :aTransaction | aTransaction inspectFor: aReport ]! !

!methodRemoval: TransferenceDeposit #zzz: stamp: 'Ciro 6/2/2021 18:07:42'!
zzz: aReport

	aReport cccTransferenceDeposit: self!

!methodRemoval: AccountTransaction #zzz: stamp: 'Ciro 6/2/2021 18:07:42'!
zzz: aReport

	self subclassResponsibility !

!methodRemoval: TransferenceWithdraw #zzz: stamp: 'Ciro 6/2/2021 18:07:42'!
zzz: aReport

	aReport cccTransferenceWithdraw: self!

!methodRemoval: Withdraw #zzz: stamp: 'Ciro 6/2/2021 18:07:42'!
zzz: aReport

	aReport cccWithdraw: self!

!methodRemoval: Deposit #zzz: stamp: 'Ciro 6/2/2021 18:07:42'!
zzz: aReport

	aReport cccDeposit: self!
!Report methodsFor: 'nil' stamp: 'Ciro 6/2/2021 18:08:04'!
cccDeposit: aDeposit

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:08:15'!
cccWithdraw: aWithdraw

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:08:19'!
cccTransferenceWithdraw: aWithdraw

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:08:25' prior: 50931280!
cccTransferenceWithdraw: aTransferenceWithdraw

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:08:34'!
cccTransferenceDeposit: aTransferenceDeposit

	self subclassResponsibility ! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:12'!
takeDepositValueFrom: aDeposit

	self subclassResponsibility ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:12' overrides: 50931295!
takeDepositValueFrom: aDeposit! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:12' overrides: 50931295!
takeDepositValueFrom: aDeposit

	^ summary add: 'Dep�sito por ', aDeposit value asString! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:12' prior: 50931240 overrides: 50931224!
inspectFor: aReport

	aReport takeDepositValueFrom: self! !

!methodRemoval: Report #cccDeposit: stamp: 'Ciro 6/2/2021 18:10:12'!
cccDeposit: aDeposit

	self subclassResponsibility !

!methodRemoval: TransferNet #cccDeposit: stamp: 'Ciro 6/2/2021 18:10:12'!
cccDeposit: aDeposit!

!methodRemoval: AccountSummary #cccDeposit: stamp: 'Ciro 6/2/2021 18:10:13'!
cccDeposit: aDeposit

	^ summary add: 'Dep�sito por ', aDeposit value asString!
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:28'!
takeWithdrawValueFrom: aWithdraw

	self subclassResponsibility ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:28' overrides: 50931330!
takeWithdrawValueFrom: aWithdraw! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:28' overrides: 50931330!
takeWithdrawValueFrom: aWithdraw

	^ summary add: 'Extracci�n por ', aWithdraw value asString! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:28' prior: 50931235 overrides: 50931224!
inspectFor: aReport

	aReport takeWithdrawValueFrom: self! !

!methodRemoval: Report #cccWithdraw: stamp: 'Ciro 6/2/2021 18:10:28'!
cccWithdraw: aWithdraw

	self subclassResponsibility !

!methodRemoval: TransferNet #cccWithdraw: stamp: 'Ciro 6/2/2021 18:10:28'!
cccWithdraw: aWithdraw!

!methodRemoval: AccountSummary #cccWithdraw: stamp: 'Ciro 6/2/2021 18:10:28'!
cccWithdraw: aWithdraw

	^ summary add: 'Extracci�n por ', aWithdraw value asString!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:46'!
takeTransferenceWithdrawValueFrom: aTransferenceWithdraw

	^ summary add: 'Salida por transferencia de ', aTransferenceWithdraw value asString! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:46'!
takeTransferenceWithdrawValueFrom: aTransferenceWithdraw

	self subclassResponsibility ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:46' overrides: 50931372!
takeTransferenceWithdrawValueFrom: aTransferenceWithdraw

	transferNet _ transferNet - aTransferenceWithdraw value! !
!TransferenceWithdraw methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:10:46' prior: 50931230 overrides: 50931224!
inspectFor: aReport

	aReport takeTransferenceWithdrawValueFrom: self! !

!methodRemoval: AccountSummary #cccTransferenceWithdraw: stamp: 'Ciro 6/2/2021 18:10:46'!
cccTransferenceWithdraw: aTransferenceWithdraw

	^ summary add: 'Salida por transferencia de ', aTransferenceWithdraw value asString!

!methodRemoval: Report #cccTransferenceWithdraw: stamp: 'Ciro 6/2/2021 18:10:46'!
cccTransferenceWithdraw: aTransferenceWithdraw

	self subclassResponsibility !

!methodRemoval: TransferNet #cccTransferenceWithdraw: stamp: 'Ciro 6/2/2021 18:10:46'!
cccTransferenceWithdraw: aTransferenceWithdraw

	transferNet _ transferNet - aTransferenceWithdraw value!
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:11:00'!
takeTransferenceDepositValueFrom: aTransferenceDeposit

	^ summary add: 'Entrada por transferencia de ', aTransferenceDeposit value asString! !
!Report methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:11:00'!
takeTransferenceDepositValueFrom: aTransferenceDeposit

	self subclassResponsibility ! !
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:11:00' overrides: 50931417!
takeTransferenceDepositValueFrom: aTransferenceDeposit

	transferNet _ transferNet + aTransferenceDeposit value! !
!TransferenceDeposit methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:11:00' prior: 50931219 overrides: 50931224!
inspectFor: aReport

	aReport takeTransferenceDepositValueFrom: self! !

!methodRemoval: AccountSummary #cccTransferenceDeposit: stamp: 'Ciro 6/2/2021 18:11:00'!
cccTransferenceDeposit: aTransferenceDeposit

	^ summary add: 'Entrada por transferencia de ', aTransferenceDeposit value asString!

!methodRemoval: Report #cccTransferenceDeposit: stamp: 'Ciro 6/2/2021 18:11:00'!
cccTransferenceDeposit: aTransferenceDeposit

	self subclassResponsibility !

!methodRemoval: TransferNet #cccTransferenceDeposit: stamp: 'Ciro 6/2/2021 18:11:00'!
cccTransferenceDeposit: aTransferenceDeposit

	transferNet _ transferNet + aTransferenceDeposit value!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:11:03'!
PASSED!
!TransferNet methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18'!
execute
	
	transferNet _ 0.
	
	account exploreTransactionsFor: self.
	
	^ transferNet! !
!AccountSummary methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18'!
execute
	
	summary _ OrderedCollection new.
	
	account exploreTransactionsFor: self.
	
	summary add: 'Balance = ', account balance asString.
	
	^ summary! !
!Report methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 18:12:18'!
execute

	self subclassResponsibility! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930791!
test02ReturnReportFromAReceptiveAccountWithADeposit

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930203!
test08TransferNetReportFromAnAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930376!
test11TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: -20 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930841!
test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	expectedReport _ OrderedCollection with: 'Salida por transferencia de 20' with: 'Balance = -20'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930181!
test12TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930806!
test03ReturnReportFromAReceptiveAccountWithAWithdraw

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Withdraw register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Extracci�n por 100' with: 'Balance = -100'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930312!
test10TransferNetReportFromAnAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 30 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930821!
test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 20.
	expectedReport _ OrderedCollection with: 'Entrada por transferencia de 20' with: 'Balance = 20'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50929902!
test06ReturnReportFromAReceptiveAccountWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50930256!
test09TransferNetReportFromAnAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50929860!
test07TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:12:18' prior: 50929688!
test01ReturnReportFromAnEmptyReceptiveAccount

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: 0 equals: receptiveAccount balance.
	self assert: expectedReport equals: report execute.! !

!methodRemoval: TransferNet #makeReport stamp: 'Ciro 6/2/2021 18:12:18'!
makeReport
	
	transferNet _ 0.
	
	account exploreTransactionsFor: self.
	
	^ transferNet!

!methodRemoval: AccountSummary #makeReport stamp: 'Ciro 6/2/2021 18:12:18'!
makeReport
	
	summary _ OrderedCollection new.
	
	account exploreTransactionsFor: self.
	
	summary add: 'Balance = ', account balance asString.
	
	^ summary!

!methodRemoval: Report #makeReport stamp: 'Ciro 6/2/2021 18:12:18'!
makeReport

	self subclassResponsibility!
!TransferenceParts methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:20:38' overrides: 50931224!
inspectFor: aReport

	self subclassResponsibility ! !

!classRenamed: #TransferenceParts as: #TransferenceLegs stamp: 'Ciro 6/2/2021 18:22:43'!
Smalltalk renameClassNamed: #TransferenceParts as: #TransferenceLegs!

!classRenamed: #TransferenceLegs as: #TransferenceLeg stamp: 'Ciro 6/2/2021 18:22:51'!
Smalltalk renameClassNamed: #TransferenceLegs as: #TransferenceLeg!

!classRenamed: #TransferenceDeposit as: #TransferenceDepositLeg stamp: 'Ciro 6/2/2021 18:23:10'!
Smalltalk renameClassNamed: #TransferenceDeposit as: #TransferenceDepositLeg!
!Transference methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:23:11' prior: 50928308!
initializeWithSender: senderAccount andReceiver: receivingAccount withValue: aValue

	value _ aValue.	
	transferenceWithdraw _ TransferenceWithdraw for: self in: senderAccount.
	transferenceDeposit _ TransferenceDepositLeg for: self in: receivingAccount.! !

!classRenamed: #TransferenceWithdraw as: #TransferenceWithdrawLeg stamp: 'Ciro 6/2/2021 18:23:28'!
Smalltalk renameClassNamed: #TransferenceWithdraw as: #TransferenceWithdrawLeg!
!Transference methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:23:28' prior: 50931755!
initializeWithSender: senderAccount andReceiver: receivingAccount withValue: aValue

	value _ aValue.	
	transferenceWithdraw _ TransferenceWithdrawLeg for: self in: senderAccount.
	transferenceDeposit _ TransferenceDepositLeg for: self in: receivingAccount.! !

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:23:35'!
PASSED!

!testRun: #TransferenceTest #test01NewTransferenceBetweenTwoReceptiveAccounts stamp: 'Ciro 6/2/2021 18:23:38'!
PASSED!

!testRun: #TransferenceTest #test02SenderAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 18:23:38'!
PASSED!

!testRun: #TransferenceTest #test03ReceiverAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 18:23:38'!
PASSED!

!testRun: #TransferenceTest #test04TransferenceWithdrawKnowsTransferenceDeposit stamp: 'Ciro 6/2/2021 18:23:38'!
PASSED!

!testRun: #TransferenceTest #test05CanOnlyTransferPositiveValues stamp: 'Ciro 6/2/2021 18:23:38'!
PASSED!

!testRun: #TransferenceTest #test06CanNotTransferBetweenTheSameReceptiveAccount stamp: 'Ciro 6/2/2021 18:23:38'!
PASSED!

!classDefinition: #Transference category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:23:54'!
Object subclass: #Transference
	instanceVariableNames: 'transferenceWithdrawLeg transferenceDeposit value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transference methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:23:54' prior: 50927264!
transferenceWithdraw
	
	^ transferenceWithdrawLeg! !
!Transference methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:23:54' prior: 50931772!
initializeWithSender: senderAccount andReceiver: receivingAccount withValue: aValue

	value _ aValue.	
	transferenceWithdrawLeg _ TransferenceWithdrawLeg for: self in: senderAccount.
	transferenceDeposit _ TransferenceDepositLeg for: self in: receivingAccount.! !

!classDefinition: #Transference category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:23:59'!
Object subclass: #Transference
	instanceVariableNames: 'transferenceWithdrawLeg transferenceDepositLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Transference methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:23:59' prior: 50927259!
transferenceDeposit
	
	^ transferenceDepositLeg! !
!Transference methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:23:59' prior: 50931864!
initializeWithSender: senderAccount andReceiver: receivingAccount withValue: aValue

	value _ aValue.	
	transferenceWithdrawLeg _ TransferenceWithdrawLeg for: self in: senderAccount.
	transferenceDepositLeg _ TransferenceDepositLeg for: self in: receivingAccount.! !

!testRun: #TransferenceTest #test01NewTransferenceBetweenTwoReceptiveAccounts stamp: 'Ciro 6/2/2021 18:24:02'!
PASSED!

!testRun: #TransferenceTest #test02SenderAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 18:24:02'!
PASSED!

!testRun: #TransferenceTest #test03ReceiverAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 18:24:02'!
PASSED!

!testRun: #TransferenceTest #test04TransferenceWithdrawKnowsTransferenceDeposit stamp: 'Ciro 6/2/2021 18:24:02'!
PASSED!

!testRun: #TransferenceTest #test05CanOnlyTransferPositiveValues stamp: 'Ciro 6/2/2021 18:24:02'!
PASSED!

!testRun: #TransferenceTest #test06CanNotTransferBetweenTheSameReceptiveAccount stamp: 'Ciro 6/2/2021 18:24:02'!
PASSED!
!Transference methodsFor: 'accesing' stamp: 'Ciro 6/2/2021 18:24:31'!
transferenceDepositLeg
	
	^ transferenceDepositLeg! !
!TransferenceTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:24:31' prior: 50927797!
test04TransferenceWithdrawKnowsTransferenceDeposit

	| transference senderAccount receivingAccount |
	
	senderAccount _ ReceptiveAccount new.
	receivingAccount _ ReceptiveAccount new.
	transference _ Transference from: senderAccount to: receivingAccount withValue: 100.
	
	self assert: transference transferenceDepositLeg equals: transference transferenceWithdraw transference transferenceDepositLeg.
	self assert: transference transferenceWithdraw equals: transference transferenceDepositLeg transference transferenceWithdraw	! !
!TransferenceTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:24:31' prior: 50927851!
test03ReceiverAccountBalanceAfterTransference

	| transference senderAccount receivingAccount |
	
	senderAccount _ ReceptiveAccount new.
	receivingAccount _ ReceptiveAccount new.
	transference _ Transference from: senderAccount to: receivingAccount withValue: 100.
	
	self assert: 100 equals: transference value.
	self assert: 100 equals: receivingAccount balance.
	self assert: (receivingAccount hasRegistered: transference transferenceDepositLeg)
	! !

!methodRemoval: Transference #transferenceDeposit stamp: 'Ciro 6/2/2021 18:24:31'!
transferenceDeposit
	
	^ transferenceDepositLeg!
!Transference methodsFor: 'accesing' stamp: 'Ciro 6/2/2021 18:24:49'!
transferenceWithdrawLeg
	
	^ transferenceWithdrawLeg! !
!TransferenceTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:24:49' prior: 50931928!
test04TransferenceWithdrawKnowsTransferenceDeposit

	| transference senderAccount receivingAccount |
	
	senderAccount _ ReceptiveAccount new.
	receivingAccount _ ReceptiveAccount new.
	transference _ Transference from: senderAccount to: receivingAccount withValue: 100.
	
	self assert: transference transferenceDepositLeg equals: transference transferenceWithdrawLeg transference transferenceDepositLeg.
	self assert: transference transferenceWithdrawLeg equals: transference transferenceDepositLeg transference transferenceWithdrawLeg	! !
!TransferenceTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:24:49' prior: 50927835!
test02SenderAccountBalanceAfterTransference

	| transference senderAccount receivingAccount |
	
	senderAccount _ ReceptiveAccount new.
	receivingAccount _ ReceptiveAccount new.
	transference _ Transference from: senderAccount to: receivingAccount withValue: 100.
	
	self assert: 100 equals: transference value.
	self assert: -100 equals: senderAccount balance.
	self assert: (senderAccount hasRegistered: transference transferenceWithdrawLeg)
	! !

!methodRemoval: Transference #transferenceWithdraw stamp: 'Ciro 6/2/2021 18:24:49'!
transferenceWithdraw
	
	^ transferenceWithdrawLeg!

!testRun: #TransferenceTest #test01NewTransferenceBetweenTwoReceptiveAccounts stamp: 'Ciro 6/2/2021 18:24:55'!
PASSED!

!testRun: #TransferenceTest #test02SenderAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 18:24:55'!
PASSED!

!testRun: #TransferenceTest #test03ReceiverAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 18:24:55'!
PASSED!

!testRun: #TransferenceTest #test04TransferenceWithdrawKnowsTransferenceDeposit stamp: 'Ciro 6/2/2021 18:24:55'!
PASSED!

!testRun: #TransferenceTest #test05CanOnlyTransferPositiveValues stamp: 'Ciro 6/2/2021 18:24:55'!
PASSED!

!testRun: #TransferenceTest #test06CanNotTransferBetweenTheSameReceptiveAccount stamp: 'Ciro 6/2/2021 18:24:55'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:24:59'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'Ciro 6/2/2021 18:25:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ciro 6/2/2021 18:25:13'!
PASSED!
!AccountSummary methodsFor: 'private' stamp: 'Ciro 6/2/2021 18:25:50'!
takeTransferenceDepositLegValueFrom: aTransferenceDeposit

	^ summary add: 'Entrada por transferencia de ', aTransferenceDeposit value asString! !
!TransferNet methodsFor: 'private' stamp: 'Ciro 6/2/2021 18:25:50'!
takeTransferenceDepositLegValueFrom: aTransferenceDeposit

	transferNet _ transferNet + aTransferenceDeposit value! !
!Report methodsFor: 'private' stamp: 'Ciro 6/2/2021 18:25:50'!
takeTransferenceDepositLegValueFrom: aTransferenceDeposit

	self subclassResponsibility ! !
!TransferenceDepositLeg methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:25:50' prior: 50931431 overrides: 50931734!
inspectFor: aReport

	aReport takeTransferenceDepositLegValueFrom: self! !

!methodRemoval: AccountSummary #takeTransferenceDepositValueFrom: stamp: 'Ciro 6/2/2021 18:25:50'!
takeTransferenceDepositValueFrom: aTransferenceDeposit

	^ summary add: 'Entrada por transferencia de ', aTransferenceDeposit value asString!

!methodRemoval: TransferNet #takeTransferenceDepositValueFrom: stamp: 'Ciro 6/2/2021 18:25:50'!
takeTransferenceDepositValueFrom: aTransferenceDeposit

	transferNet _ transferNet + aTransferenceDeposit value!

!methodRemoval: Report #takeTransferenceDepositValueFrom: stamp: 'Ciro 6/2/2021 18:25:50'!
takeTransferenceDepositValueFrom: aTransferenceDeposit

	self subclassResponsibility !
!AccountSummary methodsFor: 'private' stamp: 'Ciro 6/2/2021 18:26:00'!
takeTransferenceWithdrawLegValueFrom: aTransferenceWithdraw

	^ summary add: 'Salida por transferencia de ', aTransferenceWithdraw value asString! !
!Report methodsFor: 'private' stamp: 'Ciro 6/2/2021 18:26:00'!
takeTransferenceWithdrawLegValueFrom: aTransferenceWithdraw

	self subclassResponsibility ! !
!TransferNet methodsFor: 'private' stamp: 'Ciro 6/2/2021 18:26:00' overrides: 50932219!
takeTransferenceWithdrawLegValueFrom: aTransferenceWithdraw

	transferNet _ transferNet - aTransferenceWithdraw value! !
!TransferenceWithdrawLeg methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:26:00' prior: 50931386 overrides: 50931734!
inspectFor: aReport

	aReport takeTransferenceWithdrawLegValueFrom: self! !

!methodRemoval: AccountSummary #takeTransferenceWithdrawValueFrom: stamp: 'Ciro 6/2/2021 18:26:00'!
takeTransferenceWithdrawValueFrom: aTransferenceWithdraw

	^ summary add: 'Salida por transferencia de ', aTransferenceWithdraw value asString!

!methodRemoval: Report #takeTransferenceWithdrawValueFrom: stamp: 'Ciro 6/2/2021 18:26:00'!
takeTransferenceWithdrawValueFrom: aTransferenceWithdraw

	self subclassResponsibility !

!methodRemoval: TransferNet #takeTransferenceWithdrawValueFrom: stamp: 'Ciro 6/2/2021 18:26:00'!
takeTransferenceWithdrawValueFrom: aTransferenceWithdraw

	transferNet _ transferNet - aTransferenceWithdraw value!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:26:06'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:26:32'!
test13TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.! !

!methodRemoval: ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:26:36'!
test12TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:26:38'!
test12TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: -20 equals: report execute.! !

!methodRemoval: ReportTest #test11TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:26:41'!
test11TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: -20 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:26:43'!
test11TransferNetReportFromAnAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 30 equals: report execute.! !

!methodRemoval: ReportTest #test10TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:26:48'!
test10TransferNetReportFromAnAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 30 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:27:12'!
test10TransferNetReportFromAnAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !

!methodRemoval: ReportTest #test09TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:27:15'!
test09TransferNetReportFromAnAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:27:20'!
test09TransferNetReportFromAnAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !

!methodRemoval: ReportTest #test08TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:27:23'!
test08TransferNetReportFromAnAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:27:28'!
test08TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report execute.! !

!methodRemoval: ReportTest #test07TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:27:32'!
test07TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet from: receptiveAccount.
	
	self assert: 0 equals: report execute.!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!

!testRun: #ReportTest #test13TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:27:35'!
PASSED!
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:27:55'!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:28:15' prior: 50932523!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolio receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:28:21' prior: 50932548!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolio receptiveAccount anotherReceptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: receptiveAccount.
	Deposit register: 100 on: receptiveAccount.
	Withdraw register: 50 on: receptiveAccount.
	Transference from: receptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:28:32' prior: 50932573!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolio aReceptiveAccount anotherReceptiveAccount expectedReport |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: aReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:28:58' prior: 50932597!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount anotherReceptiveAccount expectedReport |
	
	aReceptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: aReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:29:07' prior: 50932621!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount anotherReceptiveAccount expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary from: aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: aReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:30:05' prior: 50932645!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount anotherReceptiveAccount expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount.
	aPortfolioToReport add: anotherReceptiveAccount .
	report _ AccountSummary from: aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: aReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:30:07' prior: 50932670!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount anotherReceptiveAccount expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount.
	aPortfolioToReport add: anotherReceptiveAccount.
	report _ AccountSummary from: aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: aReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:30:50' prior: 50932698!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount anotherReceptiveAccount expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount.
	aPortfolioToReport add: anotherReceptiveAccount.
	report _ AccountSummary from: aReceptiveAccount.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: aReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:30:56' prior: 50932726!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 anotherReceptiveAccount expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: anotherReceptiveAccount.
	report _ AccountSummary from: aReceptiveAccount1.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount1 to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccount1 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:31:04' prior: 50932754!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ AccountSummary from: aReceptiveAccount1.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount1 to: aReceptiveAccount2 withValue: 20.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount1 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:31:08' prior: 50932783!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ AccountSummary from: aReceptiveAccount1.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount1 to: aReceptiveAccount2 withValue: 20.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount1 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:31:30' prior: 50932811!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	aPortfolioToReport add: aReceptiveAccount3.
	report _ AccountSummary from: aReceptiveAccount1.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:31:32' prior: 50932839!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ AccountSummary from: aReceptiveAccount1.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !

!testRun: #ReportTest #test07ReturnReportFromAPortfolioWithManyTransactions stamp: 'Ciro 6/2/2021 18:31:35'!
FAILURE!
!ReportTest methodsFor: 'account summary' stamp: 'Ciro 6/2/2021 18:35:02' prior: 50932870!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ AccountSummary from: aPortfolioToReport.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !

!testRun: #ReportTest #test07ReturnReportFromAPortfolioWithManyTransactions stamp: 'Ciro 6/2/2021 18:35:05'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:35:38'!
test14TransferNetReportFromAPortfolio

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.! !
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:36:14' prior: 50932936!
test14TransferNetReportFromAPortfolio

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ AccountSummary from: aPortfolioToReport.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	
	self assert: 10 equals: report execute.! !

!testRun: #ReportTest #test14TransferNetReportFromAPortfolio stamp: 'Ciro 6/2/2021 18:36:15'!
FAILURE!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:36:33' prior: 50932958!
test14TransferNetReportFromAPortfolio

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ TransferNet from: aPortfolioToReport.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	
	self assert: 10 equals: report execute.! !

!testRun: #ReportTest #test14TransferNetReportFromAPortfolio stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test07ReturnReportFromAPortfolioWithManyTransactions stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test13TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!

!testRun: #ReportTest #test14TransferNetReportFromAPortfolio stamp: 'Ciro 6/2/2021 18:36:35'!
PASSED!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:36:50'!
test13TransferNetReportFromAReceptiveAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.! !

!methodRemoval: ReportTest #test13TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:36:53'!
test13TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:37:19'!
test12TransferNetReportFromAReceptiveAccountWithTransferenceWithdraw

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: -20 equals: report execute.! !

!methodRemoval: ReportTest #test12TransferNetReportFromAnAccountWithTransferences stamp: 'Ciro 6/2/2021 18:37:23'!
test12TransferNetReportFromAnAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: -20 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:37:33'!
test11TransferNetReportFromAReceptiveAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 30 equals: report execute.! !

!methodRemoval: ReportTest #test11TransferNetReportFromAnAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:37:42'!
test11TransferNetReportFromAnAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 30 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:37:54'!
test10TransferNetReportFromAReceptiveAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !

!methodRemoval: ReportTest #test10TransferNetReportFromAnAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:37:57'!
test10TransferNetReportFromAnAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.!
!ReportTest methodsFor: 'transfer net' stamp: 'Ciro 6/2/2021 18:38:14'!
test09TransferNetReportFromAReceptiveAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !

!methodRemoval: ReportTest #test09TransferNetReportFromAnAccountWithDeposit stamp: 'Ciro 6/2/2021 18:38:18'!
test09TransferNetReportFromAnAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet from: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test07ReturnReportFromAPortfolioWithManyTransactions stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAReceptiveAccountWithDeposit stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAReceptiveAccountWithWithdraw stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAReceptiveAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAReceptiveAccountWithTransferenceWithdraw stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test13TransferNetReportFromAReceptiveAccountWithTransferences stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

!testRun: #ReportTest #test14TransferNetReportFromAPortfolio stamp: 'Ciro 6/2/2021 18:38:26'!
PASSED!

----SNAPSHOT----(2 June 2021 18:38:45) CuisUniversity-4532.image priorSource: 19169742!

Object subclass: #PortfolioReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:41:53'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

PortfolioReport subclass: #PortfolioTree
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

PortfolioReport subclass: #PortfolioTree
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTree category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:42:14'!
PortfolioReport subclass: #PortfolioTree
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

PortfolioReport subclass: #PortfolioSummaryTree
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioSummaryTree category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:42:21'!
PortfolioReport subclass: #PortfolioSummaryTree
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReportTest category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:42:53'!
Object subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReportTest category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:43:03'!
TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:44:04'!
test01PortfolioReport

	^ self! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:45:52'!
test01ReturnPortfolioReportFromAnEmptyPortfolio

	| portfolioReport portfolio expectedReport|
	
	portfolio _ Portfolio new.
	portfolioReport _ PortfolioTree from: portfolio.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!methodRemoval: PortfolioReportTest #test01PortfolioReport stamp: 'Ciro 6/2/2021 18:45:55'!
test01PortfolioReport

	^ self!
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:46:39' prior: 50933353!
test01ReturnPortfolioReportFromAnEmptyPortfolio

	| portfolioReport portfolio expectedReport|
	
	portfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree from: portfolio.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:46:44'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:46:56'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:47:19' prior: 50933387!
named: aString 
	
	^self new initializeWithName: aString ! !

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:47:32'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:47:40'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Account category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:47:43'!
Object subclass: #Account
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'Ciro 6/2/2021 18:47:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ciro 6/2/2021 18:47:53'!
PASSED!
!Portfolio class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:48:12' prior: 50933395!
named: aName 
	
	^self new initializeWithName: aName ! !
!Account class methodsFor: 'no messages' stamp: 'Ciro 6/2/2021 18:49:01'!
named: aName 
	
	^self new initializeWithName: aName ! !

!methodRemoval: Portfolio class #named: stamp: 'Ciro 6/2/2021 18:49:20'!
named: aName 
	
	^self new initializeWithName: aName !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:49:38'!
ERROR!
!Account methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 18:49:56'!
initializeWithName: aName 
	self shouldBeImplemented.
	name := aName.! !
!Account methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 18:50:07' prior: 50933538!
initializeWithName: aName 

	name _  aName.! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:50:10'!
ERROR!
!PortfolioReport class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:50:26'!
from: aPortfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFrom: aPortfolio ! !
!PortfolioReport class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:50:50' prior: 50933551!
from: aPortfolio 

	^self new initializeFor: aPortfolio ! !
!PortfolioReport class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:51:05'!
for: aPortfolio 

	^self new initializeFor: aPortfolio ! !
!Report class methodsFor: 'instance creation' stamp: 'Ciro 6/2/2021 18:51:05'!
for: anAccount 
	
	^ self new initializeFor: anAccount! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50933143!
test11TransferNetReportFromAReceptiveAccountWithTransferenceDeposit

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet for: aReceptiveAccountToReport.
	
	self assert: 30 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50933176!
test10TransferNetReportFromAReceptiveAccountWithWithdraw

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	report _ TransferNet for: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50933370!
test01ReturnPortfolioReportFromAnEmptyPortfolio

	| portfolioReport portfolio expectedReport|
	
	portfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: portfolio.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50933201!
test09TransferNetReportFromAReceptiveAccountWithDeposit

	| report aReceptiveAccountToReport |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	report _ TransferNet for: aReceptiveAccountToReport.
	
	self assert: 0 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50932903!
test07ReturnReportFromAPortfolioWithManyTransactions

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 expectedReport |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ AccountSummary for: aPortfolioToReport.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50932987!
test14TransferNetReportFromAPortfolio

	| report aPortfolioToReport aReceptiveAccount1 aReceptiveAccount2 aReceptiveAccount3 |
	
	aPortfolioToReport _ Portfolio new.
	aReceptiveAccount1 _ ReceptiveAccount new.
	aReceptiveAccount2 _ ReceptiveAccount new.
	aReceptiveAccount3 _ ReceptiveAccount new.
	aPortfolioToReport add: aReceptiveAccount1.
	aPortfolioToReport add: aReceptiveAccount2.
	report _ TransferNet for: aPortfolioToReport.
	Deposit register: 100 on: aReceptiveAccount1.
	Withdraw register: 50 on: aReceptiveAccount1.
	Transference from: aReceptiveAccount2 to: aReceptiveAccount3 withValue: 20.
	Transference from: aReceptiveAccount3 to: aReceptiveAccount2 withValue: 30.
	
	self assert: 10 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50931635!
test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary for: receptiveAccountToReport.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 20.
	expectedReport _ OrderedCollection with: 'Entrada por transferencia de 20' with: 'Balance = 20'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50931604!
test03ReturnReportFromAReceptiveAccountWithAWithdraw

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary for: receptiveAccount.
	Withdraw register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Extracci�n por 100' with: 'Balance = -100'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50932460!
test08TransferNetReportFromEmptyAccount

	| report receptiveAccount |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ TransferNet for: receptiveAccount.
	
	self assert: 0 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50933111!
test12TransferNetReportFromAReceptiveAccountWithTransferenceWithdraw

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	report _ TransferNet for: aReceptiveAccountToReport.
	
	self assert: -20 equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50931518!
test02ReturnReportFromAReceptiveAccountWithADeposit

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary for: receptiveAccount.
	Deposit register: 100 on: receptiveAccount. 
	expectedReport _ OrderedCollection with: 'Dep�sito por 100' with: 'Balance = 100'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50931655!
test06ReturnReportFromAReceptiveAccountWithManyTransactions

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary for: receptiveAccountToReport.
	Deposit register: 100 on: receptiveAccountToReport.
	Withdraw register: 50 on: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: receptiveAccountToReport withValue: 30.
	expectedReport _ self collectionWithAllKindsOfTransactionsMessages.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50931703!
test01ReturnReportFromAnEmptyReceptiveAccount

	| report receptiveAccount expectedReport |
	
	receptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary for: receptiveAccount.
	expectedReport _ OrderedCollection with: 'Balance = 0'.
	
	self assert: 0 equals: receptiveAccount balance.
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50931562!
test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw

	| report receptiveAccountToReport anotherReceptiveAccount expectedReport |
	
	receptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	report _ AccountSummary for: receptiveAccountToReport.
	Transference from: receptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	expectedReport _ OrderedCollection with: 'Salida por transferencia de 20' with: 'Balance = -20'.
	
	self assert: expectedReport equals: report execute.! !
!ReportTest methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:05' prior: 50933067!
test13TransferNetReportFromAReceptiveAccountWithTransferences

	| report aReceptiveAccountToReport anotherReceptiveAccount |
	
	aReceptiveAccountToReport _ ReceptiveAccount new.
	anotherReceptiveAccount _ ReceptiveAccount new.
	Deposit register: 100 on: aReceptiveAccountToReport.
	Withdraw register: 50 on: aReceptiveAccountToReport.
	Transference from: aReceptiveAccountToReport to: anotherReceptiveAccount withValue: 20.
	Transference from: anotherReceptiveAccount to: aReceptiveAccountToReport withValue: 30.
	report _ TransferNet for: aReceptiveAccountToReport.
	
	self assert: 10 equals: report execute.! !

!methodRemoval: PortfolioReport class #from: stamp: 'Ciro 6/2/2021 18:51:05'!
from: aPortfolio 

	^self new initializeFor: aPortfolio !

!methodRemoval: Report class #from: stamp: 'Ciro 6/2/2021 18:51:05'!
from: anAccount 
	
	^ self new initializeFor: anAccount!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:51:12'!
ERROR!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:51:21'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'account portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 18:51:21'!
initializeFor: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!PortfolioReport methodsFor: 'initialization' stamp: 'Ciro 6/2/2021 18:51:28' prior: 50933865!
initializeFor: aPortfolio 

	portfolio _ aPortfolio.! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:51:39'!
ERROR!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:51:49'!
execute
	self shouldBeImplemented.! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:52:11' prior: 50933880!
execute
	
	^ portfolio name! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:52:14'!
FAILURE!
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:52:23' prior: 50933605!
test01ReturnPortfolioReportFromAnEmptyPortfolio

	| portfolioReport portfolio expectedReport|
	
	portfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: portfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReport methodsFor: 'nil' stamp: 'Ciro 6/2/2021 18:52:40'!
execute
	
	self subclassResponsibility ! !
!Portfolio methodsFor: 'nil' stamp: 'Ciro 6/2/2021 18:53:00' overrides: 16882612!
name

	^ name! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:53:07'!
FAILURE!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:53:37' prior: 50933885 overrides: 50933906!
execute
	
	^ portfolio name! !

PortfolioReport subclass: #PortfolioTree
	instanceVariableNames: 'tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioTree category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 18:53:47'!
PortfolioReport subclass: #PortfolioTree
	instanceVariableNames: 'tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:53:58' prior: 50933919 overrides: 50933906!
execute
	
	tree _ OrderedCollection new.
	
	^ portfolio name! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:54:08' prior: 50933937 overrides: 50933906!
execute
	
	tree _ OrderedCollection new.
	
	^ tree add: portfolio name! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:54:11'!
FAILURE!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 18:54:25' prior: 50933943 overrides: 50933906!
execute
	
	tree _ OrderedCollection new.
	
	tree add: portfolio name.
	
	^tree! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 18:54:30'!
PASSED!
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:57:21'!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport portfolio expectedReport|
	
	portfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: portfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:57:55' prior: 50933962!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:59:29' prior: 50933976!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: 'Cuenta Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:59:38' prior: 50933893!
test01ReturnPortfolioReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 18:59:57' prior: 50933991!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: 'Cuenta Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:00:15' prior: 50934023!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: 'Cuenta Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:05:35' prior: 50934041!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: '   Cuenta Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:05:51'!
FAILURE!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:07:24' prior: 50933953 overrides: 50933906!
execute
	
	tree _ OrderedCollection new.
	
	tree add: portfolio name.
	tree add: [portfolio xxx: self].
	
	^tree! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:09:25'!
xxx: aPortfolioReport

	^ accounts first name! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:09:49' prior: 50934089!
xxx: aPortfolioReport

	^ '   ', accounts first name! !

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:09:56'!
FAILURE!
!Account methodsFor: 'nil' stamp: 'Ciro 6/2/2021 19:10:25' overrides: 16882612!
name

	^ name! !

!methodRemoval: Portfolio #name stamp: 'Ciro 6/2/2021 19:10:31'!
name

	^ name!

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:10:37'!
FAILURE!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:10:44'!
FAILURE!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:10:44'!
FAILURE!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:11:32' prior: 50934082 overrides: 50933906!
execute
	
	tree _ OrderedCollection new.
	
	tree add: portfolio name.
	tree add: (portfolio xxx: self).
	
	^tree! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:12:44' prior: 50934122 overrides: 50933906!
execute
	
	| aaa |
	
	tree _ OrderedCollection new.
	
	tree add: portfolio name.
	aaa _ portfolio xxx: self.
	
	^tree! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:12:53' prior: 50934094!
xxx: aPortfolioReport

	^ accounts first name! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:13:38' prior: 50934137!
xxx: aPortfolioReport

	accounts ifNotEmpty: [^ accounts first name]! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:14:17' prior: 50934130 overrides: 50933906!
execute
	
	| aaa |
	
	tree _ OrderedCollection new.
	
	tree add: portfolio name.
	aaa _ portfolio xxx: self.
	
	aaa ifNotNil: [tree add: '   ', aaa]
	
	^tree! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:14:20' prior: 50934148 overrides: 50933906!
execute
	
	| aaa |
	
	tree _ OrderedCollection new.
	
	tree add: portfolio name.
	aaa _ portfolio xxx: self.
	
	aaa ifNotNil: [tree add: '   ',aaa].
	
	^tree! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:14:25'!
ERROR!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:14:25'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:15:13' prior: 50934142!
xxx: aPortfolioReport

	accounts ifNotEmpty: [^ accounts first name]
		ifEmpty: [^ nil]! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:15:22'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:15:26'!
PASSED!
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:18:25'!
test03ReturnPortfolioReportFromAPortfolioWithAccounts

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '   Portfolio Hijo' 
		with: '      Cuenta Hijo de Portfolio Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:18:44' prior: 50934187!
test03ReturnPortfolioReportFromAPortfolioWithAccounts

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '   Portfolio Hijo' 
		with: '      Cuenta Hijo de Portfolio Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:19:05'!
FAILURE!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:19:05'!
FAILURE!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:19:49' prior: 50934157 overrides: 50933906!
execute

	tree _ OrderedCollection new.
	
	portfolio xxx: self.
	
	^tree! !
!Account methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:20:43'!
xxx: aPortfolioReport

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:21:51' prior: 50934173 overrides: 50934260!
xxx: aPortfolioReport

	aPortfolioReport ccc: self.
	accounts do: []! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:23:05' prior: 50934266 overrides: 50934260!
xxx: aPortfolioReport

	aPortfolioReport ccc: self.
	accounts do: [ :anAccount | anAccount xxx: aPortfolioReport]! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'Ciro 6/2/2021 19:23:36' overrides: 50934260!
xxx: aPortfolioReport

	aPortfolioReport ccc: self.! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:25:07' prior: 50934255 overrides: 50933906!
execute

	tree _ OrderedCollection new.
	
	portfolio xxx: self contador: 0.
	
	^tree! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:25:26'!
xxx: aPortfolioReport contador: aNumber

	aPortfolioReport ccc: self.
	accounts do: [ :anAccount | anAccount xxx: aPortfolioReport]! !
!Account methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:25:35'!
xxx: aPortfolioReport contador: aNumber

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:26:41' prior: 50934291 overrides: 50934298!
xxx: aPortfolioReport contador: aNumber

	| aux |

	aPortfolioReport ccc: self contador: aNumber.
	aux _ aNumber + 1.
	accounts do: [ :anAccount | anAccount xxx: aPortfolioReport contador: aux]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:26:57' overrides: 50934298!
xxx: aPortfolioReport contador: aNumber

	aPortfolioReport ccc: self contador: aNumber! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:29:18'!
ccc: algo contador: aNumber

	| espacio |
	
	espacio _  aNumber timesRepeat: '   '.
	
	tree add: (espacio,algo name).! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:33:22' prior: 50934320!
ccc: algo contador: aNumber

	| espacio espacioFinal |
	
	espacio _ ''.
	
	espacioFinal _  aNumber timesRepeat: ['   ',espacio].
	
	tree add: (espacio,algo name).! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:33:27' prior: 50934327!
ccc: algo contador: aNumber

	| espacio espacioFinal |
	
	espacio _ ''.
	
	espacioFinal _  aNumber timesRepeat: ['   ',espacio].
	
	tree add: (espacioFinal,algo name).! !

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:33:32'!
ERROR!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:34:25' prior: 50934336!
ccc: algo contador: aNumber

	| espacio espacioFinal |
	
	espacio _ ''.
	
	espacioFinal _ (aNumber timesRepeat: ['   ',espacio]).
	
	tree add: (espacioFinal,algo name).! !

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:34:32'!
ERROR!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:35:39' prior: 50934349!
ccc: algo contador: aNumber

	| espacio |
	
	espacio _ ''.
	
	aNumber timesRepeat: [espacio _ '   ',espacio].
	
	tree add: (espacio,algo name).! !

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:35:46'!
FAILURE!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:35:46'!
FAILURE!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:35:51'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:35:55'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:38:29'!
FAILURE!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:40:04'!
FAILURE!
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:40:45' prior: 50934217!
test03ReturnPortfolioReportFromAPortfolioWithAccounts

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo de Root' 
		with: '   Portfolio Hijo' 
		with: '      Cuenta Hijo de Portfolio Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:40:48'!
PASSED!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:40:48'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:40:48'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:40:48'!
PASSED!

!methodRemoval: Account #xxx: stamp: 'Ciro 6/2/2021 19:41:13'!
xxx: aPortfolioReport

	self subclassResponsibility !

!methodRemoval: Portfolio #xxx: stamp: 'Ciro 6/2/2021 19:41:16'!
xxx: aPortfolioReport

	aPortfolioReport ccc: self.
	accounts do: [ :anAccount | anAccount xxx: aPortfolioReport]!

!methodRemoval: ReceptiveAccount #xxx: stamp: 'Ciro 6/2/2021 19:41:20'!
xxx: aPortfolioReport

	aPortfolioReport ccc: self.!

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:41:24'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:41:24'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:41:24'!
PASSED!
!Account methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:42:51'!
exploreAccountsFor: aPortfolioReport withCounter: aNumber

	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:42:51' overrides: 50934465!
exploreAccountsFor: aPortfolioReport withCounter: aNumber

	aPortfolioReport ccc: self contador: aNumber! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:42:51' overrides: 50934465!
exploreAccountsFor: aPortfolioReport withCounter: aNumber

	| aux |

	aPortfolioReport ccc: self contador: aNumber.
	aux _ aNumber + 1.
	accounts do: [ :anAccount | anAccount xxx: aPortfolioReport contador: aux]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:42:51' prior: 50934304 overrides: 50934298!
xxx: aPortfolioReport contador: aNumber

	| aux |

	aPortfolioReport ccc: self contador: aNumber.
	aux _ aNumber + 1.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aux]! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:42:51' prior: 50934285 overrides: 50933906!
execute

	tree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	^tree! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:42:51' prior: 50934479 overrides: 50934465!
exploreAccountsFor: aPortfolioReport withCounter: aNumber

	| aux |

	aPortfolioReport ccc: self contador: aNumber.
	aux _ aNumber + 1.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aux]! !

!methodRemoval: Account #xxx:contador: stamp: 'Ciro 6/2/2021 19:42:51'!
xxx: aPortfolioReport contador: aNumber

	self subclassResponsibility !

!methodRemoval: ReceptiveAccount #xxx:contador: stamp: 'Ciro 6/2/2021 19:42:51'!
xxx: aPortfolioReport contador: aNumber

	aPortfolioReport ccc: self contador: aNumber!

!methodRemoval: Portfolio #xxx:contador: stamp: 'Ciro 6/2/2021 19:42:51'!
xxx: aPortfolioReport contador: aNumber

	| aux |

	aPortfolioReport ccc: self contador: aNumber.
	aux _ aNumber + 1.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aux]!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:43:54'!
takeAccountName: algo withCounter: aNumber

	| espacio |
	
	espacio _ ''.
	
	aNumber timesRepeat: [espacio _ '   ',espacio].
	
	tree add: (espacio,algo name).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:43:54' prior: 50934508 overrides: 50934465!
exploreAccountsFor: aPortfolioReport withCounter: aNumber

	| aux |

	aPortfolioReport takeAccountName: self withCounter: aNumber.
	aux _ aNumber + 1.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aux]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:43:54' prior: 50934472 overrides: 50934465!
exploreAccountsFor: aPortfolioReport withCounter: aNumber

	aPortfolioReport takeAccountName: self withCounter: aNumber! !

!methodRemoval: PortfolioTree #ccc:contador: stamp: 'Ciro 6/2/2021 19:43:54'!
ccc: algo contador: aNumber

	| espacio |
	
	espacio _ ''.
	
	aNumber timesRepeat: [espacio _ '   ',espacio].
	
	tree add: (espacio,algo name).!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:44:10' prior: 50934537!
takeAccountName: algo withCounter: aNumber

	| space |
	
	space _ ''.
	
	aNumber timesRepeat: [space _ '   ',space].
	
	tree add: (space,algo name).! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:44:37' prior: 50934572!
takeAccountName: anAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	tree add: (space,anAccount name).! !
!Account methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:44:46' prior: 50934465!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:44:51' prior: 50934546 overrides: 50934588!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	| aux |

	aPortfolioReport takeAccountName: self withCounter: aCounter.
	aux _ aCounter + 1.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aux]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:44:55' prior: 50934558 overrides: 50934588!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	aPortfolioReport takeAccountName: self withCounter: aCounter! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:45:13' prior: 50934595 overrides: 50934588!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	| newCounter |

	aPortfolioReport takeAccountName: self withCounter: aCounter.
	newCounter _ aCounter + 1.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: newCounter]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:45:29' prior: 50934615 overrides: 50934588!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	aPortfolioReport takeAccountName: self withCounter: aCounter.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aCounter + 1]! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:45:37'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:45:37'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:45:37'!
PASSED!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:46:05'!
takeAccountName: anAccount withCounter: aCounter

	self subclassResponsibility ! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:46:07' prior: 50934650!
takeAccountName: anAccount withCounter: aCounter

	self subclassResponsibility! !

PortfolioReport subclass: #PortfolioSummaryTree
	instanceVariableNames: 'sumaryTree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioSummaryTree category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 19:46:32'!
PortfolioReport subclass: #PortfolioSummaryTree
	instanceVariableNames: 'sumaryTree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioSummaryTree methodsFor: 'no messages' stamp: 'Ciro 6/2/2021 19:47:04' overrides: 50933906!
execute

	sumaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	^sumaryTree! !

!classDefinition: #PortfolioSummaryTree category: 'Portfolio-Solucion' stamp: 'Ciro 6/2/2021 19:47:12'!
PortfolioReport subclass: #PortfolioSummaryTree
	instanceVariableNames: 'summaryTree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:47:12' prior: 50934676 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	^summaryTree! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:47:28' overrides: 50934656!
takeAccountName: anAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,anAccount name).! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:48:06'!
test01ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:48:11'!
test01ReturnPortfolioTreeReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:48:15'!
test02ReturnPortfolioTreeReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: '   Cuenta Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio tree' stamp: 'Ciro 6/2/2021 19:48:19'!
test03ReturnPortfolioTreeReportFromAPortfolioWithAccounts

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo de Root' 
		with: '   Portfolio Hijo' 
		with: '      Cuenta Hijo de Portfolio Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!methodRemoval: PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:48:22'!
test03ReturnPortfolioReportFromAPortfolioWithAccounts

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo de Root' 
		with: '   Portfolio Hijo' 
		with: '      Cuenta Hijo de Portfolio Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.!

!methodRemoval: PortfolioReportTest #test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:48:26'!
test02ReturnPortfolioReportFromAPortfolioWithAReceptiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: '   Cuenta Hijo'.
	
	self assert: expectedReport equals: portfolioReport execute.!

!methodRemoval: PortfolioReportTest #test01ReturnPortfolioReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:48:28'!
test01ReturnPortfolioReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.!
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:48:33'!
test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:49:11' prior: 50934848!
test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o' with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!methodRemoval: PortfolioReportTest #test01ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:49:21'!
test01ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o'.
	
	self assert: expectedReport equals: portfolioReport execute.!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:49:24'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:49:59' prior: 50934693 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	summaryTree add: 'Portfolio Vac�o'.
	summaryTree add: '   Balance = 0'.
	
	^summaryTree! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:50:15'!
FAILURE!
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:50:52' prior: 50934862!
test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioSummaryTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o' with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:50:54'!
PASSED!

!testRun: #PortfolioReportTest #test01ReturnPortfolioTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:50:54'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioTreeReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:50:54'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioTreeReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:50:54'!
PASSED!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:50:54'!
PASSED!
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:51:10'!
test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount

	| portfolioReport aPortfolio expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Vac�o'.
	portfolioReport _ PortfolioSummaryTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Vac�o' with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:52:11' prior: 50934944!
test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount _ ReceptiveAccount named: 'Cuenta Hijo'.
	portfolioReport _ PortfolioSummaryTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: '   Cuenta Hijo' with: '      Balance = 0' with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:52:25' prior: 50934959!
test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioSummaryTree for: aPortfolio.
	expectedReport _ OrderedCollection with: 'Portfolio Root' with: '   Cuenta Hijo' with: '      Balance = 0' with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 19:52:39' prior: 50934978!
test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount

	| portfolioReport aPortfolio aReceptiveAccount expectedReport|
	
	aPortfolio _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolio add: aReceptiveAccount.
	portfolioReport _ PortfolioSummaryTree for: aPortfolio.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '      Balance = 0' 
		with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:54:32' prior: 50934896 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	^summaryTree! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:55:14' prior: 50935019 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	summaryTree add: '      Balance = 0'
	
	^summaryTree! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:55:21' prior: 50935027 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	summaryTree add: '      Balance = 0'.
	
	^summaryTree! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:56:04'!
takePortfolioName: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aPortfolio name).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:57:06'!
takeAReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	summaryTree add: (space,'   ','Balance = 0').! !

!methodRemoval: PortfolioSummaryTree #takeAccountName:withCounter: stamp: 'Ciro 6/2/2021 19:57:21'!
takeAccountName: anAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,anAccount name).!
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:57:43'!
takePortfolioName: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	tree add: (space,aPortfolio name).! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:57:50'!
takeReceptiveAccountName: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	tree add: (space,aPortfolio name).! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:58:00' prior: 50935080!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	tree add: (space,aReceptiveAccount name).! !

!methodRemoval: PortfolioTree #takeAccountName:withCounter: stamp: 'Ciro 6/2/2021 19:58:04'!
takeAccountName: anAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	tree add: (space,anAccount name).!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:58:13'!
takePortoflioName: aPortfolio withCounter: aCounter

	self subclassResponsibility! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:58:18'!
takePortofolioName: aPortfolio withCounter: aCounter

	self subclassResponsibility! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:58:21'!
takePortfolioName: aPortfolio withCounter: aCounter

	self subclassResponsibility! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:58:33'!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	self subclassResponsibility! !

!methodRemoval: PortfolioReport #takeAccountName:withCounter: stamp: 'Ciro 6/2/2021 19:58:40'!
takeAccountName: anAccount withCounter: aCounter

	self subclassResponsibility!

!methodRemoval: PortfolioReport #takePortoflioName:withCounter: stamp: 'Ciro 6/2/2021 19:58:45'!
takePortoflioName: aPortfolio withCounter: aCounter

	self subclassResponsibility!

!methodRemoval: PortfolioReport #takePortofolioName:withCounter: stamp: 'Ciro 6/2/2021 19:58:48'!
takePortofolioName: aPortfolio withCounter: aCounter

	self subclassResponsibility!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:58:52' overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	summaryTree add: (space,'   ','Balance = 0').! !

!methodRemoval: PortfolioSummaryTree #takeAReceptiveAccountName:withCounter: stamp: 'Ciro 6/2/2021 19:58:58'!
takeAReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	summaryTree add: (space,'   ','Balance = 0').!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:59:07' prior: 50934628 overrides: 50934588!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	aPortfolioReport takePortfolioName: self withCounter: aCounter.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aCounter + 1]! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 19:59:16' prior: 50934607 overrides: 50934588!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	aPortfolioReport takeReceptiveAccountName: self withCounter: aCounter! !

!methodRemoval: Account #exploreAccountsFor:withCounter: stamp: 'Ciro 6/2/2021 19:59:22'!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	self subclassResponsibility !

!testRun: #PortfolioReportTest #test01ReturnPortfolioTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:59:26'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioTreeReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:59:26'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioTreeReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:59:26'!
PASSED!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:59:26'!
FAILURE!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 19:59:26'!
FAILURE!

!testRun: #PortfolioReportTest #test01ReturnPortfolioTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:59:48'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioTreeReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 19:59:48'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioTreeReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 19:59:48'!
PASSED!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:59:53'!
FAILURE!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 19:59:53'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:00:52' prior: 50935036 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	summaryTree add: '   Balance = 0'.
	
	^summaryTree! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:01:01'!
PASSED!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:01:01'!
PASSED!
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:02:01'!
test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aReceptiveAccount _ ReceptiveAccount named: 'Cuenta Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	portfolioReport _ PortfolioSummaryTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '      Balance = 0' 
		with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:03:29' prior: 50935255!
test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	portfolioReport _ PortfolioSummaryTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '      Balance = 0' 
		with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:03:43' prior: 50935278!
test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioSummaryTree for: aPortfolioRoot.
	expectedReport _ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '      Balance = 0' 
		with: '   Balance = 0'.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:05:32'!
completeSummaryTree
	
	^ OrderedCollection 
		with: 'Portfolio Root' 
		with: '   Cuenta Hijo' 
		with: '      Balance = 0' 
		with: '   Balance = 0'.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:09:35' prior: 50935334!
completeSummaryTree
	
	| summaryTree |
	
	summaryTree _ OrderedCollection new.
	summaryTree add: 'Portfolio Root'.
	summaryTree add: '   Cuenta Hijo de Root'.
	summaryTree add: '      Balance = 0'.
	summaryTree add: '   Portfolio Hijo'.
	summaryTree add: '      Cuenta Hijo de Portfolio Hijo'.
	summaryTree add: '         Balance = 0'.
	summaryTree add: '      Balance = 0'.
	summaryTree add: '   Balance = 0'.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:11:09' prior: 50935343!
completeSummaryTree
	
	| summaryTree |
	
	summaryTree _ OrderedCollection new.
	summaryTree add: 'Portfolio Root'.
	summaryTree add: '   Cuenta Hijo de Root'.
	summaryTree add: '      Dep�sito por 100'.
	summaryTree add: '      Salida por extracci�n de 20'.
	summaryTree add: '      Balance = 80'.
	summaryTree add: '   Portfolio Hijo'.
	summaryTree add: '      Cuenta Hijo de Portfolio Hijo'.
	summaryTree add: '         Extracci�n por 50'.
	summaryTree add: '         Entrada por dep�sito de 20'.
	summaryTree add: '         Balance = 0'.
	summaryTree add: '      Balance = 0'.
	summaryTree add: '   Balance = 0'.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:11:33' prior: 50935360!
completeSummaryTree
	
	| summaryTree |
	
	summaryTree _ OrderedCollection new.
	summaryTree add: 'Portfolio Root'.
	summaryTree add: '   Cuenta Hijo de Root'.
	summaryTree add: '      Dep�sito por 100'.
	summaryTree add: '      Salida por transferencia de 20'.
	summaryTree add: '      Balance = 80'.
	summaryTree add: '   Portfolio Hijo'.
	summaryTree add: '      Cuenta Hijo de Portfolio Hijo'.
	summaryTree add: '         Extracci�n por 50'.
	summaryTree add: '         Entrada por transferencia de 20'.
	summaryTree add: '         Balance = 0'.
	summaryTree add: '      Balance = 0'.
	summaryTree add: '   Balance = 0'.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:11:51' prior: 50935383!
completeSummaryTree
	
	| summaryTree |
	
	summaryTree _ OrderedCollection new.
	summaryTree add: 'Portfolio Root'.
	summaryTree add: '   Cuenta Hijo de Root'.
	summaryTree add: '      Dep�sito por 100'.
	summaryTree add: '      Salida por transferencia de 20'.
	summaryTree add: '      Balance = 80'.
	summaryTree add: '   Portfolio Hijo'.
	summaryTree add: '      Cuenta Hijo de Portfolio Hijo'.
	summaryTree add: '         Extracci�n por 50'.
	summaryTree add: '         Entrada por transferencia de 20'.
	summaryTree add: '         Balance = -30'.
	summaryTree add: '      Balance = -30'.
	summaryTree add: '   Balance = 50'.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:12:06' prior: 50935305!
test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioSummaryTree for: aPortfolioRoot.
	expectedReport _ self completeSummaryTree.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:13:16' prior: 50935430!
test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: anotherReceptiveAccount.
	Transference from: aPortfolioChild to: anotherReceptiveAccount withValue: 20.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioSummaryTree for: aPortfolioRoot.
	expectedReport _ self completeSummaryTree.
	
	self assert: expectedReport equals: portfolioReport execute.! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:19:43' prior: 50935148 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self.
	
	summaryTree add: (space,'   ','Balance = 0').! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:22:11' prior: 50935490 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self withCounter: aCounter.
	
	summaryTree add: (space,'   ','Balance = 0').! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:22:49'!
exploreTransactionsFor: aReport withCounter: aCounter

	transactions do: [ :aTransaction | aTransaction inspectFor: aReport withCounter: aCounter ]! !
!Deposit methodsFor: 'report' stamp: 'Ciro 6/2/2021 20:23:07'!
inspectFor: aReport withCounter: aCounter

	aReport takeDepositValueFrom: self withCounter: aCounter! !
!TransferenceLeg methodsFor: 'report' stamp: 'Ciro 6/2/2021 20:23:20'!
inspectFor: aReport withCounter: aCounter

	self subclassResponsibility ! !
!TransferenceDepositLeg methodsFor: 'report' stamp: 'Ciro 6/2/2021 20:23:26' overrides: 50935530!
inspectFor: aReport withCounter: aCounter

	aReport takeTransferenceDepositLegValueFrom: self withCounter: aCounter! !
!TransferenceWithdrawLeg methodsFor: 'report' stamp: 'Ciro 6/2/2021 20:23:31' overrides: 50935530!
inspectFor: aReport withCounter: aCounter

	aReport takeTransferenceWithdrawLegValueFrom: self withCounter: aCounter! !
!Withdraw methodsFor: 'report' stamp: 'Ciro 6/2/2021 20:23:35'!
inspectFor: aReport withCounter: aCounter

	aReport takeWithdrawValueFrom: self withCounter: aCounter! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:24:03'!
takeDepositValueFrom: aDeposit withCounter: aCounter

	^ summaryTree add: 'Dep�sito por ', aDeposit value asString! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:24:50' prior: 50935556!
takeDepositValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Dep�sito por ', aDeposit value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:25:08'!
takeWithdrawValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Extracci�n por ', aDeposit value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:25:25'!
takeTransferenceWithdrawValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Salida de transferencia por ', aDeposit value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:25:32'!
takeTransferenceDepositValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Entrada de transferencia por ', aDeposit value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:25:46' prior: 50935583!
takeTransferenceWithdrawValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Salida por transferencia de ', aDeposit value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:25:55' prior: 50935594!
takeTransferenceDepositValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Entrada por transferencia de ', aDeposit value asString).! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:26:19'!
PASSED!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:26:23'!
PASSED!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:26:55' prior: 50935504 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self withCounter: aCounter.
	
	summaryTree add: (space,'   ','Balance = ', aReceptiveAccount value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:27:13' prior: 50935636 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self withCounter: aCounter.
	
	summaryTree add: (space,'   ','Balance = ', aReceptiveAccount balance asString).! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:27:19'!
PASSED!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:27:24'!
PASSED!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:27:54' prior: 50935238 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	summaryTree add: ('   Balance = ', portfolio balance asString).
	
	^summaryTree! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:28:04'!
PASSED!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:28:07'!
PASSED!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:28:22'!
ERROR!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:28:22'!
ERROR!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:28:40'!
ERROR!
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:28:53' prior: 50935457!
test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions

	| portfolioReport aPortfolioRoot aPortfolioChild aReceptiveAccount anotherReceptiveAccount expectedReport|
	
	aPortfolioRoot _ Portfolio named: 'Portfolio Root'.
	aPortfolioChild _ Portfolio named: 'Portfolio Hijo'.
	aReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Root'.
	anotherReceptiveAccount  _ ReceptiveAccount named: 'Cuenta Hijo de Portfolio Hijo'.
	Deposit register: 100 on: aReceptiveAccount.
	Withdraw register: 50 on: anotherReceptiveAccount.
	Transference from: aReceptiveAccount to: anotherReceptiveAccount withValue: 20.
	aPortfolioRoot add: aReceptiveAccount.
	aPortfolioChild add: anotherReceptiveAccount.
	aPortfolioRoot add: aPortfolioChild.
	portfolioReport _ PortfolioSummaryTree for: aPortfolioRoot.
	expectedReport _ self completeSummaryTree.
	
	self assert: expectedReport equals: portfolioReport execute.! !

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:28:56'!
ERROR!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:28:56'!
ERROR!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:29:38'!
takeTransferenceDepositLegValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Entrada por transferencia de ', aDeposit value asString).! !

!methodRemoval: PortfolioSummaryTree #takeTransferenceDepositValueFrom:withCounter: stamp: 'Ciro 6/2/2021 20:29:41'!
takeTransferenceDepositValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Entrada por transferencia de ', aDeposit value asString).!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:29:45'!
takeTransferenceWithdrawLegValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Salida por transferencia de ', aDeposit value asString).! !

!methodRemoval: PortfolioSummaryTree #takeTransferenceWithdrawValueFrom:withCounter: stamp: 'Ciro 6/2/2021 20:29:47'!
takeTransferenceWithdrawValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Salida por transferencia de ', aDeposit value asString).!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:29:53'!
FAILURE!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:29:53'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:31:22' prior: 50935747!
takeTransferenceDepositLegValueFrom: aTransferenceDepositLeg withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Entrada por transferencia de ', aTransferenceDepositLeg value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:31:33' prior: 50935769!
takeTransferenceWithdrawLegValueFrom: aTransferenceWithdrawLeg withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Salida por transferencia de ', aTransferenceWithdrawLeg value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:31:40' prior: 50935573!
takeWithdrawValueFrom: aWithdraw withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Extracci�n por ', aWithdraw value asString).! !

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:32:10'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:33:11' prior: 50935563!
takeDepositValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	self halt.
	
	summaryTree add: (space,'   ','Dep�sito por ', aDeposit value asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:34:13' prior: 50935651 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self withCounter: aCounter.
	
	self halt.
	
	summaryTree add: (space,'   ','Balance = ', aReceptiveAccount balance asString).! !

!testRun: #PortfolioReportTest #test03ReturnPortfolioReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 20:34:17'!
PASSED!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:34:37' prior: 50935839!
takeDepositValueFrom: aDeposit withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ','Dep�sito por ', aDeposit value asString).! !

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:37:53'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:42:19' prior: 50935171!
exploreAccountsFor: aPortfolioReport withCounter: aCounter

	aPortfolioReport takePortfolioName: self withCounter: aCounter.
	accounts do: [ :anAccount | anAccount exploreAccountsFor: aPortfolioReport withCounter: aCounter + 1].
	aPortfolioReport takePortfolioBalance: self withCounter: aCounter.! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:42:37'!
takePortfolioBalance: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aPortfolio name).! !
!PortfolioTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:42:53'!
takePortfolioBalance: aPortfolio withCounter: aCounter! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:43:43' prior: 50935896!
takePortfolioBalance: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aPortfolio balance asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:43:52' prior: 50935675 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	^summaryTree! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:43:57'!
FAILURE!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:43:58'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:44:55' prior: 50935911!
takePortfolioBalance: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   ',aPortfolio balance asString).! !

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:45:04'!
FAILURE!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:45:04'!
FAILURE!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:45:07'!
FAILURE!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:45:07'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:45:37' prior: 50935850 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self withCounter: aCounter.
	
	self halt.
	
	summaryTree add: (space,'   Balance = ', aReceptiveAccount balance asString).! !
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:45:47' prior: 50935937!
takePortfolioBalance: aPortfolio withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,'   Balance = ',aPortfolio balance asString).! !

!testRun: #PortfolioReportTest #test01ReturnPortfolioTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:45:55'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioTreeReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 20:45:55'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioTreeReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 20:45:55'!
PASSED!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:46:00'!
PASSED!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:46:05'!
PASSED!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:46:13' prior: 50935964 overrides: 50935124!
takeReceptiveAccountName: aReceptiveAccount withCounter: aCounter

	| space |
	
	space _ ''.
	
	aCounter timesRepeat: [space _ '   ',space].
	
	summaryTree add: (space,aReceptiveAccount name).
	
	aReceptiveAccount exploreTransactionsFor: self withCounter: aCounter.
	
	summaryTree add: (space,'   Balance = ', aReceptiveAccount balance asString).! !

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:46:17'!
PASSED!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:46:21'!
FAILURE!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:46:21'!
FAILURE!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:46:51' prior: 50935921 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	self halt.
	
	^summaryTree! !

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:48:20'!
FAILURE!
!PortfolioReportTest methodsFor: 'portfolio summary tree' stamp: 'Ciro 6/2/2021 20:49:05' prior: 50935406!
completeSummaryTree
	
	| summaryTree |
	
	summaryTree _ OrderedCollection new.
	summaryTree add: 'Portfolio Root'.
	summaryTree add: '   Cuenta Hijo de Root'.
	summaryTree add: '      Dep�sito por 100'.
	summaryTree add: '      Salida por transferencia de 20'.
	summaryTree add: '      Balance = 80'.
	summaryTree add: '   Portfolio Hijo'.
	summaryTree add: '      Cuenta Hijo de Portfolio Hijo'.
	summaryTree add: '         Extracci�n por 50'.
	summaryTree add: '         Entrada por transferencia de 20'.
	summaryTree add: '         Balance = -30'.
	summaryTree add: '      Balance = -30'.
	summaryTree add: '   Balance = 50'.
	
	^ summaryTree! !

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:49:13'!
PASSED!
!PortfolioSummaryTree methodsFor: 'as yet unclassified' stamp: 'Ciro 6/2/2021 20:49:22' prior: 50936039 overrides: 50933906!
execute

	summaryTree _ OrderedCollection new.
	
	portfolio exploreAccountsFor: self withCounter: 0.
	
	^summaryTree! !

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:49:27'!
PASSED!

!testRun: #PortfolioReportTest #test01ReturnPortfolioTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:51:55'!
PASSED!

!testRun: #PortfolioReportTest #test02ReturnPortfolioTreeReportFromAPortfolioWithAReceptiveAccount stamp: 'Ciro 6/2/2021 20:51:55'!
PASSED!

!testRun: #PortfolioReportTest #test03ReturnPortfolioTreeReportFromAPortfolioWithAccounts stamp: 'Ciro 6/2/2021 20:51:55'!
PASSED!

!testRun: #PortfolioReportTest #test04ReturnPortfolioSummaryTreeReportFromAnEmptyPortfolio stamp: 'Ciro 6/2/2021 20:51:55'!
PASSED!

!testRun: #PortfolioReportTest #test05ReturnPortfolioSummaryTreeReportWithARecepetiveAccount stamp: 'Ciro 6/2/2021 20:51:55'!
PASSED!

!testRun: #PortfolioReportTest #test06ReturnPortfolioSummaryTreeReportWithAccountsAndTransactions stamp: 'Ciro 6/2/2021 20:51:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Ciro 6/2/2021 20:51:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'Ciro 6/2/2021 20:52:01'!
PASSED!

!testRun: #ReportTest #test01ReturnReportFromAnEmptyReceptiveAccount stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test02ReturnReportFromAReceptiveAccountWithADeposit stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test03ReturnReportFromAReceptiveAccountWithAWithdraw stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test04ReturnReportFromAReceptiveAccountWithATransferenceDeposit stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test05ReturnReportFromAReceptiveAccountWithATransferenceWithdraw stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test06ReturnReportFromAReceptiveAccountWithManyTransactions stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test07ReturnReportFromAPortfolioWithManyTransactions stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test08TransferNetReportFromEmptyAccount stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test09TransferNetReportFromAReceptiveAccountWithDeposit stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test10TransferNetReportFromAReceptiveAccountWithWithdraw stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test11TransferNetReportFromAReceptiveAccountWithTransferenceDeposit stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test12TransferNetReportFromAReceptiveAccountWithTransferenceWithdraw stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test13TransferNetReportFromAReceptiveAccountWithTransferences stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #ReportTest #test14TransferNetReportFromAPortfolio stamp: 'Ciro 6/2/2021 20:52:07'!
PASSED!

!testRun: #TransferenceTest #test01NewTransferenceBetweenTwoReceptiveAccounts stamp: 'Ciro 6/2/2021 20:52:10'!
PASSED!

!testRun: #TransferenceTest #test02SenderAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 20:52:10'!
PASSED!

!testRun: #TransferenceTest #test03ReceiverAccountBalanceAfterTransference stamp: 'Ciro 6/2/2021 20:52:10'!
PASSED!

!testRun: #TransferenceTest #test04TransferenceWithdrawKnowsTransferenceDeposit stamp: 'Ciro 6/2/2021 20:52:10'!
PASSED!

!testRun: #TransferenceTest #test05CanOnlyTransferPositiveValues stamp: 'Ciro 6/2/2021 20:52:10'!
PASSED!

!testRun: #TransferenceTest #test06CanNotTransferBetweenTheSameReceptiveAccount stamp: 'Ciro 6/2/2021 20:52:10'!
PASSED!

----QUIT----(2 June 2021 20:52:44) CuisUniversity-4532.image priorSource: 19252092!