----STARTUP---- (16 May 2021 19:52:39) as C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\windows64\CuisUniversity-4532.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #MarsRover category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 19:54:55'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #MarsRoverTest category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 19:56:15'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

----End fileIn of C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\Parciales-master\2020-2c\recuperatorio\ISW1-2020-2C-Recuperatorio-1erParcial.st----!
!MarsRoverTest methodsFor: 'no messages' stamp: 'JR 5/16/2021 20:02:27'!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North! !

----End fileIn of C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\Parciales-master\2020-2c\recuperatorio\ISW1-2020-2C-Recuperatorio-1erParcial.st----!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:04:22' prior: 50861188!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: ''.
	
	self assert: marsRover isAt: 0@0 heading: #North! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:04:27'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:04:27'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:04:52'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:04:52'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:05:12'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:05:22'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:05:22'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'JR 5/16/2021 20:05:39'!
at: aPoint heading: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAt: aPoint heading: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'JR 5/16/2021 20:08:10' prior: 50863138!
at: aPoint heading: aCardinalPoint 
	
	^self new initializeAt: aPoint heading: aCardinalPoint ! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:08:30'!
ERROR!

!classDefinition: #MarsRover category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:08:47'!
Object subclass: #MarsRover
	instanceVariableNames: 'point'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #MarsRover category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:08:47'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'JR 5/16/2021 20:08:47'!
initializeAt: aPoint heading: aCardinalPoint 
	self shouldBeImplemented.
	point := aPoint.
	cardinalPoint := aCardinalPoint.! !

!classDefinition: #MarsRover category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:09:14'!
Object subclass: #MarsRover
	instanceVariableNames: 'point cardinalPoint position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!
!MarsRover methodsFor: 'initialization' stamp: 'JR 5/16/2021 20:09:10' prior: 50863170!
initializeAt: aPoint heading: aCardinalPoint 
	
	position := aPoint.
	cardinalPoint := aCardinalPoint.! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:09:21'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:09:34'!
processCommand: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:09:39' prior: 50863193!
processCommand: aString 
	! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:09:43'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:10:12' prior: 50863114!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: #North)! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:10:14'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:10:14'!
ERROR!
!MarsRover methodsFor: 'accessing' stamp: 'JR 5/16/2021 20:10:35'!
isAt: aPoint heading: aSymbol 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'accessing' stamp: 'JR 5/16/2021 20:11:11' prior: 50863217!
isAt: aPoint heading: aCardinalPoint
	
	^(position = aPoint) and: [cardinalPoint = aCardinalPoint ]! !
!MarsRover methodsFor: 'accessing' stamp: 'JR 5/16/2021 20:11:15' prior: 50863222!
isAt: aPoint heading: aCardinalPoint
	
	^(position = aPoint) and: [cardinalPoint = aCardinalPoint]! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:11:16'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:11:18'!
PASSED!

Object subclass: #MarsRover
	instanceVariableNames: 'cardinalPoint position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #MarsRover category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:11:26'!
Object subclass: #MarsRover
	instanceVariableNames: 'cardinalPoint position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:11:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:14:06'!
test02

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 heading: #North)! !

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:15:45'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:15:45'!
FAILURE!

----End fileIn of C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\windows64\Packages\TerseGuide.pck.st----!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:21:03' prior: 50863198!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + 1@0].]
	! !

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:21:07'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:21:07'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:21:26' prior: 50866193!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].]
	! !

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:21:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:22:11'!
test03

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: -1@0 heading: #North)! !

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:22:25'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:22:25'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:23:03' prior: 50866205!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (-1@0)].]
	
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:26:01' prior: 50866227!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].]
	
	! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:26:54'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:26:54'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:26:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:27:17'!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: #West)! !

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:27:18'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:27:18'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:28:52' prior: 50866237!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aString = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [cardinalPoint := #South]]
	
	
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:29:07' prior: 50866279!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aString = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [cardinalPoint := #South]].
	
	
	! !

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:29:12'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:29:12'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:30:12'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:30:13'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:30:57' prior: 50866310!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aString = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [cardinalPoint := #South]].
	
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:31:30' prior: 50866266!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: #North)! !

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:31:31'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:31:31'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:31:37' prior: 50866383!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: #West)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:32:01' prior: 50866396!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: #South)! !

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:32:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:32:06' prior: 50866405!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: #West)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:33:13' prior: 50866351!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aString = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [cardinalPoint := #South]].! !

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:33:17'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:33:31' prior: 50866424!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aString = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].! !

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:33:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:33:38' prior: 50866416!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: #West)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:33:44' prior: 50866492!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: #West)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:33:50'!
test05

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: #West)! !

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:33:52'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:33:52'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:34:10' prior: 50866509!
test05

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: #East)! !

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:34:12'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:34:12'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:35:23' prior: 50866458!
processCommand: aString 

	(aString = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aString = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aString = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aString = 'r') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:35:26'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:35:26'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:35:26'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:35:26'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:35:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:38:08'!
test06

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover processCommand: 'rflb'.
	
	self assert: (marsRover isAt: -1@1 heading: #North)! !

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:38:10'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:38:10'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:41:39'!
processNextCommand: a 

	(a = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(a = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(a = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(a = 'r') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:41:45' prior: 50866599!
processNextCommand: aCommand 

	(aCommand = 'f') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aCommand = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aCommand = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand = 'r') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:43:32' prior: 50866535!
processCommand: aPackedCommand 

	aPackedCommand do: [:command | self processNextCommand: command]! !

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:43:40'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:43:40'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:43:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:43:51'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:43:52'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:43:52'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:43:52'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:43:52'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:44:00'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:44:02'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:44:02'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:47:38' prior: 50866638!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aCommand = 'b') ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aCommand = 'l') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand = 'r') ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:47:45'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:48:18' prior: 50866710!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)].].
	(aCommand = $b) ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aCommand = $l) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:48:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:48:21'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:48:21'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:48:21'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:48:21'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:48:22'!
PASSED!

Object subclass: #CardinalPoints
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #CardinalPoints category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:49:44'!
Object subclass: #CardinalPoints
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

CardinalPoints subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #North category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:50:27'!
CardinalPoints subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

CardinalPoints subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #South category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:50:30'!
CardinalPoints subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

CardinalPoints subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #East category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:50:34'!
CardinalPoints subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

CardinalPoints subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classDefinition: #West category: 'Ejercicio-MarsRover' stamp: 'JR 5/16/2021 20:50:37'!
CardinalPoints subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:53:09' prior: 50866753!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint moveForward: self
		"(cardinalPoint = #North) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position + (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position - (0@1)]."].
	(aCommand = $b) ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aCommand = $l) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!MarsRover methodsFor: 'initialization' stamp: 'JR 5/16/2021 20:53:39' prior: 50863185!
initializeAt: aPoint heading: aCardinalPoint 
	
	position := aPoint.
	cardinalPoint := aCardinalPoint new.! !
!CardinalPoints methodsFor: 'no messages' stamp: 'JR 5/16/2021 20:54:00'!
moveForward: aMarsRover

	self subclassResponsibility ! !
!East methodsFor: 'no messages' stamp: 'JR 5/16/2021 20:54:35' overrides: 50866912!
moveForward: aMarsRover! !
!North methodsFor: 'actions' stamp: 'JR 5/16/2021 20:54:54' overrides: 50866912!
moveForward: aMarsRover! !
!South methodsFor: 'actions' stamp: 'JR 5/16/2021 20:55:01' overrides: 50866912!
moveForward: aMarsRover! !
!West methodsFor: 'actions' stamp: 'JR 5/16/2021 20:55:05' overrides: 50866912!
moveForward: aMarsRover! !
!East methodsFor: 'actions' stamp: 'JR 5/16/2021 20:55:26' prior: 50866917 overrides: 50866912!
moveForward: aMarsRover

	aMarsRover moveForwardWhenHeadingEast! !
!North methodsFor: 'actions' stamp: 'JR 5/16/2021 20:55:45' prior: 50866921 overrides: 50866912!
moveForward: aMarsRover

	aMarsRover moveForwardWhenHeadingNorth! !
!South methodsFor: 'actions' stamp: 'JR 5/16/2021 20:55:54' prior: 50866925 overrides: 50866912!
moveForward: aMarsRover

	aMarsRover moveForwardWhenHeadingSouth! !
!West methodsFor: 'actions' stamp: 'JR 5/16/2021 20:56:04' prior: 50866929 overrides: 50866912!
moveForward: aMarsRover

	aMarsRover moveForwardWhenHeadingWest! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:56:25'!
moveForwardWhenHeadingEast

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:56:28'!
moveForwardWhenHeadingWest

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:56:31'!
moveForwardWhenHeadingSouth

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:56:35'!
moveForwardWhenHeadingNorth

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:56:53' prior: 50866968!
moveForwardWhenHeadingNorth

	position := position + (1@0)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:57:03' prior: 50866964!
moveForwardWhenHeadingSouth

	position := position - (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:57:15' prior: 50866956!
moveForwardWhenHeadingEast

	position := position + (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:57:25' prior: 50866960!
moveForwardWhenHeadingWest

	position := position - (0@1)

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:57:39' prior: 50866865!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint moveForward: self].
	(aCommand = $b) ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aCommand = $l) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:57:44'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 20:57:44'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 20:57:45'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 20:57:45'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 20:57:45'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 20:57:45'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:58:05' prior: 50863205!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North new.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North new)! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:58:07'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:58:07'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:58:40' prior: 50867039!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: (North new).
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: (North new))! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:58:44'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:58:44'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 20:59:29' prior: 50867052!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North)! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:59:33'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:59:33'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:59:44'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 20:59:44'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:00:07'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:00:07'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:00:14' prior: 50863254!
test02

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 heading: North)! !

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:00:15'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:00:15'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:00:26' prior: 50867087!
test02

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 heading: North new)! !

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:00:27'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:00:27'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:01:17' prior: 50867065!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North new)! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:01:19'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:01:19'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:01:29' prior: 50867113!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: (North new))! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:01:31'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:01:31'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:01:41' prior: 50867126!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North)! !
!MarsRover methodsFor: 'initialization' stamp: 'JR 5/16/2021 21:01:50' prior: 50866906!
initializeAt: aPoint heading: aCardinalPoint 
	
	position := aPoint.
	cardinalPoint := aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:01:57' prior: 50866992!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [
		(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].].
	(aCommand = $l) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:02:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:02:05'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:02:05'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:02:10' prior: 50867100!
test02

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 heading: North)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:02:24' prior: 50866214!
test03

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: -1@0 heading: North)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:02:29' prior: 50866501!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: West)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:02:32' prior: 50866522!
test05

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: #East)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:02:33' prior: 50867221!
test05

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: East)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:02:39' prior: 50866586!
test06

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'rflb'.
	
	self assert: (marsRover isAt: -1@1 heading: North)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:03:31' prior: 50867154!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
		"(cardinalPoint = #North) ifTrue: [position := position - (1@0)].
		(cardinalPoint = #South) ifTrue: [position := position + (1@0)].
		(cardinalPoint = #East) ifTrue: [position := position - (0@1)].
		(cardinalPoint = #West) ifTrue: [position := position + (0@1)].]."
	(aCommand = $l) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!CardinalPoints methodsFor: 'actions' stamp: 'JR 5/16/2021 21:03:46'!
moveBackwards: aMarsRover

	self subclassResponsibility ! !
!East methodsFor: 'actions' stamp: 'JR 5/16/2021 21:04:05' overrides: 50867282!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsWhenHeadingEast! !
!North methodsFor: 'actions' stamp: 'JR 5/16/2021 21:04:20' overrides: 50867282!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsWhenHeadingNorth! !
!South methodsFor: 'actions' stamp: 'JR 5/16/2021 21:04:32' overrides: 50867282!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsWhenHeadingSouth! !
!West methodsFor: 'actions' stamp: 'JR 5/16/2021 21:04:42' overrides: 50867282!
moveBackwards: aMarsRover

	aMarsRover moveBackwardsWhenHeadingWest! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:04:58'!
moveBackwardsWhenHeadingEast! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:05:01'!
moveBackwardsWhenHeadingWest! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:05:06'!
moveBackwardsWhenHeadingNorth! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:05:09'!
moveBackwardsWhenHeadingSouth! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:05:25' prior: 50867315!
moveBackwardsWhenHeadingNorth

	position := position - (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:05:35' prior: 50867319!
moveBackwardsWhenHeadingSouth

	position := position + (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:05:54' prior: 50867307!
moveBackwardsWhenHeadingEast

	position := position - (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:06:05' prior: 50867311!
moveBackwardsWhenHeadingWest

	position := position + (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:06:26' prior: 50867248!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]].
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:07:06' prior: 50867343!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ cardinalPoint new turnLeft: self].
		"(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]]."
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:08:33' prior: 50867369!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ cardinalPoint := cardinalPoint new left].
		"(cardinalPoint = #North) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #North].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #South]]."
	(aCommand =  $r) ifTrue: [
		(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]].! !
!CardinalPoints methodsFor: 'actions' stamp: 'JR 5/16/2021 21:08:46'!
left

	self subclassResponsibility ! !
!East methodsFor: 'actions' stamp: 'JR 5/16/2021 21:08:58' overrides: 50867423!
left

	^North! !
!North methodsFor: 'actions' stamp: 'JR 5/16/2021 21:09:10' overrides: 50867423!
left

	^West! !
!South methodsFor: 'actions' stamp: 'JR 5/16/2021 21:09:18' overrides: 50867423!
left

	^East! !
!West methodsFor: 'actions' stamp: 'JR 5/16/2021 21:09:25' overrides: 50867423!
left

	^South! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:09:59' prior: 50867396!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ cardinalPoint := cardinalPoint new left].
		"(cardinalPoint = #North) ifTrue: [^cardinalPoint := #East].
		(cardinalPoint = #South) ifTrue: [^cardinalPoint := #West].
		(cardinalPoint = #East) ifTrue: [^cardinalPoint := #South].
		(cardinalPoint = #West) ifTrue: [^cardinalPoint := #North]]."! !
!CardinalPoints methodsFor: 'actions' stamp: 'JR 5/16/2021 21:10:37'!
right

	self subclassResponsibility ! !
!East methodsFor: 'actions' stamp: 'JR 5/16/2021 21:10:54' overrides: 50867462!
right

	^South! !
!North methodsFor: 'actions' stamp: 'JR 5/16/2021 21:11:05' overrides: 50867462!
right

	^East! !
!South methodsFor: 'actions' stamp: 'JR 5/16/2021 21:11:14' overrides: 50867462!
right

	^West! !
!West methodsFor: 'actions' stamp: 'JR 5/16/2021 21:11:22' overrides: 50867462!
right

	^North! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:11:31' prior: 50867442!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ cardinalPoint := cardinalPoint new left].
		! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:11:42'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:11:42'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 21:11:42'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 21:11:42'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:11:42'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 21:11:42'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:11:50'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:11:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 21:11:52'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 21:11:53'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:11:54'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:11:54'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:12:27' prior: 50867482!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ cardinalPoint := cardinalPoint new right].
		! !

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:12:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:12:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 21:12:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 21:12:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:12:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 21:12:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:14:22'!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'rlfxbb'.
	
	self assert: (marsRover isAt: 1@0 heading: North)! !

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:14:25'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:14:25'!
FAILURE!
!MarsRover methodsFor: 'actions' stamp: 'JR 5/16/2021 21:15:15' prior: 50867523!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ ^cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ ^cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ ^cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ ^cardinalPoint := cardinalPoint new right].
	
	self 
		! !
!MarsRover methodsFor: 'actions' stamp: 'JR 5/16/2021 21:16:08' prior: 50867563!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ ^cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ ^cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ ^cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ ^cardinalPoint := cardinalPoint new right].
	

		! !
!MarsRover methodsFor: 'actions' stamp: 'JR 5/16/2021 21:19:46' prior: 50867576!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ ^cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ ^cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ ^cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ ^cardinalPoint := cardinalPoint new right].

	

		! !
!MarsRover methodsFor: 'actions' stamp: 'JR 5/16/2021 21:20:49' prior: 50867589!
processNextCommand: aCommand 

	(aCommand = $f) ifTrue: [ ^cardinalPoint new moveForward: self].
	(aCommand = $b) ifTrue: [ ^cardinalPoint new moveBackwards: self].
	(aCommand = $l) ifTrue: [ ^cardinalPoint := cardinalPoint new left].
	(aCommand =  $r) ifTrue: [ ^cardinalPoint := cardinalPoint new right].
	
	self error: self class invalidCommandError

	

		! !
!MarsRover class methodsFor: 'error descriptions' stamp: 'JR 5/16/2021 21:22:01'!
invalidCommandError

	^'invalid command'! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:23:50' prior: 50867550!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'rlfxbb'.
	
	self assert: (marsRover isAt: 1@0 heading: North)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:26:42' prior: 50867621!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	self 
		should: [ marsRover processCommand: 'rlfxbb'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: MarsRover invalidCommandError equals: anError messageText.
			self assert: (marsRover isAt: 1@0 heading: North) ]! !

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:26:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:27:09' prior: 50867630!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	self 
		should: [ marsRover processCommand: 'rlfxbb'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: MarsRover invalidCommandError equals: anError messageText.
			self assert: (marsRover isAt: 1@1 heading: North) ]! !

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:27:10'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:27:10'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:27:15' prior: 50867646!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	self 
		should: [ marsRover processCommand: 'rlfxbb'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: MarsRover invalidCommandError equals: anError messageText.
			self assert: (marsRover isAt: 1@0 heading: North) ]! !

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:27:17'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:27:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:27:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 21:27:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 21:27:20'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:27:20'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 21:27:20'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:27:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/16/2021 21:27:29' prior: 50867665!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	self 
		should: [ marsRover processCommand: 'rlffxbb'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: MarsRover invalidCommandError equals: anError messageText.
			self assert: (marsRover isAt: 2@0 heading: North) ]! !

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:27:30'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:28:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:28:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 21:28:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 21:28:40'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:28:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 21:28:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:28:41'!
PASSED!

!classRemoval: #PointsPortableObject stamp: 'JR 5/16/2021 21:31:48'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #NoPointsPortableObject stamp: 'JR 5/16/2021 21:31:49'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #PortableObject stamp: 'JR 5/16/2021 21:31:49'!
StageObject subclass: #PortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #NonPortableObject stamp: 'JR 5/16/2021 21:31:49'!
StageObject subclass: #NonPortableObject
	instanceVariableNames: 'name stageObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #Hole stamp: 'JR 5/16/2021 21:31:50'!
StageObject subclass: #Hole
	instanceVariableNames: 'origin corner room targetPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #StageObject stamp: 'JR 5/16/2021 21:31:50'!
Object subclass: #StageObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #Room stamp: 'JR 5/16/2021 21:31:50'!
Object subclass: #Room
	instanceVariableNames: 'width height contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #PlayableCharacterHeading stamp: 'JR 5/16/2021 21:31:51'!
Object subclass: #PlayableCharacterHeading
	instanceVariableNames: 'cardinalPoint forwardPoint rightHeading leftHeading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #PlayableCharacter stamp: 'JR 5/16/2021 21:31:51'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'heading backpack name room'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #Backpack stamp: 'JR 5/16/2021 21:31:52'!
Object subclass: #Backpack
	instanceVariableNames: 'weightCapacity gamePointsCapacity container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #RoomTest stamp: 'JR 5/16/2021 21:31:52'!
TestCase subclass: #RoomTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #PlayableCharacterTest stamp: 'JR 5/16/2021 21:31:53'!
TestCase subclass: #PlayableCharacterTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #HoleTest stamp: 'JR 5/16/2021 21:31:53'!
TestCase subclass: #HoleTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #BackpackTest stamp: 'JR 5/16/2021 21:31:54'!
TestCase subclass: #BackpackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Recuperatorio-1erParcial'!

!classRemoval: #MarsRover stamp: 'JR 5/16/2021 21:31:59'!
Object subclass: #MarsRover
	instanceVariableNames: 'cardinalPoint position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classRemoval: #West stamp: 'JR 5/16/2021 21:32:00'!
CardinalPoints subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classRemoval: #South stamp: 'JR 5/16/2021 21:32:00'!
CardinalPoints subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classRemoval: #North stamp: 'JR 5/16/2021 21:32:01'!
CardinalPoints subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classRemoval: #East stamp: 'JR 5/16/2021 21:32:01'!
CardinalPoints subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classRemoval: #CardinalPoints stamp: 'JR 5/16/2021 21:32:01'!
Object subclass: #CardinalPoints
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

!classRemoval: #MarsRoverTest stamp: 'JR 5/16/2021 21:32:02'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio-MarsRover'!

----End fileIn of C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\inge1\16-MarsRover\Ejercicio-MarsRover.st----!

!testRun: #MarsRoverTest #test01 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'JR 5/16/2021 21:32:12'!
PASSED!

----QUIT----(16 May 2021 21:32:17) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (17 May 2021 16:39:53) as C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\windows64\CuisUniversity-4532.image!

!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:40:50'!
test01MarsRoverShouldNotMoveIfCommandIsEmpty

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North)! !

!methodRemoval: MarsRoverTest #test01 stamp: 'JR 5/17/2021 16:40:50'!
test01

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:41:21'!
test02ShouldMoveForwardWithCommandF

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 heading: North)! !

!methodRemoval: MarsRoverTest #test02 stamp: 'JR 5/17/2021 16:41:21'!
test02

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 heading: North)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:41:35'!
test01ShouldNotMoveIfCommandIsEmpty

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North)! !

!methodRemoval: MarsRoverTest #test01MarsRoverShouldNotMoveIfCommandIsEmpty stamp: 'JR 5/17/2021 16:41:35'!
test01MarsRoverShouldNotMoveIfCommandIsEmpty

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 heading: North)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:41:55'!
test03ShouldMoveBackwardsWithCommandB

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: -1@0 heading: North)! !

!methodRemoval: MarsRoverTest #test03 stamp: 'JR 5/17/2021 16:41:55'!
test03

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: -1@0 heading: North)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:42:08'!
test04ShouldRotateLeftWithCommandL

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: West)! !

!methodRemoval: MarsRoverTest #test04 stamp: 'JR 5/17/2021 16:42:09'!
test04

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 heading: West)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:42:23'!
test05ShouldRotateRightWithCommandR

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: East)! !

!methodRemoval: MarsRoverTest #test05 stamp: 'JR 5/17/2021 16:42:23'!
test05

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 heading: East)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:42:47'!
test06ShouldProcessMultipleCommands

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'rflb'.
	
	self assert: (marsRover isAt: -1@1 heading: North)! !

!methodRemoval: MarsRoverTest #test06 stamp: 'JR 5/17/2021 16:42:47'!
test06

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	marsRover processCommand: 'rflb'.
	
	self assert: (marsRover isAt: -1@1 heading: North)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'JR 5/17/2021 16:43:05'!
test07ShouldStopProcessingAfterInvalidCommand

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	self 
		should: [ marsRover processCommand: 'rlffxbb'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: MarsRover invalidCommandError equals: anError messageText.
			self assert: (marsRover isAt: 2@0 heading: North) ]! !

!methodRemoval: MarsRoverTest #test07 stamp: 'JR 5/17/2021 16:43:05'!
test07

	|marsRover|
	
	marsRover := MarsRover at: 0@0 heading: North.
	
	self 
		should: [ marsRover processCommand: 'rlffxbb'.]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError |
			self assert: MarsRover invalidCommandError equals: anError messageText.
			self assert: (marsRover isAt: 2@0 heading: North) ]!

----QUIT----(17 May 2021 16:43:16) CuisUniversity-4532.image priorSource: 17170017!