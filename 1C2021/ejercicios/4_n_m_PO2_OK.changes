----STARTUP---- (31 May 2021 21:37:04) as /home/julian/facu/ingenieria1/ambientesCuis/Portfolio/CuisUniversity-4532.image!

!ReceptiveAccountTest methodsFor: 'tests' stamp: 'JA 5/31/2021 21:40:11'!
test13

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: 'Balance = 100' equals: account accountSummaryReport last .
! !

!testRun: #ReceptiveAccountTest #test13 stamp: 'JA 5/31/2021 21:40:12'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JA 5/31/2021 21:40:59' prior: 50865061!
accountSummaryReport	
	|report|
	report := OrderedCollection new.
	transactions do: [:transaction| 
		(transaction isKindOf: Withdraw) ifTrue: [ report add: 
				( 'Extracci�n por ', transaction value asString)].
		(transaction isKindOf: Deposit) ifTrue: [ report add: 
				('Dep�sito por ',transaction value asString)].
		(transaction isKindOf: TransferDeposit) ifTrue: [ report add: 
				('Entrada por transferencia de ',transaction value asString)].
		(transaction isKindOf: TransferWithdraw) ifTrue: [ report add: 
				('Salida por transferencia de ',transaction value asString)].
	].
	report add:('Balance = ', self balance asString).
	^ report.! !

!testRun: #ReceptiveAccountTest #test13 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'JA 5/31/2021 21:41:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 21:44:29'!
test20

	| account |
	
	account := Portfolio new.
	
	self assert: account accountSummaryReport includes: 'Balance = 0'
! !
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 21:45:03' prior: 50865217!
test20

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: portfolio accountSummaryReport includes: 'Balance = 0'
! !

!testRun: #PortfolioTest #test20 stamp: 'JA 5/31/2021 21:45:05'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JA 5/31/2021 21:45:28'!
accountSummaryReport
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JA 5/31/2021 21:46:03' prior: 50865233!
accountSummaryReport
	^ OrderedCollection with:'Balance = 0'.! !

!testRun: #PortfolioTest #test20 stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'JA 5/31/2021 21:46:04'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'JA 5/31/2021 21:46:05'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'JA 5/31/2021 21:46:05'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'JA 5/31/2021 21:46:05'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'JA 5/31/2021 21:46:05'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 21:51:44'!
test21

	|portfolio|
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	
	
	self assert: portfolio accountSummaryReport includes: 'Dep�sito por 100'.
	self assert: 'Balance = 100' equals: portfolio accountSummaryReport last.
	self assert: 2 equals: portfolio accountSummaryReport size.! !

!testRun: #PortfolioTest #test21 stamp: 'JA 5/31/2021 21:51:45'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JA 5/31/2021 22:00:20' prior: 50865238!
accountSummaryReport	
	| report |
	report := OrderedCollection new.
	financialEntities do:[ :aFinancialEntity |
			report addAllLast: aFinancialEntity accountSummaryReport .
		].
	report add:'Balance = ', self balance asString.
	^ report.! !

!testRun: #PortfolioTest #test21 stamp: 'JA 5/31/2021 22:00:36'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 22:36:58' prior: 50865320!
test21

	|portfolio|
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	
	
	self assert: portfolio accountSummaryReport includes: 'Dep�sito por 100'.
	self assert: 'Balance = 100' equals: portfolio accountSummaryReport last.
	
	self assert: 3 equals: portfolio accountSummaryReport size.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 22:39:48' prior: 50865348!
test21

	|portfolio|
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	self assert: portfolio accountSummaryReport includes: 'Dep�sito por 100'.
	self assert: 'Balance = 100' equals: portfolio accountSummaryReport last.
	
	self assert: 3 equals: portfolio accountSummaryReport size.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 22:49:30' prior: 50865360!
test21

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report :=portfolio accountSummaryReport.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.	
	
	self assert: 3 equals: portfolio accountSummaryReport size.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 22:51:00' prior: 50865375!
test21

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report :=portfolio accountSummaryReport.
	
	self assert: 5 equals: report size.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	
	
	! !

!testRun: #PortfolioTest #test21 stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'JA 5/31/2021 22:51:02'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'JA 5/31/2021 22:51:02'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JA 5/31/2021 22:53:44' prior: 50865398!
test21

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report :=portfolio accountSummaryReport.
	
	self assert: 5 equals: report size.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.! !

!testRun: #PortfolioTest #test21 stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'JA 5/31/2021 22:53:45'!
PASSED!

----QUIT----(31 May 2021 22:54:03) CuisUniversity-4532.image priorSource: 17071394!

----STARTUP---- (31 May 2021 22:54:27) as /home/julian/facu/ingenieria1/ambientesCuis/Portfolio/CuisUniversity-4532.image!


----QUIT----(31 May 2021 22:54:38) CuisUniversity-4532.image priorSource: 17086407!
!TransferTest methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:00:55'!
test06
	| account |
	account := ReceptiveAccount new.
		
	self should:[Transfer from:account to:account amount: 100.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferToTheSameAccount) ].
	! !

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 01:01:00'!
FAILURE!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:02:07' prior: 50991559!
from: aReceptiveAccountOrigin to: aReceptiveAccountDestiny amount: anAmount 
	
	
	anAmount <= 0 ifTrue: [self error: self canNotTransferWithInvalidAmount].
	
	aReceptiveAccountOrigin = aReceptiveAccountDestiny ifTrue: [self error: self canNotTransferToTheSameAccount].
	
	
	^ self new initializeWith: aReceptiveAccountOrigin and: aReceptiveAccountDestiny amount: anAmount.! !

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 01:02:26'!
ERROR!
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:02:56'!
canNotTransferToTheSameAccount
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:03:34' prior: 50991604!
canNotTransferToTheSameAccount
	
	^'No podes transferir de una cuenta a la misma cuenta'.! !

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 01:03:36'!
FAILURE!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 01:03:40'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:06:34'!
test14

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: 0 equals: account transferNetReport.
! !

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 01:37:23'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:37:35'!
transferNetReport
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:37:46' prior: 50991642!
transferNetReport
	^0.! !

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 01:37:49'!
PASSED!

-100!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:41:29'!
test15

	| accountDestino accountOrigen |
	
	accountDestino := ReceptiveAccount new.
	accountOrigen := ReceptiveAccount new.
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: accountDestino transferNetReport.
	self assert: -100 equals: accountOrigen transferNetReport.
! !

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 01:41:33'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:42:07' prior: 50991697!
test15

	| accountDestino accountOrigen |
	
	accountDestino := ReceptiveAccount new.
	accountOrigen := ReceptiveAccount new.
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (accountDestino transferNetReport).
	self assert: -100 equals: accountOrigen transferNetReport.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:42:25' prior: 50991713!
test15

	| accountDestino accountOrigen |
	
	accountDestino := ReceptiveAccount new.
	accountOrigen := ReceptiveAccount new.
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: accountDestino transferNetReport.
	self assert: -100 equals: accountOrigen transferNetReport.
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:45:21' prior: 50991647!
transferNetReport
	|net|
	net := 0.
	transactions do: [:transaction |
		(transaction isKindOf: TransferDeposit) ifTrue: [net := net + transaction value] ifFalse: [net := net - transaction value]
		].
	
	^net.! !

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 01:45:26'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:46:21'!
test16

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100  on: account. 
	
	self assert: 0 equals: account transferNetReport.
! !

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 01:46:23'!
FAILURE!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:47:03' prior: 50991739!
transferNetReport
	|net|
	net := 0.
	transactions do: [:transaction |
		(transaction isKindOf: TransferDeposit) ifTrue: [net := net + transaction value].
		(transaction isKindOf: TransferWithdraw) ifTrue: [net := net - transaction value]
		].
	
	^net.! !

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 01:47:05'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:48:19'!
test22

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio transferNetReport.
! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:48:20'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:48:31'!
transferNetReport
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:49:32' prior: 50991879!
transferNetReport
	^0.! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:49:35'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 01:49:37'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:49:37'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 01:51:52' prior: 50991870!
test22

	| portfolio accountOrigen accountDestino|
	
	portfolio := Portfolio new.
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	portfolio addFinancialEntity: accountDestino.
	
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: portfolio transferNetReport.
! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:51:53'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 01:53:21' prior: 50991884!
transferNetReport
	^financialEntities sum: [:aFinancialEntity | aFinancialEntity transferNetReport ] ifEmpty:[0].! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 01:53:36'!
PASSED!

Object subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 01:56:38'!
Object subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountSummaryReport class methodsFor: 'no messages' stamp: 'ET 6/2/2021 02:07:00'!
for: aFinancialEntity

	^aFinancialEntity accountSummaryReport.

	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:07:39' prior: 50990880!
test08

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: (AccountSummaryReport for: account)  includes: 'Balance = 0'
! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:07:40'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:07:52' prior: 50990887!
test09

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Dep�sito por 100'
! !

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:07:53'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:08:00' prior: 50990895!
test10

	| account |
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Extracci�n por 50'
! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:08:01'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:08:13' prior: 50990903!
test11

	| account |
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account. 
	Deposit register: 100 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Extracci�n por 50'.
	self assert: (AccountSummaryReport for: account) includes: 'Dep�sito por 100'.
	self assert: (AccountSummaryReport for: account) includes: 'Balance = 50'.! !

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:08:14'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:08:53' prior: 50990917!
test12

	| accountDestino accountOrigen |
	
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (AccountSummaryReport for: accountOrigen) includes: 'Salida por transferencia de 100'.
	self assert: (AccountSummaryReport for: accountDestino) includes: 'Entrada por transferencia de 100'.
	self assert: (AccountSummaryReport for: accountOrigen) includes: 'Balance = -100'.
	self assert: (AccountSummaryReport for: accountDestino) includes: 'Balance = 100'.	! !

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:08:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:08:55'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:09:03' prior: 50990937!
test13

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: 'Balance = 100' equals: (AccountSummaryReport for: account) last .
! !

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:09:04'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:09:30' prior: 50990767!
test20

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (AccountSummaryReport for: portfolio) includes: 'Balance = 0'
! !

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:09:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:09:31'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:09:31'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:09:41' prior: 50990774!
test21

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report :=(AccountSummaryReport for: portfolio).
	
	self assert: 5 equals: report size.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.! !
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:09:45' prior: 50992639!
test21

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report := AccountSummaryReport for: portfolio.
	
	self assert: 5 equals: report size.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.! !

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:09:47'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:09:47'!
PASSED!
!Withdraw methodsFor: 'value' stamp: 'ET 6/2/2021 02:11:57'!
summaryReport

	^'Extracci�n por ', value asString.! !
!Deposit methodsFor: 'value' stamp: 'ET 6/2/2021 02:12:30'!
summaryReport

	^'Dep�sito por ', value asString! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:13:18'!
summaryReport

	^'Entrada por transferencia de ', self value asString! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:13:26'!
summaryReport

	^'Salida por transferencia de ', self value asString! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:14:14' prior: 50991471!
accountSummaryReport	
	|report|
	report := OrderedCollection new.
	transactions do: [:transaction| report add: transaction summaryReport	].
	report add:('Balance = ', self balance asString).
	^ report.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:14:16'!
FAILURE!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:14:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:14:16'!
FAILURE!

transactions!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:15:51' prior: 50992777!
summaryReport

	^'Entrada por transferencia de ', self value asString! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:15:57' prior: 50992772!
summaryReport

	^'Salida por transferencia de ', self value asString! !

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:16:02'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:16:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:16:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:16:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:16:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:16:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:16:13'!
PASSED!

Object subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransferNetReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:16:54'!
Object subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TransferNetReport class methodsFor: 'no messages' stamp: 'ET 6/2/2021 02:17:23'!
for: aFinancialEntity

	^aFinancialEntity transferNetReport.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:18:01' prior: 50991633!
test14

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: 0 equals: (TransferNetReport for: account).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:18:16' prior: 50991726!
test15

	| accountDestino accountOrigen |
	
	accountDestino := ReceptiveAccount new.
	accountOrigen := ReceptiveAccount new.
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (TransferNetReport for: accountDestino).
	self assert: -100 equals: (TransferNetReport for: accountOrigen).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:18:21' prior: 50991797!
test16

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100  on: account. 
	
	self assert: 0 equals: (TransferNetReport for: account).
! !
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 02:18:36' prior: 50992051!
test22

	| portfolio accountOrigen accountDestino|
	
	portfolio := Portfolio new.
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	portfolio addFinancialEntity: accountDestino.
	
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (TransferNetReport for: portfolio).
! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:18:38'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:18:39'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:18:39'!
PASSED!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:19:46'!
transferNetReport

	^self value.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:20:01' prior: 50992943!
summaryReport

	^self value negated.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:15:57' prior: 50993299!
summaryReport

	^'Salida por transferencia de ', self value asString! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:20:26'!
transferNetReport

	^self value negated.! !
!Deposit methodsFor: 'value' stamp: 'ET 6/2/2021 02:20:38'!
transferNetReport

	^0! !
!Withdraw methodsFor: 'value' stamp: 'ET 6/2/2021 02:20:50'!
transferNetReport

	^0! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:21:25' prior: 50991808!
transferNetReport
	|net|
	net := 0.
	transactions do: [:transaction |
		net := net + transaction transferNetReport
		].
	
	^net.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:21:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:21:40'!
PASSED!
!AccountSummaryReport methodsFor: 'no messages' stamp: 'ET 6/2/2021 02:23:17'!
reportAccount: aReceptiveAccount

	|report|
	report := OrderedCollection new.
	aReceptiveAccount transactions do: [:transaction| report add: transaction summaryReport	].
	report add:('Balance = ', aReceptiveAccount balance asString).
	^ report.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:23:48' prior: 50992783!
accountSummaryReport	
	
	^AccountSummaryReport reportAccount: self.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:23:56'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:23:57'!
ERROR!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:23:57'!
PASSED!

!methodRemoval: AccountSummaryReport #reportAccount: stamp: 'ET 6/2/2021 02:24:29'!
reportAccount: aReceptiveAccount

	|report|
	report := OrderedCollection new.
	aReceptiveAccount transactions do: [:transaction| report add: transaction summaryReport	].
	report add:('Balance = ', aReceptiveAccount balance asString).
	^ report.!
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:24:39'!
reportAccount: aReceptiveAccount

	|report|
	report := OrderedCollection new.
	aReceptiveAccount transactions do: [:transaction| report add: transaction summaryReport	].
	report add:('Balance = ', aReceptiveAccount balance asString).
	^ report.
	! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:24:41'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:24:44'!
PASSED!

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Report category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:27:51'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Report subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransferNetReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:28:02'!
Report subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Report subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:28:10'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Report class methodsFor: 'no messages' stamp: 'ET 6/2/2021 02:29:03'!
for: aFinancialEntity

	^aFinancialEntity report: self.! !
!Report class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:29:33'!
reportAccount: aReceptiveAccount

	self subclassResponsibility! !
!Report class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:29:46'!
reportPortfolio: aPortfolio

	self subclassResponsibility! !
!Report class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:30:29'!
reportWithdraw: aWithdrawTransaction

	self subclassResponsibility! !
!Report class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:30:51'!
reportDeposit: aDepositTransaction

	self subclassResponsibility! !
!Report class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:31:03'!
reportTransferDeposit: aTransferDepositTransaction

	self subclassResponsibility! !
!Report class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:31:13'!
reportTransferWithdraw: aTransferWithdrawTransaction

	self subclassResponsibility! !

NewClassWithInheritedAbstractMessages superclass: Report withClassName: #AccountSummaryReport!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:33:03'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

NewClassWithInheritedAbstractMessages superclass: Report withClassName: #AccountSummaryReport!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:33:20'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

NewClassWithInheritedAbstractMessages superclass: Report withClassName: #AccountSummaryReport!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:33:22'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 02:33:42'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:34:55' overrides: 50993980!
reportWithdraw: aWithdrawTransaction

	^aWithdrawTransaction summaryReport.
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:35:12' overrides: 50993985!
reportDeposit: aDepositTransaction

	^aDepositTransaction summaryReport.
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:35:37' overrides: 50993990!
reportTransferDeposit: aTransferDepositTransaction

	^aTransferDepositTransaction summaryReport.
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:35:50' overrides: 50993996!
reportTransferWithdraw: aTransferWithdrawTransaction

	^aTransferWithdrawTransaction summaryReport.
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:38:19' overrides: 50993975!
reportPortfolio: aPortfolio

	| report |
	report := aPortfolio collectionReportsOfItsFinancialEntities: self.
	report add:'Balance = ', aPortfolio balance asString.
	^ report.! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:38:54' prior: 50993636 overrides: 50993970!
reportAccount: aReceptiveAccount

	|report|
	report := aReceptiveAccount collectionReportsOfItsTransactions: self.
	report add:('Balance = ', aReceptiveAccount balance asString).
	^ report.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:40:09'!
collectionReportsOfItsFinancialEntities: aReport
	| reports |
	reports := OrderedCollection new.
	financialEntities do:[ :aFinancialEntity |
			reports addAllLast: (aFinancialEntity report: aReport).
		].
	^ reports.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:40:34'!
report: aReport

	^aReport reportPortfolio: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:41:10'!
report: aReport
	
	^aReport reportAccount: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:43:29'!
collectionReportsOfItsTransactions: aReport
	
	|reports|
	
	reports := OrderedCollection new.
	
	transactions do: [:aTransaction | reports add: (aTransaction report: aReport)].
	
	^reports.! !
!Deposit methodsFor: 'value' stamp: 'ET 6/2/2021 02:44:07'!
report: aReport

	^aReport reportDeposit: self.

	! !
!TransferDeposit methodsFor: 'initialization' stamp: 'ET 6/2/2021 02:44:18'!
report: aReport

	^aReport reportTransferDeposit: self.! !
!TransferWithdraw methodsFor: 'initialization' stamp: 'ET 6/2/2021 02:44:30'!
report: aReport

	^aReport reportTransferWithdraw: self.! !
!Withdraw methodsFor: 'initialization' stamp: 'ET 6/2/2021 02:44:39'!
report: aReport

	^aReport reportWithdraw: self.! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:45:09' prior: 50992168 overrides: 50993965!
for: aFinancialEntity

	^aFinancialEntity report: self.

	! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:46:06'!
PASSED!
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:46:38' prior: 50994056 overrides: 50993990!
reportTransferDeposit: aTransferDepositTransaction

	^'Entrada por transferencia de ', self value asString
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:46:52' prior: 50994063 overrides: 50993996!
reportTransferWithdraw: aTransferWithdrawTransaction

	^'Salida por transferencia de ', self value asString
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:47:22' prior: 50994050 overrides: 50993985!
reportDeposit: aDepositTransaction

	^'Dep�sito por ', aDepositTransaction value asString
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:47:30' prior: 50994286 overrides: 50993990!
reportTransferDeposit: aTransferDepositTransaction

	^'Entrada por transferencia de ', aTransferDepositTransaction value asString
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:47:35' prior: 50994294 overrides: 50993996!
reportTransferWithdraw: aTransferWithdrawTransaction

	^'Salida por transferencia de ', aTransferWithdrawTransaction value asString
	! !
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:47:49' prior: 50994043 overrides: 50993980!
reportWithdraw: aWithdrawTransaction

	^'Extracci�n por ', aWithdrawTransaction value asString.
	! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:47:51'!
PASSED!

!methodRemoval: Deposit #summaryReport stamp: 'ET 6/2/2021 02:48:01'!
summaryReport

	^'Dep�sito por ', value asString!

!methodRemoval: TransferDeposit #summaryReport stamp: 'ET 6/2/2021 02:48:05'!
summaryReport

	^'Entrada por transferencia de ', self value asString!

!methodRemoval: TransferWithdraw #summaryReport stamp: 'ET 6/2/2021 02:48:08'!
summaryReport

	^'Salida por transferencia de ', self value asString!

!methodRemoval: Withdraw #summaryReport stamp: 'ET 6/2/2021 02:48:13'!
summaryReport

	^'Extracci�n por ', value asString.!

!methodRemoval: AccountSummaryReport class #for: stamp: 'ET 6/2/2021 02:49:56'!
for: aFinancialEntity

	^aFinancialEntity report: self.

	!

!methodRemoval: TransferNetReport class #for: stamp: 'ET 6/2/2021 02:50:04'!
for: aFinancialEntity

	^aFinancialEntity transferNetReport.!
!TransferNetReport class methodsFor: 'no messages' stamp: 'ET 6/2/2021 02:50:44' overrides: 50993970!
reportAccount: aReceptiveAccount! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:50:58' overrides: 50993980!
reportWithdraw: aWithdrawTransaction! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:05' overrides: 50993985!
reportDeposit: aDepositTransaction! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:11' overrides: 50993990!
reportTransferDeposit: aTransferDepositTransaction! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:16' overrides: 50993996!
reportTransferWithdraw: aTransferDepositTransaction! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:21' prior: 50994522 overrides: 50993996!
reportTransferWithdraw: aTransferWithdrawTransaction! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:35' overrides: 50993975!
reportPortfolio: aPortfolio! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:37' prior: 50994534 overrides: 50993975!
reportPortfolio: aPortfolio! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:51:53' prior: 50994501 overrides: 50993970!
reportAccount: aReceptiveAccount! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:52:00' prior: 50994506 overrides: 50993980!
reportWithdraw: aWithdrawTransaction

	^0.! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:52:06' prior: 50994539 overrides: 50993975!
reportPortfolio: aPortfolio

	^0.! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:52:16' prior: 50994516 overrides: 50993990!
reportTransferDeposit: aTransferDepositTransaction

	^aTransferDepositTransaction value.! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:52:30' prior: 50994528 overrides: 50993996!
reportTransferWithdraw: aTransferWithdrawTransaction

	^aTransferWithdrawTransaction value negated.! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:52:43' prior: 50994511 overrides: 50993985!
reportDeposit: aDepositTransaction

	^0.! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:54:27' prior: 50994544 overrides: 50993970!
reportAccount: aReceptiveAccount

	|report|
	report := aReceptiveAccount collectionReportsOfItsTransactions: self.
	^report sum: [:aTransactionReport | aTransactionReport ] ifEmpty: [0].! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 02:55:29' prior: 50994556 overrides: 50993975!
reportPortfolio: aPortfolio

	| report |
	report := aPortfolio collectionReportsOfItsFinancialEntities: self.
	^report sum: [:aFinancialEntityReport | aFinancialEntityReport] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:55:31'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 02:55:31'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 02:55:31'!
ERROR!

aFinancialEntity report: aReport!
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 03:05:36' prior: 50994070 overrides: 50993975!
reportPortfolio: aPortfolio

	| finalReport reports |
	finalReport := OrderedCollection new.
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	reports do: [:aFinancialEntityReport | finalReport addAllLast: aFinancialEntityReport].
	
	finalReport add:'Balance = ', aPortfolio balance asString.
	^ reports.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 03:05:51' prior: 50994089!
collectionReportsOfItsFinancialEntities: aReport
	| reports |
	reports := OrderedCollection new.
	financialEntities do:[ :aFinancialEntity |
			reports add: (aFinancialEntity report: aReport).
		].
	^ reports.! !
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 03:07:21' prior: 50994593 overrides: 50993975!
reportPortfolio: aPortfolio

	| reports |
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	^reports sum: [:aFinancialEntityReport | aFinancialEntityReport] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 03:07:23'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 03:07:23'!
FAILURE!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 03:07:23'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 03:07:34'!
FAILURE!
!AccountSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 03:07:58' prior: 50994748 overrides: 50993975!
reportPortfolio: aPortfolio

	| finalReport reports |
	finalReport := OrderedCollection new.
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	reports do: [:aFinancialEntityReport | finalReport addAllLast: aFinancialEntityReport].
	
	finalReport add:'Balance = ', aPortfolio balance asString.
	^ finalReport.! !

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 03:08:01'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 03:08:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 03:08:05'!
PASSED!

----SNAPSHOT----(2 June 2021 22:52:32) CuisUniversity-4532.image priorSource: 21229855!
!Behavior method!
initialize
	(financialEntities _ [
	(OrderedCollection
		cover: (35 to: 51)
		declaredAt: (35 to: 51)) new ] valueCoveringAll:
		{53 to: 55})
		cover: (14 to: 30)
		declaredAt: (14 to: 30).
	(portfolioParents _ [
	(OrderedCollection
		cover: (79 to: 95)
		declaredAt: (35 to: 51)) new ] valueCoveringAll:
		{97 to: 99})
		cover: (59 to: 74)
		declaredAt: (59 to: 74).! !
!Behavior method!
balance
	^ [
	(financialEntities
		cover: (14 to: 30)
		declaredAt: (14 to: 30))
		sum: [ :aFinancialEntity |
			[
			(aFinancialEntity
				cover: (58 to: 73)
				declaredAt: (39 to: 54)) balance ] valueCoveringAll:
				{75 to: 81} ]
		ifEmpty: [
			0 coverAll:
				{94 to: 94} ]] valueCoveringAll:
		{32 to: 35. 84 to: 91}.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 22:52:37'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addFinancialEntity: aFinancialEntity
	[
	(self coverAll:
		{40 to: 43}) assertFinancialEntityHasNotBeenAdded:
		(aFinancialEntity
			cover: (83 to: 98)
			declaredAt: (21 to: 36)) ] valueCoveringAll:
		{45 to: 81}.
	[
	(aFinancialEntity
		cover: (104 to: 119)
		declaredAt: (21 to: 36)) isAddedInto:
		(self coverAll:
			{134 to: 137}) ] valueCoveringAll:
		{121 to: 132}.! !
!Behavior method!
assertFinancialEntityHasNotBeenAdded: aFinancialEntity
	[
	(portfolioParents
		cover: (58 to: 73)
		declaredAt: (58 to: 73))
		ifEmpty: [
			[
			(aFinancialEntity
				cover: (85 to: 100)
				declaredAt: (39 to: 54)) ensureItDoesntHaveAnythingOn:
				(self coverAll:
					{132 to: 135}) ] valueCoveringAll:
				{102 to: 130} ]
		ifNotEmpty: [
			[
			(portfolioParents
				cover: (152 to: 167)
				declaredAt: (58 to: 73)) do: [ :aPortfolio |
				[
				(aPortfolio
					cover: (188 to: 197)
					declaredAt: (175 to: 184)) assertFinancialEntityHasNotBeenAdded:
					(aFinancialEntity
						cover: (237 to: 252)
						declaredAt: (39 to: 54)) ] valueCoveringAll:
					{199 to: 235} ]] valueCoveringAll:
				{169 to: 171} ]] valueCoveringAll:
		{75 to: 82. 139 to: 149}.! !
!Behavior method!
ensureItDoesntHaveAnythingOn: aPortfolio
	[
	([
	(aPortfolio
		cover: (46 to: 55)
		declaredAt: (31 to: 40)) includes:
		(self coverAll:
			{67 to: 70}) ] valueCoveringAll:
		{57 to: 65}) ifTrue: [
		[
		(self coverAll:
			{82 to: 85}) error:
			([
			([
			(self coverAll:
				{94 to: 97}) class ] valueCoveringAll:
				{99 to: 103}) canNotAddAlreadyAddedFinancialEntity ] valueCoveringAll:
				{105 to: 140}) ] valueCoveringAll:
			{87 to: 92} ]] valueCoveringAll:
		{73 to: 79}.! !
!Behavior method!
includes: aFinancialEntity
	^ [
	([
	(aFinancialEntity
		cover: (33 to: 48)
		declaredAt: (11 to: 26)) =
		(self coverAll:
			{53 to: 56}) ] valueCoveringAll:
		{51 to: 51}) or: [
		[
		(financialEntities
			cover: (64 to: 80)
			declaredAt: (64 to: 80)) anySatisfy: [ :financialEntity |
			[
			(financialEntity
				cover: (114 to: 128)
				declaredAt: (96 to: 110)) includes:
				(aFinancialEntity
					cover: (140 to: 155)
					declaredAt: (11 to: 26)) ] valueCoveringAll:
				{130 to: 138} ]] valueCoveringAll:
			{82 to: 92} ]] valueCoveringAll:
		{59 to: 61}.! !
!Behavior method!
isAddedInto: aPortfolio
	[
	(aPortfolio
		cover: (27 to: 36)
		declaredAt: (14 to: 23)) addAssertedFinancialEntity:
		(self coverAll:
			{66 to: 69}) ] valueCoveringAll:
		{38 to: 64}.! !
!Behavior method!
addAssertedFinancialEntity: aFinancialEntity
	[
	(financialEntities
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) add:
		(aFinancialEntity
			cover: (71 to: 86)
			declaredAt: (29 to: 44)) ] valueCoveringAll:
		{66 to: 69}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :balance :aTransaction |
			[
			(aTransaction
				cover: (68 to: 79)
				declaredAt: (52 to: 63)) modifiesBalance:
				(balance
					cover: (98 to: 104)
					declaredAt: (43 to: 49)) ] valueCoveringAll:
				{81 to: 96} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) +
		(value
			cover: (39 to: 43)
			declaredAt: (39 to: 43)) ] valueCoveringAll:
		{37 to: 37}.! !

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 22:52:37'!
PASSED!
!Behavior method!
includes: aFinancialEntity
	^ [
	(self coverAll:
		{31 to: 34}) =
		(aFinancialEntity
			cover: (38 to: 53)
			declaredAt: (11 to: 26)) ] valueCoveringAll:
		{36 to: 36}.! !

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 22:52:37'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(financialEntities
		cover: (35 to: 51)
		declaredAt: (35 to: 51)) anySatisfy: [ :aFinancialEntity |
		[
		(aFinancialEntity
			cover: (86 to: 101)
			declaredAt: (67 to: 82)) hasRegistered:
			(aTransaction
				cover: (118 to: 129)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{103 to: 116} ]] valueCoveringAll:
		{53 to: 63}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 22:52:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:52:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
transactions
	| transactions |
	(transactions _ [
	(OrderedCollection
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (32 to: 43)
		declaredAt: (17 to: 28).
	[
	(self coverAll:
		{72 to: 75}) putAllTransactionsInto:
		(transactions
			cover: (101 to: 112)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{77 to: 99}.
	^ transactions
		cover: (119 to: 130)
		declaredAt: (17 to: 28).! !
!Behavior method!
putAllTransactionsInto: aTransactionsCollection
	[
	(financialEntities
		cover: (52 to: 68)
		declaredAt: (52 to: 68)) do: [ :aFinancialEntity |
		[
		(aFinancialEntity
			cover: (95 to: 110)
			declaredAt: (76 to: 91)) putAllTransactionsInto:
			(aTransactionsCollection
				cover: (136 to: 158)
				declaredAt: (25 to: 47)) ] valueCoveringAll:
			{112 to: 134} ]] valueCoveringAll:
		{70 to: 72}.! !
!Behavior method!
putAllTransactionsInto: aTransactionsCollection
	[
	(aTransactionsCollection
		cover: (52 to: 74)
		declaredAt: (25 to: 47)) addAllFirst:
		([
		(self coverAll:
			{90 to: 93}) transactions ] valueCoveringAll:
			{95 to: 106}) ] valueCoveringAll:
		{76 to: 87}.! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
ensureItDoesntHaveAnythingOn: aPortfolio
	[
	([
	(aPortfolio
		cover: (46 to: 55)
		declaredAt: (31 to: 40)) includes:
		(self coverAll:
			{67 to: 70}) ] valueCoveringAll:
		{57 to: 65})
		ifTrue: [
			[
			(self coverAll:
				{82 to: 85}) error:
				([
				([
				(self coverAll:
					{94 to: 97}) class ] valueCoveringAll:
					{99 to: 103}) canNotAddAlreadyAddedFinancialEntity ] valueCoveringAll:
					{105 to: 140}) ] valueCoveringAll:
				{87 to: 92} ]
		ifFalse: [
			[
			(financialEntities
				cover: (157 to: 173)
				declaredAt: (157 to: 173)) do: [ :aFinancialEntity |
				[
				(aFinancialEntity
					cover: (200 to: 215)
					declaredAt: (181 to: 196)) ensureItDoesntHaveAnythingOn:
					(aPortfolio
						cover: (247 to: 256)
						declaredAt: (31 to: 40)) ] valueCoveringAll:
					{217 to: 245} ]] valueCoveringAll:
				{175 to: 177} ]] valueCoveringAll:
		{73 to: 79. 144 to: 151}.! !
!Behavior method!
isAddedInto: aPortfolio
	[
	(portfolioParents
		cover: (27 to: 42)
		declaredAt: (27 to: 42)) add:
		(aPortfolio
			cover: (49 to: 58)
			declaredAt: (14 to: 23)) ] valueCoveringAll:
		{44 to: 47}.
	[
	(aPortfolio
		cover: (62 to: 71)
		declaredAt: (14 to: 23)) addAssertedFinancialEntity:
		(self coverAll:
			{101 to: 104}) ] valueCoveringAll:
		{73 to: 99}.! !

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
canNotAddAlreadyAddedFinancialEntity
	^ 'This financial entity has been added in this structure before!!!!' coverAll:
		{42 to: 106}.! !

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
for: aFinancialEntity
	^ [
	(aFinancialEntity
		cover: (26 to: 41)
		declaredAt: (6 to: 21)) report:
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{43 to: 49}.! !
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportPortfolio:
		(self coverAll:
			{45 to: 48}) ] valueCoveringAll:
		{28 to: 43}.! !
!Behavior method!
reportPortfolio: aPortfolio
	| finalReport reports |
	(finalReport _ [
	(OrderedCollection
		cover: (71 to: 87)
		declaredAt: (71 to: 87)) new ] valueCoveringAll:
		{89 to: 91})
		cover: (56 to: 66)
		declaredAt: (33 to: 43).
	(reports _ [
	(aPortfolio
		cover: (106 to: 115)
		declaredAt: (18 to: 27)) collectionReportsOfItsFinancialEntities:
		(self coverAll:
			{158 to: 161}) ] valueCoveringAll:
		{117 to: 156})
		cover: (95 to: 101)
		declaredAt: (45 to: 51).
	[
	(reports
		cover: (165 to: 171)
		declaredAt: (45 to: 51)) do: [ :aFinancialEntityReport |
		[
		(finalReport
			cover: (204 to: 214)
			declaredAt: (33 to: 43)) addAllLast:
			(aFinancialEntityReport
				cover: (228 to: 249)
				declaredAt: (179 to: 200)) ] valueCoveringAll:
			{216 to: 226} ]] valueCoveringAll:
		{173 to: 175}.
	[
	(finalReport
		cover: (256 to: 266)
		declaredAt: (33 to: 43)) add:
		([
		('Balance = ' coverAll:
			{272 to: 283}) ,
			([
			([
			(aPortfolio
				cover: (286 to: 295)
				declaredAt: (18 to: 27)) balance ] valueCoveringAll:
				{297 to: 303}) asString ] valueCoveringAll:
				{305 to: 312}) ] valueCoveringAll:
			{284 to: 284}) ] valueCoveringAll:
		{268 to: 271}.
	^ finalReport
		cover: (318 to: 328)
		declaredAt: (33 to: 43).! !
!Behavior method!
collectionReportsOfItsFinancialEntities: aReport
	| reports |
	(reports _ [
	(OrderedCollection
		cover: (75 to: 91)
		declaredAt: (75 to: 91)) new ] valueCoveringAll:
		{93 to: 95})
		cover: (64 to: 70)
		declaredAt: (53 to: 59).
	[
	(financialEntities
		cover: (99 to: 115)
		declaredAt: (99 to: 115)) do: [ :aFinancialEntity |
		[
		(reports
			cover: (145 to: 151)
			declaredAt: (53 to: 59)) add:
			([
			(aFinancialEntity
				cover: (159 to: 174)
				declaredAt: (123 to: 138)) report:
				(aReport
					cover: (184 to: 190)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{176 to: 182}) ] valueCoveringAll:
			{153 to: 156} ]] valueCoveringAll:
		{117 to: 119}.
	^ reports
		cover: (202 to: 208)
		declaredAt: (53 to: 59).! !

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (21 to: 27)
		declaredAt: (9 to: 15)) reportAccount:
		(self coverAll:
			{44 to: 47}) ] valueCoveringAll:
		{29 to: 42}.! !
!Behavior method!
reportAccount: aReceptiveAccount
	| report |
	(report _ [
	(aReceptiveAccount
		cover: (56 to: 72)
		declaredAt: (16 to: 32)) collectionReportsOfItsTransactions:
		(self coverAll:
			{110 to: 113}) ] valueCoveringAll:
		{74 to: 108})
		cover: (46 to: 51)
		declaredAt: (37 to: 42).
	[
	(report
		cover: (117 to: 122)
		declaredAt: (37 to: 42)) add:
		([
		('Balance = ' coverAll:
			{129 to: 140}) ,
			([
			([
			(aReceptiveAccount
				cover: (143 to: 159)
				declaredAt: (16 to: 32)) balance ] valueCoveringAll:
				{161 to: 167}) asString ] valueCoveringAll:
				{169 to: 176}) ] valueCoveringAll:
			{141 to: 141}) ] valueCoveringAll:
		{124 to: 127}.
	^ report
		cover: (183 to: 188)
		declaredAt: (37 to: 42).! !
!Behavior method!
collectionReportsOfItsTransactions: aReport
	| reports |
	(reports _ [
	(OrderedCollection
		cover: (72 to: 88)
		declaredAt: (72 to: 88)) new ] valueCoveringAll:
		{90 to: 92})
		cover: (61 to: 67)
		declaredAt: (49 to: 55).
	[
	(transactions
		cover: (98 to: 109)
		declaredAt: (98 to: 109)) do: [ :aTransaction |
		[
		(reports
			cover: (132 to: 138)
			declaredAt: (49 to: 55)) add:
			([
			(aTransaction
				cover: (146 to: 157)
				declaredAt: (117 to: 128)) report:
				(aReport
					cover: (167 to: 173)
					declaredAt: (37 to: 43)) ] valueCoveringAll:
				{159 to: 165}) ] valueCoveringAll:
			{140 to: 143} ]] valueCoveringAll:
		{111 to: 113}.
	^ reports
		cover: (182 to: 188)
		declaredAt: (49 to: 55).! !
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportDeposit:
		(self coverAll:
			{43 to: 46}) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
reportDeposit: aDepositTransaction
	^ [
	('Dep�sito por ' coverAll:
		{39 to: 53}) ,
		([
		([
		(aDepositTransaction
			cover: (56 to: 74)
			declaredAt: (16 to: 34)) value ] valueCoveringAll:
			{76 to: 80}) asString ] valueCoveringAll:
			{82 to: 89}) ] valueCoveringAll:
		{54 to: 54}.! !
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
from: aReceptiveAccountOrigin to: aReceptiveAccountDestiny amount: anAmount
	[
	([
	(anAmount
		cover: (83 to: 90)
		declaredAt: (68 to: 75)) <=
		(0 coverAll:
			{95 to: 95}) ] valueCoveringAll:
		{92 to: 93}) ifTrue: [
		[
		(self coverAll:
			{106 to: 109}) error:
			([
			(self coverAll:
				{118 to: 121}) canNotTransferWithInvalidAmount ] valueCoveringAll:
				{123 to: 153}) ] valueCoveringAll:
			{111 to: 116} ]] valueCoveringAll:
		{97 to: 103}.
	[
	([
	(aReceptiveAccountOrigin
		cover: (160 to: 182)
		declaredAt: (7 to: 29)) =
		(aReceptiveAccountDestiny
			cover: (186 to: 209)
			declaredAt: (35 to: 58)) ] valueCoveringAll:
		{184 to: 184}) ifTrue: [
		[
		(self coverAll:
			{220 to: 223}) error:
			([
			(self coverAll:
				{232 to: 235}) canNotTransferToTheSameAccount ] valueCoveringAll:
				{237 to: 266}) ] valueCoveringAll:
			{225 to: 230} ]] valueCoveringAll:
		{211 to: 217}.
	^ [
	([
	(self coverAll:
		{277 to: 280}) new ] valueCoveringAll:
		{282 to: 284})
		initializeWith:
			(aReceptiveAccountOrigin
				cover: (302 to: 324)
				declaredAt: (7 to: 29))
		and:
			(aReceptiveAccountDestiny
				cover: (331 to: 354)
				declaredAt: (35 to: 58))
		amount:
			(anAmount
				cover: (364 to: 371)
				declaredAt: (68 to: 75)) ] valueCoveringAll:
		{286 to: 300. 326 to: 329. 356 to: 362}.! !
!Behavior method!
initializeWith: aReceptiveAccountOrigin and: aReceptiveAccountDestiny amount: anAmount
	(amount _ anAmount
		cover: (102 to: 109)
		declaredAt: (79 to: 86))
		cover: (92 to: 97)
		declaredAt: (92 to: 97).
	(transferWithdraw _ [
	(TransferWithdraw
		cover: (134 to: 149)
		declaredAt: (134 to: 149))
		for:
			(self coverAll:
				{156 to: 159})
		on:
			(aReceptiveAccountOrigin
				cover: (165 to: 187)
				declaredAt: (17 to: 39)) ] valueCoveringAll:
		{151 to: 154. 161 to: 163})
		cover: (114 to: 129)
		declaredAt: (114 to: 129).
	(transferDeposit _ [
	(TransferDeposit
		cover: (210 to: 224)
		declaredAt: (210 to: 224))
		for:
			(self coverAll:
				{231 to: 234})
		on:
			(aReceptiveAccountDestiny
				cover: (240 to: 263)
				declaredAt: (46 to: 69)) ] valueCoveringAll:
		{226 to: 229. 236 to: 238})
		cover: (191 to: 205)
		declaredAt: (191 to: 205).
	[
	(aReceptiveAccountOrigin
		cover: (267 to: 289)
		declaredAt: (17 to: 39)) register:
		(transferWithdraw
			cover: (301 to: 316)
			declaredAt: (114 to: 129)) ] valueCoveringAll:
		{291 to: 299}.
	[
	(aReceptiveAccountDestiny
		cover: (320 to: 343)
		declaredAt: (46 to: 69)) register:
		(transferDeposit
			cover: (355 to: 369)
			declaredAt: (191 to: 205)) ] valueCoveringAll:
		{345 to: 353}.! !
!Behavior method!
for: aTransfer on: aReceptiveAccount
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49})
		initializeFor:
			(aTransfer
				cover: (66 to: 74)
				declaredAt: (6 to: 14))
		on:
			(aReceptiveAccount
				cover: (80 to: 96)
				declaredAt: (20 to: 36)) ] valueCoveringAll:
		{51 to: 64. 76 to: 78}.! !
!Behavior method!
initializeFor: aTransfer on: aReceptiveAccount
	(transfer _ aTransfer
		cover: (64 to: 72)
		declaredAt: (16 to: 24))
		cover: (52 to: 59)
		declaredAt: (52 to: 59).
	(receptiveAccount _ aReceptiveAccount
		cover: (96 to: 112)
		declaredAt: (30 to: 46))
		cover: (76 to: 91)
		declaredAt: (76 to: 91).! !
!Behavior method!
for: aTransfer on: aReceptiveAccount
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeFor:
			(aTransfer
				cover: (67 to: 75)
				declaredAt: (6 to: 14))
		on:
			(aReceptiveAccount
				cover: (81 to: 97)
				declaredAt: (20 to: 36)) ] valueCoveringAll:
		{52 to: 65. 77 to: 79}.! !
!Behavior method!
initializeFor: aTransfer on: aReceptiveAccount
	(transfer _ aTransfer
		cover: (64 to: 72)
		declaredAt: (16 to: 24))
		cover: (52 to: 59)
		declaredAt: (52 to: 59).
	(receptiveAccount _ aReceptiveAccount
		cover: (96 to: 112)
		declaredAt: (30 to: 46))
		cover: (76 to: 91)
		declaredAt: (76 to: 91).! !
!Behavior method!
reportPortfolio: aPortfolio
	| reports |
	(reports _ [
	(aPortfolio
		cover: (55 to: 64)
		declaredAt: (18 to: 27)) collectionReportsOfItsFinancialEntities:
		(self coverAll:
			{107 to: 110}) ] valueCoveringAll:
		{66 to: 105})
		cover: (44 to: 50)
		declaredAt: (33 to: 39).
	^ [
	(reports
		cover: (115 to: 121)
		declaredAt: (33 to: 39))
		sum: [ :aFinancialEntityReport |
			aFinancialEntityReport
				cover: (155 to: 176)
				declaredAt: (130 to: 151) ]
		ifEmpty: [
			0 coverAll:
				{189 to: 189} ]] valueCoveringAll:
		{123 to: 126. 179 to: 186}.! !
!Behavior method!
reportAccount: aReceptiveAccount
	| report |
	(report _ [
	(aReceptiveAccount
		cover: (56 to: 72)
		declaredAt: (16 to: 32)) collectionReportsOfItsTransactions:
		(self coverAll:
			{110 to: 113}) ] valueCoveringAll:
		{74 to: 108})
		cover: (46 to: 51)
		declaredAt: (37 to: 42).
	^ [
	(report
		cover: (118 to: 123)
		declaredAt: (37 to: 42))
		sum: [ :aTransactionReport |
			aTransactionReport
				cover: (153 to: 170)
				declaredAt: (132 to: 149) ]
		ifEmpty: [
			0 coverAll:
				{184 to: 184} ]] valueCoveringAll:
		{125 to: 128. 174 to: 181}.! !
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportTransferDeposit:
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{28 to: 49}.! !
!Behavior method!
reportTransferDeposit: aTransferDepositTransaction
	^ [
	(aTransferDepositTransaction
		cover: (55 to: 81)
		declaredAt: (24 to: 50)) value ] valueCoveringAll:
		{83 to: 87}.! !
!Behavior method!
value
	^ [
	(transfer
		cover: (10 to: 17)
		declaredAt: (10 to: 17)) amount ] valueCoveringAll:
		{19 to: 24}.! !
!Behavior method!
amount
	^ amount
		cover: (12 to: 17)
		declaredAt: (12 to: 17).! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 22:52:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 22:52:38'!
PASSED!
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) -
		(value
			cover: (39 to: 43)
			declaredAt: (39 to: 43)) ] valueCoveringAll:
		{37 to: 37}.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportWithdraw:
		(self coverAll:
			{44 to: 47}) ] valueCoveringAll:
		{28 to: 42}.! !
!Behavior method!
reportWithdraw: aWithdrawTransaction
	^ [
	('Extracci�n por ' coverAll:
		{41 to: 57}) ,
		([
		([
		(aWithdrawTransaction
			cover: (60 to: 79)
			declaredAt: (17 to: 36)) value ] valueCoveringAll:
			{81 to: 85}) asString ] valueCoveringAll:
			{87 to: 94}) ] valueCoveringAll:
		{58 to: 58}.! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportTransferWithdraw:
		(self coverAll:
			{52 to: 55}) ] valueCoveringAll:
		{28 to: 50}.! !
!Behavior method!
reportTransferWithdraw: aTransferWithdrawTransaction
	^ [
	('Salida por transferencia de ' coverAll:
		{57 to: 86}) ,
		([
		([
		(aTransferWithdrawTransaction
			cover: (89 to: 116)
			declaredAt: (25 to: 52)) value ] valueCoveringAll:
			{118 to: 122}) asString ] valueCoveringAll:
			{124 to: 131}) ] valueCoveringAll:
		{87 to: 87}.! !
!Behavior method!
value
	^ [
	(transfer
		cover: (10 to: 17)
		declaredAt: (10 to: 17)) amount ] valueCoveringAll:
		{19 to: 24}.! !
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) -
		([
		(transfer
			cover: (39 to: 46)
			declaredAt: (39 to: 46)) amount ] valueCoveringAll:
			{48 to: 53}) ] valueCoveringAll:
		{37 to: 37}.! !
!Behavior method!
reportTransferDeposit: aTransferDepositTransaction
	^ [
	('Entrada por transferencia de ' coverAll:
		{55 to: 85}) ,
		([
		([
		(aTransferDepositTransaction
			cover: (88 to: 114)
			declaredAt: (24 to: 50)) value ] valueCoveringAll:
			{116 to: 120}) asString ] valueCoveringAll:
			{122 to: 129}) ] valueCoveringAll:
		{86 to: 86}.! !
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) +
		([
		(transfer
			cover: (39 to: 46)
			declaredAt: (39 to: 46)) amount ] valueCoveringAll:
			{48 to: 53}) ] valueCoveringAll:
		{37 to: 37}.! !

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
reportTransferWithdraw: aTransferWithdrawTransaction
	^ [
	([
	(aTransferWithdrawTransaction
		cover: (57 to: 84)
		declaredAt: (25 to: 52)) value ] valueCoveringAll:
		{86 to: 90}) negated ] valueCoveringAll:
		{92 to: 98}.! !

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
reportDeposit: aDepositTransaction
	^ 0 coverAll:
		{39 to: 39}.! !

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
canNotTransferWithInvalidAmount
	^ 'No se puede transferir con monto no positivo' coverAll:
		{36 to: 81}.! !

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
withdraw
	^ transferWithdraw
		cover: (13 to: 28)
		declaredAt: (13 to: 28).! !
!Behavior method!
deposit
	^ transferDeposit
		cover: (12 to: 26)
		declaredAt: (12 to: 26).! !

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
transfer
	^ transfer
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
transfer
	^ transfer
		cover: (13 to: 20)
		declaredAt: (13 to: 20).! !

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!
!Behavior method!
canNotTransferToTheSameAccount
	^ 'No podes transferir de una cuenta a la misma cuenta' coverAll:
		{36 to: 88}.! !

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 22:52:39'!
PASSED!

!methodRemoval: Deposit #transferNetReport stamp: 'ET 6/2/2021 22:52:56'!
transferNetReport

	^0!

!methodRemoval: TransferDeposit #transferNetReport stamp: 'ET 6/2/2021 22:53:02'!
transferNetReport

	^self value.!

!methodRemoval: TransferWithdraw #transferNetReport stamp: 'ET 6/2/2021 22:53:08'!
transferNetReport

	^self value negated.!

!methodRemoval: Withdraw #transferNetReport stamp: 'ET 6/2/2021 22:53:14'!
transferNetReport

	^0!

!methodRemoval: Portfolio #accountSummaryReport stamp: 'ET 6/2/2021 22:53:28'!
accountSummaryReport	
	| report |
	report := OrderedCollection new.
	financialEntities do:[ :aFinancialEntity |
			report addAllLast: aFinancialEntity accountSummaryReport .
		].
	report add:'Balance = ', self balance asString.
	^ report.!

!methodRemoval: Portfolio #transferNetReport stamp: 'ET 6/2/2021 22:53:38'!
transferNetReport
	^financialEntities sum: [:aFinancialEntity | aFinancialEntity transferNetReport ] ifEmpty:[0].!

!methodRemoval: ReceptiveAccount #transferNetReport stamp: 'ET 6/2/2021 22:53:46'!
transferNetReport
	|net|
	net := 0.
	transactions do: [:transaction |
		net := net + transaction transferNetReport
		].
	
	^net.!

!methodRemoval: Transfer #initializeWith:and: stamp: 'ET 6/2/2021 22:54:04'!
initializeWith: aTransferDeposit and: aTransferWithdraw 
	transferDeposit := aTransferDeposit.
	transferWithdraw := aTransferWithdraw.!

!methodRemoval: ReceptiveAccount #accountSummaryReport stamp: 'ET 6/2/2021 22:54:50'!
accountSummaryReport	
	
	^AccountSummaryReport reportAccount: self.!
!Behavior method!
initialize
	(financialEntities _ [
	(OrderedCollection
		cover: (35 to: 51)
		declaredAt: (35 to: 51)) new ] valueCoveringAll:
		{53 to: 55})
		cover: (14 to: 30)
		declaredAt: (14 to: 30).
	(portfolioParents _ [
	(OrderedCollection
		cover: (79 to: 95)
		declaredAt: (35 to: 51)) new ] valueCoveringAll:
		{97 to: 99})
		cover: (59 to: 74)
		declaredAt: (59 to: 74).! !
!Behavior method!
balance
	^ [
	(financialEntities
		cover: (14 to: 30)
		declaredAt: (14 to: 30))
		sum: [ :aFinancialEntity |
			[
			(aFinancialEntity
				cover: (58 to: 73)
				declaredAt: (39 to: 54)) balance ] valueCoveringAll:
				{75 to: 81} ]
		ifEmpty: [
			0 coverAll:
				{94 to: 94} ]] valueCoveringAll:
		{32 to: 35. 84 to: 91}.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 22:55:13'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addFinancialEntity: aFinancialEntity
	[
	(self coverAll:
		{40 to: 43}) assertFinancialEntityHasNotBeenAdded:
		(aFinancialEntity
			cover: (83 to: 98)
			declaredAt: (21 to: 36)) ] valueCoveringAll:
		{45 to: 81}.
	[
	(aFinancialEntity
		cover: (104 to: 119)
		declaredAt: (21 to: 36)) isAddedInto:
		(self coverAll:
			{134 to: 137}) ] valueCoveringAll:
		{121 to: 132}.! !
!Behavior method!
assertFinancialEntityHasNotBeenAdded: aFinancialEntity
	[
	(portfolioParents
		cover: (58 to: 73)
		declaredAt: (58 to: 73))
		ifEmpty: [
			[
			(aFinancialEntity
				cover: (85 to: 100)
				declaredAt: (39 to: 54)) ensureItDoesntHaveAnythingOn:
				(self coverAll:
					{132 to: 135}) ] valueCoveringAll:
				{102 to: 130} ]
		ifNotEmpty: [
			[
			(portfolioParents
				cover: (152 to: 167)
				declaredAt: (58 to: 73)) do: [ :aPortfolio |
				[
				(aPortfolio
					cover: (188 to: 197)
					declaredAt: (175 to: 184)) assertFinancialEntityHasNotBeenAdded:
					(aFinancialEntity
						cover: (237 to: 252)
						declaredAt: (39 to: 54)) ] valueCoveringAll:
					{199 to: 235} ]] valueCoveringAll:
				{169 to: 171} ]] valueCoveringAll:
		{75 to: 82. 139 to: 149}.! !
!Behavior method!
ensureItDoesntHaveAnythingOn: aPortfolio
	[
	([
	(aPortfolio
		cover: (46 to: 55)
		declaredAt: (31 to: 40)) includes:
		(self coverAll:
			{67 to: 70}) ] valueCoveringAll:
		{57 to: 65}) ifTrue: [
		[
		(self coverAll:
			{82 to: 85}) error:
			([
			([
			(self coverAll:
				{94 to: 97}) class ] valueCoveringAll:
				{99 to: 103}) canNotAddAlreadyAddedFinancialEntity ] valueCoveringAll:
				{105 to: 140}) ] valueCoveringAll:
			{87 to: 92} ]] valueCoveringAll:
		{73 to: 79}.! !
!Behavior method!
includes: aFinancialEntity
	^ [
	([
	(aFinancialEntity
		cover: (33 to: 48)
		declaredAt: (11 to: 26)) =
		(self coverAll:
			{53 to: 56}) ] valueCoveringAll:
		{51 to: 51}) or: [
		[
		(financialEntities
			cover: (64 to: 80)
			declaredAt: (64 to: 80)) anySatisfy: [ :financialEntity |
			[
			(financialEntity
				cover: (114 to: 128)
				declaredAt: (96 to: 110)) includes:
				(aFinancialEntity
					cover: (140 to: 155)
					declaredAt: (11 to: 26)) ] valueCoveringAll:
				{130 to: 138} ]] valueCoveringAll:
			{82 to: 92} ]] valueCoveringAll:
		{59 to: 61}.! !
!Behavior method!
isAddedInto: aPortfolio
	[
	(aPortfolio
		cover: (27 to: 36)
		declaredAt: (14 to: 23)) addAssertedFinancialEntity:
		(self coverAll:
			{66 to: 69}) ] valueCoveringAll:
		{38 to: 64}.! !
!Behavior method!
addAssertedFinancialEntity: aFinancialEntity
	[
	(financialEntities
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) add:
		(aFinancialEntity
			cover: (71 to: 86)
			declaredAt: (29 to: 44)) ] valueCoveringAll:
		{66 to: 69}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :balance :aTransaction |
			[
			(aTransaction
				cover: (68 to: 79)
				declaredAt: (52 to: 63)) modifiesBalance:
				(balance
					cover: (98 to: 104)
					declaredAt: (43 to: 49)) ] valueCoveringAll:
				{81 to: 96} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) +
		(value
			cover: (39 to: 43)
			declaredAt: (39 to: 43)) ] valueCoveringAll:
		{37 to: 37}.! !

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 22:55:13'!
PASSED!
!Behavior method!
includes: aFinancialEntity
	^ [
	(self coverAll:
		{31 to: 34}) =
		(aFinancialEntity
			cover: (38 to: 53)
			declaredAt: (11 to: 26)) ] valueCoveringAll:
		{36 to: 36}.! !

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 22:55:13'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(financialEntities
		cover: (35 to: 51)
		declaredAt: (35 to: 51)) anySatisfy: [ :aFinancialEntity |
		[
		(aFinancialEntity
			cover: (86 to: 101)
			declaredAt: (67 to: 82)) hasRegistered:
			(aTransaction
				cover: (118 to: 129)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{103 to: 116} ]] valueCoveringAll:
		{53 to: 63}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
transactions
	| transactions |
	(transactions _ [
	(OrderedCollection
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (32 to: 43)
		declaredAt: (17 to: 28).
	[
	(self coverAll:
		{72 to: 75}) putAllTransactionsInto:
		(transactions
			cover: (101 to: 112)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{77 to: 99}.
	^ transactions
		cover: (119 to: 130)
		declaredAt: (17 to: 28).! !
!Behavior method!
putAllTransactionsInto: aTransactionsCollection
	[
	(financialEntities
		cover: (52 to: 68)
		declaredAt: (52 to: 68)) do: [ :aFinancialEntity |
		[
		(aFinancialEntity
			cover: (95 to: 110)
			declaredAt: (76 to: 91)) putAllTransactionsInto:
			(aTransactionsCollection
				cover: (136 to: 158)
				declaredAt: (25 to: 47)) ] valueCoveringAll:
			{112 to: 134} ]] valueCoveringAll:
		{70 to: 72}.! !
!Behavior method!
putAllTransactionsInto: aTransactionsCollection
	[
	(aTransactionsCollection
		cover: (52 to: 74)
		declaredAt: (25 to: 47)) addAllFirst:
		([
		(self coverAll:
			{90 to: 93}) transactions ] valueCoveringAll:
			{95 to: 106}) ] valueCoveringAll:
		{76 to: 87}.! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
ensureItDoesntHaveAnythingOn: aPortfolio
	[
	([
	(aPortfolio
		cover: (46 to: 55)
		declaredAt: (31 to: 40)) includes:
		(self coverAll:
			{67 to: 70}) ] valueCoveringAll:
		{57 to: 65})
		ifTrue: [
			[
			(self coverAll:
				{82 to: 85}) error:
				([
				([
				(self coverAll:
					{94 to: 97}) class ] valueCoveringAll:
					{99 to: 103}) canNotAddAlreadyAddedFinancialEntity ] valueCoveringAll:
					{105 to: 140}) ] valueCoveringAll:
				{87 to: 92} ]
		ifFalse: [
			[
			(financialEntities
				cover: (157 to: 173)
				declaredAt: (157 to: 173)) do: [ :aFinancialEntity |
				[
				(aFinancialEntity
					cover: (200 to: 215)
					declaredAt: (181 to: 196)) ensureItDoesntHaveAnythingOn:
					(aPortfolio
						cover: (247 to: 256)
						declaredAt: (31 to: 40)) ] valueCoveringAll:
					{217 to: 245} ]] valueCoveringAll:
				{175 to: 177} ]] valueCoveringAll:
		{73 to: 79. 144 to: 151}.! !
!Behavior method!
isAddedInto: aPortfolio
	[
	(portfolioParents
		cover: (27 to: 42)
		declaredAt: (27 to: 42)) add:
		(aPortfolio
			cover: (49 to: 58)
			declaredAt: (14 to: 23)) ] valueCoveringAll:
		{44 to: 47}.
	[
	(aPortfolio
		cover: (62 to: 71)
		declaredAt: (14 to: 23)) addAssertedFinancialEntity:
		(self coverAll:
			{101 to: 104}) ] valueCoveringAll:
		{73 to: 99}.! !

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
canNotAddAlreadyAddedFinancialEntity
	^ 'This financial entity has been added in this structure before!!!!' coverAll:
		{42 to: 106}.! !

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 22:55:14'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
for: aFinancialEntity
	^ [
	(aFinancialEntity
		cover: (26 to: 41)
		declaredAt: (6 to: 21)) report:
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{43 to: 49}.! !
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportPortfolio:
		(self coverAll:
			{45 to: 48}) ] valueCoveringAll:
		{28 to: 43}.! !
!Behavior method!
reportPortfolio: aPortfolio
	| finalReport reports |
	(finalReport _ [
	(OrderedCollection
		cover: (71 to: 87)
		declaredAt: (71 to: 87)) new ] valueCoveringAll:
		{89 to: 91})
		cover: (56 to: 66)
		declaredAt: (33 to: 43).
	(reports _ [
	(aPortfolio
		cover: (106 to: 115)
		declaredAt: (18 to: 27)) collectionReportsOfItsFinancialEntities:
		(self coverAll:
			{158 to: 161}) ] valueCoveringAll:
		{117 to: 156})
		cover: (95 to: 101)
		declaredAt: (45 to: 51).
	[
	(reports
		cover: (165 to: 171)
		declaredAt: (45 to: 51)) do: [ :aFinancialEntityReport |
		[
		(finalReport
			cover: (204 to: 214)
			declaredAt: (33 to: 43)) addAllLast:
			(aFinancialEntityReport
				cover: (228 to: 249)
				declaredAt: (179 to: 200)) ] valueCoveringAll:
			{216 to: 226} ]] valueCoveringAll:
		{173 to: 175}.
	[
	(finalReport
		cover: (256 to: 266)
		declaredAt: (33 to: 43)) add:
		([
		('Balance = ' coverAll:
			{272 to: 283}) ,
			([
			([
			(aPortfolio
				cover: (286 to: 295)
				declaredAt: (18 to: 27)) balance ] valueCoveringAll:
				{297 to: 303}) asString ] valueCoveringAll:
				{305 to: 312}) ] valueCoveringAll:
			{284 to: 284}) ] valueCoveringAll:
		{268 to: 271}.
	^ finalReport
		cover: (318 to: 328)
		declaredAt: (33 to: 43).! !
!Behavior method!
collectionReportsOfItsFinancialEntities: aReport
	| reports |
	(reports _ [
	(OrderedCollection
		cover: (75 to: 91)
		declaredAt: (75 to: 91)) new ] valueCoveringAll:
		{93 to: 95})
		cover: (64 to: 70)
		declaredAt: (53 to: 59).
	[
	(financialEntities
		cover: (99 to: 115)
		declaredAt: (99 to: 115)) do: [ :aFinancialEntity |
		[
		(reports
			cover: (145 to: 151)
			declaredAt: (53 to: 59)) add:
			([
			(aFinancialEntity
				cover: (159 to: 174)
				declaredAt: (123 to: 138)) report:
				(aReport
					cover: (184 to: 190)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{176 to: 182}) ] valueCoveringAll:
			{153 to: 156} ]] valueCoveringAll:
		{117 to: 119}.
	^ reports
		cover: (202 to: 208)
		declaredAt: (53 to: 59).! !

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (21 to: 27)
		declaredAt: (9 to: 15)) reportAccount:
		(self coverAll:
			{44 to: 47}) ] valueCoveringAll:
		{29 to: 42}.! !
!Behavior method!
reportAccount: aReceptiveAccount
	| report |
	(report _ [
	(aReceptiveAccount
		cover: (56 to: 72)
		declaredAt: (16 to: 32)) collectionReportsOfItsTransactions:
		(self coverAll:
			{110 to: 113}) ] valueCoveringAll:
		{74 to: 108})
		cover: (46 to: 51)
		declaredAt: (37 to: 42).
	[
	(report
		cover: (117 to: 122)
		declaredAt: (37 to: 42)) add:
		([
		('Balance = ' coverAll:
			{129 to: 140}) ,
			([
			([
			(aReceptiveAccount
				cover: (143 to: 159)
				declaredAt: (16 to: 32)) balance ] valueCoveringAll:
				{161 to: 167}) asString ] valueCoveringAll:
				{169 to: 176}) ] valueCoveringAll:
			{141 to: 141}) ] valueCoveringAll:
		{124 to: 127}.
	^ report
		cover: (183 to: 188)
		declaredAt: (37 to: 42).! !
!Behavior method!
collectionReportsOfItsTransactions: aReport
	| reports |
	(reports _ [
	(OrderedCollection
		cover: (72 to: 88)
		declaredAt: (72 to: 88)) new ] valueCoveringAll:
		{90 to: 92})
		cover: (61 to: 67)
		declaredAt: (49 to: 55).
	[
	(transactions
		cover: (98 to: 109)
		declaredAt: (98 to: 109)) do: [ :aTransaction |
		[
		(reports
			cover: (132 to: 138)
			declaredAt: (49 to: 55)) add:
			([
			(aTransaction
				cover: (146 to: 157)
				declaredAt: (117 to: 128)) report:
				(aReport
					cover: (167 to: 173)
					declaredAt: (37 to: 43)) ] valueCoveringAll:
				{159 to: 165}) ] valueCoveringAll:
			{140 to: 143} ]] valueCoveringAll:
		{111 to: 113}.
	^ reports
		cover: (182 to: 188)
		declaredAt: (49 to: 55).! !
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportDeposit:
		(self coverAll:
			{43 to: 46}) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
reportDeposit: aDepositTransaction
	^ [
	('Dep�sito por ' coverAll:
		{39 to: 53}) ,
		([
		([
		(aDepositTransaction
			cover: (56 to: 74)
			declaredAt: (16 to: 34)) value ] valueCoveringAll:
			{76 to: 80}) asString ] valueCoveringAll:
			{82 to: 89}) ] valueCoveringAll:
		{54 to: 54}.! !
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 22:55:14'!
PASSED!
!Behavior method!
from: aReceptiveAccountOrigin to: aReceptiveAccountDestiny amount: anAmount
	[
	([
	(anAmount
		cover: (83 to: 90)
		declaredAt: (68 to: 75)) <=
		(0 coverAll:
			{95 to: 95}) ] valueCoveringAll:
		{92 to: 93}) ifTrue: [
		[
		(self coverAll:
			{106 to: 109}) error:
			([
			(self coverAll:
				{118 to: 121}) canNotTransferWithInvalidAmount ] valueCoveringAll:
				{123 to: 153}) ] valueCoveringAll:
			{111 to: 116} ]] valueCoveringAll:
		{97 to: 103}.
	[
	([
	(aReceptiveAccountOrigin
		cover: (160 to: 182)
		declaredAt: (7 to: 29)) =
		(aReceptiveAccountDestiny
			cover: (186 to: 209)
			declaredAt: (35 to: 58)) ] valueCoveringAll:
		{184 to: 184}) ifTrue: [
		[
		(self coverAll:
			{220 to: 223}) error:
			([
			(self coverAll:
				{232 to: 235}) canNotTransferToTheSameAccount ] valueCoveringAll:
				{237 to: 266}) ] valueCoveringAll:
			{225 to: 230} ]] valueCoveringAll:
		{211 to: 217}.
	^ [
	([
	(self coverAll:
		{277 to: 280}) new ] valueCoveringAll:
		{282 to: 284})
		initializeWith:
			(aReceptiveAccountOrigin
				cover: (302 to: 324)
				declaredAt: (7 to: 29))
		and:
			(aReceptiveAccountDestiny
				cover: (331 to: 354)
				declaredAt: (35 to: 58))
		amount:
			(anAmount
				cover: (364 to: 371)
				declaredAt: (68 to: 75)) ] valueCoveringAll:
		{286 to: 300. 326 to: 329. 356 to: 362}.! !
!Behavior method!
initializeWith: aReceptiveAccountOrigin and: aReceptiveAccountDestiny amount: anAmount
	(amount _ anAmount
		cover: (102 to: 109)
		declaredAt: (79 to: 86))
		cover: (92 to: 97)
		declaredAt: (92 to: 97).
	(transferWithdraw _ [
	(TransferWithdraw
		cover: (134 to: 149)
		declaredAt: (134 to: 149))
		for:
			(self coverAll:
				{156 to: 159})
		on:
			(aReceptiveAccountOrigin
				cover: (165 to: 187)
				declaredAt: (17 to: 39)) ] valueCoveringAll:
		{151 to: 154. 161 to: 163})
		cover: (114 to: 129)
		declaredAt: (114 to: 129).
	(transferDeposit _ [
	(TransferDeposit
		cover: (210 to: 224)
		declaredAt: (210 to: 224))
		for:
			(self coverAll:
				{231 to: 234})
		on:
			(aReceptiveAccountDestiny
				cover: (240 to: 263)
				declaredAt: (46 to: 69)) ] valueCoveringAll:
		{226 to: 229. 236 to: 238})
		cover: (191 to: 205)
		declaredAt: (191 to: 205).
	[
	(aReceptiveAccountOrigin
		cover: (267 to: 289)
		declaredAt: (17 to: 39)) register:
		(transferWithdraw
			cover: (301 to: 316)
			declaredAt: (114 to: 129)) ] valueCoveringAll:
		{291 to: 299}.
	[
	(aReceptiveAccountDestiny
		cover: (320 to: 343)
		declaredAt: (46 to: 69)) register:
		(transferDeposit
			cover: (355 to: 369)
			declaredAt: (191 to: 205)) ] valueCoveringAll:
		{345 to: 353}.! !
!Behavior method!
for: aTransfer on: aReceptiveAccount
	^ [
	([
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49})
		initializeFor:
			(aTransfer
				cover: (66 to: 74)
				declaredAt: (6 to: 14))
		on:
			(aReceptiveAccount
				cover: (80 to: 96)
				declaredAt: (20 to: 36)) ] valueCoveringAll:
		{51 to: 64. 76 to: 78}.! !
!Behavior method!
initializeFor: aTransfer on: aReceptiveAccount
	(transfer _ aTransfer
		cover: (64 to: 72)
		declaredAt: (16 to: 24))
		cover: (52 to: 59)
		declaredAt: (52 to: 59).
	(receptiveAccount _ aReceptiveAccount
		cover: (96 to: 112)
		declaredAt: (30 to: 46))
		cover: (76 to: 91)
		declaredAt: (76 to: 91).! !
!Behavior method!
for: aTransfer on: aReceptiveAccount
	^ [
	([
	(self coverAll:
		{43 to: 46}) new ] valueCoveringAll:
		{48 to: 50})
		initializeFor:
			(aTransfer
				cover: (67 to: 75)
				declaredAt: (6 to: 14))
		on:
			(aReceptiveAccount
				cover: (81 to: 97)
				declaredAt: (20 to: 36)) ] valueCoveringAll:
		{52 to: 65. 77 to: 79}.! !
!Behavior method!
initializeFor: aTransfer on: aReceptiveAccount
	(transfer _ aTransfer
		cover: (64 to: 72)
		declaredAt: (16 to: 24))
		cover: (52 to: 59)
		declaredAt: (52 to: 59).
	(receptiveAccount _ aReceptiveAccount
		cover: (96 to: 112)
		declaredAt: (30 to: 46))
		cover: (76 to: 91)
		declaredAt: (76 to: 91).! !
!Behavior method!
reportPortfolio: aPortfolio
	| reports |
	(reports _ [
	(aPortfolio
		cover: (55 to: 64)
		declaredAt: (18 to: 27)) collectionReportsOfItsFinancialEntities:
		(self coverAll:
			{107 to: 110}) ] valueCoveringAll:
		{66 to: 105})
		cover: (44 to: 50)
		declaredAt: (33 to: 39).
	^ [
	(reports
		cover: (115 to: 121)
		declaredAt: (33 to: 39))
		sum: [ :aFinancialEntityReport |
			aFinancialEntityReport
				cover: (155 to: 176)
				declaredAt: (130 to: 151) ]
		ifEmpty: [
			0 coverAll:
				{189 to: 189} ]] valueCoveringAll:
		{123 to: 126. 179 to: 186}.! !
!Behavior method!
reportAccount: aReceptiveAccount
	| report |
	(report _ [
	(aReceptiveAccount
		cover: (56 to: 72)
		declaredAt: (16 to: 32)) collectionReportsOfItsTransactions:
		(self coverAll:
			{110 to: 113}) ] valueCoveringAll:
		{74 to: 108})
		cover: (46 to: 51)
		declaredAt: (37 to: 42).
	^ [
	(report
		cover: (118 to: 123)
		declaredAt: (37 to: 42))
		sum: [ :aTransactionReport |
			aTransactionReport
				cover: (153 to: 170)
				declaredAt: (132 to: 149) ]
		ifEmpty: [
			0 coverAll:
				{184 to: 184} ]] valueCoveringAll:
		{125 to: 128. 174 to: 181}.! !
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportTransferDeposit:
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{28 to: 49}.! !
!Behavior method!
reportTransferDeposit: aTransferDepositTransaction
	^ [
	(aTransferDepositTransaction
		cover: (55 to: 81)
		declaredAt: (24 to: 50)) value ] valueCoveringAll:
		{83 to: 87}.! !
!Behavior method!
value
	^ [
	(transfer
		cover: (10 to: 17)
		declaredAt: (10 to: 17)) amount ] valueCoveringAll:
		{19 to: 24}.! !
!Behavior method!
amount
	^ amount
		cover: (12 to: 17)
		declaredAt: (12 to: 17).! !

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) -
		(value
			cover: (39 to: 43)
			declaredAt: (39 to: 43)) ] valueCoveringAll:
		{37 to: 37}.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportWithdraw:
		(self coverAll:
			{44 to: 47}) ] valueCoveringAll:
		{28 to: 42}.! !
!Behavior method!
reportWithdraw: aWithdrawTransaction
	^ [
	('Extracci�n por ' coverAll:
		{41 to: 57}) ,
		([
		([
		(aWithdrawTransaction
			cover: (60 to: 79)
			declaredAt: (17 to: 36)) value ] valueCoveringAll:
			{81 to: 85}) asString ] valueCoveringAll:
			{87 to: 94}) ] valueCoveringAll:
		{58 to: 58}.! !

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
report: aReport
	^ [
	(aReport
		cover: (20 to: 26)
		declaredAt: (9 to: 15)) reportTransferWithdraw:
		(self coverAll:
			{52 to: 55}) ] valueCoveringAll:
		{28 to: 50}.! !
!Behavior method!
reportTransferWithdraw: aTransferWithdrawTransaction
	^ [
	('Salida por transferencia de ' coverAll:
		{57 to: 86}) ,
		([
		([
		(aTransferWithdrawTransaction
			cover: (89 to: 116)
			declaredAt: (25 to: 52)) value ] valueCoveringAll:
			{118 to: 122}) asString ] valueCoveringAll:
			{124 to: 131}) ] valueCoveringAll:
		{87 to: 87}.! !
!Behavior method!
value
	^ [
	(transfer
		cover: (10 to: 17)
		declaredAt: (10 to: 17)) amount ] valueCoveringAll:
		{19 to: 24}.! !
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) -
		([
		(transfer
			cover: (39 to: 46)
			declaredAt: (39 to: 46)) amount ] valueCoveringAll:
			{48 to: 53}) ] valueCoveringAll:
		{37 to: 37}.! !
!Behavior method!
reportTransferDeposit: aTransferDepositTransaction
	^ [
	('Entrada por transferencia de ' coverAll:
		{55 to: 85}) ,
		([
		([
		(aTransferDepositTransaction
			cover: (88 to: 114)
			declaredAt: (24 to: 50)) value ] valueCoveringAll:
			{116 to: 120}) asString ] valueCoveringAll:
			{122 to: 129}) ] valueCoveringAll:
		{86 to: 86}.! !
!Behavior method!
modifiesBalance: balance
	^ [
	(balance
		cover: (29 to: 35)
		declaredAt: (18 to: 24)) +
		([
		(transfer
			cover: (39 to: 46)
			declaredAt: (39 to: 46)) amount ] valueCoveringAll:
			{48 to: 53}) ] valueCoveringAll:
		{37 to: 37}.! !

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
reportTransferWithdraw: aTransferWithdrawTransaction
	^ [
	([
	(aTransferWithdrawTransaction
		cover: (57 to: 84)
		declaredAt: (25 to: 52)) value ] valueCoveringAll:
		{86 to: 90}) negated ] valueCoveringAll:
		{92 to: 98}.! !

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
reportDeposit: aDepositTransaction
	^ 0 coverAll:
		{39 to: 39}.! !

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #TransferTest #test01 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
canNotTransferWithInvalidAmount
	^ 'No se puede transferir con monto no positivo' coverAll:
		{36 to: 81}.! !

!testRun: #TransferTest #test02 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
withdraw
	^ transferWithdraw
		cover: (13 to: 28)
		declaredAt: (13 to: 28).! !
!Behavior method!
deposit
	^ transferDeposit
		cover: (12 to: 26)
		declaredAt: (12 to: 26).! !

!testRun: #TransferTest #test04 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
transfer
	^ transfer
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !
!Behavior method!
transfer
	^ transfer
		cover: (13 to: 20)
		declaredAt: (13 to: 20).! !

!testRun: #TransferTest #test05 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!Behavior method!
canNotTransferToTheSameAccount
	^ 'No podes transferir de una cuenta a la misma cuenta' coverAll:
		{36 to: 88}.! !

!testRun: #TransferTest #test06 stamp: 'ET 6/2/2021 22:55:15'!
PASSED!
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 22:57:06' prior: 50999097 overrides: 50998963!
reportPortfolio: aPortfolio

	| reports |
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	^reports sum: [:aFinancialEntityReport | aFinancialEntityReport] ifEmpty: [20].! !
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 22:57:39'!
test23

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: 0 equals: (TransferNetReport for: portfolio).
! !

!testRun: #PortfolioTest #test23 stamp: 'ET 6/2/2021 22:57:44'!
FAILURE!
!TransferNetReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 22:58:03' prior: 51001049 overrides: 50998963!
reportPortfolio: aPortfolio

	| reports |
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	^reports sum: [:aFinancialEntityReport | aFinancialEntityReport] ifEmpty: [0].! !

!testRun: #PortfolioTest #test23 stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 22:58:05'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'ET 6/2/2021 22:58:05'!
PASSED!
!AccountTransaction methodsFor: 'value' stamp: 'ET 6/2/2021 22:59:34'!
report: aReport

	self subclassResponsibility ! !
!FinancialEntity methodsFor: 'transcations - private' stamp: 'ET 6/2/2021 23:05:18'!
report: aReport

	self subclassResponsibility.! !
!TransferTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:16:03'!
test01TransferChangesBalanceOfBothParticipantAccounts
	| accountDestino accountOrigen |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: 100 equals: (accountDestino balance).
	self assert: -100 equals: (accountOrigen balance).
	! !

!methodRemoval: TransferTest #test01 stamp: 'ET 6/2/2021 23:16:03'!
test01
	| accountDestino accountOrigen |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: 100 equals: (accountDestino balance).
	self assert: -100 equals: (accountOrigen balance).
	!
!TransferTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:16:32'!
test02CanNotTransferWithZeroAmount
	| accountDestino accountOrigen |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
		
	self should:[Transfer from:accountOrigen to:accountDestino amount: 0.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferWithInvalidAmount) ].
	! !

!methodRemoval: TransferTest #test02 stamp: 'ET 6/2/2021 23:16:32'!
test02
	| accountDestino accountOrigen |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
		
	self should:[Transfer from:accountOrigen to:accountDestino amount: 0.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferWithInvalidAmount) ].
	!
!TransferTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:16:51'!
test03CanNotTransferNegativeAmount
	| accountDestino accountOrigen |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
		
	self should:[Transfer from:accountOrigen to:accountDestino amount: -100.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferWithInvalidAmount) ].
	! !

!methodRemoval: TransferTest #test03 stamp: 'ET 6/2/2021 23:16:51'!
test03
	| accountDestino accountOrigen |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
		
	self should:[Transfer from:accountOrigen to:accountDestino amount: -100.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferWithInvalidAmount) ].
	!
!TransferTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:17:47'!
test04TransferLegsAreRegisteredTransactionsOfItsParticipants
	| accountDestino accountOrigen aTransfer |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	aTransfer := Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (accountOrigen hasRegistered: (aTransfer withdraw)).
	self assert: (accountDestino hasRegistered: (aTransfer deposit)).
	! !

!methodRemoval: TransferTest #test04 stamp: 'ET 6/2/2021 23:17:47'!
test04
	| accountDestino accountOrigen aTransfer |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	aTransfer := Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (accountOrigen hasRegistered: (aTransfer withdraw)).
	self assert: (accountDestino hasRegistered: (aTransfer deposit)).
	!

100 factorial == 100 factorial!

100 factorial == 100 factorial!

10 factorial == 10 factorial!
!TransferTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:20:11'!
test05CanTravelBetweenTransferAndItsLegs
	| accountDestino accountOrigen aTransfer |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	aTransfer := Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (accountOrigen hasRegistered: (aTransfer deposit transfer withdraw)).
	self assert: (accountDestino hasRegistered: (aTransfer withdraw transfer deposit)).
	! !

!methodRemoval: TransferTest #test05 stamp: 'ET 6/2/2021 23:20:11'!
test05
	| accountDestino accountOrigen aTransfer |
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	aTransfer := Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (accountOrigen hasRegistered: (aTransfer deposit transfer withdraw)).
	self assert: (accountDestino hasRegistered: (aTransfer withdraw transfer deposit)).
	!
!TransferTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:20:39'!
test06CanNotTransferBetweenTheSameAccount
	| account |
	account := ReceptiveAccount new.
		
	self should:[Transfer from:account to:account amount: 100.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferToTheSameAccount) ].
	! !

!methodRemoval: TransferTest #test06 stamp: 'ET 6/2/2021 23:20:39'!
test06
	| account |
	account := ReceptiveAccount new.
		
	self should:[Transfer from:account to:account amount: 100.]
	raise: Error 
	withExceptionDo: [ :anError | self assert: anError messageText equals: (Transfer canNotTransferToTheSameAccount) ].
	!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/2/2021 23:20:42'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/2/2021 23:20:42'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:24:31'!
test08SummaryReportWithNewReceptiveAccount

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: (AccountSummaryReport for: account)  includes: 'Balance = 0'
! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'ET 6/2/2021 23:24:31'!
test08

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: (AccountSummaryReport for: account)  includes: 'Balance = 0'
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:25:03'!
test09SummaryReportWithReceptiveAccountWithADeposit

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Dep�sito por 100'
! !

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'ET 6/2/2021 23:25:03'!
test09

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Dep�sito por 100'
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:25:24'!
test10SummaryReportWithReceptiveAccountWithAWithdraw

	| account |
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Extracci�n por 50'
! !

!methodRemoval: ReceptiveAccountTest #test10 stamp: 'ET 6/2/2021 23:25:24'!
test10

	| account |
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Extracci�n por 50'
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:25:53'!
test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw

	| account |
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account. 
	Deposit register: 100 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Extracci�n por 50'.
	self assert: (AccountSummaryReport for: account) includes: 'Dep�sito por 100'.
	self assert: (AccountSummaryReport for: account) includes: 'Balance = 50'.! !

!methodRemoval: ReceptiveAccountTest #test11 stamp: 'ET 6/2/2021 23:25:53'!
test11

	| account |
	
	account := ReceptiveAccount new.
	
	Withdraw register: 50 on: account. 
	Deposit register: 100 on: account. 
	
	self assert: (AccountSummaryReport for: account) includes: 'Extracci�n por 50'.
	self assert: (AccountSummaryReport for: account) includes: 'Dep�sito por 100'.
	self assert: (AccountSummaryReport for: account) includes: 'Balance = 50'.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:26:38'!
test12SummaryReportOOfBothAccountsInATransfer

	| accountDestino accountOrigen |
	
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (AccountSummaryReport for: accountOrigen) includes: 'Salida por transferencia de 100'.
	self assert: (AccountSummaryReport for: accountDestino) includes: 'Entrada por transferencia de 100'.
	self assert: (AccountSummaryReport for: accountOrigen) includes: 'Balance = -100'.
	self assert: (AccountSummaryReport for: accountDestino) includes: 'Balance = 100'.	! !

!methodRemoval: ReceptiveAccountTest #test12 stamp: 'ET 6/2/2021 23:26:38'!
test12

	| accountDestino accountOrigen |
	
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	
	Transfer from:accountOrigen to:accountDestino amount: 100.
	
	self assert: (AccountSummaryReport for: accountOrigen) includes: 'Salida por transferencia de 100'.
	self assert: (AccountSummaryReport for: accountDestino) includes: 'Entrada por transferencia de 100'.
	self assert: (AccountSummaryReport for: accountOrigen) includes: 'Balance = -100'.
	self assert: (AccountSummaryReport for: accountDestino) includes: 'Balance = 100'.	!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:27:06'!
test13BalanceIsAtTheEndOfSummaryReport

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: 'Balance = 100' equals: (AccountSummaryReport for: account) last .
! !

!methodRemoval: ReceptiveAccountTest #test13 stamp: 'ET 6/2/2021 23:27:06'!
test13

	| account |
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: 'Balance = 100' equals: (AccountSummaryReport for: account) last .
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:27:39'!
test14TransferNetReportWithNewReceptiveAccount

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: 0 equals: (TransferNetReport for: account).
! !

!methodRemoval: ReceptiveAccountTest #test14 stamp: 'ET 6/2/2021 23:27:39'!
test14

	| account |
	
	account := ReceptiveAccount new.
	
	self assert: 0 equals: (TransferNetReport for: account).
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:34:55'!
test15TransferNetReportOfBothAccountsInATransfer

	| accountDestino accountOrigen |
	
	accountDestino := ReceptiveAccount new.
	accountOrigen := ReceptiveAccount new.
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (TransferNetReport for: accountDestino).
	self assert: -100 equals: (TransferNetReport for: accountOrigen).
! !

!methodRemoval: ReceptiveAccountTest #test15 stamp: 'ET 6/2/2021 23:34:55'!
test15

	| accountDestino accountOrigen |
	
	accountDestino := ReceptiveAccount new.
	accountOrigen := ReceptiveAccount new.
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (TransferNetReport for: accountDestino).
	self assert: -100 equals: (TransferNetReport for: accountOrigen).
!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:35:40'!
test16NonTransferTransactionsDoesNotModifyTransferNetReport

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100  on: account. 
	
	self assert: 0 equals: (TransferNetReport for: account).
! !

!methodRemoval: ReceptiveAccountTest #test16 stamp: 'ET 6/2/2021 23:35:40'!
test16

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100  on: account. 
	
	self assert: 0 equals: (TransferNetReport for: account).
!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:36:01'!
test20SummaryReportOfNewPortfolio

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (AccountSummaryReport for: portfolio) includes: 'Balance = 0'
! !

!methodRemoval: PortfolioTest #test20 stamp: 'ET 6/2/2021 23:36:01'!
test20

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: (AccountSummaryReport for: portfolio) includes: 'Balance = 0'
!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:36:24'!
test21SummaryReportOfPortfolioWithTwoAccounts

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report := AccountSummaryReport for: portfolio.
	
	self assert: 5 equals: report size.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.! !

!methodRemoval: PortfolioTest #test21 stamp: 'ET 6/2/2021 23:36:24'!
test21

	|portfolio report |
	
	portfolio := self portfolioWithOneAccountWith100Deposit.
	portfolio addFinancialEntity: self receptiveAccountWith100Deposit .
	
	report := AccountSummaryReport for: portfolio.
	
	self assert: 5 equals: report size.
	self assert: 'Balance = 200' equals: report last.
	report removeLast.	
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.
	report removeLast.
	self assert: 'Balance = 100' equals: report last.
	report removeLast.
	self assert: 'Dep�sito por 100' equals: report last.!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:37:00'!
test22TransferNetReportOfPortfolioWithAParticipantOfATransfer

	| portfolio accountOrigen accountDestino|
	
	portfolio := Portfolio new.
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	portfolio addFinancialEntity: accountDestino.
	
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (TransferNetReport for: portfolio).
! !

!methodRemoval: PortfolioTest #test22 stamp: 'ET 6/2/2021 23:37:00'!
test22

	| portfolio accountOrigen accountDestino|
	
	portfolio := Portfolio new.
	accountOrigen := ReceptiveAccount new.
	accountDestino := ReceptiveAccount new.
	portfolio addFinancialEntity: accountDestino.
	
	Transfer from: accountOrigen to: accountDestino amount: 100.
	
	self assert: 100 equals: (TransferNetReport for: portfolio).
!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/2/2021 23:37:19'!
test23TransferNetReportOfNewPortfolio

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: 0 equals: (TransferNetReport for: portfolio).
! !

!methodRemoval: PortfolioTest #test23 stamp: 'ET 6/2/2021 23:37:19'!
test23

	| portfolio |
	
	portfolio := Portfolio new.
	
	self assert: 0 equals: (TransferNetReport for: portfolio).
!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/2/2021 23:39:29'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/2/2021 23:39:29'!
PASSED!
!ReceptiveAccountTest methodsFor: 'transfer net report tests' stamp: 'ET 6/2/2021 23:57:10'!
test17ReceptiveAccountCanBeNamed

	| account |
	
	account := ReceptiveAccount named: 'cuenta'.

	
	self assert: 'cuenta' equals: account name.
! !

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/2/2021 23:57:14'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'ET 6/2/2021 23:57:37'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'ET 6/2/2021 23:58:03' prior: 51001964!
named: aString 

	^self new initializeNamed: aString ! !

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/2/2021 23:58:08'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 23:58:34'!
FinancialEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ET 6/2/2021 23:58:34'!
initializeNamed: aString 
	self shouldBeImplemented.
	string := aString.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'ET 6/2/2021 23:58:43' prior: 51001988!
initializeNamed: aString 

	string := aString.! !

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/2/2021 23:58:47'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions - private' stamp: 'ET 6/2/2021 23:59:11' overrides: 16882612!
name
	
	^string.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/2/2021 23:59:14'!
PASSED!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'ET 6/2/2021 23:59:27'!
FinancialEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 23:59:27' prior: 51001994!
initializeNamed: aString 

	name := aString.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'ET 6/2/2021 23:59:28' prior: 51002003 overrides: 16882612!
name
	
	^name.! !
!ReceptiveAccount methodsFor: 'name' stamp: 'ET 6/3/2021 00:02:54' prior: 51002192 overrides: 16882612!
name
	
	^'cuenta'.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'ET 6/3/2021 00:04:54'!
test18ReceptiveAccountNameIsWhatItWasNamed

	| account |
	
	account := ReceptiveAccount named: 'otro'.

	
	self assert: 'otro' equals: account name.
! !

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:04:55'!
FAILURE!
!ReceptiveAccount methodsFor: 'name' stamp: 'ET 6/3/2021 00:05:10' prior: 51002196 overrides: 16882612!
name
	
	^name.! !

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 00:05:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:05:12'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/3/2021 00:06:45'!
test20PortfolioCanBeNamed

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio'.

	
	self assert: 'portfolio' equals: portfolio name.
! !

!testRun: #PortfolioTest #test20PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:06:49'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'ET 6/3/2021 00:07:02'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'ET 6/3/2021 00:07:08' prior: 51002295!
named: aString 
	
	^self new initializeNamed: aString ! !

!testRun: #PortfolioTest #test20PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:07:11'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:07:21'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities portfolioParents string'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialization' stamp: 'ET 6/3/2021 00:07:21'!
initializeNamed: aString 
	self shouldBeImplemented.
	string := aString.! !
!Portfolio methodsFor: 'initialization' stamp: 'ET 6/3/2021 00:07:26' prior: 51002319!
initializeNamed: aString 

	string := aString.! !

!testRun: #PortfolioTest #test20PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:07:28'!
FAILURE!
!Portfolio methodsFor: 'transactions - private' stamp: 'ET 6/3/2021 00:08:01' overrides: 16882612!
name
	
	^'portfolio'.! !
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/3/2021 00:08:44'!
test24PortfolioCanBeNamed

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio'.

	
	self assert: 'portfolio' equals: portfolio name.
! !

!methodRemoval: PortfolioTest #test20PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:08:44'!
test20PortfolioCanBeNamed

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio'.

	
	self assert: 'portfolio' equals: portfolio name.
!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:08:52'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:08:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:08:53'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/3/2021 00:09:27'!
test24PortfolioNameIsWhatItWasNamed

	| portfolio |
	
	portfolio := Portfolio named: 'otroPortfolio'.

	
	self assert: 'otroPortfolio' equals: portfolio name.
! !

!testRun: #PortfolioTest #test24PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:09:29'!
FAILURE!
!Portfolio methodsFor: 'name' stamp: 'ET 6/3/2021 00:09:41' prior: 51002333 overrides: 16882612!
name
	
	^string.! !

!testRun: #PortfolioTest #test24PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:09:43'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:09:44'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:09:58'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities portfolioParents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:09:58' prior: 51002454 overrides: 16882612!
name
	
	^name.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:09:58' prior: 51002325!
initializeNamed: aString 

	name := aString.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:10:10'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'portfolioParents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialEntity category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:10:11'!
Object subclass: #FinancialEntity
	instanceVariableNames: 'financialEntities'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #FinancialEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialEntity category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:10:28'!
Object subclass: #FinancialEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'portfolioParents financialEntities name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:10:34'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'portfolioParents financialEntities name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:11:41'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialEntity category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:11:42'!
Object subclass: #FinancialEntity
	instanceVariableNames: 'portfolioParents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #FinancialEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialEntity category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:11:49'!
Object subclass: #FinancialEntity
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities portfolioParents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:11:58'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities portfolioParents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 00:12:03'!
PASSED!

FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities portfolioParents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:12:19'!
FinancialEntity subclass: #Portfolio
	instanceVariableNames: 'financialEntities portfolioParents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:12:24'!
FinancialEntity subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialEntity category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:12:40'!
Object subclass: #FinancialEntity
	instanceVariableNames: 'name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialEntity methodsFor: 'testing' stamp: 'ET 6/3/2021 00:12:38' overrides: 16882612!
name

	^name.! !

!methodRemoval: Portfolio #name stamp: 'ET 6/3/2021 00:13:01'!
name
	
	^name.!

!methodRemoval: ReceptiveAccount #name stamp: 'ET 6/3/2021 00:13:07'!
name
	
	^name.!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 00:13:11'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'ET 6/3/2021 00:15:02'!
test25PortfolioNameIsWhatItWasNamed

	| portfolio |
	
	portfolio := Portfolio named: 'otroPortfolio'.

	
	self assert: 'otroPortfolio' equals: portfolio name.
! !

!methodRemoval: PortfolioTest #test24PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:15:02'!
test24PortfolioNameIsWhatItWasNamed

	| portfolio |
	
	portfolio := Portfolio named: 'otroPortfolio'.

	
	self assert: 'otroPortfolio' equals: portfolio name.
!

NewClassWithInheritedAbstractMessages superclass: Report withClassName: #PortfolioStructureReport!

!classDefinition: #PortfolioStructureReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:16:26'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioStructureReport stamp: 'ET 6/3/2021 00:17:15'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

NewClassWithInheritedAbstractMessages superclass: Report withClassName: #PortfolioStructureReport!

!classDefinition: #PortfolioStructureReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 00:38:51'!
Report subclass: #PortfolioStructureReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:38:51' overrides: 51006316!
reportDeposit: aDepositTransaction

	self subclassResponsibility! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:38:51' overrides: 51006321!
reportPortfolio: aPortfolio

	self subclassResponsibility! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:38:51' overrides: 51006331!
reportTransferWithdraw: aTransferWithdrawTransaction

	self subclassResponsibility! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:38:51' overrides: 51006311!
reportAccount: aReceptiveAccount

	self subclassResponsibility! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:38:51' overrides: 51006326!
reportTransferDeposit: aTransferDepositTransaction

	self subclassResponsibility! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:38:51' overrides: 51006337!
reportWithdraw: aWithdrawTransaction

	self subclassResponsibility! !
!PortfolioTest methodsFor: 'summary report tests' stamp: 'ET 6/3/2021 00:39:36'!
test26

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la familia'.
! !

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:39:58'!
ERROR!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:40:18' prior: 51006580 overrides: 51006321!
reportPortfolio: aPortfolio

	^'portfolio de la familia'.! !

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:40:20'!
FAILURE!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:40:43' prior: 51006624 overrides: 51006321!
reportPortfolio: aPortfolio

	^OrderedCollection with: 'portfolio de la familia'.! !

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:40:45'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:40:46'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:40:46'!
PASSED!
!PortfolioTest methodsFor: 'summary report tests' stamp: 'ET 6/3/2021 00:41:05'!
test27

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la ciudad'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la ciudad'.
! !

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 00:41:23'!
FAILURE!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:41:46' prior: 51006633 overrides: 51006321!
reportPortfolio: aPortfolio

	^OrderedCollection with: aPortfolio name.! !

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 00:41:48'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:41:49'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 00:41:49'!
PASSED!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:43:32' prior: 51006611!
test26

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: 'cuenta de pepe'.
! !
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:43:47' prior: 51006854!
test26

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: 'cuenta de pepe'.
! !
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:43:32' prior: 51006869!
test26

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: 'cuenta de pepe'.
! !
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:39:36' prior: 51006885!
test26

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la familia'.
! !
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:44:20'!
test28

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: 'cuenta de pepe'.! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:44:26'!
ERROR!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:45:02' prior: 51006909!
test28

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: String tab, report first equals: 'cuenta de pepe'.! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:45:11'!
ERROR!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:50:17' prior: 51006749 overrides: 51006321!
reportPortfolio: aPortfolio
	|reports finalReport|
	finalReport := OrderedCollection with: aPortfolio name.
	
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	
	reports do: [:aFinancialEntityReport | finalReport addAllLast: (aFinancialEntityReport collect: [:a | String tab, a]  )].
	
	^finalReport.! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:50:32'!
ERROR!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:50:55' prior: 51006593 overrides: 51006311!
reportAccount: aReceptiveAccount

	^OrderedCollection with: 'cuenta de pepe'.! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:50:56'!
FAILURE!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:51:25' prior: 51006927!
test28

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 00:51:27'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:51:27'!
PASSED!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 00:52:50'!
test29

	| portfolio accountPepe accountPepa report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	accountPepe := ReceptiveAccount named: 'cuenta de pepe'.
	
	accountPepa := ReceptiveAccount named: 'cuenta de pepa'.
	
	portfolio addFinancialEntity: accountPepe.
	
	portfolio addFinancialEntity: accountPepa.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepa'.
	! !

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 00:52:51'!
FAILURE!

aFinancialEntity!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:53:51' prior: 51006963 overrides: 51006311!
reportAccount: aReceptiveAccount

	^OrderedCollection with: aReceptiveAccount name.! !

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 00:53:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 00:53:54'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 00:53:54'!
PASSED!
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:54:34' prior: 51006606 overrides: 51006337!
reportWithdraw: aWithdrawTransaction! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:54:39' prior: 51006586 overrides: 51006331!
reportTransferWithdraw: aTransferWithdrawTransaction! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:54:43' prior: 51006599 overrides: 51006326!
reportTransferDeposit: aTransferDepositTransaction! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:54:48' prior: 51006574 overrides: 51006316!
reportDeposit: aDepositTransaction! !
!PortfolioStructureReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 00:55:59' prior: 51006946 overrides: 51006321!
reportPortfolio: aPortfolio
	|reports finalReport|
	finalReport := OrderedCollection with: aPortfolio name.
	
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	
	reports do: [:aFinancialEntityReport | finalReport addAllLast: (aFinancialEntityReport collect: [:a | String tab, a]  )].
	
	^finalReport.! !

----SNAPSHOT----(3 June 2021 00:57:52) CuisUniversity-4532.image priorSource: 21496579!

johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
childrenPortfolio := Portfolio named: 'Portfolio de hijos'.
childrenPortfolio addFinancialEntity: johnsAccount.
childrenPortfolio addFinancialEntity: angiesAccount.

myAccount := ReceptiveAccount named: 'Cuenta mia'.
familyPortfolio := Portfolio named: 'Portfolio de la familia'.
familyPortfolio addFinancialEntity: myAccount.
familyPortfolio addFinancialEntity: childrenPortfolio.!

PortfolioStructureReport for: familyPortfolio !
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 01:00:21'!
test26PortfolioStructureReportOfNewPortfolioHasThatPortfolio

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la familia'.
! !

!methodRemoval: PortfolioTest #test26 stamp: 'ET 6/3/2021 01:00:26'!
test26

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la familia'.
!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 01:01:00'!
test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la ciudad'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la ciudad'.
! !

!methodRemoval: PortfolioTest #test27 stamp: 'ET 6/3/2021 01:01:00'!
test27

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la ciudad'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la ciudad'.
!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 01:01:16'!
test26PortfolioStructureReportOfNewPortfolioHasAName

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la familia'.
! !

!methodRemoval: PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasThatPortfolio stamp: 'ET 6/3/2021 01:01:16'!
test26PortfolioStructureReportOfNewPortfolioHasThatPortfolio

	| portfolio |
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	self assert: (PortfolioStructureReport for: portfolio) includes: 'portfolio de la familia'.
!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 01:01:39'!
test28PortfolioWithAccountStructureReport

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.! !

!methodRemoval: PortfolioTest #test28 stamp: 'ET 6/3/2021 01:01:39'!
test28

	| portfolio account report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.!
!PortfolioTest methodsFor: 'portfolio structure tests' stamp: 'ET 6/3/2021 01:01:55'!
test29PortfolioWithTwoAccountsStructureReport

	| portfolio accountPepe accountPepa report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	accountPepe := ReceptiveAccount named: 'cuenta de pepe'.
	
	accountPepa := ReceptiveAccount named: 'cuenta de pepa'.
	
	portfolio addFinancialEntity: accountPepe.
	
	portfolio addFinancialEntity: accountPepa.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepa'.
	! !

!methodRemoval: PortfolioTest #test29 stamp: 'ET 6/3/2021 01:01:55'!
test29

	| portfolio accountPepe accountPepa report|
	
	portfolio := Portfolio named: 'portfolio de la familia'.
	
	accountPepe := ReceptiveAccount named: 'cuenta de pepe'.
	
	accountPepa := ReceptiveAccount named: 'cuenta de pepa'.
	
	portfolio addFinancialEntity: accountPepe.
	
	portfolio addFinancialEntity: accountPepa.
	
	report := PortfolioStructureReport for: portfolio.
	
	self assert: report first equals: 'portfolio de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepa'.
	!
!PortfolioStructureReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:06:38' prior: 51007251 overrides: 51006321!
reportPortfolio: aPortfolio
	|reports finalReport|
	finalReport := OrderedCollection with: aPortfolio name.
	
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	
	reports do: [:aFinancialEntityReport | finalReport addAllLast: (aFinancialEntityReport collect: [:a | String tab, a]  )].
	
	^finalReport.! !

NewClassWithInheritedAbstractMessages superclass: Report withClassName: #SpecialSummaryReport!

!classDefinition: #SpecialSummaryReport category: 'Portfolio-Ejercicio' stamp: 'ET 6/3/2021 01:07:06'!
Report subclass: #SpecialSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!SpecialSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 01:07:06' overrides: 51006316!
reportDeposit: aDepositTransaction

	self subclassResponsibility! !
!SpecialSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 01:07:06' overrides: 51006321!
reportPortfolio: aPortfolio

	self subclassResponsibility! !
!SpecialSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 01:07:06' overrides: 51006331!
reportTransferWithdraw: aTransferWithdrawTransaction

	self subclassResponsibility! !
!SpecialSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 01:07:06' overrides: 51006311!
reportAccount: aReceptiveAccount

	self subclassResponsibility! !
!SpecialSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 01:07:06' overrides: 51006326!
reportTransferDeposit: aTransferDepositTransaction

	self subclassResponsibility! !
!SpecialSummaryReport class methodsFor: 'as yet unclassified' stamp: 'ET 6/3/2021 01:07:06' overrides: 51006337!
reportWithdraw: aWithdrawTransaction

	self subclassResponsibility! !
!ReceptiveAccountTest methodsFor: 'summary report tests' stamp: 'ET 6/3/2021 01:11:20'!
test19

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
! !

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:13:01'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:13:45' prior: 51007464 overrides: 51006311!
reportAccount: aReceptiveAccount

	^OrderedCollection with: 'cuenta de pepe' with: String tab, 'Balance = 0'.! !

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:13:48'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:14:00'!
test20

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepa'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepa'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
! !

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:14:02'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:14:17' prior: 51007497 overrides: 51006311!
reportAccount: aReceptiveAccount

	^OrderedCollection with: aReceptiveAccount name with: String tab, 'Balance = 0'.! !

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:14:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:14:19'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:15:50'!
test21

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepa'.
	report removeFirst.
	self assert: report first equals: String tab, 'Dep�sito por 100'.
	self assert: report includes: String tab, 'Balance = 100'.
! !
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:15:59' prior: 51007674!
test21

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Dep�sito por 100'.
	self assert: report includes: String tab, 'Balance = 100'.
! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:16:02'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:19:52' prior: 51007592 overrides: 51006311!
reportAccount: aReceptiveAccount
	|reports finalReport|
	
	finalReport := OrderedCollection with: aReceptiveAccount name.
	reports := aReceptiveAccount collectionReportsOfItsTransactions: self.
	
	finalReport addAllFirst: reports.

	^finalReport.! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:19:56'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:20:11' prior: 51007709 overrides: 51006311!
reportAccount: aReceptiveAccount
	|reports finalReport|
	
	finalReport := OrderedCollection with: aReceptiveAccount name.
	reports := aReceptiveAccount collectionReportsOfItsTransactions: self.
	
	finalReport addAllLast: reports.

	^finalReport.! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:20:12'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:20:38' prior: 51007445 overrides: 51006316!
reportDeposit: aDepositTransaction

	^String tab, 'Deposito por 100'.! !
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:20:52' prior: 51007739 overrides: 51006316!
reportDeposit: aDepositTransaction

	^String tab, 'Deposito por ', aDepositTransaction value asString.! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:20:56'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:21:23' prior: 51007746 overrides: 51006316!
reportDeposit: aDepositTransaction

	^String tab, 'Dep�sito por ', aDepositTransaction value asString.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:21:25'!
FAILURE!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:21:25'!
FAILURE!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:21:25'!
FAILURE!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:21:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:21:37'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:22:08' prior: 51007724 overrides: 51006311!
reportAccount: aReceptiveAccount
	|reports finalReport|
	
	finalReport := OrderedCollection with: aReceptiveAccount name.
	reports := aReceptiveAccount collectionReportsOfItsTransactions: self.
	
	finalReport addAllLast: reports.
	
	finalReport add: 'Balance = ', aReceptiveAccount balance asString.

	^finalReport.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:22:11'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:22:12'!
FAILURE!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:22:12'!
FAILURE!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:22:12'!
FAILURE!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:22:23'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:22:36' prior: 51007690!
test21

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Dep�sito por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 100'.
! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:22:38'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:22:48' prior: 51007969 overrides: 51006311!
reportAccount: aReceptiveAccount
	|reports finalReport|
	
	finalReport := OrderedCollection with: aReceptiveAccount name.
	reports := aReceptiveAccount collectionReportsOfItsTransactions: self.
	
	finalReport addAllLast: reports.
	
	finalReport add: String tab, 'Balance = ', aReceptiveAccount balance asString.

	^finalReport.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:22:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:22:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:22:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:22:52'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:23:30' prior: 51008188!
test21

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Withdraw register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Extracci�n por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = -100'.
! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:23:33'!
ERROR!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:22:36' prior: 51008424!
test21

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Dep�sito por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 100'.
! !

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:23:53'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:23:53'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:25:24'!
test22

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Withdraw register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Extracci�n por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = -100'.
! !

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:25:26'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:28:37' prior: 51007477 overrides: 51006337!
reportWithdraw: aWithdrawTransaction

	^String tab, 'Extracci�n por ', aWithdrawTransaction value negated.! !

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:28:38'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:28:49' prior: 51008683 overrides: 51006337!
reportWithdraw: aWithdrawTransaction

	^String tab, 'Extracci�n por ', aWithdrawTransaction value negated asString.! !

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:28:50'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:29:09' prior: 51008693 overrides: 51006337!
reportWithdraw: aWithdrawTransaction

	^String tab, 'Extracci�n por ', aWithdrawTransaction value asString.! !

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:29:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:29:12'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:29:12'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:34:50'!
test23

	| accountDestino accountOrigen reportDestino reportOrigen |
	
	accountDestino := ReceptiveAccount named: 'cuenta de pepe'.
	accountOrigen := ReceptiveAccount named: 'cuenta de pepa'.
	Transfer from: accountOrigen  to: accountDestino  amount: 100.
	
	reportDestino := SpecialSummaryReport for: accountDestino.
	reportOrigen := SpecialSummaryReport for: accountOrigen.
	
	
	self assert: (reportOrigen at: 2) equals: String tab, 'Salida por extracci�n de 100'.
	self assert: reportOrigen last includes: String tab, 'Balance = -100'.
	
	self assert: (reportDestino at: 2) equals: String tab, 'Entrada por dep�sito de 100'.
	self assert: reportDestino last includes: String tab, 'Balance = 100'.! !

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:34:53'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:35:30' prior: 51007470 overrides: 51006326!
reportTransferDeposit: aTransferDepositTransaction

	^String tab, 'Salida por extracci�n de ', aTransferDepositTransaction value asString.! !
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:36:02' prior: 51008945 overrides: 51006326!
reportTransferDeposit: aTransferDepositTransaction

	^String tab, 'Entrada por dep�sito de ', aTransferDepositTransaction value asString.! !

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:36:03'!
ERROR!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:36:14' prior: 51007457 overrides: 51006331!
reportTransferWithdraw: aTransferWithdrawTransaction

	^String tab, 'Entrada por dep�sito de ', aTransferWithdrawTransaction value asString.! !
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:36:24' prior: 51008965 overrides: 51006331!
reportTransferWithdraw: aTransferWithdrawTransaction

	^String tab, 'Salida por extracci�n de ', aTransferWithdrawTransaction value asString.! !

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:36:26'!
FAILURE!

reportOrigen last!

String tab, 'Balance = -100'!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:38:10' prior: 51008916!
test23

	| accountDestino accountOrigen reportDestino reportOrigen |
	
	accountDestino := ReceptiveAccount named: 'cuenta de pepe'.
	accountOrigen := ReceptiveAccount named: 'cuenta de pepa'.
	Transfer from: accountOrigen  to: accountDestino  amount: 100.
	
	reportDestino := SpecialSummaryReport for: accountDestino.
	reportOrigen := SpecialSummaryReport for: accountOrigen.
	
	
	self assert: (reportOrigen at: 2) equals: String tab, 'Salida por extracci�n de 100'.
	self assert: reportOrigen last equals: String tab, 'Balance = -100'.
	
	self assert: (reportDestino at: 2) equals: String tab, 'Entrada por dep�sito de 100'.
	self assert: reportDestino last equals: String tab, 'Balance = 100'.! !

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:38:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:38:12'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:38:37' prior: 51007577!
test20

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepa'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepa'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
! !
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:45:16'!
test26

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la familia'.
	self assert: report includes: 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 01:45:23'!
ERROR!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:45:56' prior: 51009107!
test26

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la familia'.
	self assert: report includes: String tab, 'Balance = 0'.
	
! !
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:46:00' prior: 51007451 overrides: 51006321!
reportPortfolio: aPortfolio

	^OrderedCollection with: 'cuenta de la familia' with: String tab, 'Balance = 0'.! !

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:46:03'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:46:03'!
PASSED!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:48:16'!
test27

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la ciudad'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la cuidad'.
	self assert: report includes: String tab, 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 01:48:19'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 01:48:36' prior: 51009133 overrides: 51006321!
reportPortfolio: aPortfolio

	^OrderedCollection with: aPortfolio name with: String tab, 'Balance = 0'.! !

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 01:48:38'!
FAILURE!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:48:54' prior: 51009352!
test27

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la ciudad'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la ciudad'.
	self assert: report includes: String tab, 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 01:48:58'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 01:48:59'!
PASSED!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:54:54'!
test28

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst
	self assert: report first equals: String tab, 'Balance = 0'.
	
! !
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 01:55:18'!
test29

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst
	self assert: report first equals: String tab, 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 01:55:21'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 02:00:42' prior: 51009367 overrides: 51006321!
reportPortfolio: aPortfolio
	|reports finalReport|
	finalReport := OrderedCollection with: aPortfolio name.
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	
	reports do: [:aFinancialEntityReport | finalReport addAllLast: (aFinancialEntityReport collect: [:a | String tab, a]  )].
	
	finalReport add: String tab, 'Balance = 0'.
	^finalReport.! !

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 02:00:51'!
ERROR!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:01:03' prior: 51009622!
test29

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst.
	self assert: report first equals: String tab, 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 02:01:05'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 02:01:06'!
FAILURE!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 02:01:06'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 02:01:06'!
FAILURE!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:01:25' prior: 51009602!
test28

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst
	self assert: report first equals: String tab, 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 02:01:27'!
ERROR!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:01:34' prior: 51009808!
test28

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst.
	self assert: report first equals: String tab, 'Balance = 0'.
	
! !

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 02:01:35'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 02:01:39'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 02:01:40'!
PASSED!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:03:28'!
test30

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: String tab, 'Balance = 100'.
	
! !
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:03:33' prior: 51010072!
test30

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report last equals: String tab, 'Balance = 100'.
	
! !

!testRun: #PortfolioTest #test30 stamp: 'ET 6/3/2021 02:03:35'!
FAILURE!
!SpecialSummaryReport class methodsFor: 'report - private' stamp: 'ET 6/3/2021 02:04:49' prior: 51009647 overrides: 51006321!
reportPortfolio: aPortfolio
	|reports finalReport|
	finalReport := OrderedCollection with: aPortfolio name.
	reports := aPortfolio collectionReportsOfItsFinancialEntities: self.
	
	reports do: [:aFinancialEntityReport | finalReport addAllLast: (aFinancialEntityReport collect: [:a | String tab, a]  )].
	
	finalReport add: String tab, 'Balance = ', aPortfolio balance asString.
	^finalReport.! !

!testRun: #PortfolioTest #test30 stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 02:04:51'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 02:04:52'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'ET 6/3/2021 02:04:52'!
PASSED!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:06:16'!
test19SpecialSummaryReportOfNewReceptiveAccount

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
! !

!methodRemoval: ReceptiveAccountTest #test19 stamp: 'ET 6/3/2021 02:06:16'!
test19

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:06:55'!
test20SpecialSummaryReportHasNameOfTheAccount

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepa'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepa'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
! !

!methodRemoval: ReceptiveAccountTest #test20 stamp: 'ET 6/3/2021 02:06:55'!
test20

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepa'.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepa'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 0'.
!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:08:10'!
test21SpecialSummaryReportOfAccountWithDeposit

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Dep�sito por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 100'.
! !

!methodRemoval: ReceptiveAccountTest #test21 stamp: 'ET 6/3/2021 02:08:10'!
test21

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Dep�sito por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = 100'.
!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:08:27'!
test22SpecialSummaryReportOfAccountWithWithdraw

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Withdraw register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Extracci�n por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = -100'.
! !

!methodRemoval: ReceptiveAccountTest #test22 stamp: 'ET 6/3/2021 02:08:27'!
test22

	| account report |
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Withdraw register: 100 on: account.
	
	report := SpecialSummaryReport for: account.
	
	self assert: report first equals: 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, 'Extracci�n por 100'.
	report removeFirst.
	self assert: report includes: String tab, 'Balance = -100'.
!
!ReceptiveAccountTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:08:43'!
test23SpecialSummaryReportOfBothAccountsInTransfer

	| accountDestino accountOrigen reportDestino reportOrigen |
	
	accountDestino := ReceptiveAccount named: 'cuenta de pepe'.
	accountOrigen := ReceptiveAccount named: 'cuenta de pepa'.
	Transfer from: accountOrigen  to: accountDestino  amount: 100.
	
	reportDestino := SpecialSummaryReport for: accountDestino.
	reportOrigen := SpecialSummaryReport for: accountOrigen.
	
	
	self assert: (reportOrigen at: 2) equals: String tab, 'Salida por extracci�n de 100'.
	self assert: reportOrigen last equals: String tab, 'Balance = -100'.
	
	self assert: (reportDestino at: 2) equals: String tab, 'Entrada por dep�sito de 100'.
	self assert: reportDestino last equals: String tab, 'Balance = 100'.! !

!methodRemoval: ReceptiveAccountTest #test23 stamp: 'ET 6/3/2021 02:08:43'!
test23

	| accountDestino accountOrigen reportDestino reportOrigen |
	
	accountDestino := ReceptiveAccount named: 'cuenta de pepe'.
	accountOrigen := ReceptiveAccount named: 'cuenta de pepa'.
	Transfer from: accountOrigen  to: accountDestino  amount: 100.
	
	reportDestino := SpecialSummaryReport for: accountDestino.
	reportOrigen := SpecialSummaryReport for: accountOrigen.
	
	
	self assert: (reportOrigen at: 2) equals: String tab, 'Salida por extracci�n de 100'.
	self assert: reportOrigen last equals: String tab, 'Balance = -100'.
	
	self assert: (reportDestino at: 2) equals: String tab, 'Entrada por dep�sito de 100'.
	self assert: reportDestino last equals: String tab, 'Balance = 100'.!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:09:08'!
test26SpecialSummaryReportOfNewPortfolio

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la familia'.
	self assert: report includes: String tab, 'Balance = 0'.
	
! !

!methodRemoval: PortfolioTest #test26 stamp: 'ET 6/3/2021 02:09:08'!
test26

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la familia'.
	self assert: report includes: String tab, 'Balance = 0'.
	
!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:09:45'!
test27SpecialSummaryReportOfPortfolioHasItsName

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la ciudad'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la ciudad'.
	self assert: report includes: String tab, 'Balance = 0'.
	
! !

!methodRemoval: PortfolioTest #test27 stamp: 'ET 6/3/2021 02:09:45'!
test27

	| portfolio report |
	
	portfolio := Portfolio named: 'cuenta de la ciudad'.

	report := SpecialSummaryReport for: portfolio.
	
	self assert: report includes: 'cuenta de la ciudad'.
	self assert: report includes: String tab, 'Balance = 0'.
	
!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:10:09'!
test28SpecialSummaryReportOfPortfolioWithNewAccount

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst.
	self assert: report first equals: String tab, 'Balance = 0'.
	
! !

!methodRemoval: PortfolioTest #test28 stamp: 'ET 6/3/2021 02:10:09'!
test28

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst.
	self assert: report first equals: String tab, 'Balance = 0'.
	
!

!methodRemoval: PortfolioTest #test29 stamp: 'ET 6/3/2021 02:15:21'!
test29

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report first equals: 'cuenta de la familia'.
	report removeFirst.
	self assert: report first equals: String tab, 'cuenta de pepe'.
	report removeFirst.
	self assert: report first equals: String tab, String tab, 'Balance = 0'.
	report removeFirst.
	self assert: report first equals: String tab, 'Balance = 0'.
	
!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:15:29'!
test29

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report last equals: String tab, 'Balance = 100'.
	
! !

!methodRemoval: PortfolioTest #test30 stamp: 'ET 6/3/2021 02:15:29'!
test30

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report last equals: String tab, 'Balance = 100'.
	
!
!PortfolioTest methodsFor: 'special summary report tests' stamp: 'ET 6/3/2021 02:16:20'!
test29SpecialSummaryReportOfPortfolioWithAccountWithRegisteredDeposit

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report last equals: String tab, 'Balance = 100'.
	
! !

!methodRemoval: PortfolioTest #test29 stamp: 'ET 6/3/2021 02:16:20'!
test29

	| portfolio account report |
	
	portfolio := Portfolio named: 'cuenta de la familia'.
	
	account := ReceptiveAccount named: 'cuenta de pepe'.
	Deposit register: 100  on: account.
	
	portfolio addFinancialEntity: account.

	report := SpecialSummaryReport for: portfolio.
	
	
	self assert: report last equals: String tab, 'Balance = 100'.
	
!

!testRun: #PortfolioTest #test29SpecialSummaryReportOfPortfolioWithAccountWithRegisteredDeposit stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountHasTheSameBalanceAsTheAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsHasBalanceTheSumOfTheBalancesOfItsAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioRegistersTransactionsOfItsOnlyAddedAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasOnlyRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioRegistersTransactionsOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioKnowsTransactionOfItsOnlyAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioKnowsTransactionOfAllOfItsAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithEmptyPortfolioHasZeroBalance stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithNonEmptyPortfolioHasItsBalance stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosHasBalanceTheSumOfTheBalancesOfItsPortfolios stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioWithAnAccountAndAPortfolioHasBalanceSumOfItsEntitiesBalance stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithNonEmptyPortfolioKnowsRegisteredTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithNonEmptyPortfolioKnowsTransactionsOfItsAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test15CannotAddAlreadyAddedAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioXWithNonEmptyPortfolioYCannotAddAccountsOfItsPortfolioY stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test17CannotAddPortfolioWithAccountsAlreadyInside stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test18CannotAddAccountThatHasBeenAddedByAParentPortfolio stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test19CannotAddItself stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test20SummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test21SummaryReportOfPortfolioWithTwoAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test22TransferNetReportOfPortfolioWithAParticipantOfATransfer stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test23TransferNetReportOfNewPortfolio stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCanBeNamed stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioNameIsWhatItWasNamed stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioStructureReportOfNewPortfolioHasAName stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test26SpecialSummaryReportOfNewPortfolio stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioStructureReportOfNewPortfolioHasTheNameOfThePortfolio stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test27SpecialSummaryReportOfPortfolioHasItsName stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioWithAccountStructureReport stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test28SpecialSummaryReportOfPortfolioWithNewAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioWithTwoAccountsStructureReport stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #PortfolioTest #test29SpecialSummaryReportOfPortfolioWithAccountWithRegisteredDeposit stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test08SummaryReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test09SummaryReportWithReceptiveAccountWithADeposit stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test10SummaryReportWithReceptiveAccountWithAWithdraw stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test11SummaryReportWithReceptiveAccountWithDepositAndWithdraw stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test12SummaryReportOOfBothAccountsInATransfer stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test13BalanceIsAtTheEndOfSummaryReport stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test14TransferNetReportWithNewReceptiveAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test15TransferNetReportOfBothAccountsInATransfer stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test16NonTransferTransactionsDoesNotModifyTransferNetReport stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test17ReceptiveAccountCanBeNamed stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test18ReceptiveAccountNameIsWhatItWasNamed stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test19SpecialSummaryReportOfNewReceptiveAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test20SpecialSummaryReportHasNameOfTheAccount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test21SpecialSummaryReportOfAccountWithDeposit stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test22SpecialSummaryReportOfAccountWithWithdraw stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test23SpecialSummaryReportOfBothAccountsInTransfer stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #TransferTest #test01TransferChangesBalanceOfBothParticipantAccounts stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #TransferTest #test02CanNotTransferWithZeroAmount stamp: 'ET 6/3/2021 02:16:25'!
PASSED!

!testRun: #TransferTest #test03CanNotTransferNegativeAmount stamp: 'ET 6/3/2021 02:16:26'!
PASSED!

!testRun: #TransferTest #test04TransferLegsAreRegisteredTransactionsOfItsParticipants stamp: 'ET 6/3/2021 02:16:26'!
PASSED!

!testRun: #TransferTest #test05CanTravelBetweenTransferAndItsLegs stamp: 'ET 6/3/2021 02:16:26'!
PASSED!

!testRun: #TransferTest #test06CanNotTransferBetweenTheSameAccount stamp: 'ET 6/3/2021 02:16:26'!
PASSED!

SpecialSummaryReport for: familyPortfolio!

----SNAPSHOT----(3 June 2021 02:17:55) CuisUniversity-4532.image priorSource: 21619620!