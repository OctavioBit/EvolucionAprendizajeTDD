----STARTUP---- (10 June 2021 10:46:59) as /home/alejandro/Documents/Cs.Computacion/Inge 1/linux64/CuisUniversity-4532.image!


TestCase subclass: #TestsTusLibros
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TestsTusLibros category: 'TusLibros' stamp: 'Am 6/10/2021 11:00:05'!
TestCase subclass: #TestsTusLibros
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'Am 6/10/2021 11:03:10'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:03:02'!
test01createdCartIsInitializedEmpty
	|aCart|
	
	aCart:= Cart new.
	self assert: aCart isEmpty equals: true.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:03:22'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:03:34'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:03:41' prior: 50876072!
isEmpty
	^true.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:03:43'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:03:43'!
PASSED!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:13:17' prior: 50876063!
test01createdCartIsInitializedEmpty
	|aCart aCatalog|
	
	aCatalog:= OrderedCollection new.
	aCart:= Cart withCatalog: aCatalog.
	self assert: aCart isEmpty equals: true.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:13:21'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:13:31'!
withCatalog: anOrderedCollection 
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:14:04' prior: 50876098!
withCatalog: aCatalog 
	self new initializeWithCatalog: aCatalog.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:14:09'!
ERROR!

!classDefinition: #Cart category: 'TusLibros' stamp: 'Am 6/10/2021 11:14:17'!
Object subclass: #Cart
	instanceVariableNames: 'catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'Am 6/10/2021 11:14:17'!
initializeWithCatalog: aCatalog 
	self shouldBeImplemented.
	catalog := aCatalog.! !
!Cart methodsFor: 'initialization' stamp: 'Am 6/10/2021 11:14:32' prior: 50876117!
initializeWithCatalog: aCatalog 
	catalog := aCatalog.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:14:38'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:15:00' prior: 50876103!
withCatalog: aCatalog 
	^self new initializeWithCatalog: aCatalog.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:15:19'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:15:19'!
PASSED!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:17:08'!
test02addingBookFromCatalogIsRegistered
	|aCart aCatalog|
	
	aCatalog:= OrderedCollection new with: '9780262033848'.
	aCart:= Cart withCatalog: aCatalog.
	
	
	self assert: aCart isEmpty equals: true.! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:21:45' prior: 50876142!
test02addingBookFromCatalogIsRegistered
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection new with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	aCart addToCart: ISBNCormen withQuantity: 1.
	
	self assert: aCart size equals: 1.
	self assert:( aCart contains: ISBNCormen withQuantity: 1) equals: true.! !

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:21:58'!
ERROR!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:21:59'!
ERROR!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:22:13' prior: 50876152!
test02addingBookFromCatalogIsRegistered
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	aCart addToCart: ISBNCormen withQuantity: 1.
	
	self assert: aCart size equals: 1.
	self assert:( aCart contains: ISBNCormen withQuantity: 1) equals: true.! !

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:22:14'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:22:31'!
addToCart: aString withQuantity: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:25:13' prior: 50876190!
addToCart: anISBN withQuantity: aNumber 
	self assert:  (catalog includes: anISBN)
	 ! !

Object subclass: #Cart
	instanceVariableNames: 'catalog cartContent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cart category: 'TusLibros' stamp: 'Am 6/10/2021 11:25:27'!
Object subclass: #Cart
	instanceVariableNames: 'catalog cartContent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'Am 6/10/2021 11:26:42' prior: 50876123!
initializeWithCatalog: aCatalog 
	catalog := aCatalog.
	cartContent:= Dictionary new.! !
!Cart methodsFor: 'initialization' stamp: 'Am 6/10/2021 11:28:21' prior: 50876213!
initializeWithCatalog: aCatalog 
	catalog := aCatalog.
	cartContent:= OrderedCollection  new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:29:27' prior: 50876196!
addToCart: anISBN withQuantity: aNumber 
	self assert:  (catalog includes: anISBN).
	aNumber timesRepeat: [ cartContent add: anISBN]
	 ! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:29:32' prior: 50876225!
addToCart: anISBN withQuantity: aNumber 
	self assert:  (catalog includes: anISBN).
	aNumber timesRepeat: [ cartContent add: anISBN].
	 ! !

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:30:03'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:30:35' prior: 50876076!
isEmpty
	^self size = 0.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:30:41' prior: 50876244!
isEmpty
	^(self size = 0).! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:31:01' overrides: 16880927!
size
	^cartContent size.! !

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:31:14'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:31:21'!
contains: aString withQuantity: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:33:33' prior: 50876259!
contains: anISBN withQuantity: aNumber 
	
	^aNumber= cartContent select:[:aBook| aBook=anISBN ]size.
	! !

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:33:43'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:34:08' prior: 50876265!
contains: anISBN withQuantity: aNumber 
	
	^aNumber= (cartContent select:[:aBook| aBook=anISBN ]size).
	! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:34:10'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:34:10'!
ERROR!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:34:10'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:34:40' prior: 50876275!
contains: anISBN withQuantity: aNumber 
	
	^aNumber= (cartContent select:[:aBook| aBook = anISBN ]) size.
	! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:34:44'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:34:44'!
PASSED!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:37:40'!
test03addingBookNotFromCatalogThrowsError
	|aCart aCatalog ISBNCormen ISBNBible|
	
	ISBNCormen:='9780262033848'.
	ISBNBible:= '9780840700551'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	aCart addToCart: ISBNBible withQuantity: 1.
	
	
	self assert: aCart size equals: 0.! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:39:08' prior: 50876305!
test03addingBookNotFromCatalogThrowsError
	|aCart aCatalog ISBNCormen ISBNBible|
	
	ISBNCormen:='9780262033848'.
	ISBNBible:= '9780840700551'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNBible withQuantity: 1. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart invalidISBNError equals: anError messageText.
			]! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:39:21' prior: 50876318!
test03addingBookNotFromCatalogThrowsError
	|aCart aCatalog ISBNCormen ISBNBible|
	
	ISBNCormen:='9780262033848'.
	ISBNBible:= '9780840700551'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNBible withQuantity: 1. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart invalidISBNError equals: anError messageText.
				self assert: Cart size = 0.
			]! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:40:21'!
test03cantAddBookNotFromCatalog
	|aCart aCatalog ISBNCormen ISBNBible|
	
	ISBNCormen:='9780262033848'.
	ISBNBible:= '9780840700551'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNBible withQuantity: 1. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart invalidISBNError equals: anError messageText.
				self assert: Cart size = 0.
			]! !

!methodRemoval: TestsTusLibros #test03addingBookNotFromCatalogThrowsError stamp: 'Am 6/10/2021 11:40:21'!
test03addingBookNotFromCatalogThrowsError
	|aCart aCatalog ISBNCormen ISBNBible|
	
	ISBNCormen:='9780262033848'.
	ISBNBible:= '9780840700551'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNBible withQuantity: 1. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart invalidISBNError equals: anError messageText.
				self assert: Cart size = 0.
			]!
!Cart class methodsFor: 'nil' stamp: 'Am 6/10/2021 11:41:16'!
invalidISBNError
	^'Book not in Catalog'! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:42:33' prior: 50876233!
addToCart: anISBN withQuantity: aNumber 
	(catalog includes: anISBN) ifFalse:[self error: 	Cart ].
	aNumber timesRepeat: [ cartContent add: anISBN].
	 ! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:42:48' prior: 50876392!
addToCart: anISBN withQuantity: aNumber 
	(catalog includes: anISBN) ifFalse:[self error: 	Cart invalidISBNError ].
	aNumber timesRepeat: [ cartContent add: anISBN].
	 ! !

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 11:42:57'!
ERROR!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:43:07' prior: 50876352!
test03cantAddBookNotFromCatalog
	|aCart aCatalog ISBNCormen ISBNBible|
	
	ISBNCormen:='9780262033848'.
	ISBNBible:= '9780840700551'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNBible withQuantity: 1. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart invalidISBNError equals: anError messageText.
				self assert: aCart size = 0.
			]! !

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 11:43:08'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:43:08'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:43:08'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 11:43:08'!
PASSED!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 11:44:18'!
test04cantAdd0Books
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNCormen withQuantity: 0. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart zeroBooksAddedError equals: anError messageText.
				self assert: aCart size = 0.
			]! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:45:15'!
zeroBookAddedError
	^'Must add at least one book'! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:45:45' prior: 50876400!
addToCart: anISBN withQuantity: aNumber 
	(catalog includes: anISBN) ifFalse:[self error: 	Cart invalidISBNError ].
	(aNumber<1) ifTrue: [self error: 	Cart zeroBookAddedError ].

	aNumber timesRepeat: [ cartContent add: anISBN].
	 ! !

!testRun: #TestsTusLibros #test04cantAdd0Books stamp: 'Am 6/10/2021 11:45:53'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:46:25'!
zeroBooksAddedError
	^'Must add at least one book'! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:46:25' prior: 50876463!
addToCart: anISBN withQuantity: aNumber 
	(catalog includes: anISBN) ifFalse:[self error: 	Cart invalidISBNError ].
	(aNumber<1) ifTrue: [self error: 	Cart zeroBooksAddedError ].

	aNumber timesRepeat: [ cartContent add: anISBN].
	 ! !

!methodRemoval: Cart class #zeroBookAddedError stamp: 'Am 6/10/2021 11:46:26'!
zeroBookAddedError
	^'Must add at least one book'!

!testRun: #TestsTusLibros #test04cantAdd0Books stamp: 'Am 6/10/2021 11:46:36'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 11:46:36'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 11:46:36'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 11:46:36'!
PASSED!

!testRun: #TestsTusLibros #test04cantAdd0Books stamp: 'Am 6/10/2021 11:46:36'!
PASSED!
!Cart methodsFor: 'initialization' stamp: 'Am 6/10/2021 11:49:15' prior: 50876219!
initializeWithCatalog: aCatalog 
	catalog := aCatalog.
	cartContent:= Dictionary  new.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 11:59:25' prior: 50876481!
addToCart: anISBN withQuantity: aNumber 

	|appearances|
	
	(catalog includes: anISBN) ifFalse:[self error: 	Cart invalidISBNError ].
	(aNumber<1) ifTrue: [self error: 	Cart zeroBooksAddedError ].

	appearances:= cartContent at: anISBN ifAbsent: [0].
	cartContent put: anISBN-> (appearances+aNumber).
	
	 ! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:01:00' prior: 50876252 overrides: 16880927!
size
	^cartContent sum:[:anISBNQuantity| anISBNQuantity].! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:01:15' prior: 50876531 overrides: 16880927!
size
	^cartContent sum:[:anISBNQuantity| anISBNQuantity] ifEmpty:[0].! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:02:37' prior: 50876292!
contains: anISBN withQuantity: aNumber 
	
	^aNumber=(cartContent at: anISBN ifAbsent: [0] ).
	! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 12:02:45'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:02:52'!
ERROR!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:02:52'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:03:41' prior: 50876517!
addToCart: anISBN withQuantity: aNumber 

	|appearances|
	
	(catalog includes: anISBN) ifFalse:[self error: 	Cart invalidISBNError ].
	(aNumber<1) ifTrue: [self error: 	Cart zeroBooksAddedError ].

	appearances:= cartContent at: anISBN ifAbsent: [0].
	cartContent add: anISBN-> (appearances+aNumber).
	
	 ! !

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:03:56'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 12:04:03'!
PASSED!

!testRun: #TestsTusLibros #test04cantAdd0Books stamp: 'Am 6/10/2021 12:04:24'!
PASSED!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:05:18'!
test05addingBookTwiceFromCatalogRegistersCorrectAmount
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	aCart addToCart: ISBNCormen withQuantity: 1.
	
	self assert: aCart size equals: 1.
	self assert:( aCart contains: ISBNCormen withQuantity: 1) equals: true.! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:05:35' prior: 50876581!
test05addingBookTwiceFromCatalogRegistersCorrectAmount
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	aCart addToCart: ISBNCormen withQuantity: 15.
	aCart addToCart: ISBNCormen withQuantity: 13.
	
	self assert: aCart size equals: 28.
	self assert:( aCart contains: ISBNCormen withQuantity: 28) equals: true.! !

!testRun: #TestsTusLibros #test05addingBookTwiceFromCatalogRegistersCorrectAmount stamp: 'Am 6/10/2021 12:05:39'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 12:05:39'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:05:39'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 12:05:39'!
PASSED!

!testRun: #TestsTusLibros #test04cantAdd0Books stamp: 'Am 6/10/2021 12:05:39'!
PASSED!

!testRun: #TestsTusLibros #test05addingBookTwiceFromCatalogRegistersCorrectAmount stamp: 'Am 6/10/2021 12:05:39'!
PASSED!

!methodRemoval: TestsTusLibros #test05addingBookTwiceFromCatalogRegistersCorrectAmount stamp: 'Am 6/10/2021 12:06:12'!
test05addingBookTwiceFromCatalogRegistersCorrectAmount
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	aCart addToCart: ISBNCormen withQuantity: 15.
	aCart addToCart: ISBNCormen withQuantity: 13.
	
	self assert: aCart size equals: 28.
	self assert:( aCart contains: ISBNCormen withQuantity: 28) equals: true.!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:06:57'!
test04cantAddZeroBooksToCart
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNCormen withQuantity: 0. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart zeroBooksAddedError equals: anError messageText.
				self assert: aCart size = 0.
			]! !

!methodRemoval: TestsTusLibros #test04cantAdd0Books stamp: 'Am 6/10/2021 12:06:57'!
test04cantAdd0Books
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNCormen withQuantity: 0. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart zeroBooksAddedError equals: anError messageText.
				self assert: aCart size = 0.
			]!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:07:28'!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen|
	
	ISBNCormen:='9780262033848'.
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	self 
		should: [	aCart addToCart: ISBNCormen withQuantity: 0. ]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anError |
				self assert: Cart zeroBooksAddedError equals: anError messageText.
				self assert: aCart size = 0.
			]! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:09:03' prior: 50876680!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen ISBNWatkins|
	
	ISBNCormen:='9780262033848'.
	ISBNWatkins:= '9780470528334'.
	
	
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	
	aCart ! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:09:13' prior: 50876697!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen ISBNWatkins|
	
	ISBNCormen:='9780262033848'.
	ISBNWatkins:= '9780470528334'.
	
	
	aCatalog:= OrderedCollection with: ISBNCormen.
	aCart:= Cart withCatalog: aCatalog.
	
	! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:11:34' prior: 50876708!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen ISBNWatkins|
	
	ISBNCormen:='9780262033848'.
	ISBNWatkins:= '9780470528334'.
	
	
	aCatalog:= OrderedCollection with: ISBNCormen with: ISBNWatkins .
	aCart:= Cart withCatalog: aCatalog.
	
	aCart addToCart: ISBNCormen withQuantity: 3.
	aCart addToCart: ISBNWatkins withQuantity: 2.
	
	self assert: aCart listCart equals:( OrderedCollection with: (ISBNCormen @ 3) with: (ISBNWatkins @2)).! !

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:11:42'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:11:50'!
listCart
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:13:40' prior: 50876739!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: (anISBN @anISBNQuantity )].! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:13:44' prior: 50876743!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: (anISBN @anISBNQuantity )].
	^list.! !

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:13:47'!
ERROR!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:14:08'!
ERROR!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:14:08'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:14:45' prior: 50876751!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: (anISBN@anISBNQuantity )].
	^list.! !

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:14:56'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:15:43' prior: 50876769!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: anISBN@anISBNQuantity].
	^list.! !

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 12:15:50'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:15:50'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 12:15:50'!
PASSED!

!testRun: #TestsTusLibros #test04cantAddZeroBooksToCart stamp: 'Am 6/10/2021 12:15:50'!
PASSED!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:15:50'!
ERROR!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:15:50'!
ERROR!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:16:41'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:18:00' prior: 50876780!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: '(',anISBN,',',anISBNQuantity asString,')'].
	^list.! !
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:19:10' prior: 50876719!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen ISBNWatkins|
	
	ISBNCormen:='9780262033848'.
	ISBNWatkins:= '9780470528334'.
	
	
	aCatalog:= OrderedCollection with: ISBNCormen with: ISBNWatkins .
	aCart:= Cart withCatalog: aCatalog.
	
	aCart addToCart: ISBNCormen withQuantity: 3.
	aCart addToCart: ISBNWatkins withQuantity: 2.
	
	self assert: aCart listCart equals:( OrderedCollection with: '(',ISBNCormen,',3)' with: '(',ISBNWatkins,',2)').! !

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:19:12'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 12:19:12'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:19:12'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 12:19:12'!
PASSED!

!testRun: #TestsTusLibros #test04cantAddZeroBooksToCart stamp: 'Am 6/10/2021 12:19:12'!
PASSED!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:19:12'!
PASSED!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:30:37' prior: 50876819!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen ISBNWatkins|
	
	ISBNCormen:='9780262033848'.
	ISBNWatkins:= '9780470528334'.
	
	
	aCatalog:= OrderedCollection with: ISBNCormen with: ISBNWatkins .
	aCart:= Cart withCatalog: aCatalog.
	
	aCart addToCart: ISBNCormen withQuantity: 3.
	aCart addToCart: ISBNWatkins withQuantity: 2.
	
	self assert: aCart listCart equals:( OrderedCollection with: {ISBNCormen,3} with: {ISBNWatkins,2}).! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:30:57' prior: 50876810!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: {anISBN,anISBNQuantity}].
	^list.! !

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:31:03'!
ERROR!
!TestsTusLibros methodsFor: 'testsCart' stamp: 'Am 6/10/2021 12:31:42' prior: 50876856!
test05CartCanListAllBooksCorrectly
	|aCart aCatalog ISBNCormen ISBNWatkins|
	
	ISBNCormen:='9780262033848'.
	ISBNWatkins:= '9780470528334'.
	
	
	aCatalog:= OrderedCollection with: ISBNCormen with: ISBNWatkins .
	aCart:= Cart withCatalog: aCatalog.
	
	aCart addToCart: ISBNCormen withQuantity: 3.
	aCart addToCart: ISBNWatkins withQuantity: 2.
	
	self assert: aCart listCart equals:( OrderedCollection with: {ISBNCormen . 3} with: {ISBNWatkins . 2}).! !
!Cart methodsFor: 'as yet unclassified' stamp: 'Am 6/10/2021 12:31:54' prior: 50876873!
listCart
	|list|
	list:= OrderedCollection new.
	cartContent keysAndValuesDo: [:anISBN :anISBNQuantity | list addLast: {anISBN . anISBNQuantity}].
	^list.! !

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:31:59'!
PASSED!

!testRun: #TestsTusLibros #test01createdCartIsInitializedEmpty stamp: 'Am 6/10/2021 12:32:04'!
PASSED!

!testRun: #TestsTusLibros #test02addingBookFromCatalogIsRegistered stamp: 'Am 6/10/2021 12:32:04'!
PASSED!

!testRun: #TestsTusLibros #test03cantAddBookNotFromCatalog stamp: 'Am 6/10/2021 12:32:04'!
PASSED!

!testRun: #TestsTusLibros #test04cantAddZeroBooksToCart stamp: 'Am 6/10/2021 12:32:04'!
PASSED!

!testRun: #TestsTusLibros #test05CartCanListAllBooksCorrectly stamp: 'Am 6/10/2021 12:32:04'!
PASSED!

----SNAPSHOT----(10 June 2021 12:42:06) CuisUniversity-4532.image priorSource: 17420411!

----QUIT----(10 June 2021 12:42:21) CuisUniversity-4532.image priorSource: 17448868!