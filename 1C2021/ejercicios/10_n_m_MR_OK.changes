----STARTUP---- (13 May 2021 21:04:43) as C:\Users\malka\Documents\2021\Inge Sist 1\windows64\CuisUniversity-4532.image!


TestCase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRover category: 'Mars Rover Excersice' stamp: 'ms 5/13/2021 21:06:44'!
TestCase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverTest category: 'Mars Rover Excersice' stamp: 'ms 5/13/2021 21:12:14'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRover category: 'Mars Rover Excersice' stamp: 'ms 5/13/2021 21:12:20'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!
!MarsRoverTest methodsFor: 'nil' stamp: 'ms 5/13/2021 21:16:30'!
test01

	|rover|
	
	rover := MarsRover StartPosition: 0@0 apuntando: #North.
	rover processPackage: ''.
	self assert: rover isPosition: 0@0 apuntando: #North! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:16:54' prior: 50975614!
test01

	|rover|
	
	rover := MarsRover StartPosition: 0@0 apuntando: #North.
	rover processPackage: ''.
	self assert: rover isPosition: 0@0 apuntando: #North
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:19:57' prior: 50975623!
test01

	|rover|
	
	rover := MarsRover StartPosition: 0@0 pointing: #North.
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: rover isPosition: 0@0 pointing: #North
	! !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 21:21:48'!
StartPosition: aStartPosition pointing: aCardinalPoint.

	! !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 21:22:29'!
isPosition: aPosition pointing: aCardinalPoint.

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:22:34' prior: 50975649!
isPosition: aPosition pointing: aCardinalPoint.

	^true! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:22:43' prior: 50975632!
test01

	|rover|
	
	rover := MarsRover StartPosition: 0@0 pointing: #North.
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: #North)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:22:45'!
ERROR!

!classDefinition: #MarsRover category: 'Mars Rover Excersice' stamp: 'ms 5/13/2021 21:24:18'!
Object subclass: #MarsRover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRover category: 'Mars Rover Excersice' stamp: 'ms 5/13/2021 21:24:19'!
Object subclass: #MarsRover
	instanceVariableNames: 'position pointing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:24:13' prior: 50975645!
StartPosition: aStartPosition pointing: aCardinalPoint.

	position:= aStartPosition.
	pointing := aCardinalPoint.  ! !

Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRover category: 'Mars Rover Excersice' stamp: 'ms 5/13/2021 21:24:51'!
Object subclass: #MarsRover
	instanceVariableNames: 'position pointingTo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:24:56' prior: 50975691!
StartPosition: aStartPosition pointing: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := aCardinalPoint.  ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:26:26' prior: 50975654!
isPosition: aPosition pointing: aCardinalPoint.

	^((aPosition = position) and: (pointingTo = aCardinalPoint))! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:26:30'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:26:30'!
ERROR!
!MarsRover class methodsFor: 'nil' stamp: 'ms 5/13/2021 21:29:23'!
StartPosition: aStartPosition pointing: aCardinalPoint.

	^ MarsRover new initialize: aStartPosition with: aCardinalPoint.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:29:43' prior: 50975729!
StartPosition: aStartPosition pointing: aCardinalPoint.

	^ MarsRover new initialize: aStartPosition with: aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:29:56'!
initialize: aStartPosition with: aCardinalPoint.
	position:= aStartPosition.
	pointingTo := aCardinalPoint.  ! !

!methodRemoval: MarsRover #StartPosition:pointing: stamp: 'ms 5/13/2021 21:30:01'!
StartPosition: aStartPosition pointing: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := aCardinalPoint.  !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:30:06'!
startPosition: aStartPosition pointing: aCardinalPoint.

	^ MarsRover new initialize: aStartPosition with: aCardinalPoint.! !

!methodRemoval: MarsRover class #StartPosition:pointing: stamp: 'ms 5/13/2021 21:30:11'!
StartPosition: aStartPosition pointing: aCardinalPoint.

	^ MarsRover new initialize: aStartPosition with: aCardinalPoint.!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:30:24'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:30:24'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:30:43' prior: 50975659!
test01

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: #North)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:30:49'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:30:49'!
ERROR!
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 21:32:17'!
processPackage: aPackage

	^ true

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:32:24'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:37:23'!
test02

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'f'. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@1 pointing: #North)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:37:40' prior: 50975801!
test02

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: #North)
	! !

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:37:44'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:39:51' prior: 50975794!
processPackage: aPackage
	
	aPackage  = 'f' ifTrue: [position moveFoward].
	^ true

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:41:56' prior: 50975827!
processPackage: aPackage
	
	aPackage  = 'f' ifTrue: [self moveFoward].
	^ true

	! !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 21:42:47'!
moveFoward

	position := position second ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:43:28' prior: 50975833!
processPackage: aPackage
	
	aPackage  = 'f' ifTrue: [self moveFoward].

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:44:04' prior: 50975838!
moveFoward

	position := position second + 1! !

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:44:08'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:44:08'!
ERROR!

position second !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:47:41' prior: 50975849!
moveFoward

	position := position  + 0@1! !

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:47:46'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:47:46'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:48:04' prior: 50975859!
moveFoward

	position := position  + (0@1)! !

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:48:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:48:09'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:48:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:48:13'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:48:37'!
test03

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 0@-1 pointing: #North)
	! !

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 21:48:39'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:49:20' prior: 50975843!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].

	! !

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 21:49:27'!
ERROR!
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 21:49:59'!
moveBackward
	
	position := position - (0@1)! !

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 21:50:03'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:50:06'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:50:06'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 21:50:06'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:57:25'!
test04

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: -1@0 pointing: #West)
	! !

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 21:57:26'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:57:54' prior: 50975893!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].
	(aPackage  = 'bl') ifTrue: [self rotateLeft].

	! !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 21:58:59'!
rotateLeft

	position := position - (1@0).
	pointingTo := #West ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:59:35' prior: 50975935!
rotateLeft

	position := position - (1@0).
	pointingTo := #West "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:59:44' prior: 50975941!
rotateLeft

	position := position - (1@0).
	pointingTo := #West
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 21:59:47'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 21:59:47'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 21:59:47'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 21:59:47'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 21:59:47'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:59:55' prior: 50975927!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].
	(aPackage  = 'l') ifTrue: [self rotateLeft].

	! !

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:00:04'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:00:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:00:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:00:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:00:05'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:00:46'!
test05

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@1 pointing: #East)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:01:02' prior: 50975916!
test04

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: -1@0 pointing: #West)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:01:15' prior: 50975991!
test05

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@1 pointing: #East)
	! !

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:01:22'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:02:11' prior: 50975971!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].
	(aPackage  = 'l') ifTrue: [self rotateLeft].
	(aPackage  = 'r') ifTrue: [self rotateRight].

	! !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/13/2021 22:02:56'!
rotateRight

	position := position + (1@0).
	pointingTo  := #East! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:03:11' prior: 50976029!
rotateRight

	position := position + (1@0).
	pointingTo  := #East 
	"aca pasa lo mismo que rotateLeft"! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:03:17'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:03:18'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:03:18'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:03:18'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:03:18'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:03:18'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:03:37'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:04:20' prior: 50976009!
test05

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 1@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:04:21'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:04:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:04:21'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:04:21'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:04:21'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:04:21'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:04:45'!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: ' '. 
	self assert: (rover isPosition: 1@0 pointing: #East)
	! !

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\TDD-Excercise.st----!

!classRemoval: #Rot13Test stamp: 'ms 5/13/2021 22:05:17'!
TestCase subclass: #Rot13Test
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TDD-Excercise'!

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\ISW1-2021-1C-1erParcialFINAL.st----!

!classRemoval: #TurboLaserCannon stamp: 'ms 5/13/2021 22:06:14'!
Weapon subclass: #TurboLaserCannon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #HSBlaster stamp: 'ms 5/13/2021 22:06:14'!
Weapon subclass: #HSBlaster
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Claw stamp: 'ms 5/13/2021 22:06:14'!
Weapon subclass: #Claw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Weapon stamp: 'ms 5/13/2021 22:06:14'!
Object subclass: #Weapon
	instanceVariableNames: 'type weight speedImpact usedTimes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #TankRover stamp: 'ms 5/13/2021 22:06:15'!
Robot subclass: #TankRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Aluminum3000 stamp: 'ms 5/13/2021 22:06:15'!
Robot subclass: #Aluminum3000
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Robot stamp: 'ms 5/13/2021 22:06:15'!
Object subclass: #Robot
	instanceVariableNames: 'type life speed maxWeaponWeight weapons'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #RobotWarsTest stamp: 'ms 5/13/2021 22:06:15'!
TestCase subclass: #RobotWarsTest
	instanceVariableNames: 'robotAluminum3000 robotTankRover weaponTurboLaserCannon weaponClaw weaponHSBlaster'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\ISW1-2021-1C-1erParcial.st----!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:07:42' prior: 50976080!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: ' '. 
self 
		should: [ ]
		raise: Error
		withMessageText: MarsRover 
	! !

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\Forms.st----!

!classRemoval: #DanIngalls stamp: 'ms 5/13/2021 22:10:02'!
DenotativeObject subclass: #DanIngalls
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'IS1'!

!classRemoval: #AlonsoChurch stamp: 'ms 5/13/2021 22:10:02'!
DenotativeObject subclass: #AlonsoChurch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'IS1'!

!classRemoval: #AlanTuring stamp: 'ms 5/13/2021 22:10:02'!
DenotativeObject subclass: #AlanTuring
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'IS1'!

!classRemoval: #AlanKay stamp: 'ms 5/13/2021 22:10:03'!
DenotativeObject subclass: #AlanKay
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'IS1'!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:13:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:18:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:18:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:20:10' prior: 50977597!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge
	! !

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:20:19'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:20:19'!
ERROR!
!MarsRover class methodsFor: 'nil' stamp: 'ms 5/13/2021 22:21:00'!
describeErrorMesagge

	^'El comando no es valido'! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:21:12'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:21:12'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:21:12'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:21:12'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:21:12'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:21:12'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:21:12'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:21:54' prior: 50976020!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].
	(aPackage  = 'l') ifTrue: [self rotateLeft].
	(aPackage  = 'r') ifTrue: [self rotateRight].
	
	self describeErrorMesagge 

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:22:05' prior: 50977802!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].
	(aPackage  = 'l') ifTrue: [self rotateLeft].
	(aPackage  = 'r') ifTrue: [self rotateRight].
	
	^Error signal: self describeErrorMesagge 

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:22:11' prior: 50977813!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [self moveFoward].
	(aPackage  = 'b') ifTrue: [self moveBackward].
	(aPackage  = 'l') ifTrue: [self rotateLeft].
	(aPackage  = 'r') ifTrue: [self rotateRight].
	
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:22:14'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:22:14'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:22:14'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:22:14'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:22:14'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:22:14'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:22:38' prior: 50977825!
processPackage: aPackage
	
	(aPackage  = 'f') ifTrue: [^self moveFoward].
	(aPackage  = 'b') ifTrue: [^self moveBackward].
	(aPackage  = 'l') ifTrue: [^self rotateLeft].
	(aPackage  = 'r') ifTrue: [^self rotateRight].
	
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:22:42'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:22:42'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:22:42'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:22:42'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:22:42'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:22:42'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:22:42'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 22:23:17' prior: 50977851!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	(aPackage  = 'f') ifTrue: [^self moveFoward].
	(aPackage  = 'b') ifTrue: [^self moveBackward].
	(aPackage  = 'l') ifTrue: [^self rotateLeft].
	(aPackage  = 'r') ifTrue: [^self rotateRight].
	
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/13/2021 22:23:43'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/13/2021 22:23:43'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/13/2021 22:23:43'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/13/2021 22:23:43'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/13/2021 22:23:43'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/13/2021 22:23:43'!
PASSED!

----STARTUP---- (14 May 2021 16:22:27) as C:\Users\malka\Documents\2021\Inge Sist 1\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\Mars Rover Excersice.st----!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:25:21'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:30:33'!
test07

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 1@0 pointing: #South)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:32:34' prior: 50978061!
test07

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: #South)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:32:35'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:32:35'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:32:35'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:32:35'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:32:35'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:32:35'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:32:35'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:32:35'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:34:30' prior: 50978005!
moveFoward

	pointingTo  = #North ifTrue: [position := position  + (0@1)].
	pointingTo  = #South ifTrue: [position := position  - (0@1)]! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:34:45' prior: 50978070!
test07

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@-1 pointing: #South)
	! !

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:34:47'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:34:48'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:34:49'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:34:49'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:34:49'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:34:49'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:34:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:34:49'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:35:38'!
test08

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #East.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 1@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:35:42'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:35:43'!
FAILURE!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:35:43'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:36:33' prior: 50978097!
moveFoward

	pointingTo  = #North ifTrue: [position := position  + (0@1)].
	pointingTo  = #South ifTrue: [position := position  - (0@1)].
	pointingTo  = #East ifTrue: [position := position  + (1@0)].
	pointingTo  = #West ifTrue: [position := position  - (1@0)]! !

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:36:45'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:37:01'!
test09

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: #West)
	! !

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/14/2021 16:37:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:37:19' prior: 50978175!
test09

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: #West)
	"este test paso de una, por que me di cuenta que tmb iba a necesitar el west"
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:37:55'!
test10

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 1@0 pointing: #West)
	! !

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:37:57'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:39:23' prior: 50978001!
moveBackward
	
	pointingTo = #North ifTrue: [position:= position - (0@1)].
	pointingTo = #South ifTrue: [position:= position + (0@1)].
	pointingTo = #West ifTrue: [position:= position - (1@0)].
	pointingTo = #East ifTrue: [position:= position + (1@0)].! !

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:39:25'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:39:31'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:39:32'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/14/2021 16:39:32'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:39:32'!
FAILURE!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:39:32'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:40:13' prior: 50978229!
moveBackward
	
	pointingTo = #North ifTrue: [position:= position - (0@1)].
	pointingTo = #South ifTrue: [position:= position + (0@1)].
	pointingTo = #West ifTrue: [position:= position + (1@0)].
	pointingTo = #East ifTrue: [position:= position - (1@0)].! !

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:40:17'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:40:19'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:40:42'!
test11

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #East.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: -1@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/14/2021 16:40:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/14/2021 16:40:57' prior: 50978304!
test11

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 0@1 pointing: #South)
	! !

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/14/2021 16:40:58'!
PASSED!

----STARTUP---- (15 May 2021 22:40:58) as C:\Users\malka\Documents\2021\Inge Sist 1\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\Mars Rover ExcersiceULTIMO MOMENTO.st----!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 22:42:48'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 22:43:56' prior: 50978436!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge.
		
		self assert: (rover isPosition:  0@0 pointing: #North). 
	! !

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 22:43:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 22:44:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:01:32'!
test12

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 1@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:01:42'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:01:42'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:03:17' prior: 50978548!
rotateLeft

	pointingTo := #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo := #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:03:22' prior: 50978642!
rotateLeft

	pointingTo := #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo := #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:03:58' prior: 50978655!
rotateLeft

	pointingTo := #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo := #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:04:05' prior: 50978668!
rotateLeft

	pointingTo := #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo := #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:04:19' prior: 50978681!
rotateLeft

	pointingTo := #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo := #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:04:43'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:04:43'!
ERROR!

self!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:07:45' prior: 50978694!
rotateLeft

	pointingTo = #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo = #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:07:54'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:09:23'!
test13

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #East.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@1 pointing: #North)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:09:25'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:09:25'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:09:25'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:09:52' prior: 50978712!
rotateLeft

	pointingTo = #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo = #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	
	pointingTo = #East ifTrue: [ 
		position := position + (0@1).
		pointingTo := #North].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:09:55'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:09:57'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:09:57'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:09:57'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:10:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:10:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:10:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:10:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:10:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:10:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:10:30'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:10:30'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:10:30'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:10:30'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:10:30'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:10:30'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:10:30'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:10:30'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:11:23' prior: 50978793!
rotateLeft

	pointingTo = #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo = #East ifTrue: [ 
		position := position + (0@1).
		pointingTo := #North].
	
	pointingTo = #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	
	
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:11:24'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:11:29'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:11:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:11:57'!
test14

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@-1 pointing: #South)
	! !

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:12:00'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:12:50' prior: 50978876!
rotateLeft

	pointingTo = #North ifTrue: [ 
		position := position - (1@0).
		pointingTo := #West].
	
	pointingTo = #East ifTrue: [ 
		position := position + (0@1).
		pointingTo := #North].
	
	pointingTo = #South ifTrue: [ 
		position := position + (1@0).
		pointingTo := #East].
	
		pointingTo = #West ifTrue: [ 
		position := position - (0@1).
		pointingTo := #South].
	
	
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:13:04'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:13:04'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:13:04'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:13:07'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:13:07'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:13:07'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:13:07'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:13:07'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:13:07'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:13:07'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:13:08'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:13:08'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:14:07'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:14:07'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:14:07'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:15:16' prior: 50978965!
rotateLeft

	pointingTo = #North ifTrue: [ 
		pointingTo := #West].
	
	pointingTo = #East ifTrue: [ 
		pointingTo := #North].
	
	pointingTo = #South ifTrue: [ 
		pointingTo := #East].
	
		pointingTo = #West ifTrue: [ 
		pointingTo := #South].
	
	
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:15:47' prior: 50978420!
test04

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: #West)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:18:17'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:18:17'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:18:17'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:18:17'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:18:17'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:21:37' prior: 50979090!
rotateLeft

	pointingTo = #North ifTrue: [ 
		pointingTo := #West] 
		ifFalse: [
			pointingTo = #East ifTrue: [ 
			pointingTo := #North]
			ifFalse: [
				pointingTo = #South ifTrue: [ 
				pointingTo := #East]
				ifFalse: [
					pointingTo = #West ifTrue: [ 
					pointingTo := #South]
					]
				]
			.]
	
	
	
	
	
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:21:42' prior: 50979146!
rotateLeft

	pointingTo = #North ifTrue: [ 
		pointingTo := #West] 
		ifFalse: [
			pointingTo = #East ifTrue: [ 
			pointingTo := #North]
			ifFalse: [
				pointingTo = #South ifTrue: [ 
				pointingTo := #East]
				ifFalse: [
					pointingTo = #West ifTrue: [ 
					pointingTo := #South]
					]
				]
			.]
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:21:48'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:21:48'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:21:48'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:21:48'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:21:57' prior: 50978428!
test05

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:22:10'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:22:10'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:22:10'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:22:10'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:22:11'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:22:11'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:22:11'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:22:11'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:22:11'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:22:11'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:22:11'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:22:11'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:22:11'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:22:11'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:22:21'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:22:41' prior: 50978556!
rotateRight

	pointingTo  := #East 
	"aca pasa lo mismo que rotateLeft"! !

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:22:44'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:22:46'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:22:46'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:22:47'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:22:47'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:22:47'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:22:47'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:23:05' prior: 50978629!
test12

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:23:19'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:23:19'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:23:19'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:23:29' prior: 50978752!
test13

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #East.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: #North)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:23:45'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:23:45'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:23:45'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:23:57' prior: 50978954!
test14

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: #South)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:24:02'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:24:58'!
test15

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #South.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: #West)
	! !

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:25:00'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:26:18' prior: 50979255!
rotateRight

	pointingTo  = #North ifTrue: [	pointingTo  := #East ].
	pointingTo  = #South ifTrue: [	pointingTo  := #West ].
	"aca pasa lo mismo que rotateLeft"! !

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:26:20'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:26:26'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:26:37'!
test16

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #West.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: #North)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:26:39'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:26:39'!
FAILURE!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:26:39'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:27:09' prior: 50979432!
rotateRight

	pointingTo  = #North ifTrue: [	pointingTo  := #East ].
	pointingTo  = #South ifTrue: [	pointingTo  := #West ].
	pointingTo  = #West ifTrue: [	pointingTo  := #North ].
	"aca pasa lo mismo que rotateLeft"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:27:50' prior: 50979560!
rotateRight

	pointingTo  = #North ifTrue: [	^pointingTo  := #East ].
	pointingTo  = #South ifTrue: [	^pointingTo  := #West ].
	pointingTo  = #West ifTrue: [	^pointingTo  := #North ].
	"aca pasa lo mismo que rotateLeft"! !

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:27:52'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:27:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:28:15'!
test17

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #East.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: #South)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:28:17'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:28:17'!
FAILURE!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:28:17'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:28:40' prior: 50979570!
rotateRight

	pointingTo  = #North ifTrue: [	^pointingTo  := #East ].
	pointingTo  = #South ifTrue: [	^pointingTo  := #West ].
	pointingTo  = #West ifTrue: [	^pointingTo  := #North ].
	pointingTo  = #East ifTrue: [	^pointingTo  := #South ].
	"aca pasa lo mismo que rotateLeft"! !

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:28:42'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:28:43'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:30:00' prior: 50979163!
rotateLeft

	pointingTo = #North ifTrue: [ ^pointingTo := #West] .
	
	pointingTo = #East ifTrue: [ ^pointingTo := #North].
	
	pointingTo = #South ifTrue: [^pointingTo := #East].
		
	pointingTo = #West ifTrue: [ 					pointingTo := #South].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:30:03' prior: 50979723!
rotateLeft

	pointingTo = #North ifTrue: [ ^pointingTo := #West] .
	
	pointingTo = #East ifTrue: [ ^pointingTo := #North].
	
	pointingTo = #South ifTrue: [^pointingTo := #East].
		
	pointingTo = #West ifTrue: [^		pointingTo := #South].
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:30:11'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:30:54'!
test18

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #East.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: #East)
	! !

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:30:55'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:31:59' prior: 50978535!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	(self size) timesRepeat: [
	(aPackage  = 'f') ifTrue: [^self moveFoward].
	(aPackage  = 'b') ifTrue: [^self moveBackward].
	(aPackage  = 'l') ifTrue: [^self rotateLeft].
	(aPackage  = 'r') ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:32:08' prior: 50979801!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	(self size) timesRepeat: [
		(aPackage  = 'f') ifTrue: [^self moveFoward].
		(aPackage  = 'b') ifTrue: [^self moveBackward].
		(aPackage  = 'l') ifTrue: [^self rotateLeft].
		(aPackage  = 'r') ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:32:10'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:32:17'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:32:17'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:32:17'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:32:22'!
ERROR!

self size!

self!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:33:06' prior: 50979815!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	(aPackage size) timesRepeat: [
		(aPackage  = 'f') ifTrue: [^self moveFoward].
		(aPackage  = 'b') ifTrue: [^self moveBackward].
		(aPackage  = 'l') ifTrue: [^self rotateLeft].
		(aPackage  = 'r') ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:33:10'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:33:15'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:33:15'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:33:15'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:50:05'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:50:05'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:50:05'!
ERROR!

aPackage!

self size!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:52:22' prior: 50979875!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	self do: [
		(aPackage  = 'f') ifTrue: [^self moveFoward].
		(aPackage  = 'b') ifTrue: [^self moveBackward].
		(aPackage  = 'l') ifTrue: [^self rotateLeft].
		(aPackage  = 'r') ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:53:00' prior: 50979980!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	self do: [:aChar | 
		(aChar  = 'f') ifTrue: [^self moveFoward].
		(aChar  = 'b') ifTrue: [^self moveBackward].
		(aChar  = 'l') ifTrue: [^self rotateLeft].
		(aChar  = 'r') ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:53:04'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:53:07'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:53:07'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:53:07'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:53:08'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:53:18'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:53:30'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:53:48' prior: 50979994!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = 'f') ifTrue: [^self moveFoward].
		(aChar  = 'b') ifTrue: [^self moveBackward].
		(aChar  = 'l') ifTrue: [^self rotateLeft].
		(aChar  = 'r') ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:53:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:53:51'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:53:51'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:53:54'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:54:34' prior: 50980056!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [^self moveFoward].
		(aChar  = $b) ifTrue: [^self moveBackward].
		(aChar  = $l) ifTrue: [^self rotateLeft].
		(aChar  = $r) ifTrue: [^self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:55:22' prior: 50980113!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward].
		(aChar  = $b) ifTrue: [self moveBackward].
		(aChar  = $l) ifTrue: [self rotateLeft].
		(aChar  = $r) ifTrue: [self rotateRight].
	].
	^Error signal: self class describeErrorMesagge 

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:57:06'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:57:06'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:57:06'!
ERROR!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:57:10'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:58:13' prior: 50980127!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward].
		(aChar  = $b) ifTrue: [self moveBackward].
		(aChar  = $l) ifTrue: [self rotateLeft].
		(aChar  = $r) ifTrue: [self rotateRight].
	].
	
	 (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/15/2021 23:58:18'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/15/2021 23:59:55' prior: 50980184!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward].
		(aChar  = $b) ifTrue: [self moveBackward].
		(aChar  = $l) ifTrue: [self rotateLeft].
		(aChar  = $r) ifTrue: [self rotateRight].
		^Error signal: self class describeErrorMesagge
	].
	
	 "(aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:00:32' prior: 50980240!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward].
		(aChar  = $b) ifTrue: [self moveBackward].
		(aChar  = $l) ifTrue: [self rotateLeft].
		(aChar  = $r) ifTrue: [self rotateRight].
		^Error signal: self class describeErrorMesagge
	].
	
	" (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:00:45' prior: 50980256!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward].
		(aChar  = $b) ifTrue: [self moveBackward].
		(aChar  = $l) ifTrue: [self rotateLeft].
		(aChar  = $r) ifTrue: [self rotateRight].
		"^Error signal: self class describeErrorMesagge"
	].
	
	 (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:00:53' prior: 50980272!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward].
		(aChar  = $b) ifTrue: [self moveBackward].
		(aChar  = $l) ifTrue: [self rotateLeft].
		(aChar  = $r) ifTrue: [self rotateRight].
		^Error signal: self class describeErrorMesagge
	].
	
	" (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:02:33' prior: 50980288!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward]
		ifFalse: [
			(aChar  = $b) ifTrue: [self moveBackward]
			ifFalse:[
			(aChar  = $l) ifTrue: [self rotateLeft]
			ifFalse: [
				(aChar  = $r) ifTrue: [self rotateRight]
				ifFalse: [^Error signal: self class describeErrorMesagge]
				]
			]
		]
		
	].
	
	" (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:02:36' prior: 50980304!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward]
		ifFalse: [
			(aChar  = $b) ifTrue: [self moveBackward]
			ifFalse:[
			(aChar  = $l) ifTrue: [self rotateLeft]
			ifFalse: [
				(aChar  = $r) ifTrue: [self rotateRight]
				ifFalse: [^Error signal: self class describeErrorMesagge]
				]
			]
		]
	].
	
	" (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 00:02:43'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:05:28'!
test19

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: #West)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 00:05:33'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 00:05:34'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 00:05:34'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 00:05:34'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 00:05:34'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:05:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:05:52' prior: 50980381!
test19

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'fbbzrll'. 
	self assert: (rover isPosition: 0@-1 pointing: #North)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:06:20' prior: 50980434!
test19

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: #East)
	! !

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:06:20'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:06:27' prior: 50980443!
test19

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: #West)
	! !

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:06:28'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:06:47'!
test20

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	rover processPackage: 'fbbzrll'. 
	self assert: (rover isPosition: 0@-1 pointing: #North)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:06:50'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 00:06:50'!
ERROR!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 00:06:50'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:07:26' prior: 50980509!
test20

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
	
		 
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge.
		
	self assert: (rover isPosition: 0@-1 pointing: #North)
	! !

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 00:07:34'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:07:49' prior: 50980566!
test20

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: #North.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge.
		
	self assert: (rover isPosition: 0@-1 pointing: #North)
	! !

Object subclass: #MarsRoverPointing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverPointing category: 'Mars Rover Excersice' stamp: 'ms 5/16/2021 00:09:37'!
Object subclass: #MarsRoverPointing
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

MarsRoverPointing subclass: #MarsRoverPointingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverPointingNorth category: 'Mars Rover Excersice' stamp: 'ms 5/16/2021 00:09:51'!
MarsRoverPointing subclass: #MarsRoverPointingNorth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

MarsRoverPointing subclass: #MarsRoverPointingSauth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverPointingSauth category: 'Mars Rover Excersice' stamp: 'ms 5/16/2021 00:09:54'!
MarsRoverPointing subclass: #MarsRoverPointingSauth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

MarsRoverPointing subclass: #MarsRoverPointingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverPointingEast category: 'Mars Rover Excersice' stamp: 'ms 5/16/2021 00:09:57'!
MarsRoverPointing subclass: #MarsRoverPointingEast
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

MarsRoverPointing subclass: #MarsRoverPointingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverPointingWest category: 'Mars Rover Excersice' stamp: 'ms 5/16/2021 00:10:01'!
MarsRoverPointing subclass: #MarsRoverPointingWest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

MarsRoverPointing subclass: #MarsRoverPointingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classDefinition: #MarsRoverPointingSouth category: 'Mars Rover Excersice' stamp: 'ms 5/16/2021 00:10:07'!
MarsRoverPointing subclass: #MarsRoverPointingSouth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!

!classRemoval: #MarsRoverPointingSauth stamp: 'ms 5/16/2021 00:10:15'!
MarsRoverPointing subclass: #MarsRoverPointingSauth
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars Rover Excersice'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:12:57' prior: 50978501!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := MarsRoverPointing new initializeWith:aCardinalPoint.  ! !
!MarsRoverPointing methodsFor: 'nil' stamp: 'ms 5/16/2021 00:14:17'!
initializeWith: aCardinalPoint to: aMarsRover
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:14:18' prior: 50980724!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := MarsRoverPointing new initializeWith:aCardinalPoint to:self ! !
!MarsRoverPointing methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:14:42' prior: 50980731!
initializeWith: aCardinalPoint to: aMarsRover

	self subclassResponsibility 
	! !
!MarsRoverPointing methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:16:32' prior: 50980745!
initializeWith: aCardinalPoint to: aMarsRover
	
	self subclassResponsibility ! !
!MarsRoverPointingEast methodsFor: 'nil' stamp: 'ms 5/16/2021 00:20:45' overrides: 50980751!
initializeWith:aCardinalPoint to: aMarsRover
	
	MarsRover initializePointingEast: self ! !
!MarsRoverPointing methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:21:11' prior: 50980751!
initializeWith: aCardinalPoint to: aMarsRover
	
	self subclassResponsibility ! !

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\Stack-Solution-2.st----!

!classRemoval: #OOStackBase stamp: 'ms 5/16/2021 00:22:41'!
OOStackTop subclass: #OOStackBase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-2'!

!classRemoval: #OOPushedObjectCell stamp: 'ms 5/16/2021 00:22:42'!
OOStackTop subclass: #OOPushedObjectCell
	instanceVariableNames: 'previous content'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-2'!

!classRemoval: #OOStackTop stamp: 'ms 5/16/2021 00:22:42'!
Object subclass: #OOStackTop
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-2'!

!classRemoval: #OOStack stamp: 'ms 5/16/2021 00:22:42'!
Object subclass: #OOStack
	instanceVariableNames: 'top'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-2'!

!classRemoval: #OOStackTest stamp: 'ms 5/16/2021 00:22:42'!
TestCase subclass: #OOStackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-2'!

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\Stack-Solution-1.st----!
!MarsRoverPointing class methodsFor: 'nil' stamp: 'ms 5/16/2021 00:33:45'!
xxx: aMarsRover

	self subclasses detect: [:aMarsRoverPointingClass | aMarsRoverPointingClass canHandle: aMarsRover
		]! !
!MarsRoverPointing class methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:35:05' prior: 50981346!
xxx: aMarsRover

	self subclasses detect: [:aMarsRoverPointingClass | aMarsRoverPointingClass canHandle: aMarsRover
		]
	 ifFound: [:aMarsRoverPointingClass | 
		aMarsRoverPointingClass new 
		] 
	ifNone:[]! !
!MarsRoverPointing class methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:35:18' prior: 50981354!
xxx: aMarsRover

	self subclasses detect: [:aMarsRoverPointingClass | aMarsRoverPointingClass canHandle: aMarsRover
		]
	 ifFound: [:aMarsRoverPointingClass | 
		aMarsRoverPointingClass new 
		] 
	ifNone:[^'error']! !
!MarsRoverPointingNorth methodsFor: 'nil' stamp: 'ms 5/16/2021 00:38:24' overrides: 50980763!
initializeWith: aCardinalPoint to: aMarsRover

	! !
!MarsRoverPointingNorth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:38:36' prior: 50981374 overrides: 50980763!
initializeWith: aCardinalPoint to: aMarsRover

	MarsRover initializePointingNorth: self ! !
!MarsRoverPointingSouth methodsFor: 'nil' stamp: 'ms 5/16/2021 00:38:48' overrides: 50980763!
initializeWith: aCardinalPoint to: aMarsRover

	MarsRover initializePointingSouth: self ! !
!MarsRoverPointingWest methodsFor: 'nil' stamp: 'ms 5/16/2021 00:38:58' overrides: 50980763!
initializeWith: aCardinalPoint to: aMarsRover

	MarsRover initializePointingWest: self ! !
!MarsRoverPointingWest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:39:03' prior: 50981392 overrides: 50980763!
initializeWith: aCardinalPoint to: aMarsRover

	aMarsRover initializePointingWest: self ! !
!MarsRoverPointingSouth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:39:07' prior: 50981386 overrides: 50980763!
initializeWith: aCardinalPoint to: aMarsRover

	aMarsRover initializePointingSouth: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:39:29' prior: 50980736!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := MarsRoverPointing new initializeTo:self ! !
!MarsRoverPointingSouth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:39:44'!
initializeTo: aMarsRover

	aMarsRover initializePointingSouth: self ! !

!methodRemoval: MarsRoverPointingSouth #initializeWith:to: stamp: 'ms 5/16/2021 00:39:48'!
initializeWith: aCardinalPoint to: aMarsRover

	aMarsRover initializePointingSouth: self !
!MarsRoverPointing methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:40:11'!
initializeTo: aMarsRover
	
	self subclassResponsibility ! !

!methodRemoval: MarsRoverPointing #initializeWith:to: stamp: 'ms 5/16/2021 00:40:14'!
initializeWith: aCardinalPoint to: aMarsRover
	
	self subclassResponsibility !
!MarsRoverPointingEast methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:40:27' overrides: 50981431!
initializeTo: aMarsRover
	
	aMarsRover initializePointingEast: self ! !

!methodRemoval: MarsRoverPointingEast #initializeWith:to: stamp: 'ms 5/16/2021 00:40:30'!
initializeWith:aCardinalPoint to: aMarsRover
	
	MarsRover initializePointingEast: self !
!MarsRoverPointingNorth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:40:39' overrides: 50981431!
initializeTo: aMarsRover

	aMarsRover initializePointingNorth: self ! !

!methodRemoval: MarsRoverPointingNorth #initializeWith:to: stamp: 'ms 5/16/2021 00:40:42'!
initializeWith: aCardinalPoint to: aMarsRover

	MarsRover initializePointingNorth: self !
!MarsRoverPointingWest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:40:56' overrides: 50981431!
initializeTo: aMarsRover

	aMarsRover initializePointingWest: self ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:41:00' prior: 50981412!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := MarsRoverPointing new initializeTo:self ! !
!MarsRoverPointingWest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:41:43' prior: 50981466 overrides: 50981431!
initializeTo: aMarsRover

	aMarsRover initializePointingWest! !

!methodRemoval: MarsRoverPointingWest #initializeWith:to: stamp: 'ms 5/16/2021 00:41:48'!
initializeWith: aCardinalPoint to: aMarsRover

	aMarsRover initializePointingWest: self !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/16/2021 00:42:24'!
initializePointingWest

	pointingTo := #West! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/13/2021 21:29:56' prior: 50981472!
initialize: aStartPosition with: aCardinalPoint.
	position:= aStartPosition.
	pointingTo := aCardinalPoint.  ! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 00:43:14'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:43:33' prior: 50981496!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := aCardinalPoint.  ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:44:50' prior: 50981549!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := MarsRoverPointing new.  
	
	"pointingTo := aCardinalPoint.  "! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:44:56'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 00:44:56'!
FAILURE!

self state!

self state!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:54:49' prior: 50981556!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	"pointingTo := MarsRoverPointing new.  "
	
	pointingTo := aCardinalPoint.  ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 00:55:42' prior: 50981570!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := MarsRoverPointing new.  
	
	"pointingTo := aCardinalPoint.  "! !

----End fileIn of C:\Users\malka\Documents\2021\Inge Sist 1\windows64\ISW1-2021-1C-1erParcialFINAL.st----!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:20:32' prior: 50978390!
test01

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: #North)
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:21:18' prior: 50981578!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := aCardinalPoint.  
	
	"pointingTo := aCardinalPoint.  "! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:22:35' prior: 50982371!
test01

	|rover north|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	north := MarsRoverPointingNorth new.
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: north)
	! !

pointingTo = aCardinalPoint!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:23:27' prior: 50978507!
isPosition: aPosition pointing: aCardinalPoint.

	^((aPosition = position) and: (pointingTo class = aCardinalPoint class))! !

pointingTo class = aCardinalPoint class!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:23:37'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:24:25' prior: 50978404!
test02

	|rover north|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	north := MarsRoverPointingNorth new..
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: north)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:24:34' prior: 50982422!
test02

	|rover north|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	north := MarsRoverPointingNorth new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: north)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:24:47' prior: 50978412!
test03

	|rover north|
	
	rover := MarsRover startPosition: 0@0 pointing:MarsRoverPointingNorth new.
	north := MarsRoverPointingNorth new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 0@-1 pointing: north)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:25:12' prior: 50979105!
test04

	|rover west|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	west := MarsRoverPointingWest new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: west)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:25:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:25:13'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:25:14'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:25:14'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:25:20'!
FAILURE!
!MarsRoverPointingNorth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:28:18'!
moveFowardTo: aMarsRover

	aMarsRover moveFowardsPointingAtNorth: self 

	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:28:26' prior: 50978524!
moveFoward

	pointingTo  moveFowardTo: self." ifTrue: [position := position  + (0@1)]."
	pointingTo  = #South ifTrue: [position := position  - (0@1)].
	pointingTo  = #East ifTrue: [position := position  + (1@0)].
	pointingTo  = #West ifTrue: [position := position  - (1@0)]! !
!MarsRover methodsFor: 'moveFowardPointing' stamp: 'ms 5/16/2021 10:29:32'!
moveFowardsPointingAtNorth: aCardinalPoint

	position := position  + (0@1).! !

aPosition = position!

pointingTo class = aCardinalPoint class!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:31:05'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:31:05'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:31:05'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:31:05'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:31:05'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:31:05'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:31:05'!
ERROR!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:31:05'!
ERROR!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:31:05'!
FAILURE!
!MarsRover methodsFor: 'moveFowardPointing' stamp: 'ms 5/16/2021 10:31:38' prior: 50982531!
moveFowardsPointingAtNorth: aCardinalPoint

	position := position  + (0@1).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:32:22' prior: 50982519!
moveFoward

	pointingTo  moveFowardTo: self.
	pointingTo  = #South ifTrue: [position := position  - (0@1)].
	pointingTo  = #East ifTrue: [position := position  + (1@0)].
	pointingTo  = #West ifTrue: [position := position  - (1@0)]
	
	"pointingTo = #Notrh ifTrue: [position := position  + (0@1)]."! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:33:53' prior: 50982591!
moveFoward

	pointingTo  moveFowardTo: self.
	pointingTo  moveFowardTo: self. 
	pointingTo  = #East ifTrue: [position := position  + (1@0)].
	pointingTo  = #West ifTrue: [position := position  - (1@0)]
	
	"pointingTo = #Notrh ifTrue: [position := position  + (0@1)].
	pointingTo  = #South ifTrue: [position := position  - (0@1)]."! !
!MarsRoverPointingSouth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:34:06'!
moveFowardTo: aMarsRover

	aMarsRover moveFowardsPointingAtSouth: self ! !
!MarsRover methodsFor: 'moveFowardPointing' stamp: 'ms 5/16/2021 10:34:52'!
moveFowardsPointingAtNorth

	position := position  + (0@1).! !

!methodRemoval: MarsRover #moveFowardsPointingAtNorth: stamp: 'ms 5/16/2021 10:34:58'!
moveFowardsPointingAtNorth: aCardinalPoint

	position := position  + (0@1).!
!MarsRoverPointingNorth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:35:18' prior: 50982513!
moveFowardTo: aMarsRover

	aMarsRover moveFowardsPointingAtNorth

	! !
!MarsRover methodsFor: 'nil' stamp: 'ms 5/16/2021 10:36:01'!
moveFowardsPointingAtSouth 

	position := position  - (0@1)! !
!MarsRoverPointingSouth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:36:25' prior: 50982617!
moveFowardTo: aMarsRover

	aMarsRover moveFowardsPointingAtSouth! !
!MarsRoverPointingEast methodsFor: 'nil' stamp: 'ms 5/16/2021 10:36:58'!
moveFowardTo: aMarsRover

	aMarsRover moveFowardsPointingAtEast! !
!MarsRover methodsFor: 'moveFowardPointing' stamp: 'ms 5/16/2021 10:37:01'!
moveFowardsPointingAtEast! !
!MarsRover methodsFor: 'moveFowardPointing' stamp: 'ms 5/16/2021 10:37:24' prior: 50982654!
moveFowardsPointingAtEast

	position := position  + (1@0)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:37:41' prior: 50982604!
moveFoward

	pointingTo  moveFowardTo: self.
	
	
	"pointingTo = #Notrh ifTrue: [position := position  + (0@1)].
	pointingTo  = #South ifTrue: [position := position  - (0@1)].
	pointingTo  = #East ifTrue: [position := position  + (1@0)].
	pointingTo  = #West ifTrue: [position := position  - (1@0)]"! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:37:44' prior: 50982663!
moveFoward

	pointingTo  moveFowardTo: self.
	
	"pointingTo = #Notrh ifTrue: [position := position  + (0@1)].
	pointingTo  = #South ifTrue: [position := position  - (0@1)].
	pointingTo  = #East ifTrue: [position := position  + (1@0)].
	pointingTo  = #West ifTrue: [position := position  - (1@0)]"! !
!MarsRover methodsFor: 'moveFowardPointing' stamp: 'ms 5/16/2021 10:37:59'!
moveFowardsPointingAtWest

	position := position  - (1@0)! !
!MarsRoverPointingWest methodsFor: 'nil' stamp: 'ms 5/16/2021 10:38:14'!
moveFowardTo: aMarsRover

	aMarsRover moveFowardsPointingAtWest! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:39:07' prior: 50979212!
test05

	|rover east|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	east := MarsRoverPointingNorth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: east)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:39:13' prior: 50978588!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge.
		
		self assert: (rover isPosition:  0@0 pointing: #North). 
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:39:39' prior: 50978445!
test07

	|rover south|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	south := MarsRoverPointingSouth new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@-1 pointing: south)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:39:57' prior: 50978453!
test08

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 1@0 pointing: MarsRoverPointingEast new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:40:11' prior: 50982722!
test07

	|rover south|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	
	rover processPackage: 'f'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingSouth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:40:16' prior: 50982743!
test07

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	
	rover processPackage: 'f'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingSouth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:40:28' prior: 50982699!
test05

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:40:52' prior: 50982455!
test04

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingWest new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:41:03' prior: 50982444!
test03

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing:MarsRoverPointingNorth new.
	
	rover processPackage: 'b'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:41:15' prior: 50982433!
test02

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:41:28' prior: 50982394!
test01

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:41:50' prior: 50978461!
test09

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: MarsRoverPointingWest new)
	"este test paso de una, por que me di cuenta que tmb iba a necesitar el west"
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:41:57' prior: 50978472!
test10

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 1@0 pointing: MarsRoverPointingWest new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:42:16' prior: 50978480!
test11

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingSouth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:42:38' prior: 50979296!
test12

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new..
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:42:57' prior: 50979337!
test13

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:43:19' prior: 50979380!
test14

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingSouth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:43:32' prior: 50979421!
test15

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingWest new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:43:50' prior: 50979512!
test16

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:44:08' prior: 50979619!
test17

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingSouth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:44:20' prior: 50979790!
test18

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:44:33' prior: 50980454!
test19

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingWest new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:44:48' prior: 50980626!
test20

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:44:52'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:44:52'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:44:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:44:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:44:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:44:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:44:52'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:44:57'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:45:39'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:45:39'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:45:39'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:45:39'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:45:39'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:45:39'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:45:39'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:45:44'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:45:58' prior: 50982710!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorMesagge.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:46:02'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:46:02'!
FAILURE!
!MarsRoverPointing methodsFor: 'nil' stamp: 'ms 5/16/2021 10:46:41'!
moveBackwardTo: aMarsRover

	self subclassResponsibility ! !
!MarsRoverPointing methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:46:46'!
moveFowardTo: aMarsRover

	self subclassResponsibility ! !
!MarsRoverPointingNorth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:47:01' overrides: 50983101!
moveBackwardTo: aMarsRover! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:47:28' prior: 50978513!
moveBackward
	
	pointingTo  moveBackwardTo: self.
	"
	pointingTo = #North ifTrue: [position:= position - (0@1)].
	pointingTo = #South ifTrue: [position:= position + (0@1)].
	pointingTo = #West ifTrue: [position:= position + (1@0)].
	pointingTo = #East ifTrue: [position:= position - (1@0)]."! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 10:48:20'!
moveBackwardPointingAtNorth

position:= position - (0@1)! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 10:48:36'!
moveBackwardPointingAtSouth

position:= position + (0@1)! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 10:48:54'!
moveBackwardPointingAtEast

position:= position - (1@0)! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 10:49:01'!
moveBackwardPointingAtWest

position:= position + (1@0)! !
!MarsRoverPointingNorth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:49:14' prior: 50983111 overrides: 50983101!
moveBackwardTo: aMarsRover

	aMarsRover moveBackwardPointingAtNorth! !
!MarsRoverPointingEast methodsFor: 'nil' stamp: 'ms 5/16/2021 10:49:24' overrides: 50983101!
moveBackwardTo: aMarsRover

	aMarsRover moveBackwardPointingAtEast! !
!MarsRoverPointingSouth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:49:36' overrides: 50983101!
moveBackwardTo: aMarsRover

	aMarsRover moveBackwardPointingAtSouth ! !
!MarsRoverPointingWest methodsFor: 'nil' stamp: 'ms 5/16/2021 10:49:43' overrides: 50983101!
moveBackwardTo: aMarsRover

	aMarsRover moveBackwardPointingAtWest ! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:49:48'!
FAILURE!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:49:48'!
PASSED!
!MarsRoverPointing methodsFor: 'nil' stamp: 'ms 5/16/2021 10:51:00'!
rotateLeftTo: aMarsRover

	self subclassResponsibility ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:51:02' prior: 50979737!
rotateLeft

	pointingTo rotateLeftTo: self
	"pointingTo = #North ifTrue: [ ^pointingTo := #West] .
	
	pointingTo = #East ifTrue: [ ^pointingTo := #North].
	
	pointingTo = #South ifTrue: [^pointingTo := #East].
		
	pointingTo = #West ifTrue: [^		pointingTo := #South]."
	
	 "aca hay que fijarse en verdad en que ponting esta, por que no es lo mismo rotar del norte que rotar del sur"! !
!MarsRoverPointingNorth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:51:47' overrides: 50983217!
rotateLeftTo: aMarsRover

	aMarsRover ! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:52:12'!
rotateLeftPointingAtNorth

	pointingTo := #West! !
!MarsRoverPointingNorth methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:52:22' prior: 50983237 overrides: 50983217!
rotateLeftTo: aMarsRover

	aMarsRover rotateLeftPointingAtNorth! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:52:47'!
rotateLeftPointingAtSouth

	pointingTo := #East! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:53:04'!
rotateLeftPointingAtEast

	pointingTo := #North! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:53:12'!
rotateLeftPointingAtWest

	pointingTo := #South! !
!MarsRoverPointingSouth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:53:20' overrides: 50983217!
rotateLeftTo: aMarsRover

	aMarsRover rotateLeftPointingAtSouth! !
!MarsRoverPointingEast methodsFor: 'nil' stamp: 'ms 5/16/2021 10:53:35' overrides: 50983217!
rotateLeftTo: aMarsRover

	aMarsRover rotateLeftPointingAtEast ! !
!MarsRoverPointingWest methodsFor: 'nil' stamp: 'ms 5/16/2021 10:53:41' overrides: 50983217!
rotateLeftTo: aMarsRover

	aMarsRover rotateLeftPointingAtWest ! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:54:33'!
rotateRightPointingAtNorth

	pointingTo  := #East! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:54:47'!
rotateRightPointingAtSouth

	pointingTo  := #Wesst! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:54:48' prior: 50983285!
rotateRightPointingAtSouth

	pointingTo  := #West! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:54:58'!
rotateRightPointingAtWest

	pointingTo  := #North! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:55:04'!
rotateRightPointingAtEast

	pointingTo  := #South! !
!MarsRoverPointing methodsFor: 'nil' stamp: 'ms 5/16/2021 10:55:33'!
rotateRightTo: aMarsRover

	self subclassResponsibility ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 10:55:34' prior: 50979669!
rotateRight
	
	pointingTo rotateRightTo: self
	
	"pointingTo  = #North ifTrue: [	^pointingTo  := #East ].
	pointingTo  = #South ifTrue: [	^pointingTo  := #West ].
	pointingTo  = #West ifTrue: [	^pointingTo  := #North ].
	pointingTo  = #East ifTrue: [	^pointingTo  := #South ]."
	
	"aca pasa lo mismo que rotateLeft"! !
!MarsRoverPointingNorth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:55:54' overrides: 50983304!
rotateRightTo: aMarsRover

	aMarsRover rotateRightPointingAtNorth ! !
!MarsRoverPointingEast methodsFor: 'nil' stamp: 'ms 5/16/2021 10:56:13' overrides: 50983304!
rotateRightTo: aMarsRover

	aMarsRover rotateRightPointingAtEast ! !
!MarsRoverPointingSouth methodsFor: 'nil' stamp: 'ms 5/16/2021 10:56:20' overrides: 50983304!
rotateRightTo: aMarsRover

	aMarsRover rotateRightPointingAtSouth ! !
!MarsRoverPointingWest methodsFor: 'nil' stamp: 'ms 5/16/2021 10:56:29' overrides: 50983304!
rotateRightTo: aMarsRover

	aMarsRover rotateRightPointingAtWest ! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:56:47'!
FAILURE!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:56:47'!
ERROR!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:56:47'!
PASSED!
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:58:03' prior: 50983241!
rotateLeftPointingAtNorth

	pointingTo := MarsRoverPointingWest new! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:58:13' prior: 50983256!
rotateLeftPointingAtEast

	pointingTo := MarsRoverPointingNorth new! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:58:23' prior: 50983252!
rotateLeftPointingAtSouth

	pointingTo := MarsRoverPointingEast new! !
!MarsRover methodsFor: 'rotateLeftPointing' stamp: 'ms 5/16/2021 10:58:33' prior: 50983260!
rotateLeftPointingAtWest

	pointingTo := MarsRoverPointingSouth new! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:58:40' prior: 50983300!
rotateRightPointingAtEast

	pointingTo  := MarsRoverPointingSouth new! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:58:48' prior: 50983280!
rotateRightPointingAtNorth

	pointingTo  := MarsRoverPointingEast new! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:58:52' prior: 50983290!
rotateRightPointingAtSouth

	pointingTo  := MarsRoverPointingWest new! !
!MarsRover methodsFor: 'rotateRightPointing' stamp: 'ms 5/16/2021 10:58:58' prior: 50983295!
rotateRightPointingAtWest

	pointingTo  := MarsRoverPointingNorth new! !

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:59:05'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 10:59:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 10:59:05'!
FAILURE!

rover!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:00:08' prior: 50982763!
test05

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:00:11'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:00:24'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:00:25'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:00:40'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:01:32' prior: 50983309!
rotateRight
	
	pointingTo rotateRightTo: self
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:01:43' prior: 50983222!
rotateLeft

	pointingTo rotateLeftTo: self! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:01:48' prior: 50982676!
moveFoward

	pointingTo  moveFowardTo: self.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:01:52' prior: 50983115!
moveBackward
	
	pointingTo  moveBackwardTo: self.
	! !

!methodRemoval: MarsRoverPointing #initializeTo: stamp: 'ms 5/16/2021 11:03:26'!
initializeTo: aMarsRover
	
	self subclassResponsibility !

!methodRemoval: MarsRoverPointingEast #initializeTo: stamp: 'ms 5/16/2021 11:03:31'!
initializeTo: aMarsRover
	
	aMarsRover initializePointingEast: self !

!methodRemoval: MarsRoverPointingNorth #initializeTo: stamp: 'ms 5/16/2021 11:03:37'!
initializeTo: aMarsRover

	aMarsRover initializePointingNorth: self !

!methodRemoval: MarsRoverPointingSouth #initializeTo: stamp: 'ms 5/16/2021 11:03:41'!
initializeTo: aMarsRover

	aMarsRover initializePointingSouth: self !

!methodRemoval: MarsRoverPointingWest #initializeTo: stamp: 'ms 5/16/2021 11:03:45'!
initializeTo: aMarsRover

	aMarsRover initializePointingWest!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:04:02'!
PASSED!
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 11:04:36' prior: 50983137!
moveBackwardPointingAtEast

	position:= position - (1@0)! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 11:04:39' prior: 50983127!
moveBackwardPointingAtNorth

	position:= position - (0@1)! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 11:04:41' prior: 50983132!
moveBackwardPointingAtSouth

	position:= position + (0@1)! !
!MarsRover methodsFor: 'moveBackwardPointng' stamp: 'ms 5/16/2021 11:04:44' prior: 50983142!
moveBackwardPointingAtWest

	position:= position + (1@0)! !
!MarsRover methodsFor: 'initialization' stamp: 'ms 5/16/2021 11:04:49' prior: 50982386!
initialize: aStartPosition with: aCardinalPoint.

	position:= aStartPosition.
	pointingTo := aCardinalPoint.  
	! !

!methodRemoval: MarsRover #initializePointingWest stamp: 'ms 5/16/2021 11:04:58'!
initializePointingWest

	pointingTo := #West!

!testRun: #MarsRoverTest #test01 stamp: 'ms 5/16/2021 11:05:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:05:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:05:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:05:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:05:03'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:05:37' prior: 50980322!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward]
		ifFalse: [
			(aChar  = $b) ifTrue: [self moveBackward]
			ifFalse:[
				(aChar  = $l) ifTrue: [self rotateLeft]
				ifFalse: [
					(aChar  = $r) ifTrue: [self rotateRight]
					ifFalse: [^Error signal: self class describeErrorMesagge]
				]
			]
		]
	].
	
	" (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:07:05'!
test01AssertWhenAPackageIsEmpty

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test01 stamp: 'ms 5/16/2021 11:07:10'!
test01

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: ''. "sin esto testeo el estado de que no lo movi y esta bien posisionado, si esta con esto es funcionamiento de al no pasarle nada, entonces quedate en el mismo lugar, testeamos comportamiento"
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:12:39'!
describeErrorTheCommandIsNotValid

	^'El comando no es valido'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:12:39' prior: 50983761!
processPackage: aPackage
	
	(aPackage  = '') ifTrue: [^true].
	aPackage do: [:aChar | 
		(aChar  = $f) ifTrue: [self moveFoward]
		ifFalse: [
			(aChar  = $b) ifTrue: [self moveBackward]
			ifFalse:[
				(aChar  = $l) ifTrue: [self rotateLeft]
				ifFalse: [
					(aChar  = $r) ifTrue: [self rotateRight]
					ifFalse: [^Error signal: self class describeErrorTheCommandIsNotValid]
				]
			]
		]
	].
	
	" (aPackage  = ' ') ifTrue: [^Error signal: self class describeErrorMesagge ]"

	! !

!methodRemoval: MarsRover class #describeErrorMesagge stamp: 'ms 5/16/2021 11:12:39'!
describeErrorMesagge

	^'El comando no es valido'!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:12:53'!
ERROR!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:12:53'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:12:53'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:13:10' prior: 50983042!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:13:16' prior: 50982931!
test20

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'ms 5/16/2021 11:13:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:13:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:13:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:13:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:15:27'!
test21

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:17:47'!
test21CaseSensitive

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test21 stamp: 'ms 5/16/2021 11:17:50'!
test21

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 11:18:35' prior: 50983971!
test21CaseSensitive

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!testRun: #MarsRoverTest #test21CaseSensitive stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test21CaseSensitive stamp: 'ms 5/16/2021 11:18:38'!
PASSED!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'ms 5/16/2021 11:23:18'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test17 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test18 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test19 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test20 stamp: 'ms 5/16/2021 11:23:19'!
PASSED!

!testRun: #MarsRoverTest #test21CaseSensitive stamp: 'ms 5/16/2021 11:23:19'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:05:45' prior: 50983779!
test01AssertWhenAPackageIsEmpty

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: ''. 
	
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:07:12'!
test02AssertWhenAMarsRoverMoveFoward

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test02 stamp: 'ms 5/16/2021 12:07:19'!
test02

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:07:47'!
test03AssertWhenAMarsRoverMoveBackwards

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing:MarsRoverPointingNorth new.
	
	rover processPackage: 'b'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test03 stamp: 'ms 5/16/2021 12:07:48'!
test03

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing:MarsRoverPointingNorth new.
	
	rover processPackage: 'b'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:08:52'!
test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingWest new)
	! !

!methodRemoval: MarsRoverTest #test04 stamp: 'ms 5/16/2021 12:08:52'!
test04

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingWest new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:09:01'!
test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing:MarsRoverPointingNorth new.
	
	rover processPackage: 'b'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwards stamp: 'ms 5/16/2021 12:09:04'!
test03AssertWhenAMarsRoverMoveBackwards

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing:MarsRoverPointingNorth new.
	
	rover processPackage: 'b'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:09:12'!
test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test02AssertWhenAMarsRoverMoveFoward stamp: 'ms 5/16/2021 12:09:12'!
test02AssertWhenAMarsRoverMoveFoward

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:09:51'!
test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !

!methodRemoval: MarsRoverTest #test05 stamp: 'ms 5/16/2021 12:09:51'!
test05

	|rover |
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:16:27'!
test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	! !

!methodRemoval: MarsRoverTest #test06 stamp: 'ms 5/16/2021 12:16:31'!
test06

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:17:14'!
test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	! !

!methodRemoval: MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'ms 5/16/2021 12:17:14'!
test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:18:02'!
test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test20 stamp: 'ms 5/16/2021 12:18:03'!
test20

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:18:29'!
test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	
	rover processPackage: 'f'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingSouth new)
	! !

!methodRemoval: MarsRoverTest #test07 stamp: 'ms 5/16/2021 12:18:29'!
test07

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	
	rover processPackage: 'f'. 
	
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingSouth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:18:41'!
test08AssertWhenAMarsRoverRotateRightStartPointingAtEast

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 1@0 pointing: MarsRoverPointingEast new)
	! !

!methodRemoval: MarsRoverTest #test08 stamp: 'ms 5/16/2021 12:18:41'!
test08

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: 1@0 pointing: MarsRoverPointingEast new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:18:55'!
test09AssertWhenAMarsRoverRotateRightStartPointingAtWest

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: MarsRoverPointingWest new)
	"este test paso de una, por que me di cuenta que tmb iba a necesitar el west"
	! !

!methodRemoval: MarsRoverTest #test09 stamp: 'ms 5/16/2021 12:18:55'!
test09

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: MarsRoverPointingWest new)
	"este test paso de una, por que me di cuenta que tmb iba a necesitar el west"
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:19:07' prior: 50984372!
test09AssertWhenAMarsRoverRotateRightStartPointingAtWest

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'f'. 
	self assert: (rover isPosition: -1@0 pointing: MarsRoverPointingWest new)
	"este test paso de una, por que nos dimos cuenta que tmb iba a necesitar el west"
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:19:29'!
test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 1@0 pointing: MarsRoverPointingWest new)
	! !

!methodRemoval: MarsRoverTest #test10 stamp: 'ms 5/16/2021 12:19:29'!
test10

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 1@0 pointing: MarsRoverPointingWest new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:19:42'!
test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingSouth new)
	! !

!methodRemoval: MarsRoverTest #test11 stamp: 'ms 5/16/2021 12:19:42'!
test11

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'b'. 
	self assert: (rover isPosition: 0@1 pointing: MarsRoverPointingSouth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:19:59' prior: 50982851!
test12

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:20:23'!
test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !

!methodRemoval: MarsRoverTest #test12 stamp: 'ms 5/16/2021 12:20:23'!
test12

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:20:51'!
test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test13 stamp: 'ms 5/16/2021 12:20:51'!
test13

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:21:02'!
test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingSouth new)
	! !

!methodRemoval: MarsRoverTest #test14 stamp: 'ms 5/16/2021 12:21:02'!
test14

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'l'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingSouth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:21:24'!
test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingWest new)
	! !

!methodRemoval: MarsRoverTest #test15 stamp: 'ms 5/16/2021 12:21:24'!
test15

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingSouth new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingWest new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:21:35'!
test16AssertWhenAMarsRoverRotateRightStartPointingAtWest

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test16 stamp: 'ms 5/16/2021 12:21:35'!
test16

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingWest new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:21:46'!
test17AssertWhenAMarsRoverRotateRightStartPointingAtEast

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingSouth new)
	! !

!methodRemoval: MarsRoverTest #test17 stamp: 'ms 5/16/2021 12:21:46'!
test17

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'r'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingSouth new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:22:30'!
test18AssertWhenAComandHasMoreThanOneChar

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !

!methodRemoval: MarsRoverTest #test18 stamp: 'ms 5/16/2021 12:22:30'!
test18

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:24:21'!
test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	! !

!methodRemoval: MarsRoverTest #test18AssertWhenAComandHasMoreThanOneChar stamp: 'ms 5/16/2021 12:24:21'!
test18AssertWhenAComandHasMoreThanOneChar

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:24:48'!
test19AssertWhenAComandHasMoreThanOneChar

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingWest new)
	! !

!methodRemoval: MarsRoverTest #test19 stamp: 'ms 5/16/2021 12:24:48'!
test19

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingWest new)
	!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'ms 5/16/2021 12:26:55'!
test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test21CaseSensitive stamp: 'ms 5/16/2021 12:26:55'!
test21CaseSensitive

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsNotValid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'ms 5/16/2021 12:30:07'!
PASSED!

!testRun: #MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'ms 5/16/2021 12:30:07'!
PASSED!