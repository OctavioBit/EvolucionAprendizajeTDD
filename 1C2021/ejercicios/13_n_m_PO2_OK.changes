----STARTUP---- (31 May 2021 21:36:48) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!


!classDefinition: #TransferTransactions category: 'Portfolio-Ejercicio' stamp: 'E.V 5/31/2021 21:56:42'!
Object subclass: #TransferTransactions
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50873130 overrides: 16881508!
value 

	^ transfer value! !
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50873063!
initializeFor: aTransfer
	transfer _ aTransfer.! !
!TransferTransactions methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50872988!
isMyTransfer: aTransfer
	^ aTransfer == transfer .! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50873107 overrides: 50873058!
addToBalance: actualBalance
	^ transfer decreaseBalance:actualBalance ! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50872847!
transfer
	^transfer ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50873101 overrides: 50873058!
addToBalance: actualBalance
	^ transfer addToBalance:actualBalance ! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'E.V 5/31/2021 21:56:42' prior: 50872825 overrides: 50872993!
isMyOtherLeg:aWithdraw
	^transfer isMyWithdraw: aWithdraw .! !

!classRenamed: #TransferTransactions as: #TransferTransaction stamp: 'E.V 5/31/2021 21:56:52'!
Smalltalk renameClassNamed: #TransferTransactions as: #TransferTransaction!

!classRenamed: #ResumenTests as: #ResumenTest stamp: 'E.V 5/31/2021 21:57:03'!
Smalltalk renameClassNamed: #ResumenTests as: #ResumenTest!

----QUIT----(31 May 2021 21:57:40) CuisUniversity-4532.image priorSource: 17366586!

----STARTUP---- (1 June 2021 14:26:44) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!


AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransferTransaction category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:33:23'!
AccountTransaction subclass: #TransferTransaction
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRenamed: #ResumenTest as: #ResumeTest stamp: 'E.V 6/1/2021 14:34:24'!
Smalltalk renameClassNamed: #ResumenTest as: #ResumeTest!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:38:30' prior: 50873897!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		aTransaction class = Deposit ifTrue:[summary add: 'Dep�sito por', (aTransaction value asString) ].
		aTransaction class = Withdraw ifTrue: [summary add: 'Extraccion por 100'].
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de 100'].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de 100'].
	].
	self balance = 100 ifTrue: [summary add:'Balance = 100'].
	self balance = 1100 ifTrue: [summary add:'Balance = 1100'].
	self balance = -100 ifTrue:[summary add:'Balance = -100'].
	^summary! !

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:37'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:42'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:42'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:45'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:45'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:49'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:38:49'!
FAILURE!

account  summary at:1!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:39:17' prior: 50874445!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		aTransaction class = Deposit ifTrue:[summary add: 'Dep�sito por ', (aTransaction value asString) ].
		aTransaction class = Withdraw ifTrue: [summary add: 'Extraccion por 100'].
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de 100'].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de 100'].
	].
	self balance = 100 ifTrue: [summary add:'Balance = 100'].
	self balance = 1100 ifTrue: [summary add:'Balance = 1100'].
	self balance = -100 ifTrue:[summary add:'Balance = -100'].
	^summary! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/1/2021 14:39:31'!
PASSED!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:39:51' prior: 50874496!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		aTransaction class = Deposit ifTrue:[summary add: 'Dep�sito por ', (aTransaction value asString) ].
		aTransaction class = Withdraw ifTrue: [summary add: 'Extraccion por ', (aTransaction value asString)].
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de 100'].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de 100'].
	].
	self balance = 100 ifTrue: [summary add:'Balance = 100'].
	self balance = 1100 ifTrue: [summary add:'Balance = 1100'].
	self balance = -100 ifTrue:[summary add:'Balance = -100'].
	^summary! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:41:33' prior: 50874546!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		aTransaction class = Deposit ifTrue:[summary add: 'Dep�sito por ', (aTransaction value asString) ].
		aTransaction class = Withdraw ifTrue: [summary add: 'Extraccion por ', (aTransaction value asString)].
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de ', 
												(aTransaction value asString)].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de ' , 												(aTransaction value asString) ].
	].
	summary add:'Balance = ' , (self balance asString).

	^summary! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/1/2021 14:41:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 14:41:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 14:41:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/1/2021 14:41:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/1/2021 14:41:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/1/2021 14:41:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/1/2021 14:41:36'!
PASSED!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:44:30' prior: 50874571!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		summary add: aTransaction summaryText .
		aTransaction class = Deposit ifTrue:[summary add: 'Dep�sito por ', (aTransaction value asString) ].
		aTransaction class = Withdraw ifTrue: [summary add: 'Extraccion por ', (aTransaction value asString)].
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de ', 
												(aTransaction value asString)].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de ' , 												(aTransaction value asString) ].
	].
	summary add:'Balance = ' , (self balance asString).

	^summary! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 14:44:47'!
summaryText
	self subclassResponsibility ! !
!Deposit methodsFor: 'value' stamp: 'E.V 6/1/2021 14:44:55' overrides: 50874646!
summaryText! !
!TransferDeposit methodsFor: 'testing' stamp: 'E.V 6/1/2021 14:45:01' overrides: 50874646!
summaryText! !
!TransferWithdraw methodsFor: 'accessing' stamp: 'E.V 6/1/2021 14:45:05' overrides: 50874646!
summaryText! !
!Withdraw methodsFor: 'value' stamp: 'E.V 6/1/2021 14:45:11' overrides: 50874646!
summaryText! !
!Deposit methodsFor: 'value' stamp: 'E.V 6/1/2021 14:45:58' prior: 50874650 overrides: 50874646!
summaryText
	^'Dep�sito por ', (value asString) ! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/1/2021 14:46:03'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:03'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:03'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:04'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:04'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:04'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:04'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:04'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:24'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:24'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:24'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:24'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:24'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:24'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:24'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:24'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:27'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:27'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:28'!
FAILURE!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:28'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:46:29'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:31'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:31'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:32'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:32'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:47'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:47'!
FAILURE!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:46:55'!
FAILURE!

account  summary at:2!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:48:24' prior: 50874621!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		summary add: aTransaction summaryText .
		
		aTransaction class = Withdraw ifTrue: [summary add: 'Extraccion por ', (aTransaction value asString)].
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de ', 
												(aTransaction value asString)].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de ' , 												(aTransaction value asString) ].
	].
	summary add:'Balance = ' , (self balance asString).

	^summary! !
!Withdraw methodsFor: 'value' stamp: 'E.V 6/1/2021 14:48:41' prior: 50874662 overrides: 50874646!
summaryText
	^ 'Extraccion por ', (value asString)! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:48:50' prior: 50875020!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		summary add: aTransaction summaryText .
		
	
		aTransaction class = TransferDeposit ifTrue: [summary add: 'Entrada por transferencia de ', 
												(aTransaction value asString)].
		aTransaction class = TransferWithdraw ifTrue: [summary add: 'Salida por transferencia de ' , 												(aTransaction value asString) ].
	].
	summary add:'Balance = ' , (self balance asString).

	^summary! !
!TransferDeposit methodsFor: 'testing' stamp: 'E.V 6/1/2021 14:49:14' prior: 50874654 overrides: 50874646!
summaryText
^ 'Entrada por transferencia de ', (self value asString)! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 14:49:44' prior: 50875047!
summary
	|summary|
	summary _ OrderedCollection new.
	transactions do:[:aTransaction |
		summary add: aTransaction summaryText .

	].
	summary add:'Balance = ' , (self balance asString).

	^summary! !
!TransferWithdraw methodsFor: 'accessing' stamp: 'E.V 6/1/2021 14:50:01' prior: 50874658 overrides: 50874646!
summaryText
 ^'Salida por transferencia de ' , 				(self value asString)! !

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:50:13'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:50:16'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 14:51:06'!
test00HacerSummaryDeAccountVaciaDaBalance0
	|account resultadoDepositos resultadoBalance|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	resultadoDepositos  _ 'Dep�sito por 100'.
	resultadoBalance  _ 'Balance = 100'.
	self assert: (account  summary at:1) = resultadoDepositos .
	self assert: (account  summary at:2) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 14:51:24' prior: 50875121!
test00HacerSummaryDeAccountVaciaDaBalance0
	|account  resultadoBalance|
	account  _ ReceptiveAccount new.
	resultadoBalance  _ 'Balance = 0'.
	self assert: (account  summary at:1) = resultadoBalance .
	! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 14:51:26'!
PASSED!

Object subclass: #ReportGenerator
	instanceVariableNames: 'deposit withdraw value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReportGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:53:50'!
Object subclass: #ReportGenerator
	instanceVariableNames: 'deposit withdraw value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #ReportGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReportGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:54:00'!
Object subclass: #ReportGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ReportGenerator subclass: #x
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ReportGenerator subclass: #X
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #X category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:54:33'!
ReportGenerator subclass: #X
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ReportGenerator subclass: #Y
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Y category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:54:35'!
ReportGenerator subclass: #Y
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountSummaryGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:55:20'!
ReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #X stamp: 'E.V 6/1/2021 14:55:26'!
ReportGenerator subclass: #X
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

ReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransferNetGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 14:55:37'!
ReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Y stamp: 'E.V 6/1/2021 14:55:39'!
ReportGenerator subclass: #Y
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----SNAPSHOT----(1 June 2021 14:59:22) CuisUniversity-4532.image priorSource: 17368630!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 15:00:48' prior: 50875072!
summary
	^AccountSummaryGenerator summary: self.! !
!AccountSummaryGenerator class methodsFor: 'no messages' stamp: 'E.V 6/1/2021 15:01:19'!
summary: anAccount! !
!AccountSummaryGenerator class methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:04:22' prior: 50875277!
summary: anAccount
	
		anAccount transactionsSummary! !
!AccountSummaryGenerator class methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:04:35' prior: 50875282!
summary: anAccount
	
		^anAccount transactionsSummary! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 15:12:08'!
transactionsSummary:aReportGenerator
	|summary|
	summary _ OrderedCollection new.
	transactions  do: [:aTransaction| summary add: (aTransaction getSummary: aReportGenerator )
		
		]! !

ReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountSummaryGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 15:12:53'!
ReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: 'summary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 15:13:22' prior: 50875272!
summary
	^AccountSummaryGenerator new summary: self.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:13:51'!
summary: anAccount
	
		^anAccount transactionsSummary! !

!methodRemoval: AccountSummaryGenerator class #summary: stamp: 'E.V 6/1/2021 15:13:51'!
summary: anAccount
	
		^anAccount transactionsSummary!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:14:02' prior: 50875321!
summary: anAccount
	
		^anAccount transactionsSummary: self! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 15:15:24' prior: 50875293!
transactionsSummary:aReportGenerator

	transactions  do: [:aTransaction| aTransaction getSummaryFor: aReportGenerator ]! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:15:58'!
getSummaryFor:aReportGenerator
	self subclassResponsibility ! !
!Deposit methodsFor: 'value' stamp: 'E.V 6/1/2021 15:16:08' overrides: 50875343!
getSummaryFor:aReportGenerator! !
!Deposit methodsFor: 'value' stamp: 'E.V 6/1/2021 15:17:16' prior: 50875348 overrides: 50875343!
getSummaryFor:aReportGenerator
	aReportGenerator depositReport: self! !
!ReportGenerator methodsFor: 'no messages' stamp: 'E.V 6/1/2021 15:17:46'!
depositReport: aDeposit
	self subclassResponsibility ! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:18:14' overrides: 50875358!
depositReport: aDeposit
	! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:18:35' prior: 50875364 overrides: 50875358!
depositReport: aDeposit
	summary add: ' '! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:19:17' prior: 50875369 overrides: 50875358!
depositReport: aDeposit
	summary add: 'Dep�sito por ', (aDeposit value asString) ! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:20:14'!
ERROR!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:20:14'!
ERROR!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:21:09' prior: 50875331!
summary: anAccount
	
		anAccount transactionsSummary: self.
		^summary 
		! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:23:04' prior: 50875388!
summary: anAccount
	
		anAccount transactionsSummary: self.
		summary add: 'Balance = ', anAccount balance asString .
		^summary 
		! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:23:09'!
ERROR!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:23:09'!
ERROR!
!AccountSummaryGenerator methodsFor: 'initialization' stamp: 'E.V 6/1/2021 15:24:16' overrides: 16896425!
initialize
	summary _ OrderedCollection new.! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:24:30'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:24:43'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:24:48'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:24:55'!
ERROR!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:24:55'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:25:28' overrides: 50875343!
getSummaryFor: anAccountSummaryGenerator 
	self shouldBeImplemented.! !

!methodRemoval: Withdraw #getSummaryFor: stamp: 'E.V 6/1/2021 15:27:03'!
getSummaryFor: anAccountSummaryGenerator 
	self shouldBeImplemented.!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:27:32'!
ERROR!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:27:32'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:27:39' overrides: 50875343!
getSummaryFor: anAccountSummaryGenerator 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:28:31' prior: 50875450 overrides: 50875343!
getSummaryFor: reportGenerator 
	reportGenerator withdrawReport: self! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:28:43' prior: 50875456 overrides: 50875343!
getSummaryFor: reportGenerator 
	reportGenerator withdrawReport: self.! !

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:28:46'!
ERROR!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:29:04'!
withdrawReport: aWithdraw 
	self shouldBeImplemented.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:29:47' prior: 50875471!
withdrawReport: aWithdraw 
	summary add: 'Extraccion por ', (aWithdraw value asString)! !

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:29:48'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:29:56'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:29:58'!
ERROR!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:29:58'!
ERROR!
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:30:08' overrides: 50875343!
getSummaryFor: anAccountSummaryGenerator 
	self shouldBeImplemented.! !
!TransferWithdraw methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:31:01' prior: 50875498 overrides: 50875343!
getSummaryFor: reportGenerator 
	reportGenerator transferWithdrawReport: self! !

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:31:05'!
ERROR!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:31:12'!
transferWithdrawReport: aTransferWithdraw 
	self shouldBeImplemented.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:32:10' prior: 50875513!
transferWithdrawReport: aTransferWithdraw 
	summary add: 'Salida por transferencia de ' , 				(aTransferWithdraw value asString)! !

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:32:15'!
ERROR!
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:32:38' overrides: 50875343!
getSummaryFor: anAccountSummaryGenerator 
	self shouldBeImplemented.! !
!TransferDeposit methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:33:29' prior: 50875530 overrides: 50875343!
getSummaryFor: aReportGenerator 
	aReportGenerator transferDepositReport: self.! !

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:33:35'!
ERROR!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:33:47'!
transferDepositReport: aTransferDeposit 
	self shouldBeImplemented.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:34:26' prior: 50875545!
transferDepositReport: aTransferDeposit 
	summary add: 'Entrada por transferencia de ', (aTransferDeposit value asString)! !

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:34:28'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!

!testRun: #ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:34:51'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 15:36:38'!
test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	self assert: senderaccount  netTransferReport = -100 .


	self assert: receptorAccount  netTransferReport = 100 .


! !

!methodRemoval: ResumeTest #test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:36:38'!
test05AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	self assert: senderaccount  netTransferReport = -100 .


	self assert: receptorAccount  netTransferReport = 100 .


!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 15:36:45'!
test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	Transfer amount:1000  from:senderaccount  to:receptorAccount .

	self assert: senderaccount  netTransferReport equals: -1100 .


	self assert: receptorAccount  netTransferReport = 1100 .


! !

!methodRemoval: ResumeTest #test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:36:45'!
test06AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	Transfer amount:1000  from:senderaccount  to:receptorAccount .

	self assert: senderaccount  netTransferReport equals: -1100 .


	self assert: receptorAccount  netTransferReport = 1100 .


!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 15:36:51'!
test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	Deposit register:100  on: receptorAccount .

	self assert: receptorAccount  netTransferReport equals: 100 .


! !

!methodRemoval: ResumeTest #test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:36:51'!
test07AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	Deposit register:100  on: receptorAccount .

	self assert: receptorAccount  netTransferReport equals: 100 .


!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 15:37:32'!
test05SiNoHayTransferenciasElNetTransferReportEs0
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.

	self assert: senderaccount  netTransferReport = 0 .
	self assert: receptorAccount  netTransferReport = 0 .


! !

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:37:34'!
PASSED!

!methodRemoval: Deposit #summaryText stamp: 'E.V 6/1/2021 15:37:58'!
summaryText
	^'Dep�sito por ', (value asString) !

!methodRemoval: TransferDeposit #summaryText stamp: 'E.V 6/1/2021 15:38:02'!
summaryText
^ 'Entrada por transferencia de ', (self value asString)!

!methodRemoval: TransferWithdraw #summaryText stamp: 'E.V 6/1/2021 15:38:04'!
summaryText
 ^'Salida por transferencia de ' , 				(self value asString)!

!methodRemoval: Withdraw #summaryText stamp: 'E.V 6/1/2021 15:38:06'!
summaryText
	^ 'Extraccion por ', (value asString)!

!methodRemoval: AccountTransaction #summaryText stamp: 'E.V 6/1/2021 15:38:08'!
summaryText
	self subclassResponsibility !

ReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: 'netValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransferNetGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/1/2021 15:44:16'!
ReportGenerator subclass: #TransferNetGenerator
	instanceVariableNames: 'netValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TransferNetGenerator methodsFor: 'initialization' stamp: 'E.V 6/1/2021 15:44:34' overrides: 16896425!
initialize
	netValue  _ 0! !
!ReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:45:40'!
withdrawReport: aWithdraw 
	self subclassResponsibility ! !
!ReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:45:57'!
transferWithdrawReport: aTransferWithdraw 
	self subclassResponsibility ! !
!ReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:46:10'!
transferDepositReport: aTransferDeposit 
	self subclassResponsibility ! !
!ReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:46:36'!
summary:anAccount
	self subclassResponsibility ! !
!TransferNetGenerator methodsFor: 'initialization' stamp: 'E.V 6/1/2021 15:46:51' overrides: 50875790!
summary:anAccount! !
!TransferNetGenerator methodsFor: 'initialization' stamp: 'E.V 6/1/2021 15:47:47' prior: 50875795 overrides: 50875790!
summary:anAccount

		anAccount transactionsSummary: self.
		^netValue ! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 15:49:52'!
transactionReportFor:aReportGenerator

	transactions  do: [:aTransaction| aTransaction getSummaryFor: aReportGenerator ]! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:49:52' prior: 50875394 overrides: 50875790!
summary: anAccount
	
		anAccount transactionReportFor: self.
		summary add: 'Balance = ', anAccount balance asString .
		^summary 
		! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:49:52' prior: 50875800 overrides: 50875790!
summary:anAccount

		anAccount transactionReportFor: self.
		^netValue ! !

!methodRemoval: ReceptiveAccount #transactionsSummary: stamp: 'E.V 6/1/2021 15:49:52'!
transactionsSummary:aReportGenerator

	transactions  do: [:aTransaction| aTransaction getSummaryFor: aReportGenerator ]!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:50:12'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:50:14'!
PASSED!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 15:50:54' prior: 50874312!
netTransferReport
	^ TransferNetGenerator new summary: self! !

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 15:51:02'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:51:05'!
ERROR!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:51:05'!
ERROR!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:51:16' overrides: 50875780!
transferWithdrawReport: aTransferWithdraw 
	self shouldBeImplemented.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:51:33' prior: 50875860 overrides: 50875780!
transferWithdrawReport: aTransferWithdraw 
	netValue  _ netValue - aTransferWithdraw value.! !

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:51:34'!
ERROR!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:51:41' overrides: 50875785!
transferDepositReport: aTransferDeposit 
	self shouldBeImplemented.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:51:53' prior: 50875878 overrides: 50875785!
transferDepositReport: aTransferDeposit 
	netValue _ netValue  + aTransferDeposit value! !

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:51:55'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:51:59'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:52:00'!
ERROR!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:52:00'!
ERROR!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:52:07' overrides: 50875358!
depositReport: aDeposit 
	self shouldBeImplemented.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:52:11' prior: 50875909 overrides: 50875358!
depositReport: aDeposit 
	! !

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:52:29'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 15:52:51'!
test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	Deposit register:100  on: receptorAccount .

	self assert: receptorAccount  netTransferReport equals: 100 .


! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 15:52:56' prior: 50875923!
test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	Withdraw register:100  on: receptorAccount .

	self assert: receptorAccount  netTransferReport equals: 100 .


! !

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:53:02'!
ERROR!
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:53:07' overrides: 50875775!
withdrawReport: aWithdraw 
	self shouldBeImplemented.! !
!TransferNetGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 15:53:11' prior: 50875958 overrides: 50875775!
withdrawReport: aWithdraw 
! !

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 15:53:14'!
PASSED!

----QUIT----(1 June 2021 15:54:22) CuisUniversity-4532.image priorSource: 17395759!

----STARTUP---- (1 June 2021 19:39:24) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!

!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 19:44:53'!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount aTransfer aWithdraw |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	Transfer amount:0 from:senderAccount  to:receptorAccount .
	! !
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 19:45:15' prior: 50876017!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	Transfer amount:0 from:senderAccount  to:receptorAccount .
	! !
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 19:48:23' prior: 50876028!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0 ].
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 19:48:50'!
cantTransferFor0
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 19:49:57' prior: 50876052!
cantTransferFor0
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	! !

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:50:48'!
FAILURE!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:50:49'!
FAILURE!
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 19:52:26' prior: 50873169!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	self raiseErrorIfanAmountIsZero . 
	aTransfer _ self new.
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 19:53:50'!
raiseErrorIfanAmountIsZero:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0 ].! !

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:54:54'!
FAILURE!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:54:54'!
FAILURE!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:56:47'!
FAILURE!
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 19:57:22' prior: 50876038!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0ErrorDescription ].
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 19:57:41'!
cantTransferFor0cantTransferFor0ErrorDescription
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	! !

!methodRemoval: Transfer class #cantTransferFor0 stamp: 'E.V 6/1/2021 19:57:46'!
cantTransferFor0
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	!
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 19:58:05' prior: 50876081!
raiseErrorIfanAmountIsZero:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0cantTransferFor0ErrorDescription ].! !
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 19:58:38' prior: 50876068!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	self raiseErrorIfanAmountIsZero:anAmount . 
	aTransfer _ self new.
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:58:40'!
ERROR!
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 19:59:02' prior: 50876097!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0cantTransferFor0ErrorDescription ].
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 19:59:18'!
cantTransferFor0ErrorDescription
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 19:59:18' prior: 50876148!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0ErrorDescription ].
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 19:59:18' prior: 50876124!
raiseErrorIfanAmountIsZero:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0ErrorDescription ].! !

!methodRemoval: Transfer class #cantTransferFor0cantTransferFor0ErrorDescription stamp: 'E.V 6/1/2021 19:59:18'!
cantTransferFor0cantTransferFor0ErrorDescription
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:59:22'!
FAILURE!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 19:59:22'!
FAILURE!
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:00:30' prior: 50876131!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	
	aTransfer _ self new.
	aTransfer raiseErrorIfanAmountIsZero:anAmount . 
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:00:42' prior: 50876206!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	aTransfer _ self new.
	aTransfer raiseErrorIfanAmountIsZero:anAmount . 
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 20:00:52'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 20:01:16'!
test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0ErrorDescription ].
	! !
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 20:01:34' prior: 50876237!
test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount: -1000 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0OrLessErrorDescription ].
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 20:02:00'!
cantTransferFor0ErrorDescriptionOrLess
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:02:00' prior: 50876185!
raiseErrorIfanAmountIsZero:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0ErrorDescriptionOrLess ].! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:02:00' prior: 50876170!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0ErrorDescriptionOrLess ].
	! !

!methodRemoval: Transfer class #cantTransferFor0ErrorDescription stamp: 'E.V 6/1/2021 20:02:00'!
cantTransferFor0ErrorDescription
	^ 'pa que vas a transferir 0? Para eso no hagas nada amigo. '
	!
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 20:02:23' prior: 50876267!
cantTransferFor0ErrorDescriptionOrLess
	^ 'pa que vas a transferir 0 o menos? Queres hackear el sistema o que?. '
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 20:02:36' prior: 50876302!
cantTransferFor0ErrorDescriptionOrLess
	^ 'pa que vas a transferir 0 o menos? El verdadero quien pudiera. '
	! !
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 20:03:03' prior: 50876252!
test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount: -1000 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0ErrorDescriptionOrLess ].
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 20:03:17'!
cantTransferFor0OrLessErrorDescription
	^ 'pa que vas a transferir 0 o menos? El verdadero quien pudiera. '
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:03:17' prior: 50876281!
test07NoSePuedeHacerUnaTransferenciaPor0
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount:0 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0OrLessErrorDescription ].
	! !
!TransferTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:03:17' prior: 50876316!
test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	
	self should: [Transfer amount: -1000 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0OrLessErrorDescription ].
	! !
!Transfer methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:03:17' prior: 50876274!
raiseErrorIfanAmountIsZero:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0OrLessErrorDescription ].! !

!methodRemoval: Transfer class #cantTransferFor0ErrorDescriptionOrLess stamp: 'E.V 6/1/2021 20:03:17'!
cantTransferFor0ErrorDescriptionOrLess
	^ 'pa que vas a transferir 0 o menos? El verdadero quien pudiera. '
	!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/1/2021 20:03:25'!
FAILURE!
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:03:44'!
raiseErrorIfanAmountIsZeroOrLess:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0OrLessErrorDescription ].! !
!Transfer class methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:03:44' prior: 50876220!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	aTransfer _ self new.
	aTransfer raiseErrorIfanAmountIsZeroOrLess:anAmount . 
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !

!methodRemoval: Transfer #raiseErrorIfanAmountIsZero: stamp: 'E.V 6/1/2021 20:03:44'!
raiseErrorIfanAmountIsZero:anAmount
	anAmount = 0 ifTrue:[self error: self class cantTransferFor0OrLessErrorDescription ].!
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:03:48' prior: 50876387!
raiseErrorIfanAmountIsZeroOrLess:anAmount
	anAmount <= 0 ifTrue:[self error: self class cantTransferFor0OrLessErrorDescription ].! !

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/1/2021 20:03:54'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 20:03:56'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/1/2021 20:03:58'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/1/2021 20:03:58'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/1/2021 20:03:58'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/1/2021 20:03:59'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/1/2021 20:03:59'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/1/2021 20:03:59'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/1/2021 20:03:59'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 20:03:59'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/1/2021 20:03:59'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 20:04:27'!
test09NoSePuedenHacerTransferenciasAunoMismo
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := receptorAccount .
	
	
	self should: [Transfer amount: -1000 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer cantTransferFor0OrLessErrorDescription ].
	! !
!TransferTest methodsFor: 'test' stamp: 'E.V 6/1/2021 20:05:20' prior: 50876465!
test09NoSePuedenHacerTransferenciasAunoMismo
	|receptorAccount senderAccount |
	receptorAccount := ReceptiveAccount new.
	senderAccount := receptorAccount .
	
	
	self should: [Transfer amount: 1000 from:senderAccount  to:receptorAccount .]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Transfer anAccountCantTransferToItself ].
	! !
!Transfer class methodsFor: 'error' stamp: 'E.V 6/1/2021 20:06:24'!
anAccountCantTransferToItself
	^ ' Queres sacar plata de tu cuenta para volverla a poner? Sos capo eh... '
	! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:06:31'!
FAILURE!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:06:31'!
FAILURE!
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:08:57' prior: 50876395!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	aTransfer _ self new.
	aTransfer raiseErrorIfanAmountIsZeroOrLess:anAmount.
	aTransfer raiseErrorIfSender:senderAccount IsTheSameAsReceiver:receiverAccount.
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:09:25'!
raiseErrorIfSender:aSenderAccount IsTheSameAsReceiver:aReceiverAccount! !
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:09:39' prior: 50876525!
raiseErrorIfSender:aSenderAccount IsTheSameAsReceiver:aReceiverAccount
 ^ aSenderAccount == aReceiverAccount .! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:09:44'!
FAILURE!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:09:44'!
FAILURE!
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:10:32' prior: 50876530!
raiseErrorIfSender:aSenderAccount IsTheSameAsReceiver:aReceiverAccount
  aSenderAccount == aReceiverAccount ifTrue: [self error: self class anAccountCantTransferToItself]! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:10:35'!
PASSED!
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:12:24'!
raiseTransferErrorIfAnyWithAmount:anAmount withSender:aSenderAccount withReciever:aRecieverAccount
	! !
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:12:40' prior: 50876509!
amount: anAmount from: senderAccount to: receiverAccount 
	|aTransfer|
	aTransfer _ self new.
	
	^ aTransfer initializeWith: (receiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (senderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !
!Transfer methodsFor: 'error' stamp: 'E.V 6/1/2021 20:13:19' prior: 50876554!
raiseTransferErrorIfAnyWithAmount:anAmount withSender:aSenderAccount withReciever:aRecieverAccount
	self raiseErrorIfanAmountIsZeroOrLess:anAmount.
	self raiseErrorIfSender:aSenderAccount IsTheSameAsReceiver:aRecieverAccount.
	! !
!Transfer class methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:15:46' prior: 50876560!
amount: anAmount from: aSenderAccount to: aReceiverAccount 
	|aTransfer|
	aTransfer _ self new.
	
	aTransfer raiseTransferErrorIfAnyWithAmount: anAmount withSender:aSenderAccount  withReciever:                                                                                                                                                           aReceiverAccount .
	
	^ aTransfer initializeWith: (aReceiverAccount receiveTransferFor: anAmount withTransfer: aTransfer) 
				    with: (aSenderAccount  sendTransferFor: anAmount withTransfer: aTransfer) withValue: anAmount
				    ! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:15:57'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/1/2021 20:16:04'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:20:22'!
test10PortfolioVacioTieneResumenConBalance0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: aPortfolio xxx equals: 'Balance = 0'.
	



! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/1/2021 20:21:38'!
accountSummaryReport
	^AccountSummaryGenerator new summary: self.! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:21:38' prior: 50873827!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount resultadosalidaTransferencia resultadoEntradaTransferencia  	                                     resultadoBalanceSender resultadoBalanceReceptor| 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	resultadosalidaTransferencia  _ 'Salida por transferencia de 100'.
	resultadoEntradaTransferencia _ 'Entrada por transferencia de 100'.
	

	resultadoBalanceSender  _ 'Balance = -100'.
	resultadoBalanceReceptor  _ 'Balance = 100'.
	
	self assert: (senderaccount  accountSummaryReport at:1) = resultadosalidaTransferencia .
	self assert: (senderaccount  accountSummaryReport at:2) = resultadoBalanceSender .

	self assert: (receptorAccount  accountSummaryReport at:1) = resultadoEntradaTransferencia .
	self assert: (receptorAccount  accountSummaryReport at:2) = resultadoBalanceReceptor .

! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:21:38' prior: 50873455!
test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen
	|account resultadoDepositos1 resultadoDepositos2 resultadoBalance|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 1000 on: account.
	resultadoDepositos1  _ 'Dep�sito por 100'.
	resultadoDepositos2 _ 'Dep�sito por 1000'.
	resultadoBalance  _ 'Balance = 1100'.
	self assert: (account  accountSummaryReport at:1) = resultadoDepositos1 .
	self assert: (account  accountSummaryReport at:2) = resultadoDepositos2 .
	self assert: (account  accountSummaryReport at:3) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:21:38' prior: 50873702!
test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen
	|account resultadoRetiro resultadoBalance|
	account  _ ReceptiveAccount new.
	Withdraw register: 100 on: account.

	resultadoRetiro  _ 'Extraccion por 100'.

	resultadoBalance  _ 'Balance = -100'.
	self assert: (account  accountSummaryReport at:1) = resultadoRetiro .

	self assert: (account  accountSummaryReport at:2) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:21:38' prior: 50873527!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account resultadoDepositos resultadoBalance|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	resultadoDepositos  _ 'Dep�sito por 100'.
	resultadoBalance  _ 'Balance = 100'.
	self assert: (account  accountSummaryReport at:1) = resultadoDepositos .
	self assert: (account  accountSummaryReport at:2) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/1/2021 20:21:38' prior: 50875135!
test00HacerSummaryDeAccountVaciaDaBalance0
	|account  resultadoBalance|
	account  _ ReceptiveAccount new.
	resultadoBalance  _ 'Balance = 0'.
	self assert: (account  accountSummaryReport at:1) = resultadoBalance .
	! !

!methodRemoval: ReceptiveAccount #summary stamp: 'E.V 6/1/2021 20:21:38'!
summary
	^AccountSummaryGenerator new summary: self.!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:22:54' prior: 50876954!
test10PortfolioVacioTieneResumenConBalance0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: aPortfolio accountSummaryReport equals: 'Balance = 0'.
	



! !
!FinancialService methodsFor: 'operations' stamp: 'E.V 6/1/2021 20:23:20'!
accountSummaryReport
	self subclassResponsibility ! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 20:23:59' overrides: 50877077!
accountSummaryReport! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 20:24:18' prior: 50877082 overrides: 50877077!
accountSummaryReport
	^ 'Balance = 0'! !

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/1/2021 20:24:32'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:27:52'!
test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma
	|aPortfolio anAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	self assert: aPortfolio accountSummaryReport equals: anAccount accountSummaryReport .
	



! !

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:27:53'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 20:28:48' prior: 50877086 overrides: 50877077!
accountSummaryReport
	^ (portfolioElements at: 1) accountSummaryReport .! !

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:29:06'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:29:06'!
ERROR!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:29:49' prior: 50877093!
test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma
	|aPortfolio anAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: aPortfolio accountSummaryReport equals: anAccount accountSummaryReport .
	



! !

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/1/2021 20:29:51'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:29:51'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/1/2021 20:29:51'!
ERROR!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:30:12' prior: 50877122!
test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma
	|aPortfolio anAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (aPortfolio accountSummaryReport) equals: (anAccount accountSummaryReport) .
	



! !

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/1/2021 20:30:13'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:30:13'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/1/2021 20:30:13'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/1/2021 20:30:40'!
PASSED!
!Portfolio methodsFor: 'operations' stamp: 'E.V 6/1/2021 20:31:58' prior: 50871582!
add: aFinancialService
	self raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService.
	aFinancialService addFather: self.
	portfolioElements add: aFinancialService.
	! !

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:32:01'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:32:05'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:32:45'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 20:32:51'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:33:50'!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (aPortfolio accountSummaryReport) equals: (anAccount accountSummaryReport) .
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:34:13' prior: 50877348!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (aPortfolio accountSummaryReport) equals: (anAccount accountSummaryReport) .
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:34:31' prior: 50877362!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (aPortfolio accountSummaryReport) equals: (anAccount accountSummaryReport) .
	



! !
!ResumeTest methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:40:42'!
summaryReportOf:aPortfolio hasSameTransactionsthan: aFinancialService
	|aPortfolioSummary aFinancialServiceSummary|
	aPortfolioSummary _ aPortfolio accountSummaryReport.
	aFinancialServiceSummary _ aFinancialService accountSummaryReport removeLast .
	
	^aPortfolioSummary includesAll: aFinancialServiceSummary .! !
!ResumeTest methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:40:57' prior: 50877394!
summaryReportOf:aPortfolio hasSameTransactionsthan: aFinancialService
	|aPortfolioSummary aFinancialServiceSummary|
	aPortfolioSummary _ aPortfolio accountSummaryReport.
	aFinancialServiceSummary _ aFinancialService accountSummaryReport removeLast . "Le sacamos el balance"
	
	^aPortfolioSummary includesAll: aFinancialServiceSummary .! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:41:51' prior: 50877378!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anAccount).
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:44:56' prior: 50877421!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anAccount).
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anotherAccount).
	self assert: (aPortfolio accountSummaryReport at:3) equals: 'Balance = 0' 
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:45:05' prior: 50877438!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anAccount).
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anotherAccount).
	self assert: (aPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:45:09' prior: 50877460!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anAccount).
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: anotherAccount).
	self assert: (aPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:45:10'!
ERROR!
!ResumeTest methodsFor: 'aux' stamp: 'E.V 6/1/2021 20:54:53' prior: 50877407!
summaryReportOf:aPortfolio hasSameTransactionsthan: aFinancialServiceCollection
	|aPortfolioSummary aFinancialServicesSummary|
	aPortfolioSummary _ aPortfolio accountSummaryReport removeLast .
	aFinancialServicesSummary _ OrderedCollection new.
	aFinancialServiceCollection do: [:aFinancialService | aFinancialServicesSummary addAll: (aFinancialService accountSummaryReport removeLast) ].
	^aPortfolioSummary = aFinancialServicesSummary .
	
	! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:55:07'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:55:07'!
ERROR!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:55:40' prior: 50877482!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: (OrderedCollection with:anAccount with:anotherAccount )).

	self assert: (aPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:55:42'!
FAILURE!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:55:42'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 20:57:12' prior: 50877109 overrides: 50877077!
accountSummaryReport
	^ ((portfolioElements at: 1) accountSummaryReport removeLast) addAll: (portfolioElements at: 2) accountSummaryReport removeLast  .! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:57:25'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:57:25'!
ERROR!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/1/2021 20:57:45' prior: 50877536!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	aPortfolio  add: anAccount .
	aPortfolio  add: anotherAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: (OrderedCollection with:anAccount with:anotherAccount )).

	self assert: (aPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 20:57:51'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 21:00:52' prior: 50877567 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	^ summary1 addAll: summary2 ! !
!ResumeTest methodsFor: 'aux' stamp: 'E.V 6/1/2021 21:02:38' prior: 50877509!
summaryReportOf:aPortfolio hasSameTransactionsthan: aFinancialServiceCollection
	|aPortfolioSummary aFinancialServicesSummary|
	aPortfolioSummary _ aPortfolio accountSummaryReport removeLast .
	aFinancialServicesSummary _ OrderedCollection new.
	aFinancialServiceCollection do: [:aFinancialService | | summary | 
		summary _  aFinancialService accountSummaryReport .
		summary removeLast.
		aFinancialServicesSummary addAll: summary ].
	^aPortfolioSummary = aFinancialServicesSummary .
	
	! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:02:45'!
FAILURE!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:02:45'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 21:09:22' prior: 50877612 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	 
	^ (summary1 addAll: summary2 ) add: 'Balance = 0'! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:09:36'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:09:36'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:09:47'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:10:27'!
ERROR!

aPortfolio accountSummaryReport !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 21:11:23' prior: 50877651 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	 
	^ ((summary1 addAll: summary2 ) add: 'Balance = 0')! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:11:31'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:11:31'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/1/2021 21:12:28' prior: 50877683 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	summary1 addAll: summary2 .
	summary1 add: 'Balance = 0'.
	^ summary1! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:12:37'!
FAILURE!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:12:37'!
FAILURE!
!ResumeTest methodsFor: 'aux' stamp: 'E.V 6/1/2021 21:14:24' prior: 50877622!
summaryReportOf:aPortfolio hasSameTransactionsthan: aFinancialServiceCollection
	|aPortfolioSummary aFinancialServicesSummary|
	aPortfolioSummary _ aPortfolio accountSummaryReport .
	aPortfolioSummary removeLast .
	aFinancialServicesSummary _ OrderedCollection new.
	aFinancialServiceCollection do: [:aFinancialService | | summary | 
		summary _  aFinancialService accountSummaryReport .
		summary removeLast.
		aFinancialServicesSummary addAll: summary ].
	^aPortfolioSummary = aFinancialServicesSummary .
	
	! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:14:25'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/1/2021 21:14:28'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 21:14:30'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/1/2021 21:14:30'!
ERROR!

----SNAPSHOT----(1 June 2021 21:15:44) CuisUniversity-4532.image priorSource: 17419531!

----QUIT----(1 June 2021 21:16:19) CuisUniversity-4532.image priorSource: 17475593!

----STARTUP---- (2 June 2021 19:28:57) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!


!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:29:29'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:29:59'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 19:30:02'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:30:03'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:30:03'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 19:30:03'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:30:51' prior: 50877705 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	summary1 addAll: summary2 .
	summary1 add: ('Balance = ' self balance asString).
	^ summary1! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:30:59' prior: 50877971 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	summary1 addAll: summary2 .
	summary1 add: ('Balance = ' , self balance asString).
	^ summary1! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:31:06'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:31:06'!
ERROR!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:31:06'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:31:34' prior: 50877069!
test10PortfolioVacioTieneResumenConBalance0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: (aPortfolio accountSummaryReport at:1) equals: 'Balance = 0'.
	



! !

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:31:38'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:31:45'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:31:45'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:32:25' prior: 50877984 overrides: 50877077!
accountSummaryReport
 |summary1 summary2 |
	summary1 _ OrderedCollection new.
	summary1 _ (portfolioElements at: 1) accountSummaryReport.
	summary2 _ (portfolioElements at: 2) accountSummaryReport.
	summary1  removeLast.
	summary2 removeLast.
	summary1 addAll: summary2 .
	summary1 add: ('Balance = ' , self balance asString).
	^ summary1! !

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:32:28'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:32:32'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:32:32'!
ERROR!

----STARTUP---- (2 June 2021 19:34:18) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!


!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:34:24'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:34:26'!
ERROR!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:34:26'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:34:29'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:34:29'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:37:56' prior: 50877705 overrides: 50877077!
accountSummaryReport
 |summary report|
	report _ OrderedCollection new.
	summary _ OrderedCollection new.
	portfolioElements do: [:aFinancialService| summary _ aFinancialService accountSummaryReport.
									summary removeLast.
									report addAll: summary.
									].
	
	summary add: ('Balance = ', self balance asString).
	^ summary! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:38:04' prior: 50877792 overrides: 50877077!
accountSummaryReport
 |summary report|
	report _ OrderedCollection new.
	summary _ OrderedCollection new.
	portfolioElements do: [:aFinancialService| summary _ aFinancialService accountSummaryReport.
									summary removeLast.
									report addAll: summary.
									].
	
	summary add: ('Balance = ', self balance asString).
	^ report! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:38:13'!
FAILURE!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:38:13'!
FAILURE!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:38:15'!
FAILURE!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:38:15'!
FAILURE!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:38:18'!
FAILURE!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:38:18'!
FAILURE!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:38:46' prior: 50877069!
test10PortfolioVacioTieneResumenConBalance0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: (aPortfolio accountSummaryReport at:1)equals: 'Balance = 0'.
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:38:49' prior: 50877844!
test10PortfolioVacioTieneResumenConBalance0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: (aPortfolio accountSummaryReport at:1) equals: 'Balance = 0'.
	



! !

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:38:55'!
ERROR!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:38:55'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:39:28' prior: 50877806 overrides: 50877077!
accountSummaryReport
 |summary report|
	report _ OrderedCollection new.
	summary _ OrderedCollection new.
	portfolioElements do: [:aFinancialService| summary _ aFinancialService accountSummaryReport.
									summary removeLast.
									report addAll: summary.
									].
	
	report add: ('Balance = ', self balance asString).
	^ report! !

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:39:29'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:39:31'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:39:33'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:39:34'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 19:39:39'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:42:23'!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	aPortfolio  add: anAccount .
	aPortfolio  add: anotherAccount .
	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: (OrderedCollection with:anAccount with:anotherAccount )).

	self assert: (aPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:43:51' prior: 50878085!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anAccount with:anotherAccount )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:46:19' prior: 50878107!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: 'Balance = 0' 
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:47:48' prior: 50878133!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance)
	



! !

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 19:48:05'!
FAILURE!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 19:48:05'!
FAILURE!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:49:39' prior: 50878159!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance)
	



! !

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 19:49:40'!
ERROR!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 19:49:50' prior: 50878196!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 19:49:51'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 19:49:52'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:53:38' prior: 50877868 overrides: 50877077!
accountSummaryReport
 |summary report|
	^ AccountSummaryGenerator new summary: self.
	"
	report _ OrderedCollection new.
	summary _ OrderedCollection new.
	portfolioElements do: [:aFinancialService| summary _ aFinancialService accountSummaryReport.
									summary removeLast.
									report addAll: summary.
									].
	
	report add: ('Balance = ', self balance asString).
	^ report
	"! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:53:47' prior: 50878319 overrides: 50877077!
accountSummaryReport

	^ AccountSummaryGenerator new summary: self.
	"
	 |summary report|
	report _ OrderedCollection new.
	summary _ OrderedCollection new.
	portfolioElements do: [:aFinancialService| summary _ aFinancialService accountSummaryReport.
									summary removeLast.
									report addAll: summary.
									].
	
	report add: ('Balance = ', self balance asString).
	^ report
	"! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 19:54:44' prior: 50875813 overrides: 50875790!
summary: aFinancialService
	
		aFinancialService transactionReportFor: self.
		summary add: 'Balance = ', aFinancialService balance asString .
		^summary 
		! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:55:44'!
transactionReportFor: aReportGenerator! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:56:22' prior: 50878360!
transactionReportFor: aReportGenerator
	! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 19:59:56' prior: 50878364!
transactionReportFor: aReportGenerator
		portfolioElements do: [:aFinancialService | ]! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:02:56' prior: 50878368!
transactionReportFor: aReportGenerator
		portfolioElements do: [:aFinancialService | aFinancialService transactionReportFor:aReportGenerator]! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:05:13'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:05:34' prior: 50878335 overrides: 50877077!
accountSummaryReport

	^ AccountSummaryGenerator new summary: self.
	! !
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 20:06:06' prior: 50877077!
accountSummaryReport

	^ AccountSummaryGenerator new summary: self.
	! !

!methodRemoval: Portfolio #accountSummaryReport stamp: 'E.V 6/2/2021 20:06:06'!
accountSummaryReport

	^ AccountSummaryGenerator new summary: self.
	!
!ReceptiveAccount methodsFor: 'operations' stamp: 'E.V 6/2/2021 20:06:21' prior: 50876961 overrides: 50878443!
accountSummaryReport
	! !

!methodRemoval: ReceptiveAccount #accountSummaryReport stamp: 'E.V 6/2/2021 20:06:39'!
accountSummaryReport
	!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:06:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 20:06:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 20:06:46'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:06:51'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:06:52'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:06:52'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:06:52'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:06:52'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:08:20'!
test14PortfolioVacioTieneTransferNetResume0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: (aPortfolio) equals: 0.
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:08:47' prior: 50878588!
test14PortfolioVacioTieneTransferNetResume0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: (aPortfolio netTransferReport) equals: 0.
	



! !

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:08:51'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:09:01'!
netTransferReport
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:09:06' prior: 50878606!
netTransferReport
	^0! !

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:09:08'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:09:48'!
test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma
	|aPortfolio anAccount|
	aPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	aPortfolio  add: anAccount .
	self assert: (aPortfolio accountSummaryReport) equals: (anAccount accountSummaryReport) .
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:11:46' prior: 50878676!
test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma
	|aPortfolio aSenderAccount aRecieverAccount|
	aPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	Transfer amount: 100 from: aSenderAccount  to: aRecieverAccount .
	aPortfolio  add: aSenderAccount .
	self assert: (aPortfolio netTransferReport ) equals: (aSenderAccount netTransferReport) .
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:12:08' prior: 50878690!
test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma
	|aPortfolio aSenderAccount aRecieverAccount|
	aPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aRecieverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from: aSenderAccount  to: aRecieverAccount .
	aPortfolio  add: aSenderAccount .
	self assert: (aPortfolio netTransferReport ) equals: (aSenderAccount netTransferReport ) .
	



! !

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:12:10'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:14:14' prior: 50878610!
netTransferReport
	|netTransferResume|
	netTransferResume _ 0.
	portfolioElements isEmpty ifFalse: [netTransferResume _ netTransferResume -100].
	^netTransferResume .! !

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:14:19'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:15:20'!
test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma
	|aPortfolio aSenderAccount aRecieverAccount|
	aPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aRecieverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from: aSenderAccount  to: aRecieverAccount .
	aPortfolio  add: aSenderAccount .
	aPortfolio  add: aRecieverAccount .
	self assert: (aPortfolio netTransferReport ) equals: 
		(aSenderAccount netTransferReport  + aRecieverAccount netTransferReport ) .
	



! !

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:15:27'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:18:37' prior: 50878726!
netTransferReport
	
	^ portfolioElements sum:[:aFinancialService| aFinancialService netTransferReport ] ifEmpty: [0]
! !

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:18:45'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:18:50'!
PASSED!
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:22:00'!
test13NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:22:06'!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:22:24' prior: 50878939!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:aSenderAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: aSenderAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:22:58' prior: 50878968!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount aReceptorAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aReceptorAccount _ ReceptiveAccount new.
	Deposit register:100  on:aSenderAccount .
	Withdraw register:100  on:aReceptorAccount .
	anInterlanPortfolio  add: aSenderAccount .
	anExternalPortfolio  add: aReceptorAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:aReceptorAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:23:24' prior: 50878998!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount aRecieverAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aRecieverAccount _ ReceptiveAccount new.
	Deposit register:100  on:aSenderAccount .
	Withdraw register:100  on:aRecieverAccount .
	anInterlanPortfolio  add: aSenderAccount .
	anExternalPortfolio  add: aRecieverAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:aRecieverAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:24:01' prior: 50879028!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount aReceiverAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aReceiverAccount _ ReceptiveAccount new.
	Deposit register:100  on:aSenderAccount .
	Withdraw register:100  on:aReceiverAccount .
	anInterlanPortfolio  add: aSenderAccount .
	anExternalPortfolio  add: aReceiverAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:aReceiverAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:26:39' prior: 50879058!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount aReceiverAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aReceiverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from:aSenderAccount  to:aReceiverAccount .
	anInterlanPortfolio  add: aSenderAccount .
	anExternalPortfolio  add: aReceiverAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	
	self assert: anExternalPortfolio netTransferReport equals: 
		(anInterlanPortfolio netTransferReport + aReceiverAccount  netTransferReport )




! !

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test13NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:26:44'!
PASSED!
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 20:28:33'!
netTransferReport
	^ TransferNetGenerator new summary: self! !

!methodRemoval: ReceptiveAccount #netTransferReport stamp: 'E.V 6/2/2021 20:28:33'!
netTransferReport
	^ TransferNetGenerator new summary: self!

!methodRemoval: Portfolio #netTransferReport stamp: 'E.V 6/2/2021 20:28:54'!
netTransferReport
	
	^ portfolioElements sum:[:aFinancialService| aFinancialService netTransferReport ] ifEmpty: [0]
!
!TransferNetGenerator methodsFor: 'initialization' stamp: 'E.V 6/2/2021 20:29:46' prior: 50875822 overrides: 50875790!
summary:aFinancialService

		aFinancialService transactionReportFor: self.
		^netValue ! !

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test13NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:32:05'!
PASSED!

!methodRemoval: TransferTransaction #addToBalance: stamp: 'E.V 6/2/2021 20:34:26'!
addToBalance: actualBalance
	self subclassResponsibility !
!TransferWithdraw methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:38:55' overrides: 50872993!
isMyOtherLeg:aDeposit
	^transfer isMyDeposit: aDeposit .! !
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 20:40:27'!
transactionReportFor: aReportGenerator
	self subclassResponsibility ! !
!FinancialService methodsFor: 'transactions' stamp: 'E.V 6/2/2021 20:42:07'!
transactions
	self subclassResponsibility ! !
!ResumeTest methodsFor: 'netTransfer test' stamp: 'E.V 6/2/2021 20:50:08'!
test14NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !

!methodRemoval: ResumeTest #test13NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:50:08'!
test13NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



!
!ResumeTest methodsFor: 'netTransfer test' stamp: 'E.V 6/2/2021 20:50:33'!
test15NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !

!methodRemoval: ResumeTest #test14NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:50:33'!
test14NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



!

!methodRemoval: ResumeTest #test15NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:51:10'!
test15NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ ReceptiveAccount new.
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



!
!Transfer methodsFor: 'testing' stamp: 'E.V 6/2/2021 20:52:00'!
isMyDeposit:aDeposit
	^ deposit == aDeposit .! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 20:52:23'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 20:52:24'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'E.V 6/2/2021 20:52:49' prior: 50872808!
test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas
	|receptorAccount senderAccount aTransfer aWithdraw aDeposit|
	receptorAccount := ReceptiveAccount new.
	senderAccount := ReceptiveAccount new.
	
	aTransfer _ Transfer amount:10 from:senderAccount  to:receptorAccount .
	aWithdraw _ aTransfer withdraw.
	aDeposit _ aTransfer deposit.
	self assert: (aWithdraw isMyOtherLeg: aDeposit ).
	self assert: (aDeposit isMyOtherLeg: aWithdraw ).! !

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 20:52:50'!
PASSED!

!methodRemoval: TransferWithdraw #transfer stamp: 'E.V 6/2/2021 20:54:04'!
transfer
	^transfer !

TestCase subclass: #FinancialServiceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialServiceTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 20:56:33'!
TestCase subclass: #FinancialServiceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialServiceTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 20:57:05'!
FinancialServiceTest subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialServiceTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 20:57:10'!
FinancialServiceTest subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialServiceTest subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransferTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 20:57:15'!
FinancialServiceTest subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 20:57:20'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:57:47'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 20:57:48'!
PASSED!
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 20:58:44'!
addFinancialServices: financialServicesList to: portfolio
	financialServicesList  do:[:aFinancialService|portfolio  add: aFinancialService].! !

!methodRemoval: PortfolioTest #addFinancialServices:to: stamp: 'E.V 6/2/2021 20:58:44'!
addFinancialServices: financialServicesList to: portfolio
	financialServicesList  do:[:aFinancialService|portfolio  add: aFinancialService].!
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 20:58:51'!
createAccountWithDeposits: depositList
	|account|
	account := ReceptiveAccount new.
	depositList do:[:aDepositValue| Deposit register: aDepositValue on: account].
	^account ! !

!methodRemoval: PortfolioTest #createAccountWithDeposits: stamp: 'E.V 6/2/2021 20:58:51'!
createAccountWithDeposits: depositList
	|account|
	account := ReceptiveAccount new.
	depositList do:[:aDepositValue| Deposit register: aDepositValue on: account].
	^account !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:59:03'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 20:59:04'!
PASSED!

FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:00:22'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/2/2021 21:00:31' overrides: 16927572!
setUp
	! !

FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:01:13'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:01:30' prior: 50877055!
test00HacerSummaryDeAccountVaciaDaBalance0
	|account  balance0|
	account  _ ReceptiveAccount new.
	balance0  _ 'Balance = 0'.
	self assert: (account  accountSummaryReport at:1) = balance0 .
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:01:48' prior: 50880126!
test00HacerSummaryDeAccountVaciaDaBalance0
	|account  |
	account  _ ReceptiveAccount new.
	balance0  _ 'Balance = 0'.
	self assert: (account  accountSummaryReport at:1) = balance0 .
	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:01:48'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:02:00' prior: 50880136!
test00HacerSummaryDeAccountVaciaDaBalance0
	|account  |
	account  _ ReceptiveAccount new.
	self assert: (account  accountSummaryReport at:1) = balance0 .
	! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/2/2021 21:02:07' prior: 50880110 overrides: 16927572!
setUp

balance0  _ 'Balance = 0'.
	! !

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:02:13'!
PASSED!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:02:37' prior: 50877039!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account deposito100 resultadoBalance|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	deposito100  _ 'Dep�sito por 100'.
	resultadoBalance  _ 'Balance = 100'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:02:50' prior: 50880241!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account deposito100 balance100|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	deposito100  _ 'Dep�sito por 100'.
	balance100  _ 'Balance = 100'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = balance100 .
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:04:03' prior: 50880256!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account  balance100|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	deposito100  _ 'Dep�sito por 100'.
	balance100  _ 'Balance = 100'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = balance100 .
	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:04:03'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:04:34' prior: 50880271!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account  balance100|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	balance100  _ 'Balance = 100'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = balance100 .
	! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/2/2021 21:04:39' prior: 50880162 overrides: 16927572!
setUp

balance0  _ 'Balance = 0'.
deposito100  _ 'Dep�sito por 100'.	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:05:00' prior: 50880294!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account  |
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	balance100  _ 'Balance = 100'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = balance100 .
	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:05:00'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:05:05' prior: 50880314!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account  |
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = balance100 .
	! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/2/2021 21:05:09' prior: 50880308 overrides: 16927572!
setUp

balance0  _ 'Balance = 0'.
deposito100  _ 'Dep�sito por 100'.	
balance100  _ 'Balance = 100'.! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:06:28' prior: 50877001!
test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen
	|account resultadoDepositos1 resultadoDepositos2 resultadoBalance|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account.
	resultadoBalance  _ 'Balance = 200'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = deposito100 .
	self assert: (account  accountSummaryReport at:3) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:06:46' prior: 50880356!
test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen
	|account  resultadoBalance|
	account  _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	Deposit register: 100 on: account.
	resultadoBalance  _ 'Balance = 200'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = deposito100 .
	self assert: (account  accountSummaryReport at:3) = resultadoBalance .
	! !

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:06:47'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:06:48'!
PASSED!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:08:49' prior: 50880336!
test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen
	|account  |
	account  _ self createAccountWithDeposits: (OrderedCollection with:100).
	
	
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = balance100 .
	! !

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:08:51'!
PASSED!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:09:15' prior: 50880375!
test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen
	|account  resultadoBalance|
	account  _ self createAccountWithDeposits: (OrderedCollection with:100 with:100).
	resultadoBalance  _ 'Balance = 200'.
	self assert: (account  accountSummaryReport at:1) = deposito100 .
	self assert: (account  accountSummaryReport at:2) = deposito100 .
	self assert: (account  accountSummaryReport at:3) = resultadoBalance .
	! !

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:09:17'!
PASSED!
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:10:42'!
createAccountWithWithdraw: withdrawList
	|account|
	account := ReceptiveAccount new.
	withdrawList do:[:aDepositValue| Deposit register: aDepositValue on: account].
	^account ! !
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:11:04'!
createAccountWithWithdraws: withdrawList
	|account|
	account := ReceptiveAccount new.
	withdrawList do:[:aDepositValue| Deposit register: aDepositValue on: account].
	^account ! !

!methodRemoval: FinancialServiceTest #createAccountWithWithdraw: stamp: 'E.V 6/2/2021 21:11:04'!
createAccountWithWithdraw: withdrawList
	|account|
	account := ReceptiveAccount new.
	withdrawList do:[:aDepositValue| Deposit register: aDepositValue on: account].
	^account !
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:11:15' prior: 50880664!
createAccountWithWithdraws: withdrawList
	|account|
	account := ReceptiveAccount new.
	withdrawList do:[:aWithdrawValue| Deposit register: aWithdrawValue on: account].
	^account ! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:11:41' prior: 50877023!
test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen
	|account resultadoRetiro resultadoBalance|
	account  _ self createAccountWithWithdraws: (OrderedCollection with:100).

	resultadoRetiro  _ 'Extraccion por 100'.

	resultadoBalance  _ 'Balance = -100'.
	self assert: (account  accountSummaryReport at:1) = resultadoRetiro .

	self assert: (account  accountSummaryReport at:2) = resultadoBalance .
	! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:12:54' prior: 50880691!
test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen
	|account resultadoRetiro balance100negativo|
	account  _ self createAccountWithWithdraws: (OrderedCollection with:100).

	resultadoRetiro  _ 'Extraccion por 100'.

	balance100negativo  _ 'Balance = -100'.
	self assert: (account  accountSummaryReport at:1) = resultadoRetiro .

	self assert: (account  accountSummaryReport at:2) = balance100negativo .
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:13:05' prior: 50880707!
test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen
	|account resultadoRetiro |
	account  _ self createAccountWithWithdraws: (OrderedCollection with:100).

	resultadoRetiro  _ 'Extraccion por 100'.

	balance100negativo  _ 'Balance = -100'.
	self assert: (account  accountSummaryReport at:1) = resultadoRetiro .

	self assert: (account  accountSummaryReport at:2) = balance100negativo .
	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:13:05'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:13:15' prior: 50880723!
test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen
	|account resultadoRetiro |
	account  _ self createAccountWithWithdraws: (OrderedCollection with:100).

	resultadoRetiro  _ 'Extraccion por 100'.

	
	self assert: (account  accountSummaryReport at:1) = resultadoRetiro .

	self assert: (account  accountSummaryReport at:2) = balance100negativo .
	! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/2/2021 21:13:21' prior: 50880349 overrides: 16927572!
setUp

balance0  _ 'Balance = 0'.
deposito100  _ 'Dep�sito por 100'.	
balance100  _ 'Balance = 100'.
balance100negativo  _ 'Balance = -100'.! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:14:04' prior: 50876967!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount salidaTransferencia100 resultadoEntradaTransferencia  	                                     resultadoBalanceSender resultadoBalanceReceptor| 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	salidaTransferencia100  _ 'Salida por transferencia de 100'.
	resultadoEntradaTransferencia _ 'Entrada por transferencia de 100'.
	

	resultadoBalanceSender  _ 'Balance = -100'.
	resultadoBalanceReceptor  _ 'Balance = 100'.
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = resultadoBalanceSender .

	self assert: (receptorAccount  accountSummaryReport at:1) = resultadoEntradaTransferencia .
	self assert: (receptorAccount  accountSummaryReport at:2) = resultadoBalanceReceptor .

! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:14:17' prior: 50880771!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount salidaTransferencia100 entradaTransferencia100  	                                     resultadoBalanceSender resultadoBalanceReceptor| 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	salidaTransferencia100  _ 'Salida por transferencia de 100'.
	entradaTransferencia100 _ 'Entrada por transferencia de 100'.
	

	resultadoBalanceSender  _ 'Balance = -100'.
	resultadoBalanceReceptor  _ 'Balance = 100'.
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = resultadoBalanceSender .

	self assert: (receptorAccount  accountSummaryReport at:1) = entradaTransferencia100 .
	self assert: (receptorAccount  accountSummaryReport at:2) = resultadoBalanceReceptor .

! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:14:22' prior: 50880804!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount salidaTransferencia100   	                                     resultadoBalanceSender resultadoBalanceReceptor| 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	salidaTransferencia100  _ 'Salida por transferencia de 100'.
	entradaTransferencia100 _ 'Entrada por transferencia de 100'.
	

	resultadoBalanceSender  _ 'Balance = -100'.
	resultadoBalanceReceptor  _ 'Balance = 100'.
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = resultadoBalanceSender .

	self assert: (receptorAccount  accountSummaryReport at:1) = entradaTransferencia100 .
	self assert: (receptorAccount  accountSummaryReport at:2) = resultadoBalanceReceptor .

! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:14:22'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo entradaTransferencia100'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:14:25' prior: 50880836!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount    	                                     resultadoBalanceSender resultadoBalanceReceptor| 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	salidaTransferencia100  _ 'Salida por transferencia de 100'.
	entradaTransferencia100 _ 'Entrada por transferencia de 100'.
	

	resultadoBalanceSender  _ 'Balance = -100'.
	resultadoBalanceReceptor  _ 'Balance = 100'.
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = resultadoBalanceSender .

	self assert: (receptorAccount  accountSummaryReport at:1) = entradaTransferencia100 .
	self assert: (receptorAccount  accountSummaryReport at:2) = resultadoBalanceReceptor .

! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:14:26'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo entradaTransferencia100 salidaTransferencia100'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:14:45' prior: 50880878!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount resultadoBalanceSender resultadoBalanceReceptor| 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	
	

	resultadoBalanceSender  _ 'Balance = -100'.
	resultadoBalanceReceptor  _ 'Balance = 100'.
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = resultadoBalanceSender .

	self assert: (receptorAccount  accountSummaryReport at:1) = entradaTransferencia100 .
	self assert: (receptorAccount  accountSummaryReport at:2) = resultadoBalanceReceptor .

! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/2/2021 21:15:03' prior: 50880763 overrides: 16927572!
setUp

deposito100  _ 'Dep�sito por 100'.	


balance0  _ 'Balance = 0'.
balance100  _ 'Balance = 100'.
balance100negativo  _ 'Balance = -100'.


salidaTransferencia100  _ 'Salida por transferencia de 100'.
entradaTransferencia100 _ 'Entrada por transferencia de 100'.! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:15:34' prior: 50880920!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount resultadoBalanceSender | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = balance100negativo .

	self assert: (receptorAccount  accountSummaryReport at:1) = entradaTransferencia100 .
	self assert: (receptorAccount  accountSummaryReport at:2) = balance100 .

! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:15:47' prior: 50880958!
test04AlHacerTransferenciaSeReflejaEnElResumen
	|senderaccount receptorAccount  | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ ReceptiveAccount new.
	Transfer amount:100  from:senderaccount  to:receptorAccount .
	
	self assert: (senderaccount  accountSummaryReport at:1) = salidaTransferencia100 .
	self assert: (senderaccount  accountSummaryReport at:2) = balance100negativo .

	self assert: (receptorAccount  accountSummaryReport at:1) = entradaTransferencia100 .
	self assert: (receptorAccount  accountSummaryReport at:2) = balance100 .

! !

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:15:48'!
FAILURE!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:15:48'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:15:48'!
FAILURE!
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:16:12' prior: 50880682!
createAccountWithWithdraws: withdrawList
	|account|
	account := ReceptiveAccount new.
	withdrawList do:[:aWithdrawValue| Withdraw register: aWithdrawValue on: account].
	^account ! !

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:16:16'!
FAILURE!

account  accountSummaryReport!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:16:57'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:17:08'!
PASSED!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:17:23' prior: 50877852!
test10PortfolioVacioTieneResumenConBalance0
	|aPortfolio|
	aPortfolio _  Portfolio new.
	self assert: (aPortfolio accountSummaryReport at:1) equals: balance0 .
	



! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:18:56' prior: 50877188!
test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma
	|aPortfolio anAccount|
	aPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	aPortfolio  add: anAccount .
	self assert: (aPortfolio accountSummaryReport) equals: (anAccount accountSummaryReport) .
	



! !

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:18:57'!
PASSED!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:20:28' prior: 50877585!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	anotherAccount _ self createAccountWithWithdraws: (OrderedCollection with:100).
	self addFinancialServices: (OrderedCollection with: anAccount  with:anotherAccount )  to:aPortfolio .

	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: (OrderedCollection with:anAccount with:anotherAccount )).

	self assert: (aPortfolio accountSummaryReport last) equals: balance0 
	



! !

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:20:29'!
PASSED!
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:20:48' prior: 50878229!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	anotherAccount _ ReceptiveAccount new.
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:21:01' prior: 50881306!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	anotherAccount _ self createAccountWithWithdraws: (OrderedCollection with:100).
	Deposit register:100  on:anAccount .
	Withdraw register:100  on:anotherAccount .
	anInterlanPortfolio  add: anAccount .
	anExternalPortfolio  add: anotherAccount .
	anExternalPortfolio add: anInterlanPortfolio .
	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'accountSummary test' stamp: 'E.V 6/2/2021 21:22:33' prior: 50881336!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	anotherAccount _ self createAccountWithWithdraws: (OrderedCollection with:100).
	
	self addFinancialServices:(OrderedCollection with:anAccount )  to: anInterlanPortfolio .
	self addFinancialServices:(OrderedCollection with:anotherAccount with:anInterlanPortfolio )  to: anExternalPortfolio .


	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:22:35'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:22:36'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:22:36'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:22:36'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:22:36'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:22:36'!
PASSED!
!ResumeTest methodsFor: 'netTransfer test' stamp: 'E.V 6/2/2021 21:23:54' prior: 50875655!
test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	Transfer amount:100  from:senderaccount  to:receptorAccount .

	self assert: receptorAccount  netTransferReport equals: 100 .


! !

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:23:55'!
PASSED!
!ResumeTest methodsFor: 'netTransfer test' stamp: 'E.V 6/2/2021 21:24:21' prior: 50875938!
test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias
	|senderaccount receptorAccount | 
	senderaccount  _ ReceptiveAccount new.
	receptorAccount _ self createAccountWithWithdraws: (OrderedCollection with:100).
	Transfer amount:100  from:senderaccount  to:receptorAccount .


	self assert: receptorAccount  netTransferReport equals: 100 .


! !

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:24:23'!
PASSED!
!ResumeTest methodsFor: 'netTransfer test' stamp: 'E.V 6/2/2021 21:26:27' prior: 50878802!
test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma
	|aPortfolio aSenderAccount aRecieverAccount|
	aPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aRecieverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from: aSenderAccount  to: aRecieverAccount .
	
	self addFinancialServices: (OrderedCollection with:aSenderAccount with:aRecieverAccount) to: aPortfolio .

	self assert: (aPortfolio netTransferReport ) equals: 
		(aSenderAccount netTransferReport  + aRecieverAccount netTransferReport ) .
	



! !

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:26:28'!
PASSED!
!ResumeTest methodsFor: 'netTransfer test' stamp: 'E.V 6/2/2021 21:27:35' prior: 50879088!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount aReceiverAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aReceiverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from:aSenderAccount  to:aReceiverAccount .
	
	anInterlanPortfolio  add: aSenderAccount .
	self addFinancialServices: (OrderedCollection with:aReceiverAccount with:anInterlanPortfolio) to: anExternalPortfolio .

	self assert: anExternalPortfolio netTransferReport equals: 
		(anInterlanPortfolio netTransferReport + aReceiverAccount  netTransferReport )




! !

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:27:36'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'E.V 6/2/2021 21:28:40' prior: 50871022!
test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas
	|portfolio account1 account2|
	portfolio  := Portfolio new.	
	account1 := self createAccountWithDeposits: (OrderedCollection with: 100).
	account2 := self createAccountWithDeposits: (OrderedCollection with: 50).
	
	self addFinancialServices: (OrderedCollection with:account1 with:account2 )  to: portfolio .

	self assert: portfolio balance equals: 150.
	! !
!PortfolioTest methodsFor: 'tests' stamp: 'E.V 6/2/2021 21:28:44' prior: 50881871!
test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas
	|aPortfolio account1 account2|
	aPortfolio  := Portfolio new.	
	account1 := self createAccountWithDeposits: (OrderedCollection with: 100).
	account2 := self createAccountWithDeposits: (OrderedCollection with: 50).
	
	self addFinancialServices: (OrderedCollection with:account1 with:account2 )  to: aPortfolio .

	self assert: aPortfolio balance equals: 150.
	! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 21:28:48'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'E.V 6/2/2021 21:29:55' prior: 50871036!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	self deny: (portfolio hasRegistered: deposito).
	! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'E.V 6/2/2021 21:32:01' prior: 50871299!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := self createAccountWithDeposits:(OrderedCollection with:100). 
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 21:32:02'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'E.V 6/2/2021 21:32:29' prior: 50871290!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := self createAccountWithDeposits:(OrderedCollection with:100). 
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'E.V 6/2/2021 21:32:34' prior: 50882031!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := self createAccountWithDeposits:(OrderedCollection with:100). 

		
	self assert: 100 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 21:32:35'!
PASSED!
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:37:51'!
createAccountWithTransaction: anAccountTransaction withValues: accountTransactionValueList
	|account|
	account := ReceptiveAccount new.
	accountTransactionValueList do:[:accountTransactionValue| anAccountTransaction register: accountTransactionValue on: account].
	^account ! !
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:38:12' prior: 50881083!
createAccountWithWithdraws: withdrawList
	^self createAccountWithTransaction: Withdraw withValues: withdrawList! !
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:38:25' prior: 50882094!
createAccountWithWithdraws: withdrawList
	^self createAccountWithTransaction: Withdraw withValues: withdrawList! !
!FinancialServiceTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/2/2021 21:38:43' prior: 50879870!
createAccountWithDeposits: depositList
	^self createAccountWithTransaction: Deposit withValues: depositList! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 21:38:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 21:39:13'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 21:39:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/2/2021 21:39:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/2/2021 21:39:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/2/2021 21:39:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/2/2021 21:39:14'!
PASSED!

----SNAPSHOT----(2 June 2021 21:40:45) CuisUniversity-4532.image priorSource: 17475682!

Object subclass: #FinancialService
	instanceVariableNames: 'father named'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialService category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:45:39'!
Object subclass: #FinancialService
	instanceVariableNames: 'father named'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'initialize' stamp: 'E.V 6/2/2021 21:47:09'!
named: aPortfolioName
	portfolioElements := OrderedCollection new.
	father := OrderedCollection  new.
	named := aPortfolioName ! !

!classDefinition: #FinancialService category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:47:28'!
Object subclass: #FinancialService
	instanceVariableNames: 'father name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 21:47:28' prior: 50882343!
named: aPortfolioName
	portfolioElements := OrderedCollection new.
	father := OrderedCollection  new.
	name := aPortfolioName ! !
!ReceptiveAccount methodsFor: 'initialize' stamp: 'E.V 6/2/2021 21:48:07'!
named: anAccountName
	father := OrderedCollection new.
	transactions := OrderedCollection new.
	name := anAccountName ! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 21:55:39'!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount|
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: anAccount treeReport includes: 'Cuenta de Juan'.
	self assert: anAccount treeReport size equals:1.
	! !

ReportGenerator subclass: #TreeReportGenerator
	instanceVariableNames: 'tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TreeReportGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 21:56:12'!
ReportGenerator subclass: #TreeReportGenerator
	instanceVariableNames: 'tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TreeReportGenerator methodsFor: 'initialization' stamp: 'E.V 6/2/2021 21:57:07' overrides: 16896425!
initialize
	tree _ OrderedCollection new.! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 21:58:02' overrides: 50875358!
depositReport: aDeposit ! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 21:58:17' overrides: 50875785!
transferDepositReport: aTransferDeposit ! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 21:58:50' overrides: 50875780!
transferWithdrawReport: aTransferWithdr! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 21:58:58' overrides: 50875775!
withdrawReport: aWithdraw 
! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 21:59:13' overrides: 50875790!
summary:aFinancialService! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 21:59:19' prior: 50882419 overrides: 50875790!
summary:aFinancialService
	self shouldBeImplemented ! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:00:28' prior: 50882424 overrides: 50875790!
summary:aFinancialService
		aFinancialService ! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:02:03' prior: 50882430 overrides: 50875790!
summary:aFinancialService
		aFinancialService financialServiceReportFor: self.! !
!ReceptiveAccount methodsFor: 'report' stamp: 'E.V 6/2/2021 22:04:12'!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:05:14'!
receptiveAccountReport: aReceptiveAccount
	^ tree add: aReceptiveAccount name.! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:05:26'!
ERROR!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:05:26'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'E.V 6/2/2021 22:05:43'!
treeReport
	self shouldBeImplemented.! !
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 22:06:17'!
treeReport
	self shouldBeImplemented.! !

!methodRemoval: ReceptiveAccount #treeReport stamp: 'E.V 6/2/2021 22:06:17'!
treeReport
	self shouldBeImplemented.!
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 22:06:43' prior: 50882462!
treeReport
	^ TreeReportGenerator new summary: self.! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:07:48'!
ERROR!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:07:48'!
ERROR!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:08:13' prior: 50882435 overrides: 50875790!
summary:aFinancialService
		^aFinancialService financialServiceReportFor: self.! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:08:28'!
FAILURE!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:08:28'!
FAILURE!

aReceptiveAccount name!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:10:24' prior: 50882446!
receptiveAccountReport: aReceptiveAccount
	^ tree add: aReceptiveAccount returnName.! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:10:28'!
ERROR!
!FinancialService methodsFor: 'accessing' stamp: 'E.V 6/2/2021 22:10:40'!
returnName
	self shouldBeImplemented.! !
!FinancialService methodsFor: 'accessing' stamp: 'E.V 6/2/2021 22:10:46' prior: 50882504!
returnName
	^name! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:10:48'!
FAILURE!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:10:52'!
FAILURE!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:10:52'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:11:24' prior: 50882495!
receptiveAccountReport: aReceptiveAccount
	 tree add: aReceptiveAccount returnName.! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:11:43'!
FAILURE!

anAccount treeReport!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:13:06' prior: 50882372!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount|
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	self assert: anAccount treeReport size equals:1.
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:13:07'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:14:44' prior: 50882482 overrides: 50875790!
summary:aFinancialService
		aFinancialService financialServiceReportFor: self.
		^tree! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 22:14:51'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:15:49'!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|anAccount|
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	self assert: anAccount treeReport size equals:1.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:16:02' prior: 50882557!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|aPortfolio|
	aPortfolio  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: (aPortfolio treeReport) includes: 'Cuenta de Juan'.
	self assert: aPortfolio treeReport size equals:1.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:17:11' prior: 50882568!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|aPortfolio|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio treeReport) includes: 'Portfolio de la familia'.
	self assert: aPortfolio treeReport size equals:1.
	! !

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 22:17:12'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:17:27'!
financialServiceReportFor: aTreeReportGenerator 
	self shouldBeImplemented.! !
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 22:18:15'!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self! !

!methodRemoval: ReceptiveAccount #financialServiceReportFor: stamp: 'E.V 6/2/2021 22:18:15'!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 22:18:20'!
ERROR!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 22:18:39'!
ERROR!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 22:18:39'!
ERROR!

!methodRemoval: Portfolio #financialServiceReportFor: stamp: 'E.V 6/2/2021 22:18:55'!
financialServiceReportFor: aTreeReportGenerator 
	self shouldBeImplemented.!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 22:19:09'!
PASSED!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:20:14' overrides: 50882598!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self! !
!ReceptiveAccount methodsFor: 'report' stamp: 'E.V 6/2/2021 22:20:14' overrides: 50882598!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self! !

!methodRemoval: FinancialService #financialServiceReportFor: stamp: 'E.V 6/2/2021 22:20:14'!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self!
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 22:20:24'!
financialServiceReportFor:aReportGenerator
	self subclassResponsibility ! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:20:53' prior: 50882629 overrides: 50882646!
financialServiceReportFor:aReportGenerator
	aReportGenerator portfolioReport: self! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:21:47'!
portfolioReport:aPortfolio
	 tree add: aPortfolio returnName.
	 ! !

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 22:21:58'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:25:59'!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolioTreeReport _ aPortfolio treeReport.
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReport at:2 size) equals: 1.
	self assert: ((aPortfolioTreeReport at:1) at:2) equals: 'Cuenta de Juan'.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:26:41' prior: 50882665!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolioTreeReport _ aPortfolio treeReport.
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReport at:2 size) equals: 1.
	self assert: ((aPortfolioTreeReport at:1) at:2) equals: 'Cuenta de Juan'.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:27:06' prior: 50882683!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolioTreeReport _ aPortfolio treeReport.
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReport at:2 size) equals: 1.
	self assert: ((aPortfolioTreeReport at:1) at:2) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:27:11'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:30:03' prior: 50882657!
portfolioReport:aPortfolio
	 tree add: aPortfolio returnName.
	 aPortfolio addElementsToReport: self.
	 ! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:31:47'!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aReportGenerator ]! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:32:01' prior: 50882740!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aReportGenerator summary: aFinancialService ]! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:35:35' prior: 50882746!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aFinancialService transactionReportFor: aReportGenerator ]! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:35:42'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:35:42'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:36:43' prior: 50878374 overrides: 50879317!
transactionReportFor: aReportGenerator
		portfolioElements do: [:aFinancialService | aReportGenerator summary: aFinancialService ]! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:36:55'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:36:55'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:37:26' prior: 50882734!
portfolioReport:aPortfolio
	 tree add: aPortfolio returnName.
	 tree add: (aPortfolio addElementsToReport: self).
	 ! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:37:37'!
ERROR!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:37:37'!
ERROR!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:37:52' prior: 50882706!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolioTreeReport _ aPortfolio treeReport.
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:1) at:2) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:37:54'!
ERROR!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:37:58'!
ERROR!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:37:58'!
ERROR!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 22:40:20' prior: 50882800!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:1) at:2) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:40:23'!
ERROR!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:40:23'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 20:02:56' prior: 50882769 overrides: 50879317!
transactionReportFor: aReportGenerator
		portfolioElements do: [:aFinancialService | aFinancialService transactionReportFor:aReportGenerator]! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:41:08'!
ERROR!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:41:08'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:43:50' prior: 50882753!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aFinancialService financialServiceReportFor: aReportGenerator ]
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:43:59'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:43:59'!
FAILURE!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:45:19' prior: 50882884!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aReportGenerator summary: self ]
	! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 22:46:37' prior: 50882900!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aReportGenerator summary: aFinancialService ]
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:46:38'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:46:49'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 22:48:35' prior: 50882785!
portfolioReport:aPortfolio
	 tree add: aPortfolio returnName.
	 (aPortfolio addElementsToReport: self).
	 ! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:48:41'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:48:41'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:48:46'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 22:48:46'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 23:02:48' prior: 50882923!
portfolioReport:aPortfolio
	 tree add: aPortfolio returnName.
	 aPortfolio elements do:[:aFinancialService | tree add: aFinancialService treeReport]
	 ! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:02:56'!
ERROR!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:02:56'!
ERROR!
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 23:04:33' prior: 50882907!
addElementsToReport: aReportGenerator
		portfolioElements do: [:aFinancialService | aReportGenerator addToReport: aFinancialService ]
	! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/2/2021 23:05:37' prior: 50882962!
addElementsToReport: aReportGenerator
		aReportGenerator portfolioElementsReport: portfolioElements .
	! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 23:06:39'!
portfolioElementsReport: aFinancialServiceList
	aFinancialServiceList do: [:aFinancialService |  tree add: aFinancialService treeReport ]! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 23:07:10' prior: 50882946!
portfolioReport:aPortfolio
	 tree add: aPortfolio returnName.
	 aPortfolio addElementsToReport: self
	 ! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:07:18'!
FAILURE!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:07:18'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:09:02' prior: 50882836!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:2) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:09:04'!
ERROR!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:09:10' prior: 50882998!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 23:09:11'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 23:09:24'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:14:55'!
test03ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anhoterAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:15:11'!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anhoterAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!methodRemoval: ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:15:11'!
test03ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anhoterAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	aPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:15:21' prior: 50883254!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anhoterAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:15:36'!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anhoterAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!methodRemoval: ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:15:46'!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConDosCuentasTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anhoterAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta de Juan'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:18:06' prior: 50883337!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: (anAccount treeReport) includes: 'Cuenta Mia'.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:18:50' prior: 50883026!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:18:57'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:23:22' prior: 50883393!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta Mia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	
	self assert: (((aPortfolioTreeReport at:2) at:2)at:2) includes: 'Cuenta de Juan'.
	self assert: ((((aPortfolioTreeReport at:2) at:2)at:2)size) equals:1
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:23:23'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:23:54' prior: 50883451!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta Mia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	
	self assert: (((aPortfolioTreeReport at:2) at:2)at:2) includes: 'Cuenta de Juan'.
	self assert: ((((aPortfolioTreeReport at:2) at:2)at:2)size) equals:1
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:23:55'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:26:39' prior: 50883492!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta Mia'.
	
	self assert: (((aPortfolioTreeReport at:2)at:2) size) equals: 2.
	
	self assert: (((aPortfolioTreeReport at:2) at:2)at:2) includes: 'Cuenta de Juan'.
	self assert: ((((aPortfolioTreeReport at:2) at:2)at:2)size) equals:1
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:26:40'!
ERROR!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:34:09' prior: 50883533!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection new.
	aPortfolioTreeReportLvl2 addAll: (aPortfolioTreeReport at:2).
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 _ (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: aPortfolioTreeReportLvl2 includes: 'Cuenta Mia'.
	
	self assert: (aPortfolioTreeReportLvl3 size) equals: 2.
	self assert: aPortfolioTreeReportLvl3 includes: 'Portfolio de hijos'.
	self assert: (aPortfolioTreeReportLvl3 at:2) includes: 'Portfolio de hijos'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:34:10'!
ERROR!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:34:27'!
ERROR!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:38:19' prior: 50883574!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection new.
	aPortfolioTreeReportLvl2 addAll: (aPortfolioTreeReport ).
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 _ (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: aPortfolioTreeReportLvl2 includes: 'Cuenta Mia'.
	
	self assert: (aPortfolioTreeReportLvl3 size) equals: 2.
	self assert: aPortfolioTreeReportLvl3 includes: 'Portfolio de hijos'.
	self assert: (aPortfolioTreeReportLvl3 at:2) includes: 'Portfolio de hijos'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:38:22'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:39:52' prior: 50883628!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3)
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 _ (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: aPortfolioTreeReportLvl2 includes: 'Cuenta Mia'.
	
	self assert: (aPortfolioTreeReportLvl3 size) equals: 2.
	self assert: aPortfolioTreeReportLvl3 includes: 'Portfolio de hijos'.
	self assert: (aPortfolioTreeReportLvl3 at:2) includes: 'Portfolio de hijos'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:39:54'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:40:06' prior: 50883677!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 _ (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: aPortfolioTreeReportLvl2 includes: 'Cuenta Mia'.
	
	self assert: (aPortfolioTreeReportLvl3 size) equals: 2.
	self assert: aPortfolioTreeReportLvl3 includes: 'Portfolio de hijos'.
	self assert: (aPortfolioTreeReportLvl3 at:2) includes: 'Portfolio de hijos'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:40:07'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:40:22' prior: 50883726!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 add: (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: aPortfolioTreeReportLvl2 includes: 'Cuenta Mia'.
	
	self assert: (aPortfolioTreeReportLvl3 size) equals: 2.
	self assert: aPortfolioTreeReportLvl3 includes: 'Portfolio de hijos'.
	self assert: (aPortfolioTreeReportLvl3 at:2) includes: 'Portfolio de hijos'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:40:23'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:41:06' prior: 50883775!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 add: (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	
	self assert: (aPortfolioTreeReportLvl3 size) equals: 2.
	self assert: aPortfolioTreeReportLvl3 includes: 'Portfolio de hijos'.
	self assert: (aPortfolioTreeReportLvl3 at:2) includes: 'Portfolio de hijos'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:41:07'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:43:52' prior: 50883824!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 add: (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3 at:1) includes: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:43:54'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:44:25' prior: 50883874!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: (aPortfolioTreeReportLvl2 at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3 at:1) includes: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:44:26'!
FAILURE!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:44:31'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:45:16' prior: 50883924!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3 at:1) includes: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:45:17'!
FAILURE!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:45:38' prior: 50883979!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/2/2021 23:45:39'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:45:48' prior: 50884029!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.
	self halt.
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/2/2021 23:46:09' prior: 50884168!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.
	
	! !

TreeReportGenerator subclass: #SpecialAccountTreeReportGenerator
	instanceVariableNames: 'tree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TreeReportGenerator subclass: #SpecialAccountTreeReportGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #SpecialAccountTreeReportGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/2/2021 23:51:34'!
TreeReportGenerator subclass: #SpecialAccountTreeReportGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!SpecialAccountTreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 23:52:41' overrides: 50882523!
receptiveAccountReport: aReceptiveAccount
	 tree add: aReceptiveAccount returnName.! !
!SpecialAccountTreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 23:54:28' overrides: 50882983!
portfolioReport:aPortfolio
	super portfolioReport: aPortfolio .
	tree add: 'Balance = ', aPortfolio balance.
	 ! !
!SpecialAccountTreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/2/2021 23:55:07' prior: 50884279 overrides: 50882523!
receptiveAccountReport: aReceptiveAccount
	 super receptiveAccountReport: aReceptiveAccount .
	 tree add: aReceptiveAccount accountSummaryReport .! !
!FinancialService methodsFor: 'report' stamp: 'E.V 6/2/2021 23:56:19'!
specialAccountTreeReport
	^ SpecialAccountTreeReportGenerator new summary: self.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/2/2021 23:57:20' prior: 50882533!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount|
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: anAccount treeReport size equals:1.
	! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/2/2021 23:58:11' prior: 50884307!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount|
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: anAccount treeReport size equals:2.
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:58:15'!
FAILURE!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/2/2021 23:58:48' prior: 50884318!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount x |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	x _ anAccount specialAccountTreeReport 
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: anAccount treeReport size equals:2.
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:58:55'!
ERROR!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/2/2021 23:59:08' prior: 50884335!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount x |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	x _ anAccount specialAccountTreeReport .
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: anAccount treeReport size equals:2.
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:59:12'!
FAILURE!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/2/2021 23:59:55' prior: 50884353!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount x |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	x _ anAccount specialAccountTreeReport .
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: (anAccount treeReport size) equals:2.
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/2/2021 23:59:59'!
FAILURE!

self size!

self size!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:01:04' prior: 50884371!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount x |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	x _ anAccount specialAccountTreeReport .
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: (anAccount specialAccountTreeReport size) equals:2.
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:01:08'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:01:15' prior: 50884390!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: (anAccount specialAccountTreeReport size) equals:2.
	! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:01:58' prior: 50884499!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport size) equals:2.
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: ((anAccount specialAccountTreeReport at:2) size ) equals: 1 .
	
	! !

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:01:59'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:02:25'!
test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport size) equals:2.
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: ((anAccount specialAccountTreeReport at:2) size ) equals: 1 .
	
	! !

!methodRemoval: ResumeTest #test01ElTreeReportDeUnAccountEsSuNombre stamp: 'E.V 6/3/2021 00:02:25'!
test01ElTreeReportDeUnAccountEsSuNombre
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport size) equals:2.
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount specialAccountTreeReport at:2 ) includes: balance0 .
	self assert: ((anAccount specialAccountTreeReport at:2) size ) equals: 1 .
	
	!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 00:04:05'!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount specialAccountTreeReport ) includes: 'Cuenta de Juan'.
! !

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:04:07'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:04:08'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:04:12'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:07:27'!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	self assert: aPortfolio specialAccountTreeReport size equals:2.
	self assert: (aPortfolio specialAccountTreeReport ) includes: 'Portfolio de la familia'.
	
	
	self assert: (aPortfolio specialAccountTreeReport at:2) size equals:1.
	self assert: (aPortfolio specialAccountTreeReport at:2 ) includes: 'Balance = 0'.! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:07:29'!
ERROR!
!SpecialAccountTreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 00:07:42' prior: 50884286 overrides: 50882983!
portfolioReport:aPortfolio
	super portfolioReport: aPortfolio .
	tree add: 'Balance = ', aPortfolio balance asString.
	 ! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:07:43'!
FAILURE!

aPortfolio specialAccountTreeReport!

 aPortfolio specialAccountTreeReport!

self size!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:08:53' prior: 50884767!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio specialAccountTreeReport size) equals:2.
	self assert: (aPortfolio specialAccountTreeReport ) includes: 'Portfolio de la familia'.
	
	
	self assert: (aPortfolio specialAccountTreeReport at:2) size equals:1.
	self assert: (aPortfolio specialAccountTreeReport at:2 ) includes: 'Balance = 0'.! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:08:54'!
FAILURE!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:09:02'!
FAILURE!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:09:44' prior: 50884804!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio specialAccountTreeReport size) equals:2.
	self assert: (aPortfolio specialAccountTreeReport ) includes: 'Portfolio de la familia'.
	self assert: (aPortfolio specialAccountTreeReport) includes: 'Balance = 0'.! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:09:46'!
PASSED!
!FinancialService methodsFor: 'report' stamp: 'E.V 6/3/2021 00:10:12'!
accountSpecialTreeReport
	^ SpecialAccountTreeReportGenerator new summary: self.! !

!methodRemoval: FinancialService #specialAccountTreeReport stamp: 'E.V 6/3/2021 00:11:17'!
specialAccountTreeReport
	^ SpecialAccountTreeReportGenerator new summary: self.!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:11:28' prior: 50884622!
test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount accountSpecialTreeReport size) equals:2.
	self assert: (anAccount accountSpecialTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount accountSpecialTreeReport at:2 ) includes: balance0 .
	self assert: ((anAccount accountSpecialTreeReport at:2) size ) equals: 1 .
	
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 00:11:32' prior: 50884655!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount accountSpecialTreeReport ) includes: 'Cuenta de Juan'.
! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 00:11:45' prior: 50884975!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount |
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount treeReport ) includes: 'Cuenta de Juan'.
! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:11:51' prior: 50884830!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio accountSpecialTreeReport size) equals:2.
	self assert: (aPortfolio accountSpecialTreeReport ) includes: 'Portfolio de la familia'.
	self assert: (aPortfolio accountSpecialTreeReport) includes: 'Balance = 0'.! !

!classRenamed: #SpecialAccountTreeReportGenerator as: #AccountSpecialTreeReportGenerator stamp: 'E.V 6/3/2021 00:12:46'!
Smalltalk renameClassNamed: #SpecialAccountTreeReportGenerator as: #AccountSpecialTreeReportGenerator!
!FinancialService methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 00:12:46' prior: 50884946!
accountSpecialTreeReport
	^ AccountSpecialTreeReportGenerator new summary: self.! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:13:06'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:13:08'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 00:13:11'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:14:26'!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaSeComportaComoArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaSeComportaComoArbol stamp: 'E.V 6/3/2021 00:14:31'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:14:49'!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!methodRemoval: ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaSeComportaComoArbol stamp: 'E.V 6/3/2021 00:14:49'!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaSeComportaComoArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:20:12' prior: 50885294!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register:balance100  on:anAccount .
	aPortfolio add: anAccount .
	
	aPortfolioTreeReport _ aPortfolio accountSpecialTreeReport .
	
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport includes: 'Portfolio de la familia'.
	self assert: aPortfolioTreeReport includes: balance100 .
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	self assert: (aPortfolioTreeReport at:2) includes: 'Cuenta de Juan'.
	

	self assert: ((aPortfolioTreeReport at:2)at:2) size equals: 2.	
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: deposito100 .
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: balance100 .	! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:20:14'!
ERROR!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:20:40' prior: 50885339!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register:100  on:anAccount .
	aPortfolio add: anAccount .
	
	aPortfolioTreeReport _ aPortfolio accountSpecialTreeReport .
	
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport includes: 'Portfolio de la familia'.
	self assert: aPortfolioTreeReport includes: balance100 .
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	self assert: (aPortfolioTreeReport at:2) includes: 'Cuenta de Juan'.
	

	self assert: ((aPortfolioTreeReport at:2)at:2) size equals: 2.	
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: deposito100 .
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: balance100 .	! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:20:42'!
FAILURE!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:27:05'!
FAILURE!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 00:28:12' prior: 50882975!
portfolioElementsReport: aFinancialServiceList
	aFinancialServiceList do: [:aFinancialService |  tree add: (self newReportFor:aFinancialService) ]! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:28:16'!
ERROR!
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 00:28:31'!
newReportFor: aReceptiveAccount 
	self shouldBeImplemented.! !
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 00:30:23' prior: 50885427!
newReportFor: aFinancialService 
	^ self class new summary: aFinancialService! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:30:25'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:30:28'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:33:00'!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:33:14' prior: 50885446!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:3.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:34:02' prior: 50885491!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport aPortfolioSpecialTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio treeReport.
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioSpecialTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:3.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:34:09' prior: 50885538!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport aPortfolioSpecialTreeReportLvl2 aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio treeReport.
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioSpecialTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:3.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:34:16' prior: 50885586!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport aPortfolioSpecialTreeReportLvl2 aPortfolioSpecialTreeReportLvl3 
	|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio treeReport.
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 addAll: ((aPortfolioSpecialTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:3.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioSpecialTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:37:16' prior: 50885634!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio treeReport.
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 addAll: ((aPortfolioSpecialTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:2.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioSpecialTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!AccountSpecialTreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 00:38:33' prior: 50884790 overrides: 50882983!
portfolioReport:aPortfolio
	super portfolioReport: aPortfolio .
	tree add: (OrderedCollection with:'Balance = ', aPortfolio balance asString).
	 ! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:39:35' prior: 50885375!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register:100  on:anAccount .
	aPortfolio add: anAccount .
	
	aPortfolioTreeReport _ aPortfolio accountSpecialTreeReport .
	
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport includes: 'Portfolio de la familia'.
	self assert: (aPortfolioTreeReport at:3) includes: balance100 .
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	self assert: (aPortfolioTreeReport at:2) includes: 'Cuenta de Juan'.
	

	self assert: ((aPortfolioTreeReport at:2)at:2) size equals: 2.	
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: deposito100 .
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: balance100 .	! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:39:38'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:42:02' prior: 50885683!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio treeReport.
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 addAll: ((aPortfolioSpecialTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:2.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioSpecialTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:42:31' prior: 50885777!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 addAll: ((aPortfolioSpecialTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:2.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioSpecialTreeReportLvl3) includes: 'Cuenta de Juan'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:55:18' prior: 50885828!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:2.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: 'Cuenta de Juan'.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 1.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance0 .! !

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:55:21'!
FAILURE!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:55:57' prior: 50885879!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: 'Cuenta de Juan'.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 1.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance0 .! !

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:55:59'!
FAILURE!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:12'!
FAILURE!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:56:21' prior: 50885961!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: 'Cuenta de Juan'.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance0 .! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:56:26' prior: 50886048!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio new named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount new named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: 'Cuenta de Juan'.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:56:28'!
FAILURE!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:56:28'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:56:28'!
FAILURE!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 00:56:52' prior: 50884997!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio new named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio accountSpecialTreeReport size) equals:2.
	self assert: (aPortfolio accountSpecialTreeReport ) includes: 'Portfolio de la familia'.
	self assert: (aPortfolio accountSpecialTreeReport at:2) includes: 'Balance = 0'.! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:56:53'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 00:56:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 00:56:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 00:56:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 00:56:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 00:56:58'!
PASSED!

----QUIT----(3 June 2021 00:57:03) CuisUniversity-4532.image priorSource: 17621655!

----STARTUP---- (3 June 2021 00:57:09) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!


!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 00:57:40'!
PASSED!

----QUIT----(3 June 2021 00:58:05) CuisUniversity-4532.image priorSource: 17757788!

----STARTUP---- (3 June 2021 10:27:49) as C:\Users\EnzoVigneti\Desktop\Facu\inge1\cui\CuisUniversity-4532.image!


!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 10:28:05'!
PASSED!
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:31:07' overrides: 50885432!
newReportFor:aFinancialService

	^ aFinancialService treeReport .! !
!AccountSpecialTreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:31:22' overrides: 50887084!
newReportFor: aFinancialService 
	^ aFinancialService accountSpecialTreeReport ! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 10:31:29'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 10:31:50'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:31:52'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 10:31:55'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:31:56'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:58'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:58'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:31:59'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:32:03'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 10:32:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 10:32:34'!
PASSED!

!methodRemoval: ReportGenerator #newReportFor: stamp: 'E.V 6/3/2021 10:33:43'!
newReportFor: aFinancialService 
	^ self class new summary: aFinancialService!
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:35:29'!
portfolioElementsReport: aFinancialServiceList
	self subclassResponsibility ! !
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:36:00'!
portfolioReport:aPortfolio
	self subclassResponsibility ! !
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:37:33'!
receptiveAccountReport: aReceptiveAccount
	self subclassResponsibility ! !
!AccountSummaryGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:40:02' overrides: 50888316!
portfolioElementsReport: aFinancialServiceList! !
!AccountSummaryGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:40:43' overrides: 50888321!
portfolioReport:aPortfolio! !
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:41:15' prior: 50888326!
receptiveAccountReport: aReceptiveAccount
	self subclassResponsibility ! !
!AccountSummaryGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:41:23' overrides: 50888341!
receptiveAccountReport: aReceptiveAccount! !
!TransferNetGenerator methodsFor: 'not used' stamp: 'E.V 6/3/2021 10:43:25' overrides: 50888316!
portfolioElementsReport: aFinancialServiceList
! !
!TransferNetGenerator methodsFor: 'not used' stamp: 'E.V 6/3/2021 10:43:53' overrides: 50888321!
portfolioReport:aPortfolio
	! !
!TransferNetGenerator methodsFor: 'not used' stamp: 'E.V 6/3/2021 10:44:06' overrides: 50888341!
receptiveAccountReport: aReceptiveAccount! !
!ReportGenerator methodsFor: 'initialization' stamp: 'E.V 6/3/2021 10:44:45' overrides: 16896425!
initialize
	self subclassResponsibility ! !
!AccountSummaryGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:47:27'!
generateReportFor: aFinancialService
	
		aFinancialService transactionReportFor: self.
		summary add: 'Balance = ', aFinancialService balance asString .
		^summary 
		! !
!TransferNetGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:47:27'!
generateReportFor:aFinancialService

		aFinancialService transactionReportFor: self.
		^netValue ! !
!TreeReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:47:27'!
generateReportFor:aFinancialService
		aFinancialService financialServiceReportFor: self.
		^tree! !
!ReportGenerator methodsFor: 'report' stamp: 'E.V 6/3/2021 10:47:27'!
generateReportFor:anAccount
	self subclassResponsibility ! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:47:27' prior: 50885020!
accountSpecialTreeReport
	^ AccountSpecialTreeReportGenerator new generateReportFor: self.! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:47:27' prior: 50878443!
accountSummaryReport

	^ AccountSummaryGenerator new generateReportFor: self.
	! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:47:27' prior: 50879199!
netTransferReport
	^ TransferNetGenerator new generateReportFor: self! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:47:27' prior: 50882470!
treeReport
	^ TreeReportGenerator new generateReportFor: self.! !

!methodRemoval: AccountSummaryGenerator #summary: stamp: 'E.V 6/3/2021 10:47:27'!
summary: aFinancialService
	
		aFinancialService transactionReportFor: self.
		summary add: 'Balance = ', aFinancialService balance asString .
		^summary 
		!

!methodRemoval: TransferNetGenerator #summary: stamp: 'E.V 6/3/2021 10:47:27'!
summary:aFinancialService

		aFinancialService transactionReportFor: self.
		^netValue !

!methodRemoval: TreeReportGenerator #summary: stamp: 'E.V 6/3/2021 10:47:27'!
summary:aFinancialService
		aFinancialService financialServiceReportFor: self.
		^tree!

!methodRemoval: ReportGenerator #summary: stamp: 'E.V 6/3/2021 10:47:27'!
summary:anAccount
	self subclassResponsibility !

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 10:47:52'!
PASSED!

!classDefinition: #AccountSummaryGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 10:48:14'!
ReportGenerator subclass: #AccountSummaryGenerator
	instanceVariableNames: 'report'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:14' prior: 50875375 overrides: 50875358!
depositReport: aDeposit
	report add: 'Dep�sito por ', (aDeposit value asString) ! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:14' prior: 50875551 overrides: 50875785!
transferDepositReport: aTransferDeposit 
	report add: 'Entrada por transferencia de ', (aTransferDeposit value asString)! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:14' prior: 50875409 overrides: 50888367!
initialize
	report _ OrderedCollection new.! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:14' prior: 50875477 overrides: 50875775!
withdrawReport: aWithdraw 
	report add: 'Extraccion por ', (aWithdraw value asString)! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:14' prior: 50875519 overrides: 50875780!
transferWithdrawReport: aTransferWithdraw 
	report add: 'Salida por transferencia de ' , 				(aTransferWithdraw value asString)! !
!AccountSummaryGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:14' prior: 50888371 overrides: 50888391!
generateReportFor: aFinancialService
	
		aFinancialService transactionReportFor: self.
		report add: 'Balance = ', aFinancialService balance asString .
		^report 
		! !

!classDefinition: #TreeReportGenerator category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 10:48:59'!
ReportGenerator subclass: #TreeReportGenerator
	instanceVariableNames: 'reportTree'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!TreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50888385 overrides: 50888391!
generateReportFor:aFinancialService
		aFinancialService financialServiceReportFor: self.
		^reportTree! !
!TreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50882523 overrides: 50888341!
receptiveAccountReport: aReceptiveAccount
	 reportTree add: aReceptiveAccount returnName.! !
!TreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50882396 overrides: 50888367!
initialize
	reportTree _ OrderedCollection new.! !
!TreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50882983 overrides: 50888321!
portfolioReport:aPortfolio
	 reportTree add: aPortfolio returnName.
	 aPortfolio addElementsToReport: self
	 ! !
!TreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50885415 overrides: 50888316!
portfolioElementsReport: aFinancialServiceList
	aFinancialServiceList do: [:aFinancialService |  reportTree add: (self newReportFor:aFinancialService) ]! !
!AccountSpecialTreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50885733 overrides: 50888772!
portfolioReport:aPortfolio
	super portfolioReport: aPortfolio .
	reportTree add: (OrderedCollection with:'Balance = ', aPortfolio balance asString).
	 ! !
!AccountSpecialTreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 10:48:59' prior: 50884294 overrides: 50888759!
receptiveAccountReport: aReceptiveAccount
	 super receptiveAccountReport: aReceptiveAccount .
	 reportTree add: aReceptiveAccount accountSummaryReport .! !

SequenceableCollection!
!Portfolio methodsFor: 'initialize' stamp: 'E.V 6/3/2021 10:56:32' prior: 50882358!
named: aPortfolioName
	name _ aPortfolioName ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'E.V 6/3/2021 10:57:10'!
named: aName
! !
!Portfolio class methodsFor: 'instance creation' stamp: 'E.V 6/3/2021 10:58:43' prior: 50888814!
named: aFinancialServiceName
	self new
		named:aFinancialServiceName;
		yourself 
! !
!FinancialService class methodsFor: 'instance creation' stamp: 'E.V 6/3/2021 10:59:01'!
named: aFinancialServiceName
	self new
		named:aFinancialServiceName;
		yourself 
! !

!methodRemoval: Portfolio class #named: stamp: 'E.V 6/3/2021 10:59:01'!
named: aFinancialServiceName
	self new
		named:aFinancialServiceName;
		yourself 
!

!methodRemoval: ReceptiveAccount #named: stamp: 'E.V 6/3/2021 10:59:21'!
named: anAccountName
	father := OrderedCollection new.
	transactions := OrderedCollection new.
	name := anAccountName !
!Portfolio methodsFor: 'initialize' stamp: 'E.V 6/3/2021 10:59:51' prior: 50888809!
named: aFinancialServiceName
	name _ aFinancialServiceName ! !
!FinancialService methodsFor: 'initialize' stamp: 'E.V 6/3/2021 11:00:06'!
named: aFinancialServiceName
	name _ aFinancialServiceName ! !

!methodRemoval: Portfolio #named: stamp: 'E.V 6/3/2021 11:00:06'!
named: aFinancialServiceName
	name _ aFinancialServiceName !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:00:46' prior: 50884986!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount |
	anAccount  _ ReceptiveAccount named: 'Cuenta de Juan'.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount treeReport ) includes: 'Cuenta de Juan'.
! !

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:00:48'!
ERROR!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:00:51'!
ERROR!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:00:51'!
ERROR!
!FinancialService class methodsFor: 'instance creation' stamp: 'E.V 6/3/2021 11:01:32' prior: 50888824!
named: aFinancialServiceName
	^self new
		named:aFinancialServiceName;
		yourself 
! !

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:01:33'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:01:39'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:01:47' prior: 50882579!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|aPortfolio|
	aPortfolio  _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio treeReport) includes: 'Portfolio de la familia'.
	self assert: aPortfolio treeReport size equals:1.
	! !

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:01:49'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:01:57' prior: 50883425!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: 'Portfolio de la familia'.
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: 'Cuenta de Juan'.
	! !

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:01:59'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:02:12' prior: 50884213!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.
	
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:02:14'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:02:22' prior: 50884958!
test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0
	|anAccount |
	anAccount  _ ReceptiveAccount  named: 'Cuenta de Juan'.
	self assert: (anAccount accountSpecialTreeReport size) equals:2.
	self assert: (anAccount accountSpecialTreeReport ) includes: 'Cuenta de Juan'.
	self assert: (anAccount accountSpecialTreeReport at:2 ) includes: balance0 .
	self assert: ((anAccount accountSpecialTreeReport at:2) size ) equals: 1 .
	
	! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:02:27' prior: 50886318!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio named: 'Portfolio de la familia'.
	
	self assert: (aPortfolio accountSpecialTreeReport size) equals:2.
	self assert: (aPortfolio accountSpecialTreeReport ) includes: 'Portfolio de la familia'.
	self assert: (aPortfolio accountSpecialTreeReport at:2) includes: 'Balance = 0'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:02:35' prior: 50885741!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio named: 'Portfolio de la familia'.
	
	anAccount  _ ReceptiveAccount named: 'Cuenta de Juan'.
	Deposit register:100  on:anAccount .
	aPortfolio add: anAccount .
	
	aPortfolioTreeReport _ aPortfolio accountSpecialTreeReport .
	
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport includes: 'Portfolio de la familia'.
	self assert: (aPortfolioTreeReport at:3) includes: balance100 .
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	self assert: (aPortfolioTreeReport at:2) includes: 'Cuenta de Juan'.
	

	self assert: ((aPortfolioTreeReport at:2)at:2) size equals: 2.	
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: deposito100 .
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: balance100 .	! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:02:47' prior: 50886125!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio named: 'Portfolio de la familia'.
	anotherPortfolio  _ Portfolio  named: 'Portfolio de hijos'.
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount  named: 'Cuenta de Juan'.
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: 'Cuenta de Juan'.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:04:06' prior: 50888855!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount juanAccountName|
	juanAccountName _ 'Cuenta de Juan'.
	anAccount  _ ReceptiveAccount named: juanAccountName.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount treeReport ) includes: juanAccountName.
! !

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:04:08'!
PASSED!
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:04:22' prior: 50889336!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount |
	juanAccountName _ 'Cuenta de Juan'.
	anAccount  _ ReceptiveAccount named: juanAccountName.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount treeReport ) includes: juanAccountName.
! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 11:04:22'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo entradaTransferencia100 salidaTransferencia100 juanAccountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:04:39' prior: 50889459!
test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma
	|anAccount |
	.
	anAccount  _ ReceptiveAccount named: juanAccountName.
	self assert: (anAccount treeReport size) equals:1.
	self assert: (anAccount treeReport ) includes: juanAccountName.
! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/3/2021 11:04:49' prior: 50880946 overrides: 16927572!
setUp

deposito100  _ 'Dep�sito por 100'.	


balance0  _ 'Balance = 0'.
balance100  _ 'Balance = 100'.
balance100negativo  _ 'Balance = -100'.


salidaTransferencia100  _ 'Salida por transferencia de 100'.
entradaTransferencia100 _ 'Entrada por transferencia de 100'.

juanAccountName _ 'Cuenta de Juan'! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:06:16' prior: 50888890!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|aPortfolio familyPortfolioName|
	familyPortfolioName _ 'Portfolio de la familia'.
	aPortfolio  _ Portfolio named: familyPortfolioName.
	
	self assert: (aPortfolio treeReport) includes: familyPortfolioName.
	self assert: aPortfolio treeReport size equals:1.
	! !

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:06:18'!
PASSED!
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:06:33' prior: 50889506!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|aPortfolio |
	familyPortfolioName _ 'Portfolio de la familia'.
	aPortfolio  _ Portfolio named: familyPortfolioName.
	
	self assert: (aPortfolio treeReport) includes: familyPortfolioName.
	self assert: aPortfolio treeReport size equals:1.
	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 11:06:33'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo entradaTransferencia100 salidaTransferencia100 juanAccountName familyPortfolioName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:06:41' prior: 50889523!
test02ElTreeReportDeUnPortfolioVacioEsSuNombre
	|aPortfolio |
	aPortfolio  _ Portfolio named: familyPortfolioName.
	
	self assert: (aPortfolio treeReport) includes: familyPortfolioName.
	self assert: aPortfolio treeReport size equals:1.
	! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/3/2021 11:06:51' prior: 50889493 overrides: 16927572!
setUp

deposito100  _ 'Dep�sito por 100'.	


balance0  _ 'Balance = 0'.
balance100  _ 'Balance = 100'.
balance100negativo  _ 'Balance = -100'.


salidaTransferencia100  _ 'Salida por transferencia de 100'.
entradaTransferencia100 _ 'Entrada por transferencia de 100'.

juanAccountName _ 'Cuenta de Juan'.
familyPortfolioName _ 'Portfolio de la familia'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:07:41' prior: 50889212!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	
	self assert: (aPortfolio accountSpecialTreeReport size) equals:2.
	self assert: (aPortfolio accountSpecialTreeReport ) includes:familyPortfolioName.
	self assert: (aPortfolio accountSpecialTreeReport at:2) includes: balance0 .! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:07:47' prior: 50889573!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	
	self assert: (aPortfolio accountSpecialTreeReport size) equals:2.
	self assert: (aPortfolio accountSpecialTreeReport ) includes: familyPortfolioName.
	self assert: (aPortfolio accountSpecialTreeReport at:2) includes: balance0 .! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:07:50' prior: 50889588!
test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0
	|aPortfolio|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	
	self assert: (aPortfolio accountSpecialTreeReport size) equals: 2.
	self assert: (aPortfolio accountSpecialTreeReport ) includes: familyPortfolioName.
	self assert: (aPortfolio accountSpecialTreeReport at:2) includes: balance0 .! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:07:53'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:09:03' prior: 50889228!
test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	
	anAccount  _ ReceptiveAccount named: juanAccountName .
	Deposit register:100  on:anAccount .
	aPortfolio add: anAccount .
	
	aPortfolioTreeReport _ aPortfolio accountSpecialTreeReport .
	
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport includes: familyPortfolioName .
	self assert: (aPortfolioTreeReport at:3) includes: balance100 .
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 2.
	self assert: (aPortfolioTreeReport at:2) includes: juanAccountName .
	

	self assert: ((aPortfolioTreeReport at:2)at:2) size equals: 2.	
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: deposito100 .
	self assert: ((aPortfolioTreeReport at:2)at:2) includes: balance100 .	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 11:09:59'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo entradaTransferencia100 salidaTransferencia100 juanAccountName familyPortfolioName sonPortfolioName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:09:57' prior: 50889260!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio named:familyPortfolioName .
	anotherPortfolio  _ Portfolio  named: sonPortfolioName.
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount  named: 'Cuenta de Juan'.
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: 'Cuenta de Juan'.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/3/2021 11:10:10' prior: 50889558 overrides: 16927572!
setUp

deposito100  _ 'Dep�sito por 100'.	


balance0  _ 'Balance = 0'.
balance100  _ 'Balance = 100'.
balance100negativo  _ 'Balance = -100'.


salidaTransferencia100  _ 'Salida por transferencia de 100'.
entradaTransferencia100 _ 'Entrada por transferencia de 100'.

juanAccountName _ 'Cuenta de Juan'.
familyPortfolioName _ 'Portfolio de la familia'.
sonPortfolioName  _ 'Portfolio de hijos'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:10:53' prior: 50889195!
test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0
	|anAccount |
	anAccount  _ ReceptiveAccount  named: juanAccountName .
	
	self assert: (anAccount accountSpecialTreeReport size) equals:2.
	self assert: (anAccount accountSpecialTreeReport ) includes: juanAccountName .
	self assert: (anAccount accountSpecialTreeReport at:2 ) includes: balance0 .
	self assert: ((anAccount accountSpecialTreeReport at:2) size ) equals: 1 .
	
	! !

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:10:57'!
PASSED!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:11:40' prior: 50888905!
test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anAccount aPortfolioTreeReport|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	
	anAccount  _ ReceptiveAccount named: juanAccountName .
	aPortfolio add: anAccount .
	aPortfolioTreeReport _ aPortfolio treeReport.
	
	
	self assert: aPortfolioTreeReport size equals:2.
	self assert: (aPortfolioTreeReport at:1) equals: familyPortfolioName .
	
	self assert: ((aPortfolioTreeReport at:2) size) equals: 1.
	self assert: ((aPortfolioTreeReport at:2) at:1) equals: juanAccountName .
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:12:10' prior: 50889038!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: 'Cuenta de Juan'.
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.
	
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:12:22' prior: 50890014!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: juanAccountName .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: 'Portfolio de la familia'.
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: 'Cuenta de Juan'.
	
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:12:51' prior: 50890058!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: juanAccountName .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: 'Cuenta Mia'.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: sonPortfolioName .
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: juanAccountName .
	
	! !

!classDefinition: #ResumeTest category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 11:13:43'!
FinancialServiceTest subclass: #ResumeTest
	instanceVariableNames: 'balance0 deposito100 balance100 balance100negativo entradaTransferencia100 salidaTransferencia100 juanAccountName familyPortfolioName sonPortfolioName myAccountName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:13:40' prior: 50890102!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: 'Cuenta Mia'.
	anotherAccount  _ ReceptiveAccount new named: juanAccountName .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: myAccountName.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: sonPortfolioName .
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: juanAccountName .
	
	! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:13:52' prior: 50890159!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount new named: juanAccountName .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: myAccountName.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: sonPortfolioName .
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: juanAccountName .
	
	! !
!ResumeTest methodsFor: 'setUp/tearDown' stamp: 'E.V 6/3/2021 11:14:04' prior: 50889849 overrides: 16927572!
setUp

deposito100  _ 'Dep�sito por 100'.	


balance0  _ 'Balance = 0'.
balance100  _ 'Balance = 100'.
balance100negativo  _ 'Balance = -100'.


salidaTransferencia100  _ 'Salida por transferencia de 100'.
entradaTransferencia100 _ 'Entrada por transferencia de 100'.

juanAccountName _ 'Cuenta de Juan'.
myAccountName _ 'Cuenta Mia'.
familyPortfolioName _ 'Portfolio de la familia'.
sonPortfolioName  _ 'Portfolio de hijos'.! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:15:06' prior: 50889773!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio named:familyPortfolioName .
	anotherPortfolio  _ Portfolio  named: sonPortfolioName.
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount  named: juanAccountName .
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: myAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: 'Portfolio de hijos'.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: juanAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:15:24' prior: 50890265!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio named:familyPortfolioName .
	anotherPortfolio  _ Portfolio  named: sonPortfolioName.
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount  named: juanAccountName .
	Deposit register: 100 on: anotherAccount .
	aPortfolio add: anAccount .
	anotherPortfolio add: anotherAccount .
	aPortfolio add: anotherPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: myAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: sonPortfolioName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: juanAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !
!ResumeTest methodsFor: 'treeReport test' stamp: 'E.V 6/3/2021 11:20:17' prior: 50890203!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount new named: juanAccountName .
	
	anotherPortfolio add: anotherAccount .
	self addFinancialServices: (OrderedCollection with: anAccount with:anotherPortfolio ) to: aPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: myAccountName.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: sonPortfolioName .
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: juanAccountName .
	
	! !

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:20:18'!
PASSED!
!ResumeTest methodsFor: 'special tree report test' stamp: 'E.V 6/3/2021 11:20:49' prior: 50890341!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio named:familyPortfolioName .
	anotherPortfolio  _ Portfolio  named: sonPortfolioName.
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount  named: juanAccountName .
	Deposit register: 100 on: anotherAccount .
	
	anotherPortfolio add: anotherAccount .	
	self addFinancialServices: (OrderedCollection with: anAccount with:anotherPortfolio ) to: aPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: myAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: sonPortfolioName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: juanAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:20:55'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 11:22:22'!
PASSED!

!classRenamed: #FinancialService as: #FinancialAsset stamp: 'E.V 6/3/2021 11:22:48'!
Smalltalk renameClassNamed: #FinancialService as: #FinancialAsset!

!classRenamed: #FinancialServiceTest as: #FinancialAssetTest stamp: 'E.V 6/3/2021 11:23:15'!
Smalltalk renameClassNamed: #FinancialServiceTest as: #FinancialAssetTest!
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:23:55'!
addFinancialAssets: financialServicesList to: portfolio
	financialServicesList  do:[:aFinancialService|portfolio  add: aFinancialService].! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50881367!
test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior
	|anExternalPortfolio anInterlanPortfolio anAccount anotherAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	anotherAccount _ self createAccountWithWithdraws: (OrderedCollection with:100).
	
	self addFinancialAssets:(OrderedCollection with:anAccount )  to: anInterlanPortfolio .
	self addFinancialAssets:(OrderedCollection with:anotherAccount with:anInterlanPortfolio )  to: anExternalPortfolio .


	self assert: (self summaryReportOf: anExternalPortfolio hasSameTransactionsthan: (OrderedCollection with:anotherAccount with:anInterlanPortfolio )).

	self assert: (anExternalPortfolio accountSummaryReport last) equals: ('Balance = ' , anExternalPortfolio balance asString)
	



! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50881765!
test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo
	|anExternalPortfolio anInterlanPortfolio aSenderAccount aReceiverAccount|
	anExternalPortfolio _  Portfolio new.
	anInterlanPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aReceiverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from:aSenderAccount  to:aReceiverAccount .
	
	anInterlanPortfolio  add: aSenderAccount .
	self addFinancialAssets: (OrderedCollection with:aReceiverAccount with:anInterlanPortfolio) to: anExternalPortfolio .

	self assert: anExternalPortfolio netTransferReport equals: 
		(anInterlanPortfolio netTransferReport + aReceiverAccount  netTransferReport )




! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50890575!
test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioSpecialTreeReport           aPortfolioSpecialTreeReportLvl2  aPortfolioSpecialTreeReportLvl3 aPortfolioSpecialTreeReportLvl4 |
	
	aPortfolio  _ Portfolio named:familyPortfolioName .
	anotherPortfolio  _ Portfolio  named: sonPortfolioName.
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount  named: juanAccountName .
	Deposit register: 100 on: anotherAccount .
	
	anotherPortfolio add: anotherAccount .	
	self addFinancialAssets: (OrderedCollection with: anAccount with:anotherPortfolio ) to: aPortfolio .
	
	aPortfolioSpecialTreeReport _ aPortfolio accountSpecialTreeReport .
	aPortfolioSpecialTreeReportLvl2 _ OrderedCollection with: (aPortfolioSpecialTreeReport at:2) with: (aPortfolioSpecialTreeReport at:3) with: (aPortfolioSpecialTreeReport at:4).
.
	
	aPortfolioSpecialTreeReportLvl3 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:1) at:2).
	aPortfolioSpecialTreeReportLvl3 add: ((aPortfolioSpecialTreeReportLvl2 at:2) at:2).
	
	aPortfolioSpecialTreeReportLvl4 _ OrderedCollection new.
	aPortfolioSpecialTreeReportLvl4 add: ((aPortfolioSpecialTreeReportLvl3 at:2) at:2).
	
	self assert: aPortfolioSpecialTreeReport size equals:4.
	self assert: aPortfolioSpecialTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioSpecialTreeReportLvl2 size) equals: 3.
	self assert: (aPortfolioSpecialTreeReportLvl2 at:1) includes: myAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:2) includes: sonPortfolioName .
	self assert: (aPortfolioSpecialTreeReportLvl2 at:3) includes: balance100 .	
	
	self assert: aPortfolioSpecialTreeReportLvl3 size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) includes: balance0 .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:1) size equals: 1.
	
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) includes: juanAccountName .
	self assert: (aPortfolioSpecialTreeReportLvl3 at:2) size equals: 2.
	
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) size equals: 2.
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: deposito100 .
	self assert: (aPortfolioSpecialTreeReportLvl4 at:1) includes: balance100 .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50871213!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: padre with: aAgregar ) to: abuelo. 	
	padre add: hijo.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50871174!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: portfolio2 with: portfolio3 ) to: portfolio1. 
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50881887!
test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas
	|aPortfolio account1 account2|
	aPortfolio  := Portfolio new.	
	account1 := self createAccountWithDeposits: (OrderedCollection with: 100).
	account2 := self createAccountWithDeposits: (OrderedCollection with: 50).
	
	self addFinancialAssets: (OrderedCollection with:account1 with:account2 )  to: aPortfolio .

	self assert: aPortfolio balance equals: 150.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50871233!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: hijo1 with: hijo2) to: padre1. 	
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
		
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50881204!
test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance
	|aPortfolio anAccount anotherAccount|
	aPortfolio _  Portfolio new.
	anAccount _ self createAccountWithDeposits: (OrderedCollection with:100).
	anotherAccount _ self createAccountWithWithdraws: (OrderedCollection with:100).
	self addFinancialAssets: (OrderedCollection with: anAccount  with:anotherAccount )  to:aPortfolio .

	self assert: (self summaryReportOf: aPortfolio hasSameTransactionsthan: (OrderedCollection with:anAccount with:anotherAccount )).

	self assert: (aPortfolio accountSummaryReport last) equals: balance0 
	



! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50881666!
test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma
	|aPortfolio aSenderAccount aRecieverAccount|
	aPortfolio _  Portfolio new.
	aSenderAccount _ ReceptiveAccount new.
	aRecieverAccount _ ReceptiveAccount new.
	Transfer amount: 100 from: aSenderAccount  to: aRecieverAccount .
	
	self addFinancialAssets: (OrderedCollection with:aSenderAccount with:aRecieverAccount) to: aPortfolio .

	self assert: (aPortfolio netTransferReport ) equals: 
		(aSenderAccount netTransferReport  + aRecieverAccount netTransferReport ) .
	



! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50871193!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	padre add: hijo.
	self addFinancialAssets: (OrderedCollection with: padre with: receptor) to: abuelo. 	
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !
!ResumeTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:23:55' prior: 50890417!
test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol
	|aPortfolio anotherPortfolio anAccount anotherAccount aPortfolioTreeReport aPortfolioTreeReportLvl2
	aPortfolioTreeReportLvl3 
	|
	aPortfolio  _ Portfolio named: familyPortfolioName .
	anotherPortfolio  _ Portfolio named: sonPortfolioName .
	
	anAccount  _ ReceptiveAccount  named: myAccountName .
	anotherAccount  _ ReceptiveAccount new named: juanAccountName .
	
	anotherPortfolio add: anotherAccount .
	self addFinancialAssets: (OrderedCollection with: anAccount with:anotherPortfolio ) to: aPortfolio .
	
	aPortfolioTreeReport _ aPortfolio treeReport.
	aPortfolioTreeReportLvl2 _ OrderedCollection with: (aPortfolioTreeReport at:2) with: (aPortfolioTreeReport at:3).
.
	
	aPortfolioTreeReportLvl3 _ OrderedCollection new.
	aPortfolioTreeReportLvl3 addAll: ((aPortfolioTreeReportLvl2 at:2)at:2).
	
	self assert: aPortfolioTreeReport size equals:3.
	self assert: aPortfolioTreeReport  includes: familyPortfolioName .
	
	self assert: (aPortfolioTreeReportLvl2 size) equals: 2.
	self assert: (aPortfolioTreeReportLvl2 at:1) includes: myAccountName.
	self assert: (aPortfolioTreeReportLvl2 at:2) includes: sonPortfolioName .
	
	self assert: aPortfolioTreeReportLvl3 size equals: 1.
	self assert: (aPortfolioTreeReportLvl3) includes: juanAccountName .
	
	! !

!methodRemoval: FinancialAssetTest #addFinancialServices:to: stamp: 'E.V 6/3/2021 11:23:55'!
addFinancialServices: financialServicesList to: portfolio
	financialServicesList  do:[:aFinancialService|portfolio  add: aFinancialService].!
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:24:28' prior: 50891018!
addFinancialAssets: aFinancialAssetCollection to: portfolio
	aFinancialAssetCollection  do:[:aFinancialService|portfolio  add: aFinancialService].! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:24:48' prior: 50891357!
addFinancialAssets: aFinancialAssetCollection to: portfolio
	aFinancialAssetCollection  do:[:aFinancialAsset|portfolio  add: aFinancialAsset].! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:25:46' prior: 50891365!
addFinancialAssets: aFinancialAssetCollection to: aPortfolio
	aFinancialAssetCollection  do:[:aFinancialAsset|aPortfolio  add: aFinancialAsset].! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:25:50' prior: 50891373!
addFinancialAssets: aFinancialAssetCollection to: aPortfolio
	aFinancialAssetCollection  do:[:aFinancialAsset| aPortfolio  add: aFinancialAsset].! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:25:54' prior: 50891381!
addFinancialAssets: aFinancialAssetCollection to: aPortfolio
	aFinancialAssetCollection do:[:aFinancialAsset| aPortfolio  add: aFinancialAsset].! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:26:23' prior: 50882108!
createAccountWithDeposits: aDepositValueCollection
	^self createAccountWithTransaction: Deposit withValues: aDepositValueCollection! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:26:41' prior: 50882082!
createAccountWithTransaction: anAccountTransaction withValues: anAccountTransactionValueList
	|account|
	account := ReceptiveAccount new.
	anAccountTransactionValueList do:[:accountTransactionValue| anAccountTransaction register: accountTransactionValue on: account].
	^account ! !
!FinancialAssetTest methodsFor: 'testAuxiliarFunctions' stamp: 'E.V 6/3/2021 11:27:12' prior: 50882101!
createAccountWithWithdraws: aWithdrawValueCollection
	^self createAccountWithTransaction: Withdraw withValues: aWithdrawValueCollection! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 11:27:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test00HacerSummaryDeAccountVaciaDaBalance0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test01AlDepositarEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test01ElTreeReportDeUnaCuentaEsElNombreDeLaMisma stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test02AlDepositarVariasVecesEnCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test02ElTreeReportDeUnPortfolioVacioEsSuNombre stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test03AlRetirarUnaVezDeCuentaVaciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test03ElTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test04AlHacerTransferenciaSeReflejaEnElResumen stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test04ElTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test05SiNoHayTransferenciasElNetTransferReportEs0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test06AlHacerTransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test07AlHacer2TransferenciaSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test08AlHacerTransferenciaYUnDepositoElDepositoNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test09AlHacerTransferenciaYUnRetiroElRetiroNoSeReflejaEnElReporteDeTransferencias stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test10PortfolioVacioTieneResumenConBalance0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test11PortfolioConUnaCuentaTieneElMismoResumenQueLaMisma stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test12PortfolioConDosCuentasTieneElMismoResumenQueSusResumenesCombinadosExceptoPorElBalance stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test13AccountSummaryDeUnPortfolioConOtroDentroEsLaConjuncionDeSuResumenConElDeSuPortfolioInterior stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test14PortfolioVacioTieneTransferNetResume0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test15PortfolioConUnaCuentaCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test16PortfolioConDosCuentasCon1TransferenciaTieneElNetTransferResumeQueLaMisma stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #ResumeTest #test17NetTransferResumeDeUnPortfolioConOtroDentroEsLaSumaNetTransferResumeDelRestoDeLosElementosDelPrimeroConElDelSegundo stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 11:27:42'!
PASSED!
!FinancialAsset methodsFor: 'report' stamp: 'E.V 6/3/2021 11:28:18'!
financialAssetReportFor:aReportGenerator
	self subclassResponsibility ! !
!Portfolio methodsFor: 'report' stamp: 'E.V 6/3/2021 11:28:18' overrides: 50891668!
financialAssetReportFor:aReportGenerator
	aReportGenerator portfolioReport: self! !
!ReceptiveAccount methodsFor: 'report' stamp: 'E.V 6/3/2021 11:28:18' overrides: 50891668!
financialAssetReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self! !
!TreeReportGenerator methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:28:18' prior: 50888751 overrides: 50888391!
generateReportFor:aFinancialService
		aFinancialService financialAssetReportFor: self.
		^reportTree! !

!methodRemoval: FinancialAsset #financialServiceReportFor: stamp: 'E.V 6/3/2021 11:28:18'!
financialServiceReportFor:aReportGenerator
	self subclassResponsibility !

!methodRemoval: Portfolio #financialServiceReportFor: stamp: 'E.V 6/3/2021 11:28:18'!
financialServiceReportFor:aReportGenerator
	aReportGenerator portfolioReport: self!

!methodRemoval: ReceptiveAccount #financialServiceReportFor: stamp: 'E.V 6/3/2021 11:28:18'!
financialServiceReportFor:aReportGenerator
	aReportGenerator receptiveAccountReport: self!
!FinancialAsset methodsFor: 'testing' stamp: 'E.V 6/3/2021 11:28:50'!
sharesFinancialAssetWith: aFinancialService
	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:28:50' prior: 50871572!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(self sharesFinancialAssetWith: aFinancialService )	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	! !

!methodRemoval: FinancialAsset #sharesFinancialServicesWith: stamp: 'E.V 6/3/2021 11:28:50'!
sharesFinancialServicesWith: aFinancialService
	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]!
!FinancialAsset methodsFor: 'testing' stamp: 'E.V 6/3/2021 11:29:12' prior: 50891708!
sharesFinancialAssetWith: aFinancialAsset
	^ self roots anySatisfy: 	[:aRoot| aFinancialAsset myRootsShareDecendenceWith: aRoot.]! !
!Portfolio methodsFor: 'error handling' stamp: 'E.V 6/3/2021 11:29:55'!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialService
	(self sharesFinancialAssetWith: aFinancialService )	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:29:55' prior: 50877325!
add: aFinancialService
	self raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialService.
	aFinancialService addFather: self.
	portfolioElements add: aFinancialService.
	! !

!methodRemoval: Portfolio #raiseErrorIfPortfolioHasSharedFinancialService: stamp: 'E.V 6/3/2021 11:29:55'!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(self sharesFinancialAssetWith: aFinancialService )	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	!
!Portfolio methodsFor: 'error handling' stamp: 'E.V 6/3/2021 11:30:05' prior: 50891740!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialAsset
	(self sharesFinancialAssetWith: aFinancialAsset )	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'E.V 6/3/2021 11:30:30'!
cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50891160!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: padre with: aAgregar ) to: abuelo. 	
	padre add: hijo.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription].
		
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50891769!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialAsset
	(self sharesFinancialAssetWith: aFinancialAsset )	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription ].
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50891181!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: portfolio2 with: portfolio3 ) to: portfolio1. 
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50871157!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 add: account.
	portfolio2 add: account.
	self should: [portfolio1 add: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50871130!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio add: account .
	self should: [portfolio add: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50891218!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: hijo1 with: hijo2) to: padre1. 	
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription ].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50871145!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio add: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription  ].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:30:30' prior: 50891283!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	padre add: hijo.
	self addFinancialAssets: (OrderedCollection with: padre with: receptor) to: abuelo. 	
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !

!methodRemoval: Portfolio class #cantAddFinancialServiceToPortfolioWithSharedFinancialService stamp: 'E.V 6/3/2021 11:30:30'!
cantAddFinancialServiceToPortfolioWithSharedFinancialService
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'!
!Portfolio class methodsFor: 'error descriptions' stamp: 'E.V 6/3/2021 11:31:29'!
cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:29' prior: 50891809!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialAsset
	(self sharesFinancialAssetWith: aFinancialAsset )	
	ifTrue: [self error: self class cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription ].
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:29' prior: 50891896!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio add: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription  ].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:30' prior: 50891910!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	padre add: hijo.
	self addFinancialAssets: (OrderedCollection with: padre with: receptor) to: abuelo. 	
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:30' prior: 50891858!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio add: account .
	self should: [portfolio add: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:30' prior: 50891840!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 add: account.
	portfolio2 add: account.
	self should: [portfolio1 add: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:30' prior: 50891820!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: portfolio2 with: portfolio3 ) to: portfolio1. 
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:30' prior: 50891874!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: hijo1 with: hijo2) to: padre1. 	
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription ].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:31:30' prior: 50891787!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	self addFinancialAssets: (OrderedCollection with: padre with: aAgregar ) to: abuelo. 	
	padre add: hijo.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription].
		
	! !

!methodRemoval: Portfolio class #cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription stamp: 'E.V 6/3/2021 11:31:30'!
cantAddFinancialServiceToPortfolioWithSharedFinancialAssetErrorDescription
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'!
!AccountTransaction methodsFor: 'testing' stamp: 'E.V 6/3/2021 11:32:50' prior: 50871379!
includes: aFinancialAsset
	^ (self == aFinancialAsset).! !

!methodRemoval: Deposit #transfer stamp: 'E.V 6/3/2021 11:33:30'!
transfer
	self shouldBeImplemented.!

!methodRemoval: Deposit #isMyTransfer: stamp: 'E.V 6/3/2021 11:34:30'!
isMyTransfer: aTransfer
	^false!
!FinancialAsset methodsFor: 'testing' stamp: 'E.V 6/3/2021 11:36:27' prior: 50871498!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesDescendenceWith: portfolioRoot.]
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'E.V 6/3/2021 11:40:16'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'financialAssetCollection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50871605 overrides: 50879322!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	financialAssetCollection do: [:anAccountOrPortfolio | transactions  addAll: (anAccountOrPortfolio transactions)].
	^transactions .
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50882868 overrides: 50879317!
transactionReportFor: aReportGenerator
		financialAssetCollection do: [:aFinancialService | aFinancialService transactionReportFor:aReportGenerator]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50882969!
addElementsToReport: aReportGenerator
		aReportGenerator portfolioElementsReport: financialAssetCollection .
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50871563 overrides: 50871523!
sharesDescendenceWith: aPortfolioRoot
	^ (aPortfolioRoot includes: self) or:  (financialAssetCollection anySatisfy: [:AFinancialService| aPortfolioRoot sharesDescendenceWith: AFinancialService]).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50891750!
add: aFinancialService
	self raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialService.
	aFinancialService addFather: self.
	financialAssetCollection add: aFinancialService.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50871614 overrides: 50871529!
initialize
	financialAssetCollection := OrderedCollection new.
	father := OrderedCollection  new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50871547 overrides: 50871493!
hasRegistered: aDeposit 
	^ (financialAssetCollection anySatisfy: [:anAccountOrPotfolio| anAccountOrPotfolio hasRegistered: aDeposit]) .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50871590 overrides: 50871489!
balance
	|balance|
	balance := financialAssetCollection sum:[:anAccountOrPortfolio| anAccountOrPortfolio balance] ifEmpty: [0].
	^balance! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'E.V 6/3/2021 11:40:16' prior: 50871554!
includes: aFinancialServiceToFind
	 ^self = aFinancialServiceToFind  or:
	  (financialAssetCollection anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !
!Behavior method!
initialize
	(financialAssetCollection _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (13 to: 36)
		declaredAt: (13 to: 36).
	(father _ [
	(OrderedCollection
		cover: (75 to: 91)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{94 to: 96})
		cover: (65 to: 70)
		declaredAt: (65 to: 70).! !
!Behavior method!
balance
	| balance |
	(balance _ [
	(financialAssetCollection
		cover: (32 to: 55)
		declaredAt: (32 to: 55))
		sum: [ :anAccountOrPortfolio |
			[
			(anAccountOrPortfolio
				cover: (85 to: 104)
				declaredAt: (63 to: 82)) balance ] valueCoveringAll:
				{106 to: 112} ]
		ifEmpty: [
			0 coverAll:
				{125 to: 125} ]] valueCoveringAll:
		{57 to: 60. 115 to: 122})
		cover: (21 to: 27)
		declaredAt: (11 to: 17).
	^ balance
		cover: (131 to: 137)
		declaredAt: (11 to: 17).! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
createAccountWithDeposits: aDepositValueCollection
	^ [
	(self coverAll:
		{54 to: 57})
		createAccountWithTransaction:
			(Deposit
				cover: (89 to: 95)
				declaredAt: (89 to: 95))
		withValues:
			(aDepositValueCollection
				cover: (109 to: 131)
				declaredAt: (28 to: 50)) ] valueCoveringAll:
		{59 to: 87. 97 to: 107}.! !
!Behavior method!
createAccountWithTransaction: anAccountTransaction withValues: anAccountTransactionValueList
	| account |
	(account _ [
	(ReceptiveAccount
		cover: (117 to: 132)
		declaredAt: (117 to: 132)) new ] valueCoveringAll:
		{134 to: 136})
		cover: (106 to: 112)
		declaredAt: (96 to: 102).
	[
	(anAccountTransactionValueList
		cover: (140 to: 168)
		declaredAt: (64 to: 92)) do: [ :accountTransactionValue |
		[
		(anAccountTransaction
			cover: (200 to: 219)
			declaredAt: (31 to: 50))
			register:
				(accountTransactionValue
					cover: (231 to: 253)
					declaredAt: (175 to: 197))
			on:
				(account
					cover: (259 to: 265)
					declaredAt: (96 to: 102)) ] valueCoveringAll:
			{221 to: 229. 255 to: 257} ]] valueCoveringAll:
		{170 to: 172}.
	^ account
		cover: (271 to: 277)
		declaredAt: (96 to: 102).! !
!Behavior method!
initialize
	(father _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (15 to: 20)
		declaredAt: (15 to: 20).
	(transactions _ [
	(OrderedCollection
		cover: (65 to: 81)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{83 to: 85})
		cover: (49 to: 60)
		declaredAt: (49 to: 60).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{70 to: 73}) for:
		(aValue
			cover: (80 to: 85)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{75 to: 78})
		cover: (55 to: 65)
		declaredAt: (36 to: 46).
	[
	(account
		cover: (90 to: 96)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (108 to: 118)
			declaredAt: (36 to: 46)) ] valueCoveringAll:
		{98 to: 106}.
	^ transaction
		cover: (129 to: 139)
		declaredAt: (36 to: 46).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{19 to: 22}) new ] valueCoveringAll:
		{24 to: 26}) initializeFor:
		(aValue
			cover: (43 to: 48)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (36 to: 41)
		declaredAt: (16 to: 21))
		cover: (27 to: 31)
		declaredAt: (27 to: 31).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (28 to: 39)
		declaredAt: (28 to: 39)) add:
		(aTransaction
			cover: (46 to: 57)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{41 to: 44}.! !
!Behavior method!
add: aFinancialService
	[
	(self coverAll:
		{25 to: 28}) raiseErrorIfPortfolioHasSharedFinancialAsset:
		(aFinancialService
			cover: (76 to: 92)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{30 to: 74}.
	[
	(aFinancialService
		cover: (96 to: 112)
		declaredAt: (6 to: 22)) addFather:
		(self coverAll:
			{125 to: 128}) ] valueCoveringAll:
		{114 to: 123}.
	[
	(financialAssetCollection
		cover: (132 to: 155)
		declaredAt: (132 to: 155)) add:
		(aFinancialService
			cover: (162 to: 178)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{157 to: 160}.! !
!Behavior method!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialAsset
	[
	([
	(self coverAll:
		{65 to: 68}) sharesFinancialAssetWith:
		(aFinancialAsset
			cover: (96 to: 110)
			declaredAt: (47 to: 61)) ] valueCoveringAll:
		{70 to: 94}) ifTrue: [
		[
		(self coverAll:
			{125 to: 128}) error:
			([
			([
			(self coverAll:
				{137 to: 140}) class ] valueCoveringAll:
				{142 to: 146}) cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription ] valueCoveringAll:
				{148 to: 219}) ] valueCoveringAll:
			{130 to: 135} ]] valueCoveringAll:
		{116 to: 122}.! !
!Behavior method!
sharesFinancialAssetWith: aFinancialAsset
	^ [
	([
	(self coverAll:
		{46 to: 49}) roots ] valueCoveringAll:
		{51 to: 55}) anySatisfy: [ :aRoot |
		[
		(aFinancialAsset
			cover: (79 to: 93)
			declaredAt: (27 to: 41)) myRootsShareDecendenceWith:
			(aRoot
				cover: (123 to: 127)
				declaredAt: (72 to: 76)) ] valueCoveringAll:
			{95 to: 121} ]] valueCoveringAll:
		{57 to: 67}.! !
!Behavior method!
roots
	| rootsList |
	(rootsList _ [
	(OrderedCollection
		cover: (34 to: 50)
		declaredAt: (34 to: 50)) new ] valueCoveringAll:
		{52 to: 54})
		cover: (21 to: 29)
		declaredAt: (9 to: 17).
	[
	(father
		cover: (58 to: 63)
		declaredAt: (58 to: 63)) do: [ :aFather |
		[
		(rootsList
			cover: (80 to: 88)
			declaredAt: (9 to: 17)) addAll:
			([
			(aFather
				cover: (98 to: 104)
				declaredAt: (71 to: 77)) roots ] valueCoveringAll:
				{106 to: 110}) ] valueCoveringAll:
			{90 to: 96} ]] valueCoveringAll:
		{65 to: 67}.
	[
	([
	(father
		cover: (116 to: 121)
		declaredAt: (58 to: 63)) isEmpty ] valueCoveringAll:
		{123 to: 129}) ifTrue: [
		[
		(rootsList
			cover: (141 to: 149)
			declaredAt: (9 to: 17)) add:
			(self coverAll:
				{156 to: 159}) ] valueCoveringAll:
			{151 to: 154} ]] valueCoveringAll:
		{132 to: 138}.
	^ rootsList
		cover: (165 to: 173)
		declaredAt: (9 to: 17).! !
!Behavior method!
myRootsShareDecendenceWith: portfolioRoot
	^ [
	([
	(self coverAll:
		{46 to: 49}) roots ] valueCoveringAll:
		{51 to: 55}) anySatisfy: [ :aRoot |
		[
		(aRoot
			cover: (77 to: 81)
			declaredAt: (70 to: 74)) sharesDescendenceWith:
			(portfolioRoot
				cover: (106 to: 118)
				declaredAt: (29 to: 41)) ] valueCoveringAll:
			{83 to: 104} ]] valueCoveringAll:
		{57 to: 67}.! !
!Behavior method!
roots
	| rootsList |
	(rootsList _ [
	(OrderedCollection
		cover: (34 to: 50)
		declaredAt: (34 to: 50)) new ] valueCoveringAll:
		{52 to: 54})
		cover: (21 to: 29)
		declaredAt: (9 to: 17).
	[
	(father
		cover: (58 to: 63)
		declaredAt: (58 to: 63)) do: [ :aFather |
		[
		(rootsList
			cover: (80 to: 88)
			declaredAt: (9 to: 17)) addAll:
			([
			(aFather
				cover: (98 to: 104)
				declaredAt: (71 to: 77)) roots ] valueCoveringAll:
				{106 to: 110}) ] valueCoveringAll:
			{90 to: 96} ]] valueCoveringAll:
		{65 to: 67}.
	^ rootsList
		cover: (116 to: 124)
		declaredAt: (9 to: 17).! !
!Behavior method!
addFather: aPortfolio
	[
	(father
		cover: (24 to: 29)
		declaredAt: (24 to: 29)) add:
		(aPortfolio
			cover: (36 to: 45)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{31 to: 34}.! !
!Behavior method!
balance
	| balanceValue |
	(balanceValue _ 0 coverAll:
		{42 to: 42})
		cover: (26 to: 37)
		declaredAt: (11 to: 22).
	[
	(transactions
		cover: (46 to: 57)
		declaredAt: (46 to: 57)) do: [ :aTransaction |
		(balanceValue _ [
		(aTransaction
			cover: (95 to: 106)
			declaredAt: (65 to: 76)) addToBalance:
			(balanceValue
				cover: (79 to: 90)
				declaredAt: (11 to: 22)) ] valueCoveringAll:
			{108 to: 120})
			cover: (122 to: 133)
			declaredAt: (11 to: 22) ]] valueCoveringAll:
		{59 to: 61}.
	^ balanceValue
		cover: (140 to: 151)
		declaredAt: (11 to: 22).! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(actualBalance
		cover: (31 to: 43)
		declaredAt: (15 to: 27)) +
		(value
			cover: (48 to: 52)
			declaredAt: (48 to: 52)) ] valueCoveringAll:
		{46 to: 46}.! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
addFinancialAssets: aFinancialAssetCollection to: aPortfolio
	[
	(aFinancialAssetCollection
		cover: (63 to: 87)
		declaredAt: (21 to: 45)) do: [ :aFinancialAsset |
		[
		(aPortfolio
			cover: (111 to: 120)
			declaredAt: (51 to: 60)) add:
			(aFinancialAsset
				cover: (128 to: 142)
				declaredAt: (94 to: 108)) ] valueCoveringAll:
			{123 to: 126} ]] valueCoveringAll:
		{89 to: 91}.! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
hasRegistered: aDeposit
	^ [
	(financialAssetCollection
		cover: (30 to: 53)
		declaredAt: (30 to: 53)) anySatisfy: [ :anAccountOrPotfolio |
		[
		(anAccountOrPotfolio
			cover: (90 to: 108)
			declaredAt: (69 to: 87)) hasRegistered:
			(aDeposit
				cover: (125 to: 132)
				declaredAt: (16 to: 23)) ] valueCoveringAll:
			{110 to: 123} ]] valueCoveringAll:
		{55 to: 65}.! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (32 to: 43)
		declaredAt: (32 to: 43)) includes:
		(aTransaction
			cover: (55 to: 66)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{45 to: 53}.! !

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
sharesDescendenceWith: aPortfolioRoot
	^ [
	([
	(aPortfolioRoot
		cover: (43 to: 56)
		declaredAt: (24 to: 37)) includes:
		(self coverAll:
			{68 to: 71}) ] valueCoveringAll:
		{58 to: 66}) or:
		([
		(financialAssetCollection
			cover: (80 to: 103)
			declaredAt: (80 to: 103)) anySatisfy: [ :AFinancialService |
			[
			(aPortfolioRoot
				cover: (138 to: 151)
				declaredAt: (24 to: 37)) sharesDescendenceWith:
				(AFinancialService
					cover: (176 to: 192)
					declaredAt: (119 to: 135)) ] valueCoveringAll:
				{153 to: 174} ]] valueCoveringAll:
			{105 to: 115}) ] valueCoveringAll:
		{74 to: 76}.! !
!Behavior method!
includes: aFinancialServiceToFind
	^ [
	([
	(self coverAll:
		{38 to: 41}) =
		(aFinancialServiceToFind
			cover: (45 to: 67)
			declaredAt: (11 to: 33)) ] valueCoveringAll:
		{43 to: 43}) or:
		([
		(financialAssetCollection
			cover: (78 to: 101)
			declaredAt: (78 to: 101)) anySatisfy: [ :aPortfolioOrAccount |
			[
			(aPortfolioOrAccount
				cover: (145 to: 163)
				declaredAt: (123 to: 141)) includes:
				(aFinancialServiceToFind
					cover: (175 to: 197)
					declaredAt: (11 to: 33)) ] valueCoveringAll:
				{165 to: 173} ]] valueCoveringAll:
			{103 to: 113}) ] valueCoveringAll:
		{70 to: 72}.! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
includes: aFinancialService
	^ [
	(aFinancialService
		cover: (31 to: 47)
		declaredAt: (11 to: 27)) =
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{49 to: 49}.! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
transactions
	| transactions |
	(transactions _ [
	(OrderedCollection
		cover: (47 to: 63)
		declaredAt: (47 to: 63)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (31 to: 42)
		declaredAt: (16 to: 27).
	[
	(financialAssetCollection
		cover: (72 to: 95)
		declaredAt: (72 to: 95)) do: [ :anAccountOrPortfolio |
		[
		(transactions
			cover: (126 to: 137)
			declaredAt: (16 to: 27)) addAll:
			([
			(anAccountOrPortfolio
				cover: (149 to: 168)
				declaredAt: (103 to: 122)) transactions ] valueCoveringAll:
				{170 to: 181}) ] valueCoveringAll:
			{140 to: 146} ]] valueCoveringAll:
		{97 to: 99}.
	^ transactions
		cover: (188 to: 199)
		declaredAt: (16 to: 27).! !

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (21 to: 32)
		declaredAt: (21 to: 32)) copy ] valueCoveringAll:
		{34 to: 37}.! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
sharesDescendenceWith: aPortfolioRoot
	^ [
	(aPortfolioRoot
		cover: (43 to: 56)
		declaredAt: (24 to: 37)) includes:
		(self coverAll:
			{68 to: 71}) ] valueCoveringAll:
		{58 to: 66}.! !
!Behavior method!
cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas' coverAll:
		{77 to: 151}.! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 11:43:29'!
PASSED!
!Behavior method!
initialize
	(financialAssetCollection _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (13 to: 36)
		declaredAt: (13 to: 36).
	(father _ [
	(OrderedCollection
		cover: (75 to: 91)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{94 to: 96})
		cover: (65 to: 70)
		declaredAt: (65 to: 70).! !
!Behavior method!
balance
	| balance |
	(balance _ [
	(financialAssetCollection
		cover: (32 to: 55)
		declaredAt: (32 to: 55))
		sum: [ :anAccountOrPortfolio |
			[
			(anAccountOrPortfolio
				cover: (85 to: 104)
				declaredAt: (63 to: 82)) balance ] valueCoveringAll:
				{106 to: 112} ]
		ifEmpty: [
			0 coverAll:
				{125 to: 125} ]] valueCoveringAll:
		{57 to: 60. 115 to: 122})
		cover: (21 to: 27)
		declaredAt: (11 to: 17).
	^ balance
		cover: (131 to: 137)
		declaredAt: (11 to: 17).! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:44:54'!
PASSED!
!Behavior method!
createAccountWithDeposits: aDepositValueCollection
	^ [
	(self coverAll:
		{54 to: 57})
		createAccountWithTransaction:
			(Deposit
				cover: (89 to: 95)
				declaredAt: (89 to: 95))
		withValues:
			(aDepositValueCollection
				cover: (109 to: 131)
				declaredAt: (28 to: 50)) ] valueCoveringAll:
		{59 to: 87. 97 to: 107}.! !
!Behavior method!
createAccountWithTransaction: anAccountTransaction withValues: anAccountTransactionValueList
	| account |
	(account _ [
	(ReceptiveAccount
		cover: (117 to: 132)
		declaredAt: (117 to: 132)) new ] valueCoveringAll:
		{134 to: 136})
		cover: (106 to: 112)
		declaredAt: (96 to: 102).
	[
	(anAccountTransactionValueList
		cover: (140 to: 168)
		declaredAt: (64 to: 92)) do: [ :accountTransactionValue |
		[
		(anAccountTransaction
			cover: (200 to: 219)
			declaredAt: (31 to: 50))
			register:
				(accountTransactionValue
					cover: (231 to: 253)
					declaredAt: (175 to: 197))
			on:
				(account
					cover: (259 to: 265)
					declaredAt: (96 to: 102)) ] valueCoveringAll:
			{221 to: 229. 255 to: 257} ]] valueCoveringAll:
		{170 to: 172}.
	^ account
		cover: (271 to: 277)
		declaredAt: (96 to: 102).! !
!Behavior method!
initialize
	(father _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (15 to: 20)
		declaredAt: (15 to: 20).
	(transactions _ [
	(OrderedCollection
		cover: (65 to: 81)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{83 to: 85})
		cover: (49 to: 60)
		declaredAt: (49 to: 60).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{70 to: 73}) for:
		(aValue
			cover: (80 to: 85)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{75 to: 78})
		cover: (55 to: 65)
		declaredAt: (36 to: 46).
	[
	(account
		cover: (90 to: 96)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (108 to: 118)
			declaredAt: (36 to: 46)) ] valueCoveringAll:
		{98 to: 106}.
	^ transaction
		cover: (129 to: 139)
		declaredAt: (36 to: 46).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{19 to: 22}) new ] valueCoveringAll:
		{24 to: 26}) initializeFor:
		(aValue
			cover: (43 to: 48)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (36 to: 41)
		declaredAt: (16 to: 21))
		cover: (27 to: 31)
		declaredAt: (27 to: 31).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (28 to: 39)
		declaredAt: (28 to: 39)) add:
		(aTransaction
			cover: (46 to: 57)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{41 to: 44}.! !
!Behavior method!
add: aFinancialService
	[
	(self coverAll:
		{25 to: 28}) raiseErrorIfPortfolioHasSharedFinancialAsset:
		(aFinancialService
			cover: (76 to: 92)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{30 to: 74}.
	[
	(aFinancialService
		cover: (96 to: 112)
		declaredAt: (6 to: 22)) addFather:
		(self coverAll:
			{125 to: 128}) ] valueCoveringAll:
		{114 to: 123}.
	[
	(financialAssetCollection
		cover: (132 to: 155)
		declaredAt: (132 to: 155)) add:
		(aFinancialService
			cover: (162 to: 178)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{157 to: 160}.! !
!Behavior method!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialAsset
	[
	([
	(self coverAll:
		{65 to: 68}) sharesFinancialAssetWith:
		(aFinancialAsset
			cover: (96 to: 110)
			declaredAt: (47 to: 61)) ] valueCoveringAll:
		{70 to: 94}) ifTrue: [
		[
		(self coverAll:
			{125 to: 128}) error:
			([
			([
			(self coverAll:
				{137 to: 140}) class ] valueCoveringAll:
				{142 to: 146}) cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription ] valueCoveringAll:
				{148 to: 219}) ] valueCoveringAll:
			{130 to: 135} ]] valueCoveringAll:
		{116 to: 122}.! !
!Behavior method!
sharesFinancialAssetWith: aFinancialAsset
	^ [
	([
	(self coverAll:
		{46 to: 49}) roots ] valueCoveringAll:
		{51 to: 55}) anySatisfy: [ :aRoot |
		[
		(aFinancialAsset
			cover: (79 to: 93)
			declaredAt: (27 to: 41)) myRootsShareDecendenceWith:
			(aRoot
				cover: (123 to: 127)
				declaredAt: (72 to: 76)) ] valueCoveringAll:
			{95 to: 121} ]] valueCoveringAll:
		{57 to: 67}.! !
!Behavior method!
roots
	| rootsList |
	(rootsList _ [
	(OrderedCollection
		cover: (34 to: 50)
		declaredAt: (34 to: 50)) new ] valueCoveringAll:
		{52 to: 54})
		cover: (21 to: 29)
		declaredAt: (9 to: 17).
	[
	(father
		cover: (58 to: 63)
		declaredAt: (58 to: 63)) do: [ :aFather |
		[
		(rootsList
			cover: (80 to: 88)
			declaredAt: (9 to: 17)) addAll:
			([
			(aFather
				cover: (98 to: 104)
				declaredAt: (71 to: 77)) roots ] valueCoveringAll:
				{106 to: 110}) ] valueCoveringAll:
			{90 to: 96} ]] valueCoveringAll:
		{65 to: 67}.
	[
	([
	(father
		cover: (116 to: 121)
		declaredAt: (58 to: 63)) isEmpty ] valueCoveringAll:
		{123 to: 129}) ifTrue: [
		[
		(rootsList
			cover: (141 to: 149)
			declaredAt: (9 to: 17)) add:
			(self coverAll:
				{156 to: 159}) ] valueCoveringAll:
			{151 to: 154} ]] valueCoveringAll:
		{132 to: 138}.
	^ rootsList
		cover: (165 to: 173)
		declaredAt: (9 to: 17).! !
!Behavior method!
myRootsShareDecendenceWith: portfolioRoot
	^ [
	([
	(self coverAll:
		{46 to: 49}) roots ] valueCoveringAll:
		{51 to: 55}) anySatisfy: [ :aRoot |
		[
		(aRoot
			cover: (77 to: 81)
			declaredAt: (70 to: 74)) sharesDescendenceWith:
			(portfolioRoot
				cover: (106 to: 118)
				declaredAt: (29 to: 41)) ] valueCoveringAll:
			{83 to: 104} ]] valueCoveringAll:
		{57 to: 67}.! !
!Behavior method!
roots
	| rootsList |
	(rootsList _ [
	(OrderedCollection
		cover: (34 to: 50)
		declaredAt: (34 to: 50)) new ] valueCoveringAll:
		{52 to: 54})
		cover: (21 to: 29)
		declaredAt: (9 to: 17).
	[
	(father
		cover: (58 to: 63)
		declaredAt: (58 to: 63)) do: [ :aFather |
		[
		(rootsList
			cover: (80 to: 88)
			declaredAt: (9 to: 17)) addAll:
			([
			(aFather
				cover: (98 to: 104)
				declaredAt: (71 to: 77)) roots ] valueCoveringAll:
				{106 to: 110}) ] valueCoveringAll:
			{90 to: 96} ]] valueCoveringAll:
		{65 to: 67}.
	^ rootsList
		cover: (116 to: 124)
		declaredAt: (9 to: 17).! !
!Behavior method!
addFather: aPortfolio
	[
	(father
		cover: (24 to: 29)
		declaredAt: (24 to: 29)) add:
		(aPortfolio
			cover: (36 to: 45)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{31 to: 34}.! !
!Behavior method!
balance
	| balanceValue |
	(balanceValue _ 0 coverAll:
		{42 to: 42})
		cover: (26 to: 37)
		declaredAt: (11 to: 22).
	[
	(transactions
		cover: (46 to: 57)
		declaredAt: (46 to: 57)) do: [ :aTransaction |
		(balanceValue _ [
		(aTransaction
			cover: (95 to: 106)
			declaredAt: (65 to: 76)) addToBalance:
			(balanceValue
				cover: (79 to: 90)
				declaredAt: (11 to: 22)) ] valueCoveringAll:
			{108 to: 120})
			cover: (122 to: 133)
			declaredAt: (11 to: 22) ]] valueCoveringAll:
		{59 to: 61}.
	^ balanceValue
		cover: (140 to: 151)
		declaredAt: (11 to: 22).! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(actualBalance
		cover: (31 to: 43)
		declaredAt: (15 to: 27)) +
		(value
			cover: (48 to: 52)
			declaredAt: (48 to: 52)) ] valueCoveringAll:
		{46 to: 46}.! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'E.V 6/3/2021 11:44:54'!
PASSED!
!Behavior method!
addFinancialAssets: aFinancialAssetCollection to: aPortfolio
	[
	(aFinancialAssetCollection
		cover: (63 to: 87)
		declaredAt: (21 to: 45)) do: [ :aFinancialAsset |
		[
		(aPortfolio
			cover: (111 to: 120)
			declaredAt: (51 to: 60)) add:
			(aFinancialAsset
				cover: (128 to: 142)
				declaredAt: (94 to: 108)) ] valueCoveringAll:
			{123 to: 126} ]] valueCoveringAll:
		{89 to: 91}.! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'E.V 6/3/2021 11:44:54'!
PASSED!
!Behavior method!
hasRegistered: aDeposit
	^ [
	(financialAssetCollection
		cover: (30 to: 53)
		declaredAt: (30 to: 53)) anySatisfy: [ :anAccountOrPotfolio |
		[
		(anAccountOrPotfolio
			cover: (90 to: 108)
			declaredAt: (69 to: 87)) hasRegistered:
			(aDeposit
				cover: (125 to: 132)
				declaredAt: (16 to: 23)) ] valueCoveringAll:
			{110 to: 123} ]] valueCoveringAll:
		{55 to: 65}.! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'E.V 6/3/2021 11:44:54'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (32 to: 43)
		declaredAt: (32 to: 43)) includes:
		(aTransaction
			cover: (55 to: 66)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{45 to: 53}.! !

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'E.V 6/3/2021 11:44:54'!
PASSED!
!Behavior method!
sharesDescendenceWith: aPortfolioRoot
	^ [
	([
	(aPortfolioRoot
		cover: (43 to: 56)
		declaredAt: (24 to: 37)) includes:
		(self coverAll:
			{68 to: 71}) ] valueCoveringAll:
		{58 to: 66}) or:
		([
		(financialAssetCollection
			cover: (80 to: 103)
			declaredAt: (80 to: 103)) anySatisfy: [ :AFinancialService |
			[
			(aPortfolioRoot
				cover: (138 to: 151)
				declaredAt: (24 to: 37)) sharesDescendenceWith:
				(AFinancialService
					cover: (176 to: 192)
					declaredAt: (119 to: 135)) ] valueCoveringAll:
				{153 to: 174} ]] valueCoveringAll:
			{105 to: 115}) ] valueCoveringAll:
		{74 to: 76}.! !
!Behavior method!
includes: aFinancialServiceToFind
	^ [
	([
	(self coverAll:
		{38 to: 41}) =
		(aFinancialServiceToFind
			cover: (45 to: 67)
			declaredAt: (11 to: 33)) ] valueCoveringAll:
		{43 to: 43}) or:
		([
		(financialAssetCollection
			cover: (78 to: 101)
			declaredAt: (78 to: 101)) anySatisfy: [ :aPortfolioOrAccount |
			[
			(aPortfolioOrAccount
				cover: (145 to: 163)
				declaredAt: (123 to: 141)) includes:
				(aFinancialServiceToFind
					cover: (175 to: 197)
					declaredAt: (11 to: 33)) ] valueCoveringAll:
				{165 to: 173} ]] valueCoveringAll:
			{103 to: 113}) ] valueCoveringAll:
		{70 to: 72}.! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!
!Behavior method!
includes: aFinancialService
	^ [
	(aFinancialService
		cover: (31 to: 47)
		declaredAt: (11 to: 27)) =
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{49 to: 49}.! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!
!Behavior method!
transactions
	| transactions |
	(transactions _ [
	(OrderedCollection
		cover: (47 to: 63)
		declaredAt: (47 to: 63)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (31 to: 42)
		declaredAt: (16 to: 27).
	[
	(financialAssetCollection
		cover: (72 to: 95)
		declaredAt: (72 to: 95)) do: [ :anAccountOrPortfolio |
		[
		(transactions
			cover: (126 to: 137)
			declaredAt: (16 to: 27)) addAll:
			([
			(anAccountOrPortfolio
				cover: (149 to: 168)
				declaredAt: (103 to: 122)) transactions ] valueCoveringAll:
				{170 to: 181}) ] valueCoveringAll:
			{140 to: 146} ]] valueCoveringAll:
		{97 to: 99}.
	^ transactions
		cover: (188 to: 199)
		declaredAt: (16 to: 27).! !

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (21 to: 32)
		declaredAt: (21 to: 32)) copy ] valueCoveringAll:
		{34 to: 37}.! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!
!Behavior method!
sharesDescendenceWith: aPortfolioRoot
	^ [
	(aPortfolioRoot
		cover: (43 to: 56)
		declaredAt: (24 to: 37)) includes:
		(self coverAll:
			{68 to: 71}) ] valueCoveringAll:
		{58 to: 66}.! !
!Behavior method!
cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas' coverAll:
		{77 to: 151}.! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'E.V 6/3/2021 11:44:55'!
PASSED!
!Behavior method!
initialize
	(father _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (15 to: 20)
		declaredAt: (15 to: 20).
	(transactions _ [
	(OrderedCollection
		cover: (65 to: 81)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{83 to: 85})
		cover: (49 to: 60)
		declaredAt: (49 to: 60).! !
!Behavior method!
amount: anAmount from: aSenderAccount to: aReceiverAccount
	| aTransfer |
	(aTransfer _ [
	(self coverAll:
		{87 to: 90}) new ] valueCoveringAll:
		{92 to: 94})
		cover: (75 to: 83)
		declaredAt: (63 to: 71).
	[
	(aTransfer
		cover: (100 to: 108)
		declaredAt: (63 to: 71))
		raiseTransferErrorIfAnyWithAmount:
			(anAmount
				cover: (145 to: 152)
				declaredAt: (9 to: 16))
		withSender:
			(aSenderAccount
				cover: (165 to: 178)
				declaredAt: (24 to: 37))
		withReciever:
			(aReceiverAccount
				cover: (349 to: 364)
				declaredAt: (43 to: 58)) ] valueCoveringAll:
		{110 to: 143. 154 to: 164. 181 to: 193}.
	^ [
	(aTransfer
		cover: (373 to: 381)
		declaredAt: (63 to: 71))
		initializeWith:
			([
			(aReceiverAccount
				cover: (400 to: 415)
				declaredAt: (43 to: 58))
				receiveTransferFor:
					(anAmount
						cover: (437 to: 444)
						declaredAt: (9 to: 16))
				withTransfer:
					(aTransfer
						cover: (460 to: 468)
						declaredAt: (63 to: 71)) ] valueCoveringAll:
				{417 to: 435. 446 to: 458})
		with:
			([
			(aSenderAccount
				cover: (487 to: 500)
				declaredAt: (24 to: 37))
				sendTransferFor:
					(anAmount
						cover: (520 to: 527)
						declaredAt: (9 to: 16))
				withTransfer:
					(aTransfer
						cover: (543 to: 551)
						declaredAt: (63 to: 71)) ] valueCoveringAll:
				{503 to: 518. 529 to: 541})
		withValue:
			(anAmount
				cover: (565 to: 572)
				declaredAt: (9 to: 16)) ] valueCoveringAll:
		{383 to: 397. 480 to: 484. 554 to: 563}.! !
!Behavior method!
raiseTransferErrorIfAnyWithAmount: anAmount withSender: aSenderAccount withReciever: aRecieverAccount
	[
	(self coverAll:
		{101 to: 104}) raiseErrorIfanAmountIsZeroOrLess:
		(anAmount
			cover: (139 to: 146)
			declaredAt: (35 to: 42)) ] valueCoveringAll:
		{106 to: 138}.
	[
	(self coverAll:
		{150 to: 153})
		raiseErrorIfSender:
			(aSenderAccount
				cover: (174 to: 187)
				declaredAt: (55 to: 68))
		IsTheSameAsReceiver:
			(aRecieverAccount
				cover: (209 to: 224)
				declaredAt: (83 to: 98)) ] valueCoveringAll:
		{155 to: 173. 189 to: 208}.! !
!Behavior method!
raiseErrorIfanAmountIsZeroOrLess: anAmount
	[
	([
	(anAmount
		cover: (44 to: 51)
		declaredAt: (34 to: 41)) <=
		(0 coverAll:
			{56 to: 56}) ] valueCoveringAll:
		{53 to: 54}) ifTrue: [
		[
		(self coverAll:
			{66 to: 69}) error:
			([
			([
			(self coverAll:
				{78 to: 81}) class ] valueCoveringAll:
				{83 to: 87}) cantTransferFor0OrLessErrorDescription ] valueCoveringAll:
				{89 to: 126}) ] valueCoveringAll:
			{71 to: 76} ]] valueCoveringAll:
		{58 to: 64}.! !
!Behavior method!
raiseErrorIfSender: aSenderAccount IsTheSameAsReceiver: aReceiverAccount
	[
	([
	(aSenderAccount
		cover: (74 to: 87)
		declaredAt: (20 to: 33)) ==
		(aReceiverAccount
			cover: (92 to: 107)
			declaredAt: (55 to: 70)) ] valueCoveringAll:
		{89 to: 90}) ifTrue: [
		[
		(self coverAll:
			{118 to: 121}) error:
			([
			([
			(self coverAll:
				{130 to: 133}) class ] valueCoveringAll:
				{135 to: 139}) anAccountCantTransferToItself ] valueCoveringAll:
				{141 to: 169}) ] valueCoveringAll:
			{123 to: 128} ]] valueCoveringAll:
		{109 to: 115}.! !
!Behavior method!
receiveTransferFor: anAmount withTransfer: aTransfer
	^ [
	(TransferDeposit
		cover: (58 to: 72)
		declaredAt: (58 to: 72))
		register:
			(anAmount
				cover: (83 to: 90)
				declaredAt: (21 to: 28))
		on:
			(self coverAll:
				{96 to: 99})
		with:
			(aTransfer
				cover: (106 to: 114)
				declaredAt: (44 to: 52)) ] valueCoveringAll:
		{74 to: 82. 93 to: 95. 101 to: 105}.! !
!Behavior method!
register: aValue on: account with: aTrasfer
	| transaction |
	(transaction _ [
	(self coverAll:
		{80 to: 83})
		for:
			(aValue
				cover: (90 to: 95)
				declaredAt: (11 to: 16))
		with:
			(aTrasfer
				cover: (103 to: 110)
				declaredAt: (35 to: 42)) ] valueCoveringAll:
		{85 to: 88. 97 to: 101})
		cover: (65 to: 75)
		declaredAt: (48 to: 58).
	[
	(account
		cover: (114 to: 120)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (132 to: 142)
			declaredAt: (48 to: 58)) ] valueCoveringAll:
		{122 to: 130}.
	^ transaction
		cover: (151 to: 161)
		declaredAt: (48 to: 58).! !
!Behavior method!
for: aValue with: aTransfer
	^ [
	([
	(self coverAll:
		{33 to: 36}) new ] valueCoveringAll:
		{38 to: 40}) initializeFor:
		(aTransfer
			cover: (57 to: 65)
			declaredAt: (19 to: 27)) ] valueCoveringAll:
		{42 to: 55}.! !
!Behavior method!
initializeFor: aTransfer
	(transfer _ aTransfer
		cover: (38 to: 46)
		declaredAt: (16 to: 24))
		cover: (27 to: 34)
		declaredAt: (27 to: 34).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (28 to: 39)
		declaredAt: (28 to: 39)) add:
		(aTransaction
			cover: (46 to: 57)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{41 to: 44}.! !
!Behavior method!
sendTransferFor: anAmount withTransfer: aTransfer
	^ [
	(TransferWithdraw
		cover: (55 to: 70)
		declaredAt: (55 to: 70))
		register:
			(anAmount
				cover: (82 to: 89)
				declaredAt: (18 to: 25))
		on:
			(self coverAll:
				{96 to: 99})
		with:
			(aTransfer
				cover: (106 to: 114)
				declaredAt: (41 to: 49)) ] valueCoveringAll:
		{73 to: 81. 92 to: 94. 101 to: 105}.! !
!Behavior method!
register: aValue on: account with: aTrasfer
	| transaction |
	(transaction _ [
	(self coverAll:
		{80 to: 83})
		for:
			(aValue
				cover: (90 to: 95)
				declaredAt: (11 to: 16))
		with:
			(aTrasfer
				cover: (103 to: 110)
				declaredAt: (35 to: 42)) ] valueCoveringAll:
		{85 to: 88. 97 to: 101})
		cover: (65 to: 75)
		declaredAt: (48 to: 58).
	[
	(account
		cover: (114 to: 120)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (132 to: 142)
			declaredAt: (48 to: 58)) ] valueCoveringAll:
		{122 to: 130}.
	^ transaction
		cover: (151 to: 161)
		declaredAt: (48 to: 58).! !
!Behavior method!
for: aValue with: aTransfer
	^ [
	([
	(self coverAll:
		{33 to: 36}) new ] valueCoveringAll:
		{38 to: 40}) initializeFor:
		(aTransfer
			cover: (57 to: 65)
			declaredAt: (19 to: 27)) ] valueCoveringAll:
		{42 to: 55}.! !
!Behavior method!
initializeWith: aDeposit with: aWithdraw withValue: aValue
	(deposit _ aDeposit
		cover: (74 to: 81)
		declaredAt: (17 to: 24))
		cover: (63 to: 69)
		declaredAt: (63 to: 69).
	(withdraw _ aWithdraw
		cover: (98 to: 106)
		declaredAt: (32 to: 40))
		cover: (86 to: 93)
		declaredAt: (86 to: 93).
	(value _ aValue
		cover: (119 to: 124)
		declaredAt: (53 to: 58))
		cover: (111 to: 115)
		declaredAt: (111 to: 115).! !
!Behavior method!
balance
	| balanceValue |
	(balanceValue _ 0 coverAll:
		{42 to: 42})
		cover: (26 to: 37)
		declaredAt: (11 to: 22).
	[
	(transactions
		cover: (46 to: 57)
		declaredAt: (46 to: 57)) do: [ :aTransaction |
		(balanceValue _ [
		(aTransaction
			cover: (95 to: 106)
			declaredAt: (65 to: 76)) addToBalance:
			(balanceValue
				cover: (79 to: 90)
				declaredAt: (11 to: 22)) ] valueCoveringAll:
			{108 to: 120})
			cover: (122 to: 133)
			declaredAt: (11 to: 22) ]] valueCoveringAll:
		{59 to: 61}.
	^ balanceValue
		cover: (140 to: 151)
		declaredAt: (11 to: 22).! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(transfer
		cover: (32 to: 39)
		declaredAt: (32 to: 39)) addToBalance:
		(actualBalance
			cover: (54 to: 66)
			declaredAt: (15 to: 27)) ] valueCoveringAll:
		{41 to: 53}.! !
!Behavior method!
addToBalance: aBalance
	^ [
	(aBalance
		cover: (27 to: 34)
		declaredAt: (15 to: 22)) +
		(value
			cover: (39 to: 43)
			declaredAt: (39 to: 43)) ] valueCoveringAll:
		{37 to: 37}.! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(transfer
		cover: (32 to: 39)
		declaredAt: (32 to: 39)) decreaseBalance:
		(actualBalance
			cover: (57 to: 69)
			declaredAt: (15 to: 27)) ] valueCoveringAll:
		{41 to: 56}.! !
!Behavior method!
decreaseBalance: aBalance
	^ [
	(aBalance
		cover: (30 to: 37)
		declaredAt: (17 to: 24)) -
		(value
			cover: (42 to: 46)
			declaredAt: (42 to: 46)) ] valueCoveringAll:
		{40 to: 40}.! !

!testRun: #TransferTest #test01TransferirEntreAccountsCambiaElBalanceCorrectamente stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
deposit
	^ deposit
		cover: (11 to: 17)
		declaredAt: (11 to: 17).! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (32 to: 43)
		declaredAt: (32 to: 43)) includes:
		(aTransaction
			cover: (55 to: 66)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{45 to: 53}.! !

!testRun: #TransferTest #test02AlRecibirUnaTransferenciaSeTieneEseDepositoRegistrado stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
withdraw
	^ withdraw
		cover: (14 to: 21)
		declaredAt: (14 to: 21).! !

!testRun: #TransferTest #test03AlEnviarUnaTransferenciaSeTieneEseWithdrawRegistrado stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
isMyTransfer: aTransfer
	^ [
	(aTransfer
		cover: (28 to: 36)
		declaredAt: (15 to: 23)) ==
		(transfer
			cover: (41 to: 48)
			declaredAt: (41 to: 48)) ] valueCoveringAll:
		{38 to: 39}.! !

!testRun: #TransferTest #test04AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElDeposito stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!

!testRun: #TransferTest #test05AlHacerUnaTransferenciaSePuedeObtenerALaTransferenciaDesdeElWithdraw stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
isMyOtherLeg: aDeposit
	^ [
	(transfer
		cover: (25 to: 32)
		declaredAt: (25 to: 32)) isMyDeposit:
		(aDeposit
			cover: (47 to: 54)
			declaredAt: (14 to: 21)) ] valueCoveringAll:
		{34 to: 45}.! !
!Behavior method!
isMyDeposit: aDeposit
	^ [
	(deposit
		cover: (25 to: 31)
		declaredAt: (25 to: 31)) ==
		(aDeposit
			cover: (36 to: 43)
			declaredAt: (13 to: 20)) ] valueCoveringAll:
		{33 to: 34}.! !
!Behavior method!
isMyOtherLeg: aWithdraw
	^ [
	(transfer
		cover: (26 to: 33)
		declaredAt: (26 to: 33)) isMyWithdraw:
		(aWithdraw
			cover: (49 to: 57)
			declaredAt: (14 to: 22)) ] valueCoveringAll:
		{35 to: 47}.! !
!Behavior method!
isMyWithdraw: aWithdraw
	^ [
	(withdraw
		cover: (27 to: 34)
		declaredAt: (27 to: 34)) ==
		(aWithdraw
			cover: (39 to: 47)
			declaredAt: (14 to: 22)) ] valueCoveringAll:
		{36 to: 37}.! !

!testRun: #TransferTest #test06AlHacerUnaTransferenciaSePuedeAccederAAmbasPatas stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
cantTransferFor0OrLessErrorDescription
	^ 'pa que vas a transferir 0 o menos? El verdadero quien pudiera. ' coverAll:
		{43 to: 107}.! !

!testRun: #TransferTest #test07NoSePuedeHacerUnaTransferenciaPor0 stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!

!testRun: #TransferTest #test08NoSePuedeHacerUnaTransferenciaPorUnValorNegativo stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
anAccountCantTransferToItself
	^ ' Queres sacar plata de tu cuenta para volverla a poner? Sos capo eh... ' coverAll:
		{34 to: 106}.! !

!testRun: #TransferTest #test09NoSePuedenHacerTransferenciasAunoMismo stamp: 'E.V 6/3/2021 11:45:36'!
PASSED!
!Behavior method!
named: aFinancialServiceName
	^ [ | cascadeReceiver |
	cascadeReceiver _ [
	(self coverAll:
		{32 to: 35}) new ] valueCoveringAll:
		{37 to: 39}.
	[ cascadeReceiver named: aFinancialServiceName ] valueCoveringAll:
		{43 to: 69}.
	[ cascadeReceiver yourself ] valueCoveringAll:
		{74 to: 81} ] value.! !
!Behavior method!
initialize
	(father _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (15 to: 20)
		declaredAt: (15 to: 20).
	(transactions _ [
	(OrderedCollection
		cover: (65 to: 81)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{83 to: 85})
		cover: (49 to: 60)
		declaredAt: (49 to: 60).! !
!Behavior method!
named: aFinancialServiceName
	(name _ aFinancialServiceName
		cover: (38 to: 58)
		declaredAt: (8 to: 28))
		cover: (31 to: 34)
		declaredAt: (31 to: 34).! !
!Behavior method!
accountSpecialTreeReport
	^ [
	([
	(AccountSpecialTreeReportGenerator
		cover: (29 to: 61)
		declaredAt: (29 to: 61)) new ] valueCoveringAll:
		{63 to: 65}) generateReportFor:
		(self coverAll:
			{86 to: 89}) ] valueCoveringAll:
		{67 to: 84}.! !
!Behavior method!
initialize
	(reportTree _ [
	(OrderedCollection
		cover: (26 to: 42)
		declaredAt: (26 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (13 to: 22)
		declaredAt: (13 to: 22).! !
!Behavior method!
generateReportFor: aFinancialService
	[
	(aFinancialService
		cover: (39 to: 55)
		declaredAt: (19 to: 35)) financialAssetReportFor:
		(self coverAll:
			{82 to: 85}) ] valueCoveringAll:
		{57 to: 80}.
	^ reportTree
		cover: (91 to: 100)
		declaredAt: (91 to: 100).! !
!Behavior method!
financialAssetReportFor: aReportGenerator
	[
	(aReportGenerator
		cover: (43 to: 58)
		declaredAt: (25 to: 40)) receptiveAccountReport:
		(self coverAll:
			{84 to: 87}) ] valueCoveringAll:
		{60 to: 82}.! !
!Behavior method!
receptiveAccountReport: aReceptiveAccount
	[
	super receptiveAccountReport:
		(aReceptiveAccount
			cover: (75 to: 91)
			declaredAt: (25 to: 41)) ] valueCoveringAll:
		{51 to: 73}.
	[
	(reportTree
		cover: (97 to: 106)
		declaredAt: (97 to: 106)) add:
		([
		(aReceptiveAccount
			cover: (113 to: 129)
			declaredAt: (25 to: 41)) accountSummaryReport ] valueCoveringAll:
			{131 to: 150}) ] valueCoveringAll:
		{108 to: 111}.! !
!Behavior method!
receptiveAccountReport: aReceptiveAccount
	[
	(reportTree
		cover: (45 to: 54)
		declaredAt: (45 to: 54)) add:
		([
		(aReceptiveAccount
			cover: (61 to: 77)
			declaredAt: (25 to: 41)) returnName ] valueCoveringAll:
			{79 to: 88}) ] valueCoveringAll:
		{56 to: 59}.! !
!Behavior method!
returnName
	^ name
		cover: (14 to: 17)
		declaredAt: (14 to: 17).! !
!Behavior method!
accountSummaryReport
	^ [
	([
	(AccountSummaryGenerator
		cover: (26 to: 48)
		declaredAt: (26 to: 48)) new ] valueCoveringAll:
		{50 to: 52}) generateReportFor:
		(self coverAll:
			{73 to: 76}) ] valueCoveringAll:
		{54 to: 71}.! !
!Behavior method!
initialize
	(report _ [
	(OrderedCollection
		cover: (22 to: 38)
		declaredAt: (22 to: 38)) new ] valueCoveringAll:
		{40 to: 42})
		cover: (13 to: 18)
		declaredAt: (13 to: 18).! !
!Behavior method!
generateReportFor: aFinancialService
	[
	(aFinancialService
		cover: (42 to: 58)
		declaredAt: (20 to: 36)) transactionReportFor:
		(self coverAll:
			{82 to: 85}) ] valueCoveringAll:
		{60 to: 80}.
	[
	(report
		cover: (90 to: 95)
		declaredAt: (90 to: 95)) add:
		([
		('Balance = ' coverAll:
			{102 to: 113}) ,
			([
			([
			(aFinancialService
				cover: (116 to: 132)
				declaredAt: (20 to: 36)) balance ] valueCoveringAll:
				{134 to: 140}) asString ] valueCoveringAll:
				{142 to: 149}) ] valueCoveringAll:
			{114 to: 114}) ] valueCoveringAll:
		{97 to: 100}.
	^ report
		cover: (156 to: 161)
		declaredAt: (90 to: 95).! !
!Behavior method!
transactionReportFor: aReportGenerator
	[
	(transactions
		cover: (41 to: 52)
		declaredAt: (41 to: 52)) do: [ :aTransaction |
		[
		(aTransaction
			cover: (75 to: 86)
			declaredAt: (61 to: 72)) getSummaryFor:
			(aReportGenerator
				cover: (103 to: 118)
				declaredAt: (22 to: 37)) ] valueCoveringAll:
			{88 to: 101} ]] valueCoveringAll:
		{55 to: 57}.! !
!Behavior method!
balance
	| balanceValue |
	(balanceValue _ 0 coverAll:
		{42 to: 42})
		cover: (26 to: 37)
		declaredAt: (11 to: 22).
	[
	(transactions
		cover: (46 to: 57)
		declaredAt: (46 to: 57)) do: [ :aTransaction |
		(balanceValue _ [
		(aTransaction
			cover: (95 to: 106)
			declaredAt: (65 to: 76)) addToBalance:
			(balanceValue
				cover: (79 to: 90)
				declaredAt: (11 to: 22)) ] valueCoveringAll:
			{108 to: 120})
			cover: (122 to: 133)
			declaredAt: (11 to: 22) ]] valueCoveringAll:
		{59 to: 61}.
	^ balanceValue
		cover: (140 to: 151)
		declaredAt: (11 to: 22).! !

!testRun: #ResumeTest #test01ElSpecialTreeReportDeUnAccountEsSuNombreYBalanceEn0 stamp: 'E.V 6/3/2021 11:46:19'!
PASSED!
!Behavior method!
initialize
	(financialAssetCollection _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (13 to: 36)
		declaredAt: (13 to: 36).
	(father _ [
	(OrderedCollection
		cover: (75 to: 91)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{94 to: 96})
		cover: (65 to: 70)
		declaredAt: (65 to: 70).! !
!Behavior method!
financialAssetReportFor: aReportGenerator
	[
	(aReportGenerator
		cover: (43 to: 58)
		declaredAt: (25 to: 40)) portfolioReport:
		(self coverAll:
			{77 to: 80}) ] valueCoveringAll:
		{60 to: 75}.! !
!Behavior method!
portfolioReport: aPortfolio
	[
	super portfolioReport:
		(aPortfolio
			cover: (52 to: 61)
			declaredAt: (17 to: 26)) ] valueCoveringAll:
		{35 to: 50}.
	[
	(reportTree
		cover: (66 to: 75)
		declaredAt: (66 to: 75)) add:
		([
		(OrderedCollection
			cover: (83 to: 99)
			declaredAt: (83 to: 99)) with:
			([
			('Balance = ' coverAll:
				{106 to: 117}) ,
				([
				([
				(aPortfolio
					cover: (120 to: 129)
					declaredAt: (17 to: 26)) balance ] valueCoveringAll:
					{131 to: 137}) asString ] valueCoveringAll:
					{139 to: 146}) ] valueCoveringAll:
				{118 to: 118}) ] valueCoveringAll:
			{101 to: 105}) ] valueCoveringAll:
		{77 to: 80}.! !
!Behavior method!
portfolioReport: aPortfolio
	[
	(reportTree
		cover: (30 to: 39)
		declaredAt: (30 to: 39)) add:
		([
		(aPortfolio
			cover: (46 to: 55)
			declaredAt: (17 to: 26)) returnName ] valueCoveringAll:
			{57 to: 66}) ] valueCoveringAll:
		{41 to: 44}.
	[
	(aPortfolio
		cover: (71 to: 80)
		declaredAt: (17 to: 26)) addElementsToReport:
		(self coverAll:
			{103 to: 106}) ] valueCoveringAll:
		{82 to: 101}.! !
!Behavior method!
addElementsToReport: aReportGenerator
	[
	(aReportGenerator
		cover: (41 to: 56)
		declaredAt: (22 to: 37)) portfolioElementsReport:
		(financialAssetCollection
			cover: (83 to: 106)
			declaredAt: (83 to: 106)) ] valueCoveringAll:
		{58 to: 81}.! !
!Behavior method!
portfolioElementsReport: aFinancialServiceList
	[
	(aFinancialServiceList
		cover: (49 to: 69)
		declaredAt: (26 to: 46)) do: [ :aFinancialService |
		[
		(reportTree
			cover: (98 to: 107)
			declaredAt: (98 to: 107)) add:
			([
			(self coverAll:
				{115 to: 118}) newReportFor:
				(aFinancialService
					cover: (133 to: 149)
					declaredAt: (77 to: 93)) ] valueCoveringAll:
				{120 to: 132}) ] valueCoveringAll:
			{109 to: 112} ]] valueCoveringAll:
		{71 to: 73}.! !
!Behavior method!
balance
	| balance |
	(balance _ [
	(financialAssetCollection
		cover: (32 to: 55)
		declaredAt: (32 to: 55))
		sum: [ :anAccountOrPortfolio |
			[
			(anAccountOrPortfolio
				cover: (85 to: 104)
				declaredAt: (63 to: 82)) balance ] valueCoveringAll:
				{106 to: 112} ]
		ifEmpty: [
			0 coverAll:
				{125 to: 125} ]] valueCoveringAll:
		{57 to: 60. 115 to: 122})
		cover: (21 to: 27)
		declaredAt: (11 to: 17).
	^ balance
		cover: (131 to: 137)
		declaredAt: (11 to: 17).! !

!testRun: #ResumeTest #test02ElSpecialTreeReportDeUnPortfolioVacioEsSuNombreYElBalance0 stamp: 'E.V 6/3/2021 11:46:19'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{70 to: 73}) for:
		(aValue
			cover: (80 to: 85)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{75 to: 78})
		cover: (55 to: 65)
		declaredAt: (36 to: 46).
	[
	(account
		cover: (90 to: 96)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (108 to: 118)
			declaredAt: (36 to: 46)) ] valueCoveringAll:
		{98 to: 106}.
	^ transaction
		cover: (129 to: 139)
		declaredAt: (36 to: 46).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{19 to: 22}) new ] valueCoveringAll:
		{24 to: 26}) initializeFor:
		(aValue
			cover: (43 to: 48)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (36 to: 41)
		declaredAt: (16 to: 21))
		cover: (27 to: 31)
		declaredAt: (27 to: 31).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (28 to: 39)
		declaredAt: (28 to: 39)) add:
		(aTransaction
			cover: (46 to: 57)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{41 to: 44}.! !
!Behavior method!
add: aFinancialService
	[
	(self coverAll:
		{25 to: 28}) raiseErrorIfPortfolioHasSharedFinancialAsset:
		(aFinancialService
			cover: (76 to: 92)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{30 to: 74}.
	[
	(aFinancialService
		cover: (96 to: 112)
		declaredAt: (6 to: 22)) addFather:
		(self coverAll:
			{125 to: 128}) ] valueCoveringAll:
		{114 to: 123}.
	[
	(financialAssetCollection
		cover: (132 to: 155)
		declaredAt: (132 to: 155)) add:
		(aFinancialService
			cover: (162 to: 178)
			declaredAt: (6 to: 22)) ] valueCoveringAll:
		{157 to: 160}.! !
!Behavior method!
raiseErrorIfPortfolioHasSharedFinancialAsset: aFinancialAsset
	[
	([
	(self coverAll:
		{65 to: 68}) sharesFinancialAssetWith:
		(aFinancialAsset
			cover: (96 to: 110)
			declaredAt: (47 to: 61)) ] valueCoveringAll:
		{70 to: 94}) ifTrue: [
		[
		(self coverAll:
			{125 to: 128}) error:
			([
			([
			(self coverAll:
				{137 to: 140}) class ] valueCoveringAll:
				{142 to: 146}) cantAddFinancialAssetToPortfolioWithSharedFinancialAssetErrorDescription ] valueCoveringAll:
				{148 to: 219}) ] valueCoveringAll:
			{130 to: 135} ]] valueCoveringAll:
		{116 to: 122}.! !
!Behavior method!
sharesFinancialAssetWith: aFinancialAsset
	^ [
	([
	(self coverAll:
		{46 to: 49}) roots ] valueCoveringAll:
		{51 to: 55}) anySatisfy: [ :aRoot |
		[
		(aFinancialAsset
			cover: (79 to: 93)
			declaredAt: (27 to: 41)) myRootsShareDecendenceWith:
			(aRoot
				cover: (123 to: 127)
				declaredAt: (72 to: 76)) ] valueCoveringAll:
			{95 to: 121} ]] valueCoveringAll:
		{57 to: 67}.! !
!Behavior method!
roots
	| rootsList |
	(rootsList _ [
	(OrderedCollection
		cover: (34 to: 50)
		declaredAt: (34 to: 50)) new ] valueCoveringAll:
		{52 to: 54})
		cover: (21 to: 29)
		declaredAt: (9 to: 17).
	[
	(father
		cover: (58 to: 63)
		declaredAt: (58 to: 63)) do: [ :aFather |
		[
		(rootsList
			cover: (80 to: 88)
			declaredAt: (9 to: 17)) addAll:
			([
			(aFather
				cover: (98 to: 104)
				declaredAt: (71 to: 77)) roots ] valueCoveringAll:
				{106 to: 110}) ] valueCoveringAll:
			{90 to: 96} ]] valueCoveringAll:
		{65 to: 67}.
	[
	([
	(father
		cover: (116 to: 121)
		declaredAt: (58 to: 63)) isEmpty ] valueCoveringAll:
		{123 to: 129}) ifTrue: [
		[
		(rootsList
			cover: (141 to: 149)
			declaredAt: (9 to: 17)) add:
			(self coverAll:
				{156 to: 159}) ] valueCoveringAll:
			{151 to: 154} ]] valueCoveringAll:
		{132 to: 138}.
	^ rootsList
		cover: (165 to: 173)
		declaredAt: (9 to: 17).! !
!Behavior method!
myRootsShareDecendenceWith: portfolioRoot
	^ [
	([
	(self coverAll:
		{46 to: 49}) roots ] valueCoveringAll:
		{51 to: 55}) anySatisfy: [ :aRoot |
		[
		(aRoot
			cover: (77 to: 81)
			declaredAt: (70 to: 74)) sharesDescendenceWith:
			(portfolioRoot
				cover: (106 to: 118)
				declaredAt: (29 to: 41)) ] valueCoveringAll:
			{83 to: 104} ]] valueCoveringAll:
		{57 to: 67}.! !
!Behavior method!
roots
	| rootsList |
	(rootsList _ [
	(OrderedCollection
		cover: (34 to: 50)
		declaredAt: (34 to: 50)) new ] valueCoveringAll:
		{52 to: 54})
		cover: (21 to: 29)
		declaredAt: (9 to: 17).
	[
	(father
		cover: (58 to: 63)
		declaredAt: (58 to: 63)) do: [ :aFather |
		[
		(rootsList
			cover: (80 to: 88)
			declaredAt: (9 to: 17)) addAll:
			([
			(aFather
				cover: (98 to: 104)
				declaredAt: (71 to: 77)) roots ] valueCoveringAll:
				{106 to: 110}) ] valueCoveringAll:
			{90 to: 96} ]] valueCoveringAll:
		{65 to: 67}.
	^ rootsList
		cover: (116 to: 124)
		declaredAt: (9 to: 17).! !
!Behavior method!
addFather: aPortfolio
	[
	(father
		cover: (24 to: 29)
		declaredAt: (24 to: 29)) add:
		(aPortfolio
			cover: (36 to: 45)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{31 to: 34}.! !
!Behavior method!
newReportFor: aFinancialService
	^ [
	(aFinancialService
		cover: (37 to: 53)
		declaredAt: (15 to: 31)) accountSpecialTreeReport ] valueCoveringAll:
		{55 to: 78}.! !
!Behavior method!
getSummaryFor: aReportGenerator
	[
	(aReportGenerator
		cover: (33 to: 48)
		declaredAt: (15 to: 30)) depositReport:
		(self coverAll:
			{65 to: 68}) ] valueCoveringAll:
		{50 to: 63}.! !
!Behavior method!
depositReport: aDeposit
	[
	(report
		cover: (26 to: 31)
		declaredAt: (26 to: 31)) add:
		([
		('Dep�sito por ' coverAll:
			{38 to: 52}) ,
			([
			([
			(aDeposit
				cover: (56 to: 63)
				declaredAt: (16 to: 23)) value ] valueCoveringAll:
				{65 to: 69}) asString ] valueCoveringAll:
				{71 to: 78}) ] valueCoveringAll:
			{53 to: 53}) ] valueCoveringAll:
		{33 to: 36}.! !
!Behavior method!
value
	^ value
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(actualBalance
		cover: (31 to: 43)
		declaredAt: (15 to: 27)) +
		(value
			cover: (48 to: 52)
			declaredAt: (48 to: 52)) ] valueCoveringAll:
		{46 to: 46}.! !

!testRun: #ResumeTest #test03ElSpecialTreeReportDeUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:46:19'!
PASSED!
!Behavior method!
addFinancialAssets: aFinancialAssetCollection to: aPortfolio
	[
	(aFinancialAssetCollection
		cover: (63 to: 87)
		declaredAt: (21 to: 45)) do: [ :aFinancialAsset |
		[
		(aPortfolio
			cover: (111 to: 120)
			declaredAt: (51 to: 60)) add:
			(aFinancialAsset
				cover: (128 to: 142)
				declaredAt: (94 to: 108)) ] valueCoveringAll:
			{123 to: 126} ]] valueCoveringAll:
		{89 to: 91}.! !
!Behavior method!
sharesDescendenceWith: aPortfolioRoot
	^ [
	([
	(aPortfolioRoot
		cover: (43 to: 56)
		declaredAt: (24 to: 37)) includes:
		(self coverAll:
			{68 to: 71}) ] valueCoveringAll:
		{58 to: 66}) or:
		([
		(financialAssetCollection
			cover: (80 to: 103)
			declaredAt: (80 to: 103)) anySatisfy: [ :AFinancialService |
			[
			(aPortfolioRoot
				cover: (138 to: 151)
				declaredAt: (24 to: 37)) sharesDescendenceWith:
				(AFinancialService
					cover: (176 to: 192)
					declaredAt: (119 to: 135)) ] valueCoveringAll:
				{153 to: 174} ]] valueCoveringAll:
			{105 to: 115}) ] valueCoveringAll:
		{74 to: 76}.! !
!Behavior method!
includes: aFinancialServiceToFind
	^ [
	([
	(self coverAll:
		{38 to: 41}) =
		(aFinancialServiceToFind
			cover: (45 to: 67)
			declaredAt: (11 to: 33)) ] valueCoveringAll:
		{43 to: 43}) or:
		([
		(financialAssetCollection
			cover: (78 to: 101)
			declaredAt: (78 to: 101)) anySatisfy: [ :aPortfolioOrAccount |
			[
			(aPortfolioOrAccount
				cover: (145 to: 163)
				declaredAt: (123 to: 141)) includes:
				(aFinancialServiceToFind
					cover: (175 to: 197)
					declaredAt: (11 to: 33)) ] valueCoveringAll:
				{165 to: 173} ]] valueCoveringAll:
			{103 to: 113}) ] valueCoveringAll:
		{70 to: 72}.! !
!Behavior method!
includes: aFinancialService
	^ [
	(aFinancialService
		cover: (31 to: 47)
		declaredAt: (11 to: 27)) =
		(self coverAll:
			{51 to: 54}) ] valueCoveringAll:
		{49 to: 49}.! !
!Behavior method!
sharesDescendenceWith: aPortfolioRoot
	^ [
	(aPortfolioRoot
		cover: (43 to: 56)
		declaredAt: (24 to: 37)) includes:
		(self coverAll:
			{68 to: 71}) ] valueCoveringAll:
		{58 to: 66}.! !

!testRun: #ResumeTest #test04ElSpecialTreeReportDeUnPortfolioConUnaCuentaYUnPortfolioConUnaCuentaTieneEstructuraDeArbol stamp: 'E.V 6/3/2021 11:46:19'!
PASSED!
!TreeReportGenerator methodsFor: 'not used' stamp: 'E.V 6/3/2021 11:46:30' prior: 50882410 overrides: 50875780!
transferWithdrawReport: aTransferWithdraw! !
!Behavior method!
initialize
	(father _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (15 to: 20)
		declaredAt: (15 to: 20).
	(transactions _ [
	(OrderedCollection
		cover: (65 to: 81)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{83 to: 85})
		cover: (49 to: 60)
		declaredAt: (49 to: 60).! !
!Behavior method!
balance
	| balanceValue |
	(balanceValue _ 0 coverAll:
		{42 to: 42})
		cover: (26 to: 37)
		declaredAt: (11 to: 22).
	[
	(transactions
		cover: (46 to: 57)
		declaredAt: (46 to: 57)) do: [ :aTransaction |
		(balanceValue _ [
		(aTransaction
			cover: (95 to: 106)
			declaredAt: (65 to: 76)) addToBalance:
			(balanceValue
				cover: (79 to: 90)
				declaredAt: (11 to: 22)) ] valueCoveringAll:
			{108 to: 120})
			cover: (122 to: 133)
			declaredAt: (11 to: 22) ]] valueCoveringAll:
		{59 to: 61}.
	^ balanceValue
		cover: (140 to: 151)
		declaredAt: (11 to: 22).! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!
!Behavior method!
createAccountWithDeposits: aDepositValueCollection
	^ [
	(self coverAll:
		{54 to: 57})
		createAccountWithTransaction:
			(Deposit
				cover: (89 to: 95)
				declaredAt: (89 to: 95))
		withValues:
			(aDepositValueCollection
				cover: (109 to: 131)
				declaredAt: (28 to: 50)) ] valueCoveringAll:
		{59 to: 87. 97 to: 107}.! !
!Behavior method!
createAccountWithTransaction: anAccountTransaction withValues: anAccountTransactionValueList
	| account |
	(account _ [
	(ReceptiveAccount
		cover: (117 to: 132)
		declaredAt: (117 to: 132)) new ] valueCoveringAll:
		{134 to: 136})
		cover: (106 to: 112)
		declaredAt: (96 to: 102).
	[
	(anAccountTransactionValueList
		cover: (140 to: 168)
		declaredAt: (64 to: 92)) do: [ :accountTransactionValue |
		[
		(anAccountTransaction
			cover: (200 to: 219)
			declaredAt: (31 to: 50))
			register:
				(accountTransactionValue
					cover: (231 to: 253)
					declaredAt: (175 to: 197))
			on:
				(account
					cover: (259 to: 265)
					declaredAt: (96 to: 102)) ] valueCoveringAll:
			{221 to: 229. 255 to: 257} ]] valueCoveringAll:
		{170 to: 172}.
	^ account
		cover: (271 to: 277)
		declaredAt: (96 to: 102).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{70 to: 73}) for:
		(aValue
			cover: (80 to: 85)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{75 to: 78})
		cover: (55 to: 65)
		declaredAt: (36 to: 46).
	[
	(account
		cover: (90 to: 96)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (108 to: 118)
			declaredAt: (36 to: 46)) ] valueCoveringAll:
		{98 to: 106}.
	^ transaction
		cover: (129 to: 139)
		declaredAt: (36 to: 46).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{19 to: 22}) new ] valueCoveringAll:
		{24 to: 26}) initializeFor:
		(aValue
			cover: (43 to: 48)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (36 to: 41)
		declaredAt: (16 to: 21))
		cover: (27 to: 31)
		declaredAt: (27 to: 31).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (28 to: 39)
		declaredAt: (28 to: 39)) add:
		(aTransaction
			cover: (46 to: 57)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{41 to: 44}.! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(actualBalance
		cover: (31 to: 43)
		declaredAt: (15 to: 27)) +
		(value
			cover: (48 to: 52)
			declaredAt: (48 to: 52)) ] valueCoveringAll:
		{46 to: 46}.! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{19 to: 22}) new ] valueCoveringAll:
		{24 to: 26}) initializeFor:
		(aValue
			cover: (43 to: 48)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{28 to: 41}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (36 to: 41)
		declaredAt: (16 to: 21))
		cover: (27 to: 31)
		declaredAt: (27 to: 31).! !
!Behavior method!
addToBalance: actualBalance
	^ [
	(actualBalance
		cover: (31 to: 43)
		declaredAt: (15 to: 27)) -
		(value
			cover: (47 to: 51)
			declaredAt: (47 to: 51)) ] valueCoveringAll:
		{45 to: 45}.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!
!Behavior method!
value
	^ value
		cover: (13 to: 17)
		declaredAt: (13 to: 17).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (32 to: 43)
		declaredAt: (32 to: 43)) includes:
		(aTransaction
			cover: (55 to: 66)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{45 to: 53}.! !

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (21 to: 32)
		declaredAt: (21 to: 32)) copy ] valueCoveringAll:
		{34 to: 37}.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E.V 6/3/2021 11:47:47'!
PASSED!

----QUIT----(3 June 2021 11:49:22) CuisUniversity-4532.image priorSource: 17765822!