----STARTUP---- (13 May 2021 21:04:47) as /Users/urichami/Facu/ing1/inge1-1c-2021/Cuis/CuisUniversity-4532.image!


Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'uc 5/13/2021 21:06:17'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'uc 5/13/2021 21:06:20'!
Object subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'nil' stamp: 'uc 5/13/2021 21:10:08'!
test01
	|rover|
	rover := MarsRover startingAtX: 0 y: 0 facing: 0.
	rover sendPackage: ''.
	self assert: rover x = 0.
	self assert: rover y = 0.
	self assert: rover facing = 0.
	! !

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRoverTest category: 'MarsRover' stamp: 'uc 5/13/2021 21:10:19'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:11:14'!
test02
	|rover|
	rover := MarsRover startingAtX: 3 y: 1 facing: 0.
	rover sendPackage: 'z'.
	self assert: rover x = 3.
	self assert: rover y = 1.
	self assert: rover facing = 0.
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:13:03' prior: 50971039!
test01
	|rover|
	rover := MarsRover startingAtX: 0 y: 0 facing: #North.
	rover sendPackage: ''.
	self assert: rover x = 0.
	self assert: rover y = 0.
	self assert: rover facing = #North.
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:16:38' prior: 50971068!
test01
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover interpretPackage: ''.
	self assert: rover isAt: 0@0 facing: #North.
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:17:21' prior: 50971078!
test01
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover processPackage: ''.
	self assert: rover isAt: 0@0 facing: #North.
	! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:34:25'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:34:25'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:34:39'!
ERROR!
!MarsRover class methodsFor: 'instance creation' stamp: 'uc 5/13/2021 21:34:45'!
startingAt: aPoint facing: aSymbol 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeStartingAt: aPoint facing: aSymbol ! !
!MarsRover class methodsFor: 'instance creation' stamp: 'uc 5/13/2021 21:35:27' prior: 50971100!
startingAt: aStarterPoint facing: aDirection
	^MarsRover new initializeAt: aStarterPoint facing: aDirection.
	! !

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'uc 5/13/2021 21:35:42'!
Object subclass: #MarsRover
	instanceVariableNames: 'starterPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'uc 5/13/2021 21:35:42'!
Object subclass: #MarsRover
	instanceVariableNames: 'starterPoint direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: '*DenotativeObject' stamp: 'uc 5/13/2021 21:35:42'!
initializeAt: aStarterPoint facing: aDirection 
	self shouldBeImplemented.
	starterPoint := aStarterPoint.
	direction := aDirection.! !
!MarsRover methodsFor: '*DenotativeObject' stamp: 'uc 5/13/2021 21:35:53' prior: 50971131!
initializeAt: aStarterPoint facing: aDirection 
	starterPoint := aStarterPoint.
	direction := aDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:35:58'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:36:14'!
processPackage: aString 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:36:28' prior: 50971148!
processPackage: aPackageToProcess
	! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:37:11'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:37:52'!
assert: aMarsRover isAt: aPoint facing: aSymbol 
	self shouldBeImplemented.! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:38:49' prior: 50971086!
test01
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover processPackage: ''.
	self assert: (rover isAt: 0@0 facing: #North).
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:39:03'!
isAt: aPoint facing: aSymbol 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:39:55' prior: 50971174!
isAt: aPoint facing: aDirection 
	^aPoint = 0@0 and: [aDirection = #North].! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:40:01'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/13/2021 21:40:27' prior: 50971179!
isAt: aPoint facing: aDirection 
	^true! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:41:35'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/13/2021 21:41:40'!
PASSED!

----QUIT----(14 May 2021 09:28:11) CuisUniversity-4532.image priorSource: 20459533!

----STARTUP---- (15 May 2021 14:52:39) as /Users/urichami/Facu/ing1/inge1-1c-2021/Cuis/CuisUniversity-4532.image!


!methodRemoval: MarsRoverTest #assert:isAt:facing: stamp: 'uc 5/15/2021 14:52:52'!
assert: aMarsRover isAt: aPoint facing: aSymbol 
	self shouldBeImplemented.!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:55:19' prior: 50971059!
test02
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover processPackage: ''.
	self deny: (rover isAt: 0@1 facing: #North).
	! !

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:55:27'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:55:27'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:55:50'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:55:50'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:56:52' prior: 50971187!
isAt: aPoint facing: aDirection 
	^(starterPoint = aPoint) and: [direction = aDirection]! !

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:56:58'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:57:00'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'uc 5/15/2021 14:57:54'!
Object subclass: #MarsRover
	instanceVariableNames: 'coordinates direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:57:54' prior: 50971225!
isAt: aPoint facing: aDirection 
	^(coordinates = aPoint) and: [direction = aDirection]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:57:54' prior: 50971139!
initializeAt: aStarterPoint facing: aDirection 
	coordinates := aStarterPoint.
	direction := aDirection.! !

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'uc 5/15/2021 14:58:00'!
Object subclass: #MarsRover
	instanceVariableNames: 'coordinate direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:58:00' prior: 50971243!
isAt: aPoint facing: aDirection 
	^(coordinate = aPoint) and: [direction = aDirection]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:58:00' prior: 50971249!
initializeAt: aStarterPoint facing: aDirection 
	coordinate := aStarterPoint.
	direction := aDirection.! !

!classDefinition: #MarsRover category: 'MarsRover' stamp: 'uc 5/15/2021 14:58:07'!
Object subclass: #MarsRover
	instanceVariableNames: 'position direction'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:58:07' prior: 50971263!
isAt: aPoint facing: aDirection 
	^(position = aPoint) and: [direction = aDirection]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 14:58:07' prior: 50971269!
initializeAt: aStarterPoint facing: aDirection 
	position := aStarterPoint.
	direction := aDirection.! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 14:58:33'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 14:58:33'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 14:59:47'!
test03
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover processPackage: 'f'.
	self assert: (rover isAt: 0@1 facing: #North).
	! !

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 14:59:50'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 14:59:50'!
FAILURE!

0@0 + 0@1!

(0@0) + (0@1)!

(0@2) + (0@1) !

(1@2) + (0@1) !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:02:26' prior: 50971153!
processPackage: aPackageToProcess
	position = position + (0@1).! !

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:02:34'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:02:41'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:02:50'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:02:54'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:02:54'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:03:12'!
ERROR!

0@0 + (0@1)!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:03:58' prior: 50971314!
processPackage: aPackageToProcess
	position = (position) + (0@1).! !

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:04:06'!
ERROR!

position + (0@1)!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:04:56' prior: 50971334!
processPackage: aPackageToProcess
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:05:07'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:05:08'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:05:12'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:05:12'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:05:12'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:06:05' prior: 50971342!
processPackage: aPackageToProcess
	aPackageToProcess  isEmpty ifTrue: [^self].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:06:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:06:13'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:06:13'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:07:19'!
process: aPackageToProcess
	aPackageToProcess  isEmpty ifTrue: [^self].
	position := (position) + (0@1).! !

!methodRemoval: MarsRover #processPackage: stamp: 'uc 5/15/2021 15:07:19'!
processPackage: aPackageToProcess
	aPackageToProcess  isEmpty ifTrue: [^self].
	position := (position) + (0@1).!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:08:01' prior: 50971372!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:08:08'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:08:08'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:08:08'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:08:16'!
ERROR!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:08:44' prior: 50971166!
test01
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: ''.
	self assert: (rover isAt: 0@0 facing: #North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:08:51' prior: 50971208!
test02
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: ''.
	self deny: (rover isAt: 0@1 facing: #North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:08:57' prior: 50971299!
test03
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'f'.
	self assert: (rover isAt: 0@1 facing: #North).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:09:01'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:09:01'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:09:01'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:10:05'!
test04
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'b'.
	self assert: (rover isAt: (0@(-1)) facing: #North).
	! !

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:10:10'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:10:10'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:10:59' prior: 50971385!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position =  (position) - (0@1). ^self].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:11:03'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:11:23' prior: 50971442!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:11:34'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:11:36'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:11:39'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:11:39'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:11:39'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:11:39'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:13:05' prior: 50971429!
test04
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: #West).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:13:11'!
test05
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: #West).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:10:05' prior: 50971477!
test04
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'b'.
	self assert: (rover isAt: (0@(-1)) facing: #North).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:13:28'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:13:28'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:13:28'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:13:28'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:13:28'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:13:28'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:14:46' prior: 50971454!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ direction:= #West. ^self ].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:14:48'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:14:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:14:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:14:51'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:14:51'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:14:51'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:15:09'!
test06
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #West.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: #South).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:15:18'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:15:18'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:15:18'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:15:18'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:15:18'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:15:18'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:15:18'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:18:48' prior: 50971514!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction = #North ifTrue: [direction := #West. ^self].
		direction = #West ifTrue: [direction := #South. ^self].
		direction = #South ifTrue: [direction := #East. ^self].
		direction = #East ifTrue: [direction := #North. ^self].
	 ].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:18:55'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:18:57'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:19:01'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:19:01'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:21:45' prior: 50971562!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction = #North ifTrue: [direction := #West. ^self].
		direction = #West ifTrue: [direction := #South. ^self].
		direction = #South ifTrue: [direction := #East. ^self].
		direction = #East ifTrue: [direction := #North. ^self].
	 ].
	position := (position) + (0@1).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:22:12'!
test07
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'r'.
	self assert: (rover isAt: (0@0) facing: #East).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:22:16'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:22:16'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:22:16'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:22:16'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:22:16'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:22:16'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:22:16'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:22:16'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:23:26' prior: 50971598!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction = #North ifTrue: [direction := #West. ^self].
		direction = #West ifTrue: [direction := #South. ^self].
		direction = #South ifTrue: [direction := #East. ^self].
		direction = #East ifTrue: [direction := #North. ^self].
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction = #North ifTrue: [direction := #East. ^self].
		direction = #East ifTrue: [direction := #South. ^self].
		direction = #South ifTrue: [direction := #West. ^self].
		direction = #West ifTrue: [direction := #North. ^self].
	 ].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:23:30'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:23:32'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:23:35'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:24:46'!
test01processEmptyDoesNotMove
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: ''.
	self assert: (rover isAt: 0@0 facing: #North).
	! !

!methodRemoval: MarsRoverTest #test01 stamp: 'uc 5/15/2021 15:24:46'!
test01
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: ''.
	self assert: (rover isAt: 0@0 facing: #North).
	!

!methodRemoval: MarsRoverTest #test02 stamp: 'uc 5/15/2021 15:25:04'!
test02
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: ''.
	self deny: (rover isAt: 0@1 facing: #North).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:25:28'!
test02processForwardMovesForward
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'f'.
	self assert: (rover isAt: 0@1 facing: #North).
	! !

!methodRemoval: MarsRoverTest #test03 stamp: 'uc 5/15/2021 15:25:28'!
test03
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'f'.
	self assert: (rover isAt: 0@1 facing: #North).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:25:45'!
test03processBackwardsMovesBackwards
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'b'.
	self assert: (rover isAt: (0@(-1)) facing: #North).
	! !

!methodRemoval: MarsRoverTest #test04 stamp: 'uc 5/15/2021 15:25:45'!
test04
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'b'.
	self assert: (rover isAt: (0@(-1)) facing: #North).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:26:10'!
test04processLeftRotatesLeft
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: #West).
	! !

!methodRemoval: MarsRoverTest #test05 stamp: 'uc 5/15/2021 15:26:10'!
test05
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: #West).
	!

!methodRemoval: MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:26:26'!
test06
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #West.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: #South).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:26:40'!
test05processRightRotatesRight
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'r'.
	self assert: (rover isAt: (0@0) facing: #East).
	! !

!methodRemoval: MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:26:40'!
test07
	|rover|
	rover := MarsRover startingAt: 0@0 facing: #North.
	rover process: 'r'.
	self assert: (rover isAt: (0@0) facing: #East).
	!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:27:34'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:27:34'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:27:34'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:27:34'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:27:34'!
PASSED!

Object subclass: #CardinalDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #CardinalDirection category: 'MarsRover' stamp: 'uc 5/15/2021 15:29:24'!
Object subclass: #CardinalDirection
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #North category: 'MarsRover' stamp: 'uc 5/15/2021 15:29:32'!
CardinalDirection subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #West category: 'MarsRover' stamp: 'uc 5/15/2021 15:29:34'!
CardinalDirection subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #East category: 'MarsRover' stamp: 'uc 5/15/2021 15:29:36'!
CardinalDirection subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

CardinalDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!

!classDefinition: #South category: 'MarsRover' stamp: 'uc 5/15/2021 15:29:38'!
CardinalDirection subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover'!
!East class methodsFor: 'nil' stamp: 'uc 5/15/2021 15:30:37'!
rotateLeft
	^North.! !
!East class methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:30:47'!
rotateRight
	^South.! !
!North class methodsFor: 'nil' stamp: 'uc 5/15/2021 15:30:58'!
rotateLeft
	^West! !
!North class methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:31:06'!
rotateRight
	^East! !
!South class methodsFor: 'nil' stamp: 'uc 5/15/2021 15:31:27'!
rotateRight
	^West! !
!South class methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:31:34'!
rotateLeft
	^East! !
!West class methodsFor: 'nil' stamp: 'uc 5/15/2021 15:31:47'!
rotateRight
	^North! !
!West class methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:31:53'!
rotateLeft
	^South! !
!CardinalDirection class methodsFor: 'nil' stamp: 'uc 5/15/2021 15:32:12'!
rotateRight
	self subclassResponsibility .! !
!CardinalDirection class methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:32:13' prior: 50971871!
rotateRight
	self subclassResponsibility.! !
!CardinalDirection class methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:32:18'!
rotateLeft
	self subclassResponsibility.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:33:13' prior: 50971641!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction := direction rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction := direction rotateRight.
		^self.
	 ].
	position := (position) + (0@1).! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:34:14' prior: 50971687!
test01processEmptyDoesNotMove
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: ''.
	self assert: (rover isAt: 0@0 facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:34:18' prior: 50971708!
test02processForwardMovesForward
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'f'.
	self assert: (rover isAt: 0@1 facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:34:23' prior: 50971722!
test03processBackwardsMovesBackwards
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'b'.
	self assert: (rover isAt: (0@(-1)) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:34:26' prior: 50971737!
test04processLeftRotatesLeft
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: West).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:34:32' prior: 50971758!
test05processRightRotatesRight
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'r'.
	self assert: (rover isAt: (0@0) facing: East).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:34:46'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:34:46'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:34:46'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:34:46'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:34:46'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:38:19'!
test06
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'z'.
	self assert: (rover isAt: (0@0) facing: North).
	! !

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:38:56'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:38:56'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:41:28' prior: 50971886!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction := direction rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction := direction rotateRight.
		^self.
	 ].
	aSequenceOfCommands ~= 'f' ifTrue: [^self].
	position := (position) + (0@1).! !

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:41:36'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:41:38'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:41:40'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:41:40'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:41:40'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:41:40'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:41:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:41:40'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:42:04' prior: 50971970!
process: aSequenceOfCommands
	aSequenceOfCommands  isEmpty ifTrue: [^self].
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction := direction rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction := direction rotateRight.
		^self.
	 ].
	aSequenceOfCommands = 'f' ifTrue: [position := (position) + (0@1). ^self].
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:42:11'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:42:11'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:42:11'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:42:11'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:42:11'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:42:11'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:43:18' prior: 50972009!
process: aSequenceOfCommands
	aSequenceOfCommands = 'b' ifTrue: [position := (position) - (0@1). ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction := direction rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction := direction rotateRight.
		^self.
	 ].
	aSequenceOfCommands = 'f' ifTrue: [position := (position) + (0@1). ^self].
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:43:21'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:43:21'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:43:21'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:43:21'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:43:21'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:43:21'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:44:42'!
moveBackwards

	^ position := (position) - (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:44:42' prior: 50972043!
process: aSequenceOfCommands
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards. ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		direction := direction rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction := direction rotateRight.
		^self.
	 ].
	aSequenceOfCommands = 'f' ifTrue: [position := (position) + (0@1). ^self].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:44:51'!
rotateLeft

	^ direction := direction rotateLeft! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:44:51' prior: 50972080!
process: aSequenceOfCommands
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards. ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		self rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		direction := direction rotateRight.
		^self.
	 ].
	aSequenceOfCommands = 'f' ifTrue: [position := (position) + (0@1). ^self].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:45:02'!
rotateRight

	^ direction := direction rotateRight! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:45:02' prior: 50972099!
process: aSequenceOfCommands
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards. ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		self rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		self rotateRight.
		^self.
	 ].
	aSequenceOfCommands = 'f' ifTrue: [position := (position) + (0@1). ^self].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:45:14'!
moveForwards

	^ position := (position) + (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:45:14' prior: 50972117!
process: aSequenceOfCommands
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards. ^self].
	aSequenceOfCommands = 'l' ifTrue: [ 
		self rotateLeft.
		^self.
	 ].
	aSequenceOfCommands = 'r' ifTrue: [ 
		self rotateRight.
		^self.
	 ].
	aSequenceOfCommands = 'f' ifTrue: [self moveForwards. ^self].
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:46:08' prior: 50972135!
process: aSequenceOfCommands
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards.].
	aSequenceOfCommands = 'l' ifTrue: [ self rotateLeft. 	].
	aSequenceOfCommands = 'r' ifTrue: [ self rotateRight. ].
	aSequenceOfCommands = 'f' ifTrue: [self moveForwards.].
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:46:13'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:46:13'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:46:13'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:46:13'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:46:13'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:46:13'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:46:57'!
test06processOneInvalidCommandDoesNotMove
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'z'.
	self assert: (rover isAt: (0@0) facing: North).
	! !

!methodRemoval: MarsRoverTest #test06 stamp: 'uc 5/15/2021 15:46:57'!
test06
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'z'.
	self assert: (rover isAt: (0@0) facing: North).
	!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:47:07'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:47:07'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:47:07'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:47:07'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:47:07'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:47:07'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:47:29'!
test07
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:47:32'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:47:32'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:47:32'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:47:32'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:47:32'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:47:32'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:47:32'!
FAILURE!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:47:33'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:50:53' prior: 50972148!
process: aSequenceOfCommands
	(aSequenceOfCommands beginsWith: 'ff') ifTrue: [self moveForwards.self moveForwards.].
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards.].
	aSequenceOfCommands = 'l' ifTrue: [ self rotateLeft. 	].
	aSequenceOfCommands = 'r' ifTrue: [ self rotateRight. ].
	aSequenceOfCommands = 'f' ifTrue: [self moveForwards.].
	! !

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:50:55'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:50:58'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:51:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:51:02'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:52:57' prior: 50972211!
test07
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'fb'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:53:03'!
test08
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'fb'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:47:29' prior: 50972282!
test07
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 15:53:13'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:53:17'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 15:53:17'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:53:27' prior: 50972289!
test08
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'bb'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:53:32' prior: 50972352!
test08
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'bb'.
	self assert: (rover isAt: (0@-2) facing: North).
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:54:03' prior: 50972242!
process: aSequenceOfCommands
	(aSequenceOfCommands beginsWith: 'bb') ifTrue: [self moveBackwards.self moveBackwards.].
	(aSequenceOfCommands beginsWith: 'ff') ifTrue: [self moveForwards.self moveForwards.].
	aSequenceOfCommands = 'b' ifTrue: [self moveBackwards.].
	aSequenceOfCommands = 'l' ifTrue: [ self rotateLeft. 	].
	aSequenceOfCommands = 'r' ifTrue: [ self rotateRight. ].
	aSequenceOfCommands = 'f' ifTrue: [self moveForwards.].
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:54:08'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 15:54:08'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:57:32' prior: 50972368!
process: aSequenceOfCommands
	(aSequenceOfCommands beginsWith: 'b') ifTrue: [self moveBackwards.].
	(aSequenceOfCommands beginsWith: 'l') ifTrue: [ self rotateLeft. 	].
	(aSequenceOfCommands beginsWith: 'r') ifTrue: [ self rotateRight. ].
	(aSequenceOfCommands beginsWith: 'f') ifTrue: [self moveForwards.].
	self process: aSequenceOfCommands allButFirst.
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 15:58:37' prior: 50972409!
process: aSequenceOfCommands
	(aSequenceOfCommands isEmpty) ifTrue: [^self.].
	(aSequenceOfCommands beginsWith: 'b') ifTrue: [self moveBackwards.].
	(aSequenceOfCommands beginsWith: 'l') ifTrue: [ self rotateLeft. 	].
	(aSequenceOfCommands beginsWith: 'r') ifTrue: [ self rotateRight. ].
	(aSequenceOfCommands beginsWith: 'f') ifTrue: [self moveForwards.].
	self process: aSequenceOfCommands allButFirst.
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:58:45'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 15:58:45'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:59:06' prior: 50972360!
test08
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:59:11'!
test09
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:59:06' prior: 50972463!
test08
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:53:32' prior: 50972478!
test08
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'bb'.
	self assert: (rover isAt: (0@-2) facing: North).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 15:59:36'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 15:59:36'!
FAILURE!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 15:59:36'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:00:49' prior: 50972424!
process: aSequenceOfCommands
	|isInvalidCommand|
	isInvalidCommand := true.
	(aSequenceOfCommands isEmpty) ifTrue: [^self.].
	(aSequenceOfCommands beginsWith: 'b') ifTrue: [self moveBackwards. isInvalidCommand := false].
	(aSequenceOfCommands beginsWith: 'l') ifTrue: [ self rotateLeft. 	isInvalidCommand := false].
	(aSequenceOfCommands beginsWith: 'r') ifTrue: [ self rotateRight. isInvalidCommand := false].
	(aSequenceOfCommands beginsWith: 'f') ifTrue: [self moveForwards. isInvalidCommand := false].
	isInvalidCommand ifTrue: [^self].
	self process: aSequenceOfCommands allButFirst.
	! !

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:00:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:00:57'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:01:01'!
PASSED!

(North rotateLeft)!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:02:47' prior: 50972470!
test09
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'lf'.
	self assert: (rover isAt: (-1@0) facing: West ).
	! !

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:02:52'!
FAILURE!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:02:52'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:04:47' prior: 50972130!
moveForwards
	direction = West ifTrue: [^ position := position + (-1@0)].
	^ position := (position) + (0@1)! !

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:04:53'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:04:56'!
PASSED!

North rotateRight!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:05:23' prior: 50972575!
test09
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East  ).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:05:33'!
test10
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East  ).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 15:59:11' prior: 50972623!
test09
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:05:47' prior: 50972630!
test10
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:05:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:05:52'!
FAILURE!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:05:52'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:06:52' prior: 50972588!
moveForwards
	direction = West ifTrue: [^ position := position + (-1@0)].
	direction = East ifTrue: [^ position := position + (1@0)].
	direction = South ifTrue: [^ position := position + (0@-1)].
	^ position := (position) + (0@1)! !

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:06:56'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:06:59'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:06:59'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:12:47' prior: 50972684!
moveForwards
	^ position := (position) + direction step! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:13:26'!
stepEast
	^1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:13:34'!
stepWest
	^-1@0! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:13:45'!
stepSouth
	^0@-1! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:13:51'!
stepNorth
	^0@1! !
!CardinalDirection class methodsFor: 'nil' stamp: 'uc 5/15/2021 16:14:12'!
step
	self subclassResponsibility.! !
!East class methodsFor: 'nil' stamp: 'uc 5/15/2021 16:14:56'!
stepFor: aMarsRoverToMove
	aMarsRoverToMove stepEast.
	
! !

!methodRemoval: East class #stepFor: stamp: 'uc 5/15/2021 16:17:09'!
stepFor: aMarsRoverToMove
	aMarsRoverToMove stepEast.
	
!

!methodRemoval: CardinalDirection class #step stamp: 'uc 5/15/2021 16:17:21'!
step
	self subclassResponsibility.!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:06:52' prior: 50972725!
moveForwards
	direction = West ifTrue: [^ position := position + (-1@0)].
	direction = East ifTrue: [^ position := position + (1@0)].
	direction = South ifTrue: [^ position := position + (0@-1)].
	^ position := (position) + (0@1)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:18:34' prior: 50972760!
moveForwards
	direction = West ifTrue: [^ position := position + self stepWest].
	direction = East ifTrue: [^ position := position + self stepEast].
	direction = South ifTrue: [^ position := position + self stepSouth].
	^ position := (position) + self stepNorth! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:18:47'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:18:47'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:19:09' prior: 50972771!
moveForwards
	direction = West ifTrue: [ position := position + self stepWest].
	direction = East ifTrue: [ position := position + self stepEast].
	direction = South ifTrue: [ position := position + self stepSouth].
	direction = North ifTrue: [position := (position) + self stepNorth].! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:19:14'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:19:14'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:20:45'!
test11
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'lb'.
	self assert: (rover isAt: (1@0) facing: West).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:20:51'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'uc 5/15/2021 16:20:51'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'uc 5/15/2021 16:20:51'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:21:34' prior: 50972075!
moveBackwards
	direction = West ifTrue: [ position := position - self stepWest].
	direction = East ifTrue: [ position := position - self stepEast].
	direction = South ifTrue: [ position := position - self stepSouth].
	direction = North ifTrue: [position := (position) - self stepNorth].! !

!testRun: #MarsRoverTest #test11 stamp: 'uc 5/15/2021 16:21:42'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:21:48'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'uc 5/15/2021 16:21:48'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:22:59' prior: 50972811!
moveForwards
	direction = West ifTrue: [ position := position + self stepWest].
	direction = East ifTrue: [ position := position + self stepEast].
	direction = South ifTrue: [ position := position + self stepSouth].
	direction = North ifTrue: [position := (position) + self stepNorth].! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:24:37' prior: 50972851!
test11
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'rrrrf'.
	self assert: (rover isAt: (1@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:24:44'!
test12
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'rrrrf'.
	self assert: (rover isAt: (1@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:20:45' prior: 50972949!
test11
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'lb'.
	self assert: (rover isAt: (1@0) facing: West).
	! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'uc 5/15/2021 16:24:54'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'uc 5/15/2021 16:24:54'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'uc 5/15/2021 16:24:54'!
FAILURE!

self stepNorth!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:28:50' prior: 50972956!
test12
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'rrrrf'.
	self assert: (rover isAt: (0@1) facing: North).
	! !

!testRun: #MarsRoverTest #test12 stamp: 'uc 5/15/2021 16:28:58'!
PASSED!

North rotateRight!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:30:05' prior: 50973007!
test12
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'frfzf'.
	self assert: (rover isAt: (1@1) facing: East ).
	! !

!testRun: #MarsRoverTest #test12 stamp: 'uc 5/15/2021 16:30:08'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'uc 5/15/2021 16:30:53'!
PASSED!

!methodRemoval: MarsRoverTest #test12 stamp: 'uc 5/15/2021 16:32:34'!
test12
	|rover|
	rover := MarsRover startingAt: 0@0 facing: North.
	rover process: 'frfzf'.
	self assert: (rover isAt: (1@1) facing: East ).
	!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:35:57' prior: 50972522!
process: aSequenceOfCommands
	(aSequenceOfCommands isEmpty) ifTrue: [^self.].
	
	self processCommand: aSequenceOfCommands first.
	
	self process: aSequenceOfCommands allButFirst.
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:38:01'!
processCommand: aCommand
	(aCommand = $b) ifTrue: [ ^self moveBackwards.].
	(aCommand = $l) ifTrue: [ ^self rotateLeft.].
	(aCommand = $r) ifTrue: [ ^self rotateRight.].
	(aCommand = $f) ifTrue: [ ^self moveForwards.].
	^false! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:39:03' prior: 50973037!
process: aSequenceOfCommands
	(aSequenceOfCommands isEmpty) ifTrue: [^self.].
	
	self processCommand: aSequenceOfCommands first ifInvalid: [^self].
	
	self process: aSequenceOfCommands allButFirst.
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:39:30'!
processCommand: aCommand ifInvalid: anErrorHandlingBlock
	(aCommand = $b) ifTrue: [ ^self moveBackwards.].
	(aCommand = $l) ifTrue: [ ^self rotateLeft.].
	(aCommand = $r) ifTrue: [ ^self rotateRight.].
	(aCommand = $f) ifTrue: [ ^self moveForwards.].
	^anErrorHandlingBlock value! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:39:37' prior: 50973066!
processCommand: aCommand ifInvalid: anErrorHandlingBlock
	(aCommand = $b) ifTrue: [ ^self moveBackwards.].
	(aCommand = $l) ifTrue: [ ^self rotateLeft.].
	(aCommand = $r) ifTrue: [ ^self rotateRight.].
	(aCommand = $f) ifTrue: [ ^self moveForwards.].
	anErrorHandlingBlock value! !

!methodRemoval: MarsRover #processCommand: stamp: 'uc 5/15/2021 16:39:52'!
processCommand: aCommand
	(aCommand = $b) ifTrue: [ ^self moveBackwards.].
	(aCommand = $l) ifTrue: [ ^self rotateLeft.].
	(aCommand = $r) ifTrue: [ ^self rotateRight.].
	(aCommand = $f) ifTrue: [ ^self moveForwards.].
	^false!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'uc 5/15/2021 16:40:39' prior: 50973057!
process: aSequenceOfCommands
	(aSequenceOfCommands isEmpty) ifTrue: [^self.].
	
	self processCommand: (aSequenceOfCommands first) ifInvalid: [^self].
	
	self process: aSequenceOfCommands allButFirst.
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:44:40'!
createAMarsRover

	^ MarsRover startingAt: 0@0 facing: North! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:44:40' prior: 50972964!
test11
	|rover|
	rover := self createAMarsRover.
	rover process: 'lb'.
	self assert: (rover isAt: (1@0) facing: West).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:44:53' prior: 50972646!
test10
	|rover|
	rover := self createAMarsRover.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:01' prior: 50972638!
test09
	|rover|
	rover := self createAMarsRover.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:05' prior: 50972486!
test08
	|rover|
	rover := self createAMarsRover.
	rover process: 'bb'.
	self assert: (rover isAt: (0@-2) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:10' prior: 50972297!
test07
	|rover|
	rover := self createAMarsRover.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:14' prior: 50972177!
test06processOneInvalidCommandDoesNotMove
	|rover|
	rover := self createAMarsRover.
	rover process: 'z'.
	self assert: (rover isAt: (0@0) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:22' prior: 50971934!
test05processRightRotatesRight
	|rover|
	rover := self createAMarsRover.
	rover process: 'r'.
	self assert: (rover isAt: (0@0) facing: East).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:28' prior: 50971926!
test04processLeftRotatesLeft
	|rover|
	rover := self createAMarsRover.
	rover process: 'l'.
	self assert: (rover isAt: (0@0) facing: West).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:33' prior: 50971917!
test03processBackwardsMovesBackwards
	|rover|
	rover := self createAMarsRover.
	rover process: 'b'.
	self assert: (rover isAt: (0@(-1)) facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:38' prior: 50971909!
test02processForwardMovesForward
	|rover|
	rover := self createAMarsRover.
	rover process: 'f'.
	self assert: (rover isAt: 0@1 facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:45:42' prior: 50971901!
test01processEmptyDoesNotMove
	|rover|
	rover := self createAMarsRover.
	rover process: ''.
	self assert: (rover isAt: 0@0 facing: North).
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:48:13'!
test07processForwardTwiceMovesForwardForward
	|rover|
	rover := self createAMarsRover.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	! !

!methodRemoval: MarsRoverTest #test07 stamp: 'uc 5/15/2021 16:48:13'!
test07
	|rover|
	rover := self createAMarsRover.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	!

!methodRemoval: MarsRoverTest #test08 stamp: 'uc 5/15/2021 16:48:27'!
test08
	|rover|
	rover := self createAMarsRover.
	rover process: 'bb'.
	self assert: (rover isAt: (0@-2) facing: North).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:48:59'!
test08doesNotProcessCommandsAfterInvalidCommand
	|rover|
	rover := self createAMarsRover.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	! !

!methodRemoval: MarsRoverTest #test09 stamp: 'uc 5/15/2021 16:48:59'!
test09
	|rover|
	rover := self createAMarsRover.
	rover process: 'zf'.
	self assert: (rover isAt: (0@0) facing: North).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:49:53'!
test10processMoveAfterDirectionChange
	|rover|
	rover := self createAMarsRover.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East).
	! !

!methodRemoval: MarsRoverTest #test10 stamp: 'uc 5/15/2021 16:49:53'!
test10
	|rover|
	rover := self createAMarsRover.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East).
	!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/15/2021 16:50:23'!
test07processMultipleMoveCommands
	|rover|
	rover := self createAMarsRover.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	! !

!methodRemoval: MarsRoverTest #test07processForwardTwiceMovesForwardForward stamp: 'uc 5/15/2021 16:50:23'!
test07processForwardTwiceMovesForwardForward
	|rover|
	rover := self createAMarsRover.
	rover process: 'ff'.
	self assert: (rover isAt: (0@2) facing: North).
	!

!methodRemoval: MarsRoverTest #test11 stamp: 'uc 5/15/2021 16:50:51'!
test11
	|rover|
	rover := self createAMarsRover.
	rover process: 'lb'.
	self assert: (rover isAt: (1@0) facing: West).
	!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test07processMultipleMoveCommands stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test08doesNotProcessCommandsAfterInvalidCommand stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test10processMoveAfterDirectionChange stamp: 'uc 5/15/2021 16:50:58'!
PASSED!

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test07processMultipleMoveCommands stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test08doesNotProcessCommandsAfterInvalidCommand stamp: 'uc 5/15/2021 16:56:38'!
PASSED!

!testRun: #MarsRoverTest #test10processMoveAfterDirectionChange stamp: 'uc 5/15/2021 16:56:38'!
PASSED!
!MarsRoverTest methodsFor: 'tests' stamp: 'uc 5/16/2021 19:15:52'!
test09processMoveAfterDirectionChange
	|rover|
	rover := self createAMarsRover.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East).
	! !

!methodRemoval: MarsRoverTest #test10processMoveAfterDirectionChange stamp: 'uc 5/16/2021 19:15:52'!
test10processMoveAfterDirectionChange
	|rover|
	rover := self createAMarsRover.
	rover process: 'rf'.
	self assert: (rover isAt: (1@0) facing: East).
	!
!MarsRover methodsFor: 'movements' stamp: 'uc 5/16/2021 19:18:33' prior: 50972937!
moveForwards
	position := position + direction stepCoordinates.! !
!CardinalDirection class methodsFor: 'nil' stamp: 'uc 5/16/2021 19:18:54'!
stepCoordinates
	self subclassResponsibility.! !
!East class methodsFor: 'nil' stamp: 'uc 5/16/2021 19:20:02' overrides: 50973344!
stepCoordinates
	^1@0! !
!North class methodsFor: 'coordinates' stamp: 'uc 5/16/2021 19:20:27' overrides: 50973344!
stepCoordinates
	^0@1! !
!South class methodsFor: 'coordinates' stamp: 'uc 5/16/2021 19:20:49' overrides: 50973344!
stepCoordinates
	^0@-1! !
!West class methodsFor: 'coordinates' stamp: 'uc 5/16/2021 19:21:05' overrides: 50973344!
stepCoordinates
	^-1@0! !

!methodRemoval: MarsRover #stepEast stamp: 'uc 5/16/2021 19:21:14'!
stepEast
	^1@0!

!methodRemoval: MarsRover #stepNorth stamp: 'uc 5/16/2021 19:21:15'!
stepNorth
	^0@1!

!methodRemoval: MarsRover #stepSouth stamp: 'uc 5/16/2021 19:21:17'!
stepSouth
	^0@-1!

!methodRemoval: MarsRover #stepWest stamp: 'uc 5/16/2021 19:21:19'!
stepWest
	^-1@0!
!MarsRover methodsFor: 'movements' stamp: 'uc 5/16/2021 19:21:32' prior: 50972892!
moveBackwards
	position := position - direction stepCoordinates.! !

!testRun: #MarsRoverTest #test01processEmptyDoesNotMove stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test02processForwardMovesForward stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test03processBackwardsMovesBackwards stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test04processLeftRotatesLeft stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test05processRightRotatesRight stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test06processOneInvalidCommandDoesNotMove stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test07processMultipleMoveCommands stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test08doesNotProcessCommandsAfterInvalidCommand stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

!testRun: #MarsRoverTest #test09processMoveAfterDirectionChange stamp: 'uc 5/16/2021 19:21:41'!
PASSED!

----QUIT----(17 May 2021 13:45:49) CuisUniversity-4532.image priorSource: 20465438!