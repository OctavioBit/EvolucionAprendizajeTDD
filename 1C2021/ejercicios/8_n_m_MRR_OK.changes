----STARTUP---- (18 May 2021 21:39:08) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!


!classRemoval: #TurboLaserCannon stamp: 'LEC 5/18/2021 21:39:17'!
Weapon subclass: #TurboLaserCannon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #HSBlaster stamp: 'LEC 5/18/2021 21:39:17'!
Weapon subclass: #HSBlaster
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Claw stamp: 'LEC 5/18/2021 21:39:18'!
Weapon subclass: #Claw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Weapon stamp: 'LEC 5/18/2021 21:39:18'!
Object subclass: #Weapon
	instanceVariableNames: 'type weight speedImpact usedTimes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #TankRover stamp: 'LEC 5/18/2021 21:39:18'!
Robot subclass: #TankRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Aluminum3000 stamp: 'LEC 5/18/2021 21:39:19'!
Robot subclass: #Aluminum3000
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Robot stamp: 'LEC 5/18/2021 21:39:19'!
Object subclass: #Robot
	instanceVariableNames: 'type life speed maxWeaponWeight weapons'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #RobotWarsTest stamp: 'LEC 5/18/2021 21:39:20'!
TestCase subclass: #RobotWarsTest
	instanceVariableNames: 'aLasserCannon aClaw aBlaster anAttackedAluminum anAttackedTankRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

----End fileIn of \Users\castr\Desktop\windows64\ISW1-2021-1C-1erParcial.st----!

----STARTUP---- (18 May 2021 22:49:44) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!


!classRemoval: #TurboLaserCannon stamp: 'LEC 5/18/2021 22:49:54'!
Weapon subclass: #TurboLaserCannon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #HSBlaster stamp: 'LEC 5/18/2021 22:49:55'!
Weapon subclass: #HSBlaster
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Claw stamp: 'LEC 5/18/2021 22:49:55'!
Weapon subclass: #Claw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Weapon stamp: 'LEC 5/18/2021 22:49:55'!
Object subclass: #Weapon
	instanceVariableNames: 'type weight speedImpact usedTimes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #TankRover stamp: 'LEC 5/18/2021 22:49:56'!
Robot subclass: #TankRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Aluminum3000 stamp: 'LEC 5/18/2021 22:49:56'!
Robot subclass: #Aluminum3000
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Robot stamp: 'LEC 5/18/2021 22:49:57'!
Object subclass: #Robot
	instanceVariableNames: 'type life speed maxWeaponWeight weapons'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #RobotWarsTest stamp: 'LEC 5/18/2021 22:49:57'!
TestCase subclass: #RobotWarsTest
	instanceVariableNames: 'aLasserCannon aClaw aBlaster anAttackedAluminum anAttackedTankRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

----End fileIn of \Users\castr\Desktop\windows64\ISW1-2021-1C-1erParcial.st----!

----SNAPSHOT----(18 May 2021 22:57:10) CuisUniversity-4532.image priorSource: 17243629!

----SNAPSHOT----(19 May 2021 00:29:07) CuisUniversity-4532.image priorSource: 17449387!

----STARTUP---- (20 May 2021 20:15:19) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!


----QUIT----(20 May 2021 21:45:46) CuisUniversity-4532.image priorSource: 17449476!

----STARTUP---- (3 June 2021 19:54:05) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!


!classRemoval: #SentenceFinderByPrefix stamp: 'LEC 6/3/2021 19:54:25'!
Object subclass: #SentenceFinderByPrefix
	instanceVariableNames: 'prefix stack stackSize auxiliaryReversedStack foundSentences'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-3'!

!classRemoval: #OOStack stamp: 'LEC 6/3/2021 19:54:26'!
Object subclass: #OOStack
	instanceVariableNames: 'contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-3'!

!classRemoval: #SentenceFinderByPrefixTest stamp: 'LEC 6/3/2021 19:54:27'!
TestCase subclass: #SentenceFinderByPrefixTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-3'!

!classRemoval: #OOStackTest stamp: 'LEC 6/3/2021 19:54:28'!
TestCase subclass: #OOStackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Stack-Solution-3'!

!classRemoval: #CustomerBook stamp: 'LEC 6/3/2021 19:54:39'!
Object subclass: #CustomerBook
	instanceVariableNames: 'suspended active'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CustomerBookTest stamp: 'LEC 6/3/2021 19:54:40'!
TestCase subclass: #CustomerBookTest
	instanceVariableNames: 'customerBook paulMcCartney johnLennon'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #NotFound stamp: 'LEC 6/3/2021 19:54:41'!
Error subclass: #NotFound
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #CantSuspend stamp: 'LEC 6/3/2021 19:54:41'!
Error subclass: #CantSuspend
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CodigoRepetido-Ejercicio'!

!classRemoval: #Fraccion stamp: 'LEC 6/3/2021 19:54:47'!
Numero subclass: #Fraccion
	instanceVariableNames: 'numerator denominator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #Uno stamp: 'LEC 6/3/2021 19:54:48'!
Entero subclass: #Uno
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #PositivoMayorAUno stamp: 'LEC 6/3/2021 19:54:49'!
EnteroMenosCeroYUno subclass: #PositivoMayorAUno
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #Negativo stamp: 'LEC 6/3/2021 19:54:50'!
EnteroMenosCeroYUno subclass: #Negativo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #EnteroMenosCeroYUno stamp: 'LEC 6/3/2021 19:54:50'!
Entero subclass: #EnteroMenosCeroYUno
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #Cero stamp: 'LEC 6/3/2021 19:54:51'!
Entero subclass: #Cero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #Entero stamp: 'LEC 6/3/2021 19:54:51'!
Numero subclass: #Entero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #Numero stamp: 'LEC 6/3/2021 19:54:52'!
Object subclass: #Numero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #NumeroTest stamp: 'LEC 6/3/2021 19:54:53'!
TestCase subclass: #NumeroTest
	instanceVariableNames: 'zero one two four oneFifth oneHalf five twoFifth twoTwentyfifth fiveHalfs three eight negativeOne negativeTwo'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numero-Solution-3.6'!

!classRemoval: #TurboLaserCannon stamp: 'LEC 6/3/2021 19:55:01'!
Weapon subclass: #TurboLaserCannon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #HSBlaster stamp: 'LEC 6/3/2021 19:55:02'!
Weapon subclass: #HSBlaster
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Claw stamp: 'LEC 6/3/2021 19:55:02'!
Weapon subclass: #Claw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Weapon stamp: 'LEC 6/3/2021 19:55:03'!
Object subclass: #Weapon
	instanceVariableNames: 'type weight speedImpact usedTimes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #TankRover stamp: 'LEC 6/3/2021 19:55:04'!
Robot subclass: #TankRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Aluminum3000 stamp: 'LEC 6/3/2021 19:55:05'!
Robot subclass: #Aluminum3000
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #Robot stamp: 'LEC 6/3/2021 19:55:05'!
Object subclass: #Robot
	instanceVariableNames: 'type life speed maxWeaponWeight weapons'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classRemoval: #RobotWarsTest stamp: 'LEC 6/3/2021 19:55:06'!
TestCase subclass: #RobotWarsTest
	instanceVariableNames: 'aLasserCannon aClaw aBlaster anAttackedAluminum anAttackedTankRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

----QUIT----(3 June 2021 19:55:09) CuisUniversity-4532.image priorSource: 17449669!

----STARTUP---- (3 June 2021 19:56:38) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!


----End fileIn of \Users\castr\Desktop\windows64\MarsRover-WithHeading.st----!
!MarsRoverTest methodsFor: 'tests' stamp: 'LEC 6/3/2021 20:05:11' prior: 50331782!
test16

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log = OrderedCollection new.
	marsRover process: 'l'.
	
	self assert: 1@2 equals: log first.
	self assert: log size equals: 1.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'LEC 6/3/2021 20:05:24' prior: 50332188!
test16

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := OrderedCollection new.
	marsRover process: 'l'.
	
	self assert: 1@2 equals: log first.
	self assert: log size equals: 1.! !
!MarsRoverTest methodsFor: 'tests' stamp: 'LEC 6/3/2021 20:09:29' prior: 50332198!
test16

	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	! !
!MarsRoverTest methodsFor: 'tests' stamp: 'LEC 6/3/2021 20:13:44'!
test17

	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	! !

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'LEC 6/3/2021 20:14:28'!
Object subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverTest methodsFor: 'tests' stamp: 'LEC 6/3/2021 20:14:20' prior: 50332208!
test16

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover process: 'l'.
	
	self assert: 1@2 equals: log first.
	self assert: log size equals: 1.! !

TestCase subclass: #MRLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MRLogTest category: 'MarsRover-WithHeading' stamp: 'LEC 6/3/2021 20:16:28'!
TestCase subclass: #MRLogTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MRLogTest methodsFor: 'no messages' stamp: 'LEC 6/3/2021 20:16:54'!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover process: 'l'.
	
	self assert: 1@2 equals: log first.
	self assert: log size equals: 1.! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:17:18'!
test02

	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	! !

!methodRemoval: MarsRoverTest #test16 stamp: 'LEC 6/3/2021 20:17:31'!
test16

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover process: 'l'.
	
	self assert: 1@2 equals: log first.
	self assert: log size equals: 1.!

!methodRemoval: MarsRoverTest #test17 stamp: 'LEC 6/3/2021 20:17:35'!
test17

	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	!

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/3/2021 20:17:42'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:17:58'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:18:18'!
first
	self shouldBeImplemented.! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:22:31' prior: 50332254!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'l'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:22:36'!
ERROR!
!MarsRover methodsFor: 'Log' stamp: 'LEC 6/3/2021 20:23:03'!
addLog: aLog 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'LEC 6/3/2021 20:24:41'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'Log' stamp: 'LEC 6/3/2021 20:24:39' prior: 50332344!
addLog: aLog 
	
	logs := OrderedCollection with: aLog.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:24:44'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:24:59'!
currentLogs
	self shouldBeImplemented.! !
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:25:31' prior: 50332363!
currentLogs
	
	^1@2! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:25:33'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:26:16' prior: 50332368!
currentLogs
	
	^OrderedCollection with: 1@2! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:26:31'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:26:31'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:26:31'!
ERROR!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:26:31'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:27:22'!
test99
	"
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	"
	! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:28:09' prior: 50332263!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'll'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: 1@3 equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:28:11'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:30:29' prior: 50332332!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'l'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:30:45'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:30:48'!
ERROR!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:30:48'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/3/2021 20:32:13' prior: 50331887!
process: aSequenceOfCommands

	aSequenceOfCommands do: [:aCommand | self processCommand: aCommand].
	
! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/3/2021 20:33:54' prior: 50331867!
moveEast
	
	position := position + (1@0).
	logs 	add: position! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/3/2021 20:34:10' prior: 50331875!
moveNorth
	
	position := position + (0@1).
	logs 	add: position! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/3/2021 20:34:16' prior: 50331879!
moveSouth
	
	position := position + (0@-1).
	logs 	add: position! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/3/2021 20:34:23' prior: 50331883!
moveWest
	
	position := position + (-1@0).
	logs 	add: position! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/3/2021 20:35:11' prior: 50331821!
headNorth
	
	head := MarsRoverHeadingNorth new
	! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:35:30'!
ERROR!

Object subclass: #Log
	instanceVariableNames: 'currentLogs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'LEC 6/3/2021 20:37:12'!
Object subclass: #Log
	instanceVariableNames: 'currentLogs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: Log #first stamp: 'LEC 6/3/2021 20:37:32'!
first
	self shouldBeImplemented.!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:37:54' overrides: 16896425!
initialize

	currentLogs := OrderedCollection new.! !
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:38:03' prior: 50332374!
currentLogs
	
	^currentLogs ! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:38:11'!
ERROR!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:38:11'!
ERROR!
!MarsRover methodsFor: 'Log' stamp: 'LEC 6/3/2021 20:38:50' prior: 50332356!
addLog: aLog 
	
	logs := aLog.! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:38:59'!
ERROR!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:38:59'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:40:18' prior: 50332412!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:40:27' prior: 50332500!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'f'.
	
	
	self assert: 2@1 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:40:28'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:41:06'!
add: aLog

	currentLogs add: aLog! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:41:10'!
FAILURE!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:41:10'!
FAILURE!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:41:20' prior: 50332511!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:41:21'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:41:21'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:41:21'!
ERROR!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:41:22'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:41:22'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:41:29'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:41:32'!
ERROR!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:41:32'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:41:42' prior: 50332397!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'ff'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: 1@3 equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:41:49'!
PASSED!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:42:34' prior: 50332561!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: 1@3 equals: log currentLogs second.
	self assert: 1@2 equals: log currentLogs third.
	self assert: log currentLogs size equals: 3.
	! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:42:39'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:42:39'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:42:39'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:42:39'!
PASSED!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:44:43'!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'l'.
	
	
	self assert: 'Oeste' equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:44:45'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/3/2021 20:45:39' prior: 50331829!
headWest
	
	head := MarsRoverHeadingWest new.
	logs add:'West'! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:45:51' prior: 50332599!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'l'.
	
	
	self assert: 'West' equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:45:53'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:45:53'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:45:53'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:45:53'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:45:53'!
PASSED!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:46:01' prior: 50332617!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'll'.
	
	
	self assert: 'West' equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.
	! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:46:29' prior: 50332639!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentLogs second.
	self assert: 'Sourth' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/3/2021 20:47:01' prior: 50331825!
headSouth
	
	head := MarsRoverHeadingSouth new.
	logs add: 'South'! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:47:08' prior: 50332650!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentLogs second.
	self assert: 'South' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:47:09'!
FAILURE!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:47:24' prior: 50332669!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentLogs first.
	self assert: 'South' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:47:26'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:47:26'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:47:26'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:47:26'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:47:26'!
PASSED!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:47:58' prior: 50332684!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'r'.
	
	self assert: 'East' equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.
	! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:48:04'!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'r'.
	
	self assert: 'East' equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.
	! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:47:24' prior: 50332708!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentLogs first.
	self assert: 'South' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:48:33'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:48:33'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:48:33'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/3/2021 20:48:33'!
ERROR!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:48:33'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/3/2021 20:48:33'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/3/2021 20:49:00' prior: 50331817!
headEast
	
	head := MarsRoverHeadingEast new.
	logs add: 'East'! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/3/2021 20:49:22' prior: 50332456!
headNorth
	
	head := MarsRoverHeadingNorth new.
	logs add: 'North'
	! !

!testRun: #MRLogTest #test04 stamp: 'LEC 6/3/2021 20:49:30'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:49:30'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:49:30'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:49:30'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/3/2021 20:49:30'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:49:30'!
PASSED!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/3/2021 20:50:44' prior: 50332719!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addLog: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentLogs first.
	self assert: 'East' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test04 stamp: 'LEC 6/3/2021 20:50:45'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/3/2021 20:50:45'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/3/2021 20:50:45'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/3/2021 20:50:46'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/3/2021 20:50:46'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/3/2021 20:50:46'!
PASSED!

----SNAPSHOT----(3 June 2021 20:56:13) CuisUniversity-4532.image priorSource: 5507!

----QUIT----(3 June 2021 21:06:28) CuisUniversity-4532.image priorSource: 36946!

----STARTUP---- (6 June 2021 15:38:28) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!


Object subclass: #Log
	instanceVariableNames: 'directionLogs positionLogs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 15:57:33'!
Object subclass: #Log
	instanceVariableNames: 'directionLogs positionLogs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 15:57:42'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 15:57:42'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 15:57:42'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 15:57:42'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 15:57:42'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 15:57:42'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 15:57:48'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 15:57:48'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 15:57:48'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 15:58:33'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 15:58:33'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 15:58:33'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 15:58:36'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 15:58:37'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 15:58:47'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 15:58:47'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 15:58:47'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 15:58:47'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 15:58:47'!
PASSED!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:00:03' prior: 50332478 overrides: 16896425!
initialize

	directionLogs := OrderedCollection new.
	positionLogs := OrderedCollection new.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 16:00:10'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 16:00:10'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 16:00:32'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 16:00:32'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 16:02:53' prior: 50332441!
moveNorth
	
	^position := position + (0@1).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 16:08:16'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 16:08:16'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:08:16'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:08:16'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 16:08:17'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 16:08:17'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 16:08:17'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:08:21'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:08:46' prior: 50332524!
add: aLog

	positionLogs add: aLog! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 16:08:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 16:08:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:08:51'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:08:51'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 16:08:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 16:08:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 16:08:52'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:08:57'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:09:28' prior: 50332483!
currentLogs
	
	^positionLogs ! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 16:09:49'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 16:09:49'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 16:09:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 16:09:49'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 16:09:49'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:09:53'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 16:11:22' prior: 50332761!
headNorth
	
	head := MarsRoverHeadingNorth new.
	"logs add: 'North'"
	! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 16:11:29' prior: 50332663!
headSouth
	
	head := MarsRoverHeadingSouth new.
	"logs add: 'South'"! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 16:11:36' prior: 50332612!
headWest
	
	head := MarsRoverHeadingWest new.
	"logs add:'West'"! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 16:11:44' prior: 50332756!
headEast
	
	head := MarsRoverHeadingEast new.
	"logs add: 'East'"! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 16:11:57' prior: 50332436!
moveEast
	
	position := position + (1@0).
	"logs 	add: position"! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 16:12:09' prior: 50332446!
moveSouth
	
	position := position + (0@-1).
	"logs 	add: position"! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 16:12:15' prior: 50332451!
moveWest
	
	position := position + (-1@0).
	"logs 	add: position"! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 16:12:23' prior: 50332884!
moveNorth
	
	position := position + (0@1).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 16:12:30'!
PASSED!

!classDefinition: #Command category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 16:15:45'!
Object subclass: #Command
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 16:15:36' prior: 50331893!
processCommand: aCommand

	self applyCommand: (Command for: aCommand)
	"
	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward ].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.
	"! !

Command subclass: #FowardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #FowardCommand category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 16:16:23'!
Command subclass: #FowardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Command subclass: #BackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #BackwardCommand category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 16:16:32'!
Command subclass: #BackwardCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Command subclass: #RightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #RightCommand category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 16:16:42'!
Command subclass: #RightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Command subclass: #LeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LeftCommand category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 16:16:50'!
Command subclass: #LeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Command class methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:19:01'!
for: aCommand

	^self subclasses 
		detect: [ :aCommandClass | aCommandClass canHandle: aCommand ]
		ifFound: [ :aCommandClass | aCommandClass new ]
		ifNone: [ self error: MarsRover ]! !
!Command class methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:20:51' prior: 50333152!
for: aCommand

	^self subclasses 
		detect: [ :aCommandClass | aCommandClass canHandle: aCommand ]
		ifFound: [ :aCommandClass | aCommandClass new ]
		ifNone: [ self error: MarsRover invalidCommandErrorDescription ]! !
!MarsRover class methodsFor: 'instance creation' stamp: 'LEC 6/6/2021 16:21:09'!
invalidCommandErrorDescription
	
	^'Invalid command'! !
!Command class methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:21:40'!
canHandle: aCommand

	self subclassResponsibility ! !
!BackwardCommand class methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:22:02' overrides: 50333176!
canHandle: aCommand

	^$b = aCommand! !
!FowardCommand class methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:22:11' overrides: 50333176!
canHandle: aCommand

	^$f = aCommand! !
!LeftCommand class methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:22:20' overrides: 50333176!
canHandle: aCommand

	^$l = aCommand! !
!RightCommand class methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:22:28' overrides: 50333176!
canHandle: aCommand

	^$r = aCommand! !
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 16:24:11'!
applyCommand: aCommand

	aCommand actionFor: self
	! !
!BackwardCommand methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:24:50'!
actionFor: marsRover

	marsRover moveBackward ! !
!FowardCommand methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:25:28'!
actionFor: marsRover

	marsRover moveForward! !

!classRenamed: #FowardCommand as: #ForwardCommand stamp: 'LEC 6/6/2021 16:25:50'!
Smalltalk renameClassNamed: #FowardCommand as: #ForwardCommand!
!LeftCommand methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:26:20'!
actionFor: marsRover

	marsRover rotateRight ! !
!LeftCommand methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:26:31' prior: 50333218!
actionFor: marsRover

	marsRover rotateLeft! !
!RightCommand methodsFor: 'no messages' stamp: 'LEC 6/6/2021 16:26:43'!
actionFor: marsRover

	marsRover rotateLeft! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:27:13'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 16:27:13'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 16:27:13'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 16:27:13'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 16:27:13'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:27:17'!
FAILURE!

position!
!RightCommand methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 16:28:51' prior: 50333227!
actionFor: marsRover

	marsRover rotateRight! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 16:28:57'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 16:28:57'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 16:28:58'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 16:30:09'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 16:30:09'!
ERROR!

----SNAPSHOT----(6 June 2021 16:35:20) CuisUniversity-4532.image priorSource: 37031!

----QUIT----(6 June 2021 17:19:01) CuisUniversity-4532.image priorSource: 53167!

----STARTUP---- (6 June 2021 18:03:00) as C:\Users\castr\Desktop\windows64\CuisUniversity-4532.image!

!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:05:04' prior: 50333042!
moveNorth
	
	self changePositionTo: position + (0@1).
	! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:05:31'!
changePositionTo: aPosition

	position := aPosition ! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:05:58' prior: 50333027!
moveEast
	
	self changePositionTo: position + (1@0).
	! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:06:19' prior: 50333032!
moveSouth
	
	self changePositionTo: position + (0@-1).
	! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:06:31' prior: 50333037!
moveWest
	
	self changePositionTo: position + (-1@0).
	! !

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 18:06:40'!
PASSED!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:09:16'!
test05

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.

	marsRover process: 'f'.
	
	self assert: 'North' equals: log currentLogs first.
	self assert: 'East' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 18:09:52' prior: 50332533!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLogPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 18:10:02' prior: 50332576!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLogPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: 1@3 equals: log currentLogs second.
	self assert: 1@2 equals: log currentLogs third.
	self assert: log currentLogs size equals: 3.
	! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:10:15' prior: 50332730!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLogDirection: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentLogs first.
	self assert: 'South' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:10:23' prior: 50332780!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addLogDirection: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentLogs first.
	self assert: 'East' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:10:30'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:10:30'!
ERROR!

Object subclass: #MarsRover
	instanceVariableNames: 'position head logsPositions logsDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 18:12:32'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logsPositions logsDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!methodRemoval: MarsRover #addLog: stamp: 'LEC 6/6/2021 18:12:42'!
addLog: aLog 
	
	logs := aLog.!
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 18:13:31'!
addLogPosition: aLog

	logsPositions add: aLog.

! !
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 18:13:53'!
addLogDirection: aLog

	logsDirections add: aLog.

! !
!MarsRover methodsFor: 'initialization' stamp: 'LEC 6/6/2021 18:14:51' prior: 50331812!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading .
	logsPositions := nil.
	logsDirections := nil.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:15:13'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:15:13'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 18:16:21' prior: 50333462!
addLogPosition: aLog

	logsPositions := aLog

! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:16:23'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:17:21' prior: 50333325!
changePositionTo: aPosition

	position := aPosition .
	logsPositions isNil ifFalse:[logsPositions add: aPosition ].! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:17:37'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:17:37'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:17:41'!
ERROR!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:17:41'!
ERROR!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:17:41'!
ERROR!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:17:41'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:17:44'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 18:18:08' prior: 50333467!
addLogDirection: aLog

	logsDirections := aLog.

! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:18:09'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:21:53' prior: 50333022!
headEast
	
	head := MarsRoverHeadingEast new.
	head := MarsRoverHeading.! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:22:45' prior: 50333520!
headEast
	
	head := self Stateheading:#East.! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:23:34'!
Stateheading: cardinalPoint

	
	^MarsRoverHeading heading: cardinalPoint! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:24:34' prior: 50333529!
Stateheading: cardinalPoint

	logsDirections isNil ifFalse:[logsDirections add: cardinalPoint asString].
	^MarsRoverHeading heading: cardinalPoint! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:24:51'!
stateHeading: cardinalPoint

	logsDirections isNil ifFalse:[logsDirections add: cardinalPoint asString].
	^MarsRoverHeading heading: cardinalPoint! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:24:51' prior: 50333525!
headEast
	
	head := self stateHeading:#East.! !

!methodRemoval: MarsRover #Stateheading: stamp: 'LEC 6/6/2021 18:24:51'!
Stateheading: cardinalPoint

	logsDirections isNil ifFalse:[logsDirections add: cardinalPoint asString].
	^MarsRoverHeading heading: cardinalPoint!
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:25:14' prior: 50333007!
headNorth
	
	head := self stateHeading:#North.
	! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:25:37' prior: 50333012!
headSouth
	
	head := self stateHeading:#South.! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:25:47' prior: 50333017!
headWest
	
	head := self stateHeading:#West.! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:25:54'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:25:54'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:25:55'!
ERROR!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:25:55'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:25:55'!
ERROR!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:26:13' prior: 50333379!
test05
	"
	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.

	marsRover process: 'f'.
	
	self assert: 'North' equals: log currentLogs first.
	self assert: 'East' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	"
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:26:17'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:26:17'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:26:17'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:26:17'!
PASSED!

!methodRemoval: MRLogTest #test05 stamp: 'LEC 6/6/2021 18:29:04'!
test05
	"
	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.

	marsRover process: 'f'.
	
	self assert: 'North' equals: log currentLogs first.
	self assert: 'East' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	"
	!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:32:28'!
test05
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:32:30'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:32:42'!
addWindow: aMRLogTest 
	self shouldBeImplemented.! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:33:03' prior: 50333616!
test05
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindowPosition: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:33:06'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:33:12'!
addWindowPosition: aMRLogTest 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 18:34:07'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logsPositions logsDirections windowPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:34:03' prior: 50333645!
addWindowPosition: aWindow 
	
	windowPosition add: aWindow ! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:34:10'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:34:27' prior: 50333659!
addWindowPosition: aWindow 
	
	windowPosition := aWindow ! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:34:29'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:34:41'!
positionTextFieldModel
	self shouldBeImplemented.! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:35:08'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:37:11' prior: 50333491!
changePositionTo: aPosition

	position := aPosition .
	logsPositions isNil ifFalse:[logsPositions add: aPosition ].
	windowPosition isNil ifFalse:[windowPosition := aPosition ].! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:40:26' prior: 50333681!
changePositionTo: aPosition

	position := aPosition .
	logsPositions isNil ifFalse:[logsPositions add: aPosition ].
	windowPosition isNil ifFalse:[windowPosition := aPosition ].
	
	! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:40:35'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:41:46' prior: 50333690!
changePositionTo: aPosition

	position := aPosition .
	logsPositions isNil ifFalse:[logsPositions add: aPosition ].
	windowPosition isNil ifFalse:[windowPosition add: aPosition ].
	
	! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:41:56'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 18:43:29' prior: 50333701!
changePositionTo: aPosition

	position := aPosition .
	logsPositions isNil ifFalse:[logsPositions add: aPosition ].
	windowPosition isNil ifFalse:[windowPosition positionChangedTo: aPosition ].
	
	! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:43:32'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:43:40'!
positionChangedTo: aPoint 
	self shouldBeImplemented.! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:44:05'!
ERROR!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:44:27'!
ERROR!

!classDefinition: #MRLogTest category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 18:44:57'!
TestCase subclass: #MRLogTest
	instanceVariableNames: 'currentPositionMR'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:44:55' prior: 50333723!
positionChangedTo: aPoint 
	
	
	currentPositionMR := aPoint ! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:45:02'!
ERROR!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:45:02'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:45:23' prior: 50333674!
positionTextFieldModel
	
	^currentPositionMR ! !

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:45:25'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:45:30'!
PASSED!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:46:16'!
positionChangedTo: aLog

	positionLogs add: aLog! !
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:46:16' prior: 50332925!
add: aLog

	positionLogs positionChangedTo: aLog! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:46:16' prior: 50333541!
stateHeading: cardinalPoint

	logsDirections isNil ifFalse:[logsDirections positionChangedTo: cardinalPoint asString].
	^MarsRoverHeading heading: cardinalPoint! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:46:16' prior: 50333712!
changePositionTo: aPosition

	position := aPosition .
	logsPositions isNil ifFalse:[logsPositions positionChangedTo: aPosition ].
	windowPosition isNil ifFalse:[windowPosition positionChangedTo: aPosition ].
	
	! !
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:46:16' prior: 50333759!
positionChangedTo: aLog

	positionLogs positionChangedTo: aLog! !

!methodRemoval: Log #add: stamp: 'LEC 6/6/2021 18:46:16'!
add: aLog

	positionLogs positionChangedTo: aLog!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:46:19'!
ERROR!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:46:19'!
ERROR!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:46:19'!
ERROR!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:46:19'!
ERROR!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:46:19'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:46:19'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:46:31'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:46:47' prior: 50333788!
positionChangedTo: aLog

	positionLogs add: aLog! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:46:48'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:46:51'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:46:53'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:46:54'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:47:00'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:47:00'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:47:00'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:47:00'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:47:00'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:47:00'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 18:47:12'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:47:18'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:47:18'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:47:18'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:47:18'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:47:18'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:47:18'!
PASSED!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:47:39'!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindowPosition: window.
	
	marsRover process: 'f'.
	
	self assert: 1@3 equals: window positionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:47:41'!
FAILURE!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:47:52' prior: 50333886!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindowPosition: window.
	
	marsRover process: 'ff'.
	
	self assert: 1@3 equals: window positionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:47:53'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:47:53'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:47:53'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:47:53'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:47:53'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:47:54'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:47:54'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:47:54'!
PASSED!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:48:30' prior: 50333899!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindowPosition: window.
	
	marsRover process: 'r'.
	
	self assert: 'East' equals: window directionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:48:34'!
ERROR!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 18:48:43' prior: 50333927!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindowDirection: window.
	
	marsRover process: 'r'.
	
	self assert: 'East' equals: window directionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:48:46'!
ERROR!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:49:06'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:49:11'!
addWindowDirection: aMRLogTest 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 18:49:38'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logsPositions logsDirections windowPosition windowDirection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:49:36' prior: 50333955!
addWindowDirection: aWindow
	
	windowDirection := aWindow ! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:49:40'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:49:49'!
directionTextFieldModel
	self shouldBeImplemented.! !

!classDefinition: #MRLogTest category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 18:50:00'!
TestCase subclass: #MRLogTest
	instanceVariableNames: 'currentPositionMR directionMR'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:49:57' prior: 50333977!
directionTextFieldModel
	
	^directionMR! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:50:02'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 18:51:08' prior: 50333769!
stateHeading: cardinalPoint

	logsDirections isNil ifFalse:[logsDirections positionChangedTo: cardinalPoint asString].
	windowDirection isNil ifFalse:[windowDirection directionChangedTo: cardinalPoint asString].
	^MarsRoverHeading heading: cardinalPoint! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:51:21'!
ERROR!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:51:21'!
ERROR!
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:51:50'!
directionChangedTo: aString 
	self shouldBeImplemented.! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 18:52:05' prior: 50334012!
directionChangedTo: aDirection 
	
	directionMR := aDirection! !

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:52:06'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:52:08'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 18:52:12'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 18:52:12'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 18:52:12'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 18:52:12'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 18:52:12'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 18:52:14'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 18:52:14'!
PASSED!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:00:16' prior: 50333390!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:00:22' prior: 50334042!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addLogPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 19:00:52'!
addObserverPosition: aLog

	logsPositions := aLog

! !

!methodRemoval: MarsRover #addLogPosition: stamp: 'LEC 6/6/2021 19:00:52'!
addLogPosition: aLog

	logsPositions := aLog

!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:01:07' prior: 50334053!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: log currentLogs size equals: 1.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:01:09'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:01:09'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:01:09'!
ERROR!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:01:09'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:01:09'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:01:09'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:01:10'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:01:10'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:01:10'!
ERROR!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:01:17'!
PASSED!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:01:25' prior: 50333401!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover  addObserverPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentLogs first.
	self assert: 1@3 equals: log currentLogs second.
	self assert: 1@2 equals: log currentLogs third.
	self assert: log currentLogs size equals: 3.
	! !

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:01:27'!
PASSED!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:01:58' prior: 50333633!
test05
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addObserverPosition: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	
	! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head observerPositions observerDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 19:02:24'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head observerPositions observerDirections'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'LEC 6/6/2021 19:02:34' prior: 50333472!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading .! !
!MarsRover methodsFor: 'moving' stamp: 'LEC 6/6/2021 19:03:45' prior: 50333778!
changePositionTo: aPosition

	position := aPosition .
	observerPositions do:[:anObserver| anObserver positionChangedTo: aPosition].
	
	
	! !
!MarsRover methodsFor: 'heading' stamp: 'LEC 6/6/2021 19:04:19' prior: 50333997!
stateHeading: cardinalPoint

	observerDirections do:[:anObserver| anObserver directionChangedTo: cardinalPoint asString].
	^MarsRoverHeading heading: cardinalPoint! !

!methodRemoval: MarsRover #addLogDirection: stamp: 'LEC 6/6/2021 19:04:29'!
addLogDirection: aLog

	logsDirections := aLog.

!

!methodRemoval: MarsRover #addWindow: stamp: 'LEC 6/6/2021 19:04:35'!
addWindow: aMRLogTest 
	self shouldBeImplemented.!

!methodRemoval: MarsRover #addWindowDirection: stamp: 'LEC 6/6/2021 19:04:46'!
addWindowDirection: aWindow
	
	windowDirection := aWindow !

!methodRemoval: MarsRover #addWindowPosition: stamp: 'LEC 6/6/2021 19:04:51'!
addWindowPosition: aWindow 
	
	windowPosition := aWindow !
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 19:05:18' prior: 50334064!
addObserverPosition: anObserver

	observerPositions add: anObserver 

	

! !
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 19:05:35'!
addObserverDirections: anObserver

	observerDirections add: anObserver 

	

! !
!MarsRover methodsFor: 'initialization' stamp: 'LEC 6/6/2021 19:06:05' prior: 50334163!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading .
	observerPositions := OrderedCollection new.
	observerDirections := OrderedCollection new.! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:06:11'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:06:15'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:06:15'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:06:15'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:06:18'!
ERROR!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:06:18'!
ERROR!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:06:18'!
ERROR!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:06:18'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:06:20'!
ERROR!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:06:38' prior: 50333415!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentLogs first.
	self assert: 'South' equals: log currentLogs second.
	self assert: log currentLogs size equals: 2.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:06:40'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:07:05'!
directionChangedTo: aLog

	directionLogs add: aLog! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:07:12'!
ERROR!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:07:12'!
ERROR!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:07:12'!
ERROR!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:07:12'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:07:15'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:08:44'!
currentPositionLogs
	
	^positionLogs ! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:08:44' prior: 50334106!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover  addObserverPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: 1@3 equals: log currentPositionLogs second.
	self assert: 1@2 equals: log currentPositionLogs third.
	self assert: log currentPositionLogs size equals: 3.
	! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:08:44' prior: 50334240!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentPositionLogs first.
	self assert: 'South' equals: log currentPositionLogs second.
	self assert: log currentPositionLogs size equals: 2.
	! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:08:44' prior: 50334073!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: log currentPositionLogs size equals: 1.! !
!MRLogTest methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:08:44' prior: 50333428!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addLogDirection: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentPositionLogs first.
	self assert: 'East' equals: log currentPositionLogs second.
	self assert: log currentPositionLogs size equals: 2.
	! !

!methodRemoval: Log #currentLogs stamp: 'LEC 6/6/2021 19:08:44'!
currentLogs
	
	^positionLogs !
!Log methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:09:10'!
currentDirectionLogs
	
	^directionLogs ! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:09:45' prior: 50334291!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentDirectionLogs first.
	self assert: 'South' equals: log currentDirectionLogs second.
	self assert: log currentPositionLogs size equals: 2.
	! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:09:58' prior: 50334317!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addLogDirection: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentDirectionLogs first.
	self assert: 'East' equals: log currentDirectionLogs second.
	self assert: log currentPositionLogs size equals: 2.
	! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:10:08' prior: 50334352!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentDirectionLogs first.
	self assert: 'East' equals: log currentDirectionLogs second.
	self assert: log currentPositionLogs size equals: 2.
	! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:10:21' prior: 50333940!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addObserverDirections: window.
	
	marsRover process: 'r'.
	
	self assert: 'East' equals: window directionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:10:32'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:10:32'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:10:32'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:10:35'!
FAILURE!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:10:35'!
FAILURE!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:10:35'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:10:35'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:10:37'!
FAILURE!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:11:01' prior: 50334366!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentDirectionLogs first.
	self assert: 'East' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:11:43'!
FAILURE!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:11:43'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:11:43'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:11:43'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:11:43'!
FAILURE!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:11:54' prior: 50334338!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentDirectionLogs first.
	self assert: 'South' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:11:56'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:12:00'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:12:00'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:12:00'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:12:00'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:12:03'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:12:03'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:12:04'!
PASSED!

----SNAPSHOT----(6 June 2021 19:15:16) CuisUniversity-4532.image priorSource: 53253!
!MarsRover methodsFor: 'command processing' stamp: 'LEC 6/6/2021 19:17:21' prior: 50333089!
processCommand: aCommand

	self applyCommand: (Command for: aCommand)
	! !
!Command methodsFor: 'no messages' stamp: 'LEC 6/6/2021 19:18:13'!
actionFor: aMarsRover

	self subclassResponsibility ! !

Object subclass: #MarsRoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 19:25:03'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 19:25:22'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'directionMR'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'no messages' stamp: 'LEC 6/6/2021 19:25:20'!
directionChangedTo: aDirection 
	
	directionMR := aDirection! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:25:42'!
directionTextFieldModel
	
	^directionMR! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'LEC 6/6/2021 19:26:04'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'directionMR currentPositionMR'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:26:00'!
positionChangedTo: aPoint 
	
	
	currentPositionMR := aPoint ! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'LEC 6/6/2021 19:26:24'!
positionTextFieldModel
	
	^currentPositionMR ! !
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:26:55' prior: 50334138!
test05
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addObserverPosition: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	
	! !
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:27:12' prior: 50334380!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addObserverDirections: window.
	
	marsRover process: 'r'.
	
	self assert: 'East' equals: window directionTextFieldModel.
	
	! !

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:27:17'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:27:17'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:27:17'!
PASSED!

!testRun: #MRLogTest #test99 stamp: 'LEC 6/6/2021 19:27:17'!
PASSED!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:27:20'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:27:20'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:27:20'!
PASSED!

----SNAPSHOT----(6 June 2021 19:29:07) CuisUniversity-4532.image priorSource: 90025!

!methodRemoval: MRLogTest #directionChangedTo: stamp: 'LEC 6/6/2021 19:29:13'!
directionChangedTo: aDirection 
	
	directionMR := aDirection!

!methodRemoval: MRLogTest #directionTextFieldModel stamp: 'LEC 6/6/2021 19:29:13'!
directionTextFieldModel
	
	^directionMR!

!methodRemoval: MRLogTest #positionChangedTo: stamp: 'LEC 6/6/2021 19:29:13'!
positionChangedTo: aPoint 
	
	
	currentPositionMR := aPoint !

!methodRemoval: MRLogTest #positionTextFieldModel stamp: 'LEC 6/6/2021 19:29:13'!
positionTextFieldModel
	
	^currentPositionMR !

!methodRemoval: MRLogTest #test99 stamp: 'LEC 6/6/2021 19:29:21'!
test99
	"
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	"
	!

!testRun: #MRLogTest #test01 stamp: 'LEC 6/6/2021 19:29:24'!
PASSED!

!testRun: #MRLogTest #test02 stamp: 'LEC 6/6/2021 19:29:24'!
PASSED!

!testRun: #MRLogTest #test03 stamp: 'LEC 6/6/2021 19:29:24'!
PASSED!

!testRun: #MRLogTest #test04 stamp: 'LEC 6/6/2021 19:29:24'!
PASSED!

!testRun: #MRLogTest #test05 stamp: 'LEC 6/6/2021 19:29:24'!
PASSED!

!testRun: #MRLogTest #test06 stamp: 'LEC 6/6/2021 19:29:24'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 19:29:29'!
PASSED!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:31:09'!
test01logOneChange

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: log currentPositionLogs size equals: 1.! !

!methodRemoval: MRLogTest #test01 stamp: 'LEC 6/6/2021 19:31:09'!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: log currentPositionLogs size equals: 1.!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:31:40'!
test02logWithManyChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover  addObserverPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: 1@3 equals: log currentPositionLogs second.
	self assert: 1@2 equals: log currentPositionLogs third.
	self assert: log currentPositionLogs size equals: 3.
	! !

!methodRemoval: MRLogTest #test02 stamp: 'LEC 6/6/2021 19:31:40'!
test02

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover  addObserverPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: 1@3 equals: log currentPositionLogs second.
	self assert: 1@2 equals: log currentPositionLogs third.
	self assert: log currentPositionLogs size equals: 3.
	!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:32:22'!
test05windowUpdatePosition
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addObserverPosition: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	
	! !

!methodRemoval: MRLogTest #test05 stamp: 'LEC 6/6/2021 19:32:22'!
test05
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addObserverPosition: window.
	
	marsRover process: 'f'.
	
	self assert: 1@2 equals: window positionTextFieldModel.
	
	!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:33:01'!
test01logOnePositionChange

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: log currentPositionLogs size equals: 1.! !

!methodRemoval: MRLogTest #test01logOneChange stamp: 'LEC 6/6/2021 19:33:01'!
test01logOneChange

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverPosition: log.
	marsRover process: 'f'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: log currentPositionLogs size equals: 1.!
!MRLogTest methodsFor: 'test position' stamp: 'LEC 6/6/2021 19:33:33'!
test02logWithManyPositionsChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover  addObserverPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: 1@3 equals: log currentPositionLogs second.
	self assert: 1@2 equals: log currentPositionLogs third.
	self assert: log currentPositionLogs size equals: 3.
	! !

!methodRemoval: MRLogTest #test02logWithManyChanges stamp: 'LEC 6/6/2021 19:33:33'!
test02logWithManyChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover  addObserverPosition: log.
	marsRover process: 'ffb'.
	
	
	self assert: 1@2 equals: log currentPositionLogs first.
	self assert: 1@3 equals: log currentPositionLogs second.
	self assert: 1@2 equals: log currentPositionLogs third.
	self assert: log currentPositionLogs size equals: 3.
	!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:34:15'!
test03logManyRotationChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentDirectionLogs first.
	self assert: 'South' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	! !

!methodRemoval: MRLogTest #test03 stamp: 'LEC 6/6/2021 19:34:15'!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentDirectionLogs first.
	self assert: 'South' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:34:37'!
test03logManyRotationLeftChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentDirectionLogs first.
	self assert: 'South' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	! !

!methodRemoval: MRLogTest #test03logManyRotationChanges stamp: 'LEC 6/6/2021 19:34:37'!
test03logManyRotationChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'll'.
	
	self assert: 'West' equals: log currentDirectionLogs first.
	self assert: 'South' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:35:00'!
test04LogManyRotationRightChanges

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentDirectionLogs first.
	self assert: 'East' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	! !

!methodRemoval: MRLogTest #test04 stamp: 'LEC 6/6/2021 19:35:00'!
test04

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #West.
	log := Log new.
	marsRover addObserverDirections: log.
	marsRover process: 'rr'.
	
	self assert: 'North' equals: log currentDirectionLogs first.
	self assert: 'East' equals: log currentDirectionLogs second.
	self assert: log currentDirectionLogs size equals: 2.
	!
!MRLogTest methodsFor: 'tests direction' stamp: 'LEC 6/6/2021 19:35:56'!
test06windowRotateUpdate
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addObserverDirections: window.
	
	marsRover process: 'r'.
	
	self assert: 'East' equals: window directionTextFieldModel.
	
	! !

!methodRemoval: MRLogTest #test06 stamp: 'LEC 6/6/2021 19:35:56'!
test06
	
	| marsRover window|
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addObserverDirections: window.
	
	marsRover process: 'r'.
	
	self assert: 'East' equals: window directionTextFieldModel.
	
	!

!classRenamed: #MRLogTest as: #ObserversTest stamp: 'LEC 6/6/2021 19:36:30'!
Smalltalk renameClassNamed: #MRLogTest as: #ObserversTest!

!testRun: #ObserversTest #test01logOnePositionChange stamp: 'LEC 6/6/2021 19:36:49'!
PASSED!

!testRun: #ObserversTest #test02logWithManyPositionsChanges stamp: 'LEC 6/6/2021 19:36:49'!
PASSED!

!testRun: #ObserversTest #test03logManyRotationLeftChanges stamp: 'LEC 6/6/2021 19:36:49'!
PASSED!

!testRun: #ObserversTest #test04LogManyRotationRightChanges stamp: 'LEC 6/6/2021 19:36:49'!
PASSED!

!testRun: #ObserversTest #test05windowUpdatePosition stamp: 'LEC 6/6/2021 19:36:49'!
PASSED!

!testRun: #ObserversTest #test06windowRotateUpdate stamp: 'LEC 6/6/2021 19:36:49'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'LEC 6/6/2021 19:36:55'!
PASSED!

----SNAPSHOT----(6 June 2021 19:38:26) CuisUniversity-4532.image priorSource: 93157!

----QUIT----(6 June 2021 19:39:49) CuisUniversity-4532.image priorSource: 104815!