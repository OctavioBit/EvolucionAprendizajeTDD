----STARTUP---- (9 June 2021 15:10:26) as C:\Users\sergi\OneDrive\Escritorio\JULIA\Materias\Inge1\windows64\CuisUniversity-4532.image!


TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'JR 6/9/2021 15:25:11'!
TestCase subclass: #CartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'no messages' stamp: 'JR 6/9/2021 15:28:33'!
test01NewCartShouldBeEmpty! !

!classDefinition: #TusLibrosCart category: 'TusLibros' stamp: 'JR 6/9/2021 15:46:08'!
Object subclass: #TusLibrosCart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 15:45:59' prior: 50888020!
test01NewCartShouldBeEmpty

	|emptyCart|
	
	emptyCart := TusLibrosCart new.
	
	emptyCart createCartFor: 'Hernan' withPassword: 'Wilkinson'.
	
	self assert: emptyCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 15:48:22' prior: 50888031!
test01NewCartShouldBeEmpty

	|emptyCart aClient aPassword|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	emptyCart := TusLibrosCart forClient: aClient withPassword: aPassword .
	
	self assert: emptyCart isEmpty! !
!TusLibrosCart class methodsFor: 'nil' stamp: 'JR 6/9/2021 15:49:03'!
forClient: aClient withPassword: aPassword

	^self new ! !
!TusLibrosCart methodsFor: 'no messages' stamp: 'JR 6/9/2021 15:49:28'!
isEmpty

	^true! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 15:49:30'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 15:51:43' prior: 50888040!
test01NewCartShouldBeEmpty

	|emptyCart aClient aPassword|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	emptyCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	self assert: emptyCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:12:41'!
test02ACartKnowsBooksAddedToIt

	|aCart aClient aPassword aBook|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	aBook := 'Design Patterns'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	aCart add: aBook.
	
	self assert: aBook equals: aCart books. ! !

!classDefinition: #TusLibrosCart category: 'TusLibros' stamp: 'JR 6/9/2021 16:14:08'!
Object subclass: #TusLibrosCart
	instanceVariableNames: 'book'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:14:06'!
add: aBook
	
	book := aBook! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:14:17'!
books
	
	^book ! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:14:19'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:14:19'!
PASSED!

{1, 2} class!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:18:29'!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns'.
	booksToAdd add: 'La sombra del viento'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book].
	
	self assert: booksToAdd equals: aCart books. ! !

!classDefinition: #TusLibrosCart category: 'TusLibros' stamp: 'JR 6/9/2021 16:18:40'!
Object subclass: #TusLibrosCart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:18:40' prior: 50888095!
books
	
	^books ! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:18:40' prior: 50888091!
add: aBook
	
	books := aBook! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:19:03' prior: 50888072!
test02ACartKnowsBooksAddedToIt

	|aCart aClient aPassword aBook|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	aBook := 'Design Patterns'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	aCart add: aBook.
	
	self assert: aBook equals: aCart books. 
	self deny: aCart isEmpty.! !

!methodRemoval: CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:19:19'!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns'.
	booksToAdd add: 'La sombra del viento'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book].
	
	self assert: booksToAdd equals: aCart books. !

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:19:24'!
FAILURE!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:19:24'!
FAILURE!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:19:59' prior: 50888055!
isEmpty

	^books isNil! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:20:01'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:20:01'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:20:07'!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns'.
	booksToAdd add: 'La sombra del viento'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book].
	
	self assert: booksToAdd equals: aCart books. ! !

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:20:09'!
FAILURE!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:20:09'!
FAILURE!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:20:25' prior: 50888180!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns'.
	booksToAdd add: 'La sombra del viento'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book].
	
	self assert: booksToAdd equals: aCart books. 
	self deny: aCart isEmpty! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:20:38' prior: 50888132!
add: aBook
	
	books add: aBook! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:20:46' prior: 50888171!
isEmpty

	^books isEmpty ! !
!TusLibrosCart methodsFor: 'initialize' stamp: 'JR 6/9/2021 16:21:32' overrides: 16896425!
initialize
	
	books := OrderedCollection new.! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:21:40'!
FAILURE!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:21:40'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:21:40'!
FAILURE!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:22:19'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:23:12' prior: 50888136!
test02ACartKnowsBooksAddedToIt

	|aCart aClient aPassword aBook|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	aBook := 'Design Patterns'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	aCart add: aBook.
	
	self assert: aCart books size equals: 1. 
	self assert: aCart books includes: aBook.
	self deny: aCart isEmpty.! !

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:23:13'!
PASSED!

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:23:16'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:23:16'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:23:16'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:28:08' prior: 50888248!
test02ACartKnowsBooksAddedToIt

	|aCart aClient aPassword aBook|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	aBook := 'Design Patterns'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	aCart add: aBook quantity: 1.
	
	self assert: aCart books size equals: 1. 
	self assert: aCart books includes: aBook.
	self deny: aCart isEmpty.! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:32:59'!
add: aBook quantity: aQuantity
	
	aQuantity timesRepeat: [books add: aBook] ! !

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:33:04'!
PASSED!

!methodRemoval: TusLibrosCart #add: stamp: 'JR 6/9/2021 16:33:11'!
add: aBook
	
	books add: aBook!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:33:29' prior: 50888202!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns' quantity: 1.
	booksToAdd add: 'La sombra del viento' quantity: 1..
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book].
	
	self assert: booksToAdd equals: aCart books. 
	self deny: aCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:33:31' prior: 50888300!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns' quantity: 1.
	booksToAdd add: 'La sombra del viento' quantity: 1.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book].
	
	self assert: booksToAdd equals: aCart books. 
	self deny: aCart isEmpty! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:33:36'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:33:36'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:33:36'!
ERROR!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:33:36'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:33:55' prior: 50888318!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aClient aPassword booksToAdd|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns'.
	booksToAdd add: 'La sombra del viento'.
	aCart := TusLibrosCart forClient: aClient withPassword: aPassword.
	
	booksToAdd do: [:book | aCart add: book quantity: 1].
	
	self assert: booksToAdd equals: aCart books. 
	self deny: aCart isEmpty! !

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:33:57'!
PASSED!

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:33:58'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:33:58'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:33:58'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:36:50' prior: 50888062!
test01NewCartShouldBeEmpty

	|emptyCart aClient aPassword|
	
	aClient := 'Hernan'.
	aPassword := 'Wilkinson'.
	emptyCart := TusLibrosCart new.
	
	self assert: emptyCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:37:07' prior: 50888376!
test01NewCartShouldBeEmpty

	|emptyCart|
	
	emptyCart := TusLibrosCart new.
	
	self assert: emptyCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:38:18' prior: 50888274!
test02ACartKnowsBooksAddedToIt

	|aCart aBook|
	
	aBook := 'Design Patterns'.
	aCart := TusLibrosCart new.
	
	aCart add: aBook quantity: 1.
	
	self assert: aCart books size equals: 1. 
	self assert: aCart books includes: aBook.
	self deny: aCart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:38:35' prior: 50888347!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart booksToAdd|
	
	booksToAdd := OrderedCollection new.
	booksToAdd add: 'Design Patterns'.
	booksToAdd add: 'La sombra del viento'.
	aCart := TusLibrosCart new.
	
	booksToAdd do: [:book | aCart add: book quantity: 1].
	
	self assert: booksToAdd equals: aCart books. 
	self deny: aCart isEmpty! !

!methodRemoval: TusLibrosCart class #forClient:withPassword: stamp: 'JR 6/9/2021 16:38:39'!
forClient: aClient withPassword: aPassword

	^self new !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:38:43'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:38:43'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:38:43'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:41:53'!
test04AddingABookThatIsNotInCatalogShouldRaiseError

	|aCart aCatalog|
	
	aCatalog := OrderedCollection new.
	aCatalog add: 'Design Patterns'.
	aCatalog add: 'La sombra del viento'.
	aCart := TusLibrosCart with: aCatalog.
	
	aCatalog do: [:book | aCart add: book quantity: 1].
	
	self assert: aCatalog equals: aCart books. 
	self deny: aCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:42:05' prior: 50888403!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aCatalog|
	
	aCatalog := OrderedCollection new.
	aCatalog add: 'Design Patterns'.
	aCatalog add: 'La sombra del viento'.
	aCart := TusLibrosCart new.
	
	aCatalog do: [:book | aCart add: book quantity: 1].
	
	self assert: aCatalog equals: aCart books. 
	self deny: aCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:42:14' prior: 50888444!
test03ACartKnowsMultipleBooksAddedToIt

	|aCart aCatalog|
	
	aCatalog := OrderedCollection new.
	aCatalog add: 'Design Patterns'.
	aCatalog add: 'La sombra del viento'.
	aCart := TusLibrosCart with: aCatalog .
	
	aCatalog do: [:book | aCart add: book quantity: 1].
	
	self assert: aCatalog equals: aCart books. 
	self deny: aCart isEmpty! !

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:42:15'!
ERROR!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:42:15'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:42:50' prior: 50888385!
test01NewCartShouldBeEmpty

	|emptyCart emptyCatalog|
	
	emptyCatalog := OrderedCollection new.
	
	emptyCart := TusLibrosCart new.
	
	self assert: emptyCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:43:00' prior: 50888478!
test01NewCartShouldBeEmpty

	|emptyCart emptyCatalog|
	
	emptyCatalog := OrderedCollection new.
	
	emptyCart := TusLibrosCart with: emptyCatalog.
	
	self assert: emptyCart isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:43:36' prior: 50888392!
test02ACartKnowsBooksAddedToIt

	|aCart aBook aCatalog|
	
	aBook := 'Design Patterns'.
	aCatalog := OrderedCollection new.
	aCatalog add: aBook .
	aCart := TusLibrosCart with: aCatalog.
	
	aCart add: aBook quantity: 1.
	
	self assert: aCart books size equals: 1. 
	self assert: aCart books includes: aBook.
	self deny: aCart isEmpty.! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:44:27' prior: 50888430!
test04AddingABookThatIsNotInCatalogShouldRaiseError

	|aCart aCatalog|
	
	aCatalog := OrderedCollection new..
	aCart := TusLibrosCart with: aCatalog.
	
	aCart add: 'Design Patterns' quantity: 1.
	
	! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:45:30' prior: 50888510!
test04AddingABookThatIsNotInCatalogShouldRaiseError

	|aCart aCatalog|
	
	aCatalog := OrderedCollection new..
	aCart := TusLibrosCart with: aCatalog.
	
	self 
		should: [aCart add: 'Design Patterns' quantity: 1.]
		raise: Error
		withExceptionDo: [:anError |
			self assert: TusLibrosCart invalidBookErrorDescription equals: anError messageText.
			self assert: aCart isEmpty ]! !
!TusLibrosCart class methodsFor: 'no messages' stamp: 'JR 6/9/2021 16:46:09'!
invalidBookErrorDescription

	^'El libro no est� en el cat�logo'! !

!classDefinition: #TusLibrosCart category: 'TusLibros' stamp: 'JR 6/9/2021 16:47:48'!
Object subclass: #TusLibrosCart
	instanceVariableNames: 'books catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:47:47' prior: 50888288!
add: aBook quantity: aQuantity
	
	aQuantity timesRepeat: [
		(catalog includes: aBook) ifTrue: [books add: aBook] ifFalse: 
		[self error: self class invalidBookErrorDescription ] ]! !
!TusLibrosCart class methodsFor: 'instance creation' stamp: 'JR 6/9/2021 16:48:17'!
with: aCatalog

	^self new initializeWith: aCatalog ! !
!TusLibrosCart methodsFor: 'initialization' stamp: 'JR 6/9/2021 16:48:33'!
initializeWith: aCatalog
	
	books := OrderedCollection new.
	catalog := aCatalog ! !

!methodRemoval: TusLibrosCart #initialize stamp: 'JR 6/9/2021 16:48:35'!
initialize
	
	books := OrderedCollection new.!

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:48:40'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:48:40'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:48:40'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 16:48:40'!
PASSED!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:51:19'!
test05ListOfEmptyCartShouldBeEmpty

	|emptyCart emptyCatalog|
	
	emptyCatalog := OrderedCollection new.
	
	emptyCart := TusLibrosCart with: emptyCatalog.
	
	self assert: emptyCart listCart isEmpty ! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 16:53:17'!
listCart
	
	^''! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 16:53:20'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 16:53:20'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 16:53:20'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 16:53:20'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 16:53:20'!
PASSED!

#('Design Patterns' 3)!

#('Design Patterns' 3)class !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:04:33'!
test06ListOfCartShouldIncludeItsBooksWithQuantities

	|aCart aCatalog expectedList|
	
	aCatalog := OrderedCollection new.
	expectedList := OrderedCollection new.
	aCatalog add: 'Design Patterns'.
	aCatalog add: 'La sombra del viento'.
	aCart := TusLibrosCart with: aCatalog .
	
	aCatalog do: [:book | aCart add: book quantity: 3].
	
	expectedList add: #('Design Patterns' 3).
	expectedList add: #('La sombra del viento' 3).
	
	self assert: expectedList equals: aCart listCart ! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:06:59' prior: 50888593!
listCart
	
	^OrderedCollection new! !

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:07:02'!
PASSED!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:09:08' prior: 50888631!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: []]! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:15:44' prior: 50888639!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: [list at: ((list indexOf: book) +1) put: (list at: ((list indexOf: book) +1) +1)]
			ifFalse: [list add: book.
				list add: 1] ]! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:15:47'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:15:47'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:15:47'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:15:47'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:15:47'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:15:47'!
ERROR!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:15:47'!
ERROR!

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:16:45'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:16:45'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:16:45'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:16:45'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:16:45'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:16:45'!
ERROR!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:16:45'!
ERROR!
!CartTest methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:18:03' prior: 50888613!
test06ListOfCartShouldIncludeItsBooksWithQuantities

	|aCart aCatalog expectedList|
	
	aCatalog := OrderedCollection new.
	expectedList := OrderedCollection new.
	aCatalog add: 'Design Patterns'.
	aCatalog add: 'La sombra del viento'.
	aCart := TusLibrosCart with: aCatalog .
	
	aCatalog do: [:book | aCart add: book quantity: 3].
	
	expectedList add: 'Design Patterns'.
	expectedList add: 3.
	expectedList add: 'La sombra del viento'.
	expectedList add: 3.
	
	self assert: expectedList equals: aCart listCart ! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:19:09' prior: 50888646!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: [self modifyNextElementOf: book in: list]
			ifFalse: [list add: book.
				list add: 1] ]! !
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:20:43'!
modifyNextElementOf: book in: list
	
	|indexOfElement|
	
	indexOfElement := list indexOf: book.
	
	list at: (indexOfElement +1) put: (list at: (indexOfElement +1) +1).
	
	^list
	! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:20:45'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:20:45'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:20:45'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:20:45'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:20:45'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:20:45'!
ERROR!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:20:45'!
ERROR!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:21:36' prior: 50888721!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: [^self modifyNextElementOf: book in: list]
			ifFalse: [list add: book.
				list add: 1.
				^list] ]! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:21:37'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:21:37'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:21:37'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:21:37'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:21:37'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:21:38'!
FAILURE!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:21:38'!
FAILURE!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:21:59' prior: 50888761!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: [self modifyNextElementOf: book in: list]
			ifFalse: [list add: book.
				list add: 1.
				^list] ]! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:22:00'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:22:00'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:22:00'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:22:01'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:22:01'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:22:01'!
FAILURE!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:22:01'!
FAILURE!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:22:40' prior: 50888793!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: [self modifyNextElementOf: book in: list]
			ifFalse: [list add: book.
				list add: 1.] ]! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:22:42'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:22:42'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:22:42'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:22:42'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:22:42'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:22:42'!
ERROR!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:22:42'!
ERROR!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:22:54' prior: 50888825!
listCart

	|list|
	
	list := OrderedCollection new.
	
	books do: [:book | (list includes: book) ifTrue: [self modifyNextElementOf: book in: list]
			ifFalse: [list add: book.
				list add: 1.] ].
		
	^list! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:22:57'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:22:57'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:22:57'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:22:57'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:22:57'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:22:57'!
ERROR!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:22:57'!
ERROR!
!TusLibrosCart methodsFor: 'as yet unclassified' stamp: 'JR 6/9/2021 17:26:19' prior: 50888730!
modifyNextElementOf: book in: list
	
	|indexOfElement|
	
	indexOfElement := list indexOf: book.
	
	list at: (indexOfElement +1) put: ((list at: (indexOfElement +1)) +1).
	
	^list
	! !

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:26:21'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:26:21'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:26:21'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:26:21'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:26:21'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:26:21'!
PASSED!

!testRun: #CartTest #test01NewCartShouldBeEmpty stamp: 'JR 6/9/2021 17:26:41'!
PASSED!

!testRun: #CartTest #test02ACartKnowsBooksAddedToIt stamp: 'JR 6/9/2021 17:26:41'!
PASSED!

!testRun: #CartTest #test03ACartKnowsMultipleBooksAddedToIt stamp: 'JR 6/9/2021 17:26:42'!
PASSED!

!testRun: #CartTest #test04AddingABookThatIsNotInCatalogShouldRaiseError stamp: 'JR 6/9/2021 17:26:42'!
PASSED!

!testRun: #CartTest #test05ListOfEmptyCartShouldBeEmpty stamp: 'JR 6/9/2021 17:26:42'!
PASSED!

!testRun: #CartTest #test06ListOfCartShouldIncludeItsBooksWithQuantities stamp: 'JR 6/9/2021 17:26:42'!
PASSED!

----QUIT----(9 June 2021 17:26:50) CuisUniversity-4532.image priorSource: 17803252!