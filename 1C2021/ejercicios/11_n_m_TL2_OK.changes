----STARTUP---- (10 June 2021 18:24:23) as C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\sabri\Downloads\2021-1c-main (7)\2021-1c-main\20-TusLibros\Iteracion 1\TusLibros-18.st----!

Object subclass: #Cashier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'sgs 6/10/2021 20:04:46'!
Object subclass: #Cashier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #CashierTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/10/2021 20:05:11'!
TestCase subclass: #CashierTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'nil' stamp: 'sgs 6/10/2021 20:05:44'!
test01CheakOutWithEmptyCart
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:06:25' prior: 50897970!
test01CheakOutWithEmptyCart
	
	^Cart acceptingItemsOf: self defaultCatalog.
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:06:51' prior: 50897975!
test01CheakOutWithEmptyCart
	
	^Cart acceptingItemsOf:  (Array with: self itemSellByTheStore).
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:07:09' prior: 50897981!
test01CheakOutWithEmptyCart
	
	^Cart acceptingItemsOf:  (Array with:'validBook').
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:07:32' prior: 50897988!
test01CheakOutWithEmptyCart
	|aCart|
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/10/2021 20:08:16'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:08:59' prior: 50897994!
test01CheakOutWithEmptyCart
	|aCart|
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	 ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:11:37' prior: 50898004!
test01CheakOutWithEmptyCart
	|aCart|
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	 self 
		should: [Cashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotCheakOutWithEmptyCart.]! !
!Cashier class methodsFor: 'no messages' stamp: 'sgs 6/10/2021 20:14:49'!
cheakOut: aCart
	
	! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:15:02' prior: 50898023!
cheakOut: aCart
	
	"self" ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:17:01' prior: 50898011!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _Cashier initialize.
	 self 
		should: [Cashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:17:09' prior: 50898031!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	 self 
		should: [Cashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:17:20' prior: 50898045!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	 self 
		should: [aCashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier canNotCheakOutWithEmptyCart.].! !
!Cashier methodsFor: 'nil' stamp: 'sgs 6/10/2021 20:18:11'!
canNotCheakOutWithEmptyCart
	
	^'Invalidad Cart'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:20:46' prior: 50898059!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	 self 
		should: [aCashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:21:57' prior: 50898077!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	 self 
		should: [aCashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!Cashier methodsFor: 'nil' stamp: 'sgs 6/10/2021 20:22:11'!
cheakOut: aCart
	^false! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/10/2021 20:22:20'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/10/2021 20:22:20'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/10/2021 20:22:20'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/10/2021 20:22:20'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/10/2021 20:22:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/10/2021 20:22:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/10/2021 20:22:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/10/2021 20:22:21'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:22:21'!
FAILURE!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:22:21'!
FAILURE!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:27:31'!
test02CheakOutWithEmptyCart
	|aCart aCashier creditCardExpiration creditCardNumber creditCardOwner |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	creditCardNumber _ '010101010101'.
	creditCardExpiration _ '01010101'.
	creditCardOwner _ 'Pepe'.
	
	 self 
		should: [ | aaa ss |aCashier when:aCart send: creditCardNumber to: creditCardExpiration with:creditCardOwner.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:27:48' prior: 50898139!
test02CheakOutWithEmptyCart
	|aCart aCashier creditCardExpiration creditCardNumber creditCardOwner |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	creditCardNumber _ '010101010101'.
	creditCardExpiration _ '01010101'.
	creditCardOwner _ 'Pepe'.
	
	 self 
		should: [ aCashier when:aCart send: creditCardNumber to: creditCardExpiration with:creditCardOwner.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:29:01' prior: 50898160!
test02CheakOutWithEmptyCart
	|aCart aCashier creditCardExpiration creditCardNumber creditCardOwner |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	creditCardNumber _ '010101010101'.
	creditCardExpiration _ '01010101'.
	creditCardOwner _ 'Pepe'.
	
	 self 
		should: [ aCashier checkOut:aCart with: creditCardNumber and: creditCardExpiration to: creditCardOwner.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:29:23' prior: 50898181!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration creditCardNumber creditCardOwner |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	creditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	creditCardOwner _ 'Pepe'.
	
	 self 
		should: [ aCashier checkOut:aCart with: creditCardNumber and: aCreditCardExpiration to: creditCardOwner.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:29:36' prior: 50898202!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber creditCardOwner |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	creditCardOwner _ 'Pepe'.
	
	 self 
		should: [ aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: creditCardOwner.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:29:54' prior: 50898223!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	 self 
		should: [ aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:30:37'!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner
	^false! !

!methodRemoval: Cashier #cheakOut: stamp: 'sgs 6/10/2021 20:30:54'!
cheakOut: aCart
	^false!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:33:45'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:33:45'!
ERROR!
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:34:04'!
checkOut: aCart

	^false! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/10/2021 20:34:09'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:34:09'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:34:09'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:38:50' prior: 50898244!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner monto |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initialize.
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	monto _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: monto equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:47:56' prior: 50898316!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner monto salesBook |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initializeWith: salesBook.
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	monto _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: monto equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:48:17' prior: 50898334!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner monto salesBook |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	aCashier _ Cashier initializeWith: salesBook.
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	monto _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: monto equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:48:28' prior: 50898091!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initializeWith: salesBook.
	 self 
		should: [aCashier cheakOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:48:53'!
initializeWith: salesBook
	
	"self" ! !

!methodRemoval: Cashier class #cheakOut: stamp: 'sgs 6/10/2021 20:49:08'!
cheakOut: aCart
	
	"self" !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:49:27' prior: 50898385!
initializeWith: salesBook
	
	^self new initializeWith: salesBook.! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:50:46' prior: 50898393!
initializeWith: aSalesBook
	
	^self new initializeWith: aSalesBook.! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'sgs 6/10/2021 20:50:52'!
Object subclass: #Cashier
	instanceVariableNames: 'salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'nil' stamp: 'sgs 6/10/2021 20:50:59'!
initializeWith: aSalesBook
	
	
	salesBook salesBook! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:51:14' prior: 50898410!
initializeWith: aSalesBook
	
	
	salesBook _ aSalesBook.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:51:20' prior: 50898415!
initializeWith: aSalesBook
	
	
	salesBook _ aSalesBook.
! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:54:56' prior: 50898280!
checkOut: aCart

	^self canNotCheakOutWithEmptyCart
! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:55:00'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:55:00'!
FAILURE!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:55:25' prior: 50898371!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier initializeWith: salesBook.
	 self 
		should: [aCashier checkOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:55:29'!
FAILURE!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:55:29'!
FAILURE!
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:56:54' prior: 50898425!
checkOut: aCart

	^self canNotCheakOutWithEmptyCart.
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/10/2021 20:56:57'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/10/2021 20:56:57'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/10/2021 20:56:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/10/2021 20:56:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/10/2021 20:56:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/10/2021 20:56:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/10/2021 20:56:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/10/2021 20:56:58'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:56:58'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:56:58'!
FAILURE!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:57:00'!
FAILURE!
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/10/2021 20:58:07' prior: 50898457!
checkOut: aCart

	^self error: self canNotCheakOutWithEmptyCart.
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:58:10'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:58:11'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/10/2021 20:58:11'!
FAILURE!

----STARTUP---- (11 June 2021 19:42:54) as C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\CuisUniversity-4532.image!


----End fileIn of C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\TusLibros.st----!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:03:19' prior: 50898656!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	aCashier _ Cashier new.
	 self 
		should: [aCashier checkOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:03:43'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:04:02' prior: 50898811!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ Cart acceptingItemsOf: (Array with:'validBook').
	aCashier _ Cashier new.
	 self 
		should: [aCashier checkOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:06:32' prior: 50898670!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner monto salesBook |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	aCashier _ Cashier new.
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	monto _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: monto equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:06:43' prior: 50898842!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner monto |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	monto _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: monto equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:08:41' prior: 50898860!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner transaccionTotal |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	transaccionTotal _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: transaccionTotal equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:09:32' prior: 50898878!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ Cart acceptingItemsOf:  (Array with:'validBook').
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:10:16' prior: 50898784!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner
	
	^aCart totalAmount.! !
!Cart methodsFor: 'nil' stamp: 'sgs 6/11/2021 20:10:47'!
totalAmount! !

----End fileIn of C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\Packages\TerseGuide.pck.st----!
!Cart methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:13:37' prior: 50898922!
totalAmount

	^ catalog keyAtValue: items first ifAbsent: [^0].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/11/2021 20:13:42'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/11/2021 20:13:42'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/11/2021 20:13:42'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/11/2021 20:13:42'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/11/2021 20:13:42'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/11/2021 20:13:43'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/11/2021 20:13:43'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/11/2021 20:13:43'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:13:43'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:13:43'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:13:43'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:15:00' prior: 50898897!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ Cart acceptingItemsOf:  (Dictionary add: 'validBook'->100).
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:16:01' prior: 50901892!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ Cart acceptingItemsOf:  ((Dictionary new) add: 'validBook'->100).
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:16:06'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:16:06'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:16:06'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:16:31' prior: 50901852!
totalAmount

	^ catalog keyAtValue: (items first) ifAbsent: [^0].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:16:33'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:16:33'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:16:33'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:17:35' prior: 50901911!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ Cart acceptingItemsOf:  ((Dictionary new) add: 'validBook'->100).
	aCart add: 'validBook'.
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:17:37' prior: 50901979!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ Cart acceptingItemsOf:  ((Dictionary new) add: 'validBook'->100).
	aCart add: 'validBook'.
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:17:41'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:17:41'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:17:41'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:20:05'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:20:05'!
ERROR!
!Cart methodsFor: 'assertions' stamp: 'sgs 6/11/2021 20:26:10' prior: 50898709!
assertIsValidItem: anItem

	(catalog includesKey: anItem) ifFalse: [ self error: self invalidItemErrorMessage ]! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:26:16'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:26:16'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:26:16'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:26:58'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:26:58'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:26:58'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:28:23' prior: 50901999!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCatalogo _ Dictionary new.
	aCart _ Cart acceptingItemsOf:  ( aCatalogo add: 'validBook'->100).
	aCart add: 'validBook'.
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:28:27'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:28:27'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:28:27'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:30:16' prior: 50902084!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCatalogo _ Dictionary new.
	aCatalogo add: 'validBook'->100.
	aCart _ Cart acceptingItemsOf: aCatalogo.
	aCart add: 'validBook'.
	
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:30:26'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:30:55'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:33:06' prior: 50901939!
totalAmount

	^ catalog at: (items first) ifAbsent: [^0].
	 ! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:33:10'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:33:10'!
PASSED!
!CashierTest methodsFor: 'nil' stamp: 'sgs 6/11/2021 20:33:54'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:34:37'!
defaultCatalog
	
	^ (Dictionary new) add: self itemSellByTheStore -> 100.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:34:55'!
itemSellByTheStore
	
	^ 'validBook'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:35:27' prior: 50902156!
defaultCatalog
	
	^ (Dictionary new) add: (self itemSellByTheStore) -> 100.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:35:34' prior: 50902166!
defaultCatalog
	
	^ (Dictionary new) add: ((self itemSellByTheStore) -> 100).! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:36:42' prior: 50902172!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: ((self itemSellByTheStore) -> 100).! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:37:02' prior: 50898828!
test01CheakOutWithEmptyCart
	|aCart aCashier |
	
	aCart _ self createCart.
	aCashier _ Cashier new.
	 self 
		should: [aCashier checkOut:aCart ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:37:41' prior: 50902185!
test01CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner |
	
	aCart _ self createCart.
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
		
	
	 self 
		should: [aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:37:50' prior: 50902198!
test01CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner |
	
	aCart _ self createCart.
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	 self 
		should: [aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:37:51'!
FAILURE!
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:38:32' prior: 50898916!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner
	
	"self "
	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:39:07' prior: 50902241!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner
	
	self assertIsValidCart: aCart .
	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:39:49'!
assertIsValidCart: aCart

	^(aCart isEmpty) ifTrue: [ self error: self canNotCheakOutWithEmptyCart.].
! !

!methodRemoval: Cashier #checkOut: stamp: 'sgs 6/11/2021 20:39:56'!
checkOut: aCart

	^self error: self canNotCheakOutWithEmptyCart.
!
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:40:01' prior: 50902248!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner
	
	self assertIsValidCart: aCart .
	
	^aCart totalAmount.! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:40:20'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:40:24'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:41:35' prior: 50902114!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:41:38'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:42:33'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:42:34'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:43:08'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:43:08'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:43:22'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:43:48'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:43:48'!
ERROR!

self!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:46:53'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:46:53'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:48:34'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:48:34'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:49:15' prior: 50902178!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: ('validBook' -> 100).! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:49:20'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:49:20'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:49:20'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:50:52'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:52:02'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:53:26' prior: 50902334!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: 'validBook' -> 100; yourself .! !

!testRun: #CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:53:39'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:55:51'!
test02CheakOutWithOneItemInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!methodRemoval: CashierTest #test02CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 20:55:51'!
test02CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:56:25'!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:57:05' prior: 50902401!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 'validBook' of: 4.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 20:57:11' prior: 50902420!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 'validBook' of: 4.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 21:02:14' prior: 50902141!
totalAmount
	
	
	^items sum:[:aBook |catalog at: aBook] ifEmpty: [^0].
	 ! !

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:02:23'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:02:23'!
ERROR!
!Cart methodsFor: 'assertions' stamp: 'sgs 6/11/2021 21:02:56' prior: 50898715!
assertIsValidQuantity: aQuantity

	(aQuantity strictlyPositive) ifFalse: [ self error: self invalidQuantityErrorMessage ]! !

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:03:06'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:03:06'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/11/2021 21:03:35' prior: 50902439!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction aCatalogo |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 400.
	
	
	! !

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:03:38'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 21:03:38'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/11/2021 21:03:38'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:03:38'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/11/2021 21:04:19'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/11/2021 21:04:19'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/11/2021 21:04:20'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/11/2021 21:04:20'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/11/2021 21:04:20'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/11/2021 21:04:20'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/11/2021 21:04:20'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/11/2021 21:04:20'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/11/2021 21:04:20'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/11/2021 21:04:20'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/11/2021 21:04:20'!
PASSED!

----SNAPSHOT----(11 June 2021 21:04:35) CuisUniversity-4532.image priorSource: 18086419!

----STARTUP---- (14 June 2021 18:36:01) as C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\CuisUniversity-4532.image!


!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/14/2021 18:38:43'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/14/2021 18:38:43'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/14/2021 18:38:43'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:40:18'!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:43:29' prior: 50902566!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:45:02' prior: 50902585!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotRefactorWithIncompleteTypeInfo.].
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:45:08' prior: 50902605!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAndExpiredCreaditCard.].
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:48:11' prior: 50902630!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAndExpiredCreaditCard.].
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:50:37' prior: 50902655!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAndExpiredCreaditCard.
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:50:54' prior: 50902682!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	today _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAndExpiredCreaditCard.
			self assert: salesBook isEmpty.].
	
	
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:52:38'!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: aDay regiteringOn: aSalesBook	
	
	self assertIsValidCart: aCart .
	
	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:53:56' prior: 50902737!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: aDay regiteringOn: aSalesBook	
	
	"aCreditCard assertIsValidad"
	self assertIsValidCart: aCart .
	
	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:57:14' prior: 50902746!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: aDay regiteringOn: aSalesBook	
	
	| aCreditCard |
	self assertIsValidCart: aCart .
	(aCreditCard isExpiredOn: aDay)ifTrue: [self error: self canNotCheakOutWithAnExpiredCreditCard]
	
	
	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:57:54'!
checkOut: aCart with: aCreditCard on: aDay regiteringOn: aSalesBook	
	
	
	self assertIsValidCart: aCart .
	(aCreditCard isExpiredOn: aDay)ifTrue: [self error: self canNotCheakOutWithAnExpiredCreditCard].
	
	
	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:58:03'!
canNotCheakOutWithAnExpiredCreditCard
	
	^'Invalidad Card'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:58:18' prior: 50902709!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	today _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreaditCard.
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:58:34' prior: 50902783!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	today _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:58:52'!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	today _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!methodRemoval: CashierTest #test04CanNotCheckoutWithAnExpiredCreaditCart stamp: 'sgs 6/14/2021 18:58:52'!
test04CanNotCheckoutWithAnExpiredCreaditCart

	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction today salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _  OrderedCollection new.
	today _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 18:59:15' prior: 50902839!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction today salesBook aCreditCard |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCard .
	salesBook _  OrderedCollection new.
	today _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:03:21' prior: 50902895!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction aToday salesBook aCreditCard |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCard .
	salesBook _  OrderedCollection new.
	aToday _ FixedGregorianDate today .
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCard on: aToday regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/14/2021 19:03:29'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:03:28' overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:03:53' prior: 50902917!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook aCreditCard |
	
	aCart _ self createCart.
	aCart add: 4 of: 'validBook'.

	aCashier _ Cashier new.
	
	aCreditCard .
	salesBook _  OrderedCollection new.
	
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/14/2021 19:04:58'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:04:55' prior: 50902947 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	 validBook _ 'validBook'.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:05:11' prior: 50902484!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	totalTransaction _	aCashier checkOut:aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:05:19' prior: 50902952!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook aCreditCard |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	
	aCreditCard .
	salesBook _  OrderedCollection new.
	
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:05:44' prior: 50903006!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook aCreditCard |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.

	salesBook _  OrderedCollection new.
	
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/14/2021 19:06:36'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'sgs 6/14/2021 19:06:39'!
Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:06:32' prior: 50902981 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	 validBook _ 'validBook'.
	aValidCreditCard _ CreditCard new.! !
!CreditCard class methodsFor: 'nil' stamp: 'sgs 6/14/2021 19:08:37'!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear
! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:09:14' prior: 50903063 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	 validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 00 owner:  00 expiredOn: 900
! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:10:42' prior: 50903075 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	 validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 010101.

! !

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/14/2021 19:11:44'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard anExpiredCreditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:11:43' prior: 50903084 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	 validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 122021.
	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 122021.

! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:12:00' prior: 50903102 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	 validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 122021.
	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Flora' expiredOn: 012021.

! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:12:10' prior: 50903114 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 122021.
	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Flora' expiredOn: 012021.

! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:12:24' prior: 50903027!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.

	salesBook _  OrderedCollection new.
	
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:12:42' prior: 50903138!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!methodRemoval: Cashier #checkOut:with:and:to:on:regiteringOn: stamp: 'sgs 6/14/2021 19:13:18'!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner on: aDay regiteringOn: aSalesBook	
	
	| aCreditCard |
	self assertIsValidCart: aCart .
	(aCreditCard isExpiredOn: aDay)ifTrue: [self error: self canNotCheakOutWithAnExpiredCreditCard]
	
	
	^aCart totalAmount.!

!methodRemoval: Cashier #checkOut:with:and:to: stamp: 'sgs 6/14/2021 19:13:24'!
checkOut: aCart with: aCreditCardNumber and: aCreditCardExpiration to: aCreditCardOwner
	
	self assertIsValidCart: aCart .
	
	^aCart totalAmount.!
!CreditCard methodsFor: 'nil' stamp: 'sgs 6/14/2021 19:14:21'!
isExpiredOn: aDay! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:14:54' prior: 50903069!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard methodsFor: 'nil' stamp: 'sgs 6/14/2021 19:15:16'!
initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'sgs 6/14/2021 19:16:21'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'sgs 6/14/2021 19:16:22'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber creditCardOwner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'sgs 6/14/2021 19:16:23'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber creditCardOwner creditCardExpiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:16:19' prior: 50903210!
initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	creditCardNumber _ aNumber.
	creditCardOwner _ aOwner.
	creditCardExpiration _ anExpirationMonthOfYear.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:22:44'!
test04CanNotCheckoutWithAnInvalidCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:22:57'!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!methodRemoval: CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:22:57'!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:23:10' prior: 50903268!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnInvalidCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:23:39' prior: 50903309!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:23:47' prior: 50903248!
test04CanNotCheckoutWithAnInvalidCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnInvalidCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:23:59'!
canNotCheakOutWithAnInvalidCreditCard
	
	^'Invalidad Card'! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:24:07' prior: 50902778!
canNotCheakOutWithAnExpiredCreditCard
	
	^'Expired Card'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:24:35' prior: 50903329!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!methodRemoval: Cashier #canNotCheakOutWithAnInvalidCreditCard stamp: 'sgs 6/14/2021 19:26:17'!
canNotCheakOutWithAnInvalidCreditCard
	
	^'Invalidad Card'!

!methodRemoval: CashierTest #test04CanNotCheckoutWithAnInvalidCreditCart stamp: 'sgs 6/14/2021 19:26:36'!
test04CanNotCheckoutWithAnInvalidCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnInvalidCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:26:42'!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:26:59' prior: 50903126 overrides: 16927572!
setUp

	 today _ FixedGregorianDate today .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 122021.
	"anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Flora' expiredOn: 012021"

! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:28:10' prior: 50903202!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	(aNumber numberOfDigits: 16 ) ifFalse: [ | sefl |self error: sefl class ajajaj]
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:28:38'!
canNotCheakOutWithEmptyCart
	
	^'Invalidad Cart'! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:29:19'!
canNotCreatAnInvalidadCreditCard
	
	^'Invalidad Card'! !

!methodRemoval: CreditCard class #canNotCheakOutWithEmptyCart stamp: 'sgs 6/14/2021 19:29:31'!
canNotCheakOutWithEmptyCart
	
	^'Invalidad Cart'!
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:29:46' prior: 50903457!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	(aNumber numberOfDigits: 16 ) ifFalse: [ self error: self class canNotCreatAnInvalidadCreditCard].
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:31:50' prior: 50903483!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	((aNumber asString) size =16 ) ifFalse: [ self error: self class canNotCreatAnInvalidadCreditCard].
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:31:55' prior: 50903495!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	((aNumber asString) size =16 ) ifFalse: [ self error: self class canNotCreatAnInvalidadCreditCard].
	
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:32:56' prior: 50903507!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	((aNumber asString) size =16 ) ifFalse: [ self error: self class canNotCreatAnInvalidadCreditCard].
	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
	
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:33:28' prior: 50903519!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	((aNumber asString) size =16 ) ifFalse: [ self error: self class canNotCreatAnInvalidadCreditCard].
	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
	
	self assertIsValidCreditCard. 
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:34:10' prior: 50903534!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	((aNumber asString) size =16 ) ifFalse: [ self error: self class canNotCreatAnInvalidadCreditCard].
	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
	
	self assertIsValidCreditCardWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:35:02'!
assertIsValidCreditCardWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	((aNumber asString) size =16 ) and:[
	
	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].] and:[]
	
	
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:35:25' prior: 50903550!
numbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear

	
	self assertIsValidCreditCardWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	^self new initializeWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:36:11' prior: 50903568!
assertIsValidCreditCardWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	self assertIsValidNumbered: aNumber.
	((aNumber asString) size =16 ) ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].

	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:36:21'!
assertIsValidNumbered: aNumber

	((aNumber asString) size =16 ) ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].

	! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:36:46' prior: 50903592!
assertIsValidCreditCardWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	self assertIsValidNumbered: aNumber.
	self assertIsValidOwner:  aOwner.
	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:36:53'!
assertIsValidOwner:  aOwner

	aOwner withBlanksTrimmed isEmpty ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:37:00' prior: 50903626!
assertIsValidOwner:  aOwner

	(aOwner withBlanksTrimmed isEmpty) ifTrue:  [ self error: self class canNotCreatAnInvalidadCreditCard].
! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:37:39' prior: 50903614!
assertIsValidCreditCardWithNumbered: aNumber owner:  aOwner expiredOn: anExpirationMonthOfYear.

	self assertIsValidNumbered: aNumber.
	self assertIsValidOwner:  aOwner.
	self assertIsExpiredOn: anExpirationMonthOfYear.! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:38:11'!
assertIsExpiredOn: anExpirationMonthOfYear

	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:43:24' prior: 50902768!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	
	self assertIsValidCart: aCart .
	(aCreditCard isExpiredOn: aDate)ifTrue: [self error: self canNotCheakOutWithAnExpiredCreditCard].
	
	
	^aCart totalAmount.! !
!CreditCard class methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:48:05' prior: 50903652!
assertIsExpiredOn: anExpirationMonthOfYear
	

	! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:48:19' prior: 50903198!
isExpiredOn: aDate

! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:54:36' prior: 50903673!
isExpiredOn: aDate

 	^(aDate year > 	creditCardExpiration year) or:
	((aDate year = 	creditCardExpiration year) and: (aDate month >=  	creditCardExpiration month)) ! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:54:40' prior: 50903677!
isExpiredOn: aDate

 	^(aDate year > 	creditCardExpiration year) or:
	((aDate year = 	creditCardExpiration year) and: (aDate month >=  	creditCardExpiration month)).! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:54:51' prior: 50903657!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	
	self assertIsValidCart: aCart .
	(aCreditCard isExpiredOn: aDate)ifTrue: [self error: self canNotCheakOutWithAnExpiredCreditCard].

	^aCart totalAmount.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/14/2021 19:54:55'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/14/2021 19:54:55'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/14/2021 19:54:55'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/14/2021 19:54:55'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/14/2021 19:54:55'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/14/2021 19:54:55'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/14/2021 19:54:55'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/14/2021 19:54:55'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/14/2021 19:54:56'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/14/2021 19:54:56'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/14/2021 19:54:56'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:54:56'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:54:56'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/14/2021 19:55:03'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/14/2021 19:55:03'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/14/2021 19:55:03'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:55:03'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:55:03'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:56:16' prior: 50902987!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner totalTransaction salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	
	salesBook _ OrderedCollection new.
	
	totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:56:26' prior: 50903763!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	
	salesBook _ OrderedCollection new.
	
	totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:56:57' prior: 50902365!
test02CheakOutWithOneItemInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier new.

	salesBook _ OrderedCollection  new.
	
	totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:57:22' prior: 50902218!
test01CheakOutWithEmptyCart
	|aCart aCashier aCreditCardExpiration aCreditCardNumber aCreditCardOwner salesBook |
	
	aCart _ self createCart.
	aCashier _ Cashier new.
	
	aCreditCardNumber _ '010101010101'.
	aCreditCardExpiration _ '01010101'.
	aCreditCardOwner _ 'Pepe'.
	salesBook _ OrderedCollection  new.

	
	 self 
		should: [	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:57:34' prior: 50903813!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ self createCart.
	aCashier _ Cashier new.
	
	salesBook _ OrderedCollection  new.

	
	 self
		
		should: [	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/14/2021 19:57:40'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/14/2021 19:57:49'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/14/2021 19:57:49'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/14/2021 19:57:49'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:57:49'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/14/2021 19:57:49'!
ERROR!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:58:33'!
year
! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:58:40'!
month! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/14/2021 19:58:50' prior: 50903872!
month

	creditCardExpiration! !

----SNAPSHOT----(14 June 2021 20:03:52) CuisUniversity-4532.image priorSource: 18268767!

----SNAPSHOT----(14 June 2021 21:09:53) CuisUniversity-4532.image priorSource: 18311327!

----STARTUP---- (15 June 2021 20:58:01) as C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\CuisUniversity-4532.image!


!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/15/2021 21:05:45'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:05:45'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/15/2021 21:05:45'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:05:45'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:05:45'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:06:38'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:06:55'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:06:55'!
ERROR!

self year.!

self year < 2020!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:26:00' prior: 50903686!
isExpiredOn: aDate

 	^creditCardExpiration start < (Month month: aDate monthIndex year: aDate yearNumber) start ! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/15/2021 21:27:59'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:27:59'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/15/2021 21:27:59'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:27:59'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:27:59'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:30:55' prior: 50903445 overrides: 16927572!
setUp

	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn: 122021.
	"anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Flora' expiredOn: 012021"

! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/15/2021 21:31:20'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:31:20'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/15/2021 21:31:20'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:31:20'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:31:20'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:32:51'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:32:51'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:34:19' prior: 50903941 overrides: 16927572!
setUp

	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).
	"anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Flora' expiredOn: 012021"

! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/15/2021 21:34:23'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/15/2021 21:34:23'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/15/2021 21:34:23'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/15/2021 21:34:23'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/15/2021 21:34:23'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/15/2021 21:34:23'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/15/2021 21:34:23'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/15/2021 21:34:23'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/15/2021 21:34:23'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:34:23'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/15/2021 21:34:23'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:34:23'!
FAILURE!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:34:23'!
FAILURE!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/15/2021 21:34:39'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:34:39'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/15/2021 21:34:39'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:34:39'!
FAILURE!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:34:39'!
FAILURE!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:35:05'!
FAILURE!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:35:05'!
FAILURE!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:36:32' prior: 50903976 overrides: 16927572!
setUp

	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
		"anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Flora' expiredOn: 012021"

! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:36:42' prior: 50903424!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier checkOut:aCart with: anExpiredCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:36:50'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:38:28' prior: 50903379!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	
	
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:38:55' prior: 50904095!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:39:02' prior: 50904110!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:39:22' prior: 50904127!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	"self assert: salesBook size equals: 1."
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:39:32'!
ERROR!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:39:33'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:39:45' prior: 50904144!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:40:51' prior: 50903695!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	

	^aCart totalAmount.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:41:06'!
 assertIsValidCard: aCreditCard on: aDate.

	(aCreditCard isExpiredOn: aDate)ifTrue: [self error: self canNotCheakOutWithAnExpiredCreditCard].

! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:42:54' prior: 50904185!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ aCart totalAmount.
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:43:32'!
registerTotalAmount: total in: 	aSalesBook .
	
	aSalesBook addLast: total.! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/15/2021 21:43:45'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/15/2021 21:43:45'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/15/2021 21:43:45'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:43:45'!
PASSED!

!testRun: #CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:43:45'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/15/2021 21:44:36'!
test05CheckoutRegistersASales

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !

!methodRemoval: CashierTest #test05CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/15/2021 21:44:36'!
test05CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	!

!methodRemoval: CreditCard #year stamp: 'sgs 6/15/2021 21:56:44'!
year
!

!methodRemoval: CreditCard #month stamp: 'sgs 6/15/2021 21:56:47'!
month

	creditCardExpiration!

----SNAPSHOT----(15 June 2021 22:00:14) CuisUniversity-4532.image priorSource: 18311417!

----SNAPSHOT----(15 June 2021 22:02:28) CuisUniversity-4532.image priorSource: 18323912!

----STARTUP---- (16 June 2021 20:42:06) as C:\Users\sabri\OneDrive\Desktop\SegundaParte\windows64\CuisUniversity-4532.image!


!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/16/2021 22:34:22'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard anExpiredCreditCard merchantProcessorDebit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'setUp' stamp: 'sgs 6/16/2021 22:34:19' prior: 50904054 overrides: 16927572!
setUp

	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	
	merchantProcessorDebit _  [ :anAmount :aCreditCard | ]

! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 22:34:53'!
test06

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 22:42:41' prior: 50904308!
test06

	|aCart aCashier salesBook  debitCreditCard total |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	
		
	merchantProcessorDebit := [ :anAmount :aCreditCard | | debitAmout | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	total := aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
					
	self assert: debitCreditCard = aValidCreditCard.
	self assert: debitCreditCard = total.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 22:45:54' prior: 50904323!
test06

	|aCart aCashier salesBook  debitCreditCard total |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.

	merchantProcessorDebit := [ :anAmount :aCreditCard | | debitAmout | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	total := aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
					
	"self assert: debitCreditCard = aValidCreditCard."
	self assert: debitCreditCard equals: total.
	
	
	
	! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:47:50' prior: 50904202!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotal.
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:47:54' prior: 50904361!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotal.
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:48:28'!
calculateTotalOf: aCart

	^aCart totalAmount.! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:48:41' prior: 50904372!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotalOf: aCart.
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:49:38' prior: 50904388!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotalOf: aCart.
	self debitAmout.
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:49:48' prior: 50904400!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotalOf: aCart.
	self debitTotal.
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'sgs 6/16/2021 22:52:29'!
Object subclass: #Cashier
	instanceVariableNames: 'salesBook merchantProcessorDebit'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:52:26'!
debit: anAmount from: aCreditCard 

	^merchantProcessorDebit value: anAmount value: aCreditCard.! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:53:37'!
debitTotal: anAmount from: aCreditCard 

	^merchantProcessorDebit debit: anAmount from: aCreditCard.! !

!methodRemoval: Cashier #debit:from: stamp: 'sgs 6/16/2021 22:53:45'!
debit: anAmount from: aCreditCard 

	^merchantProcessorDebit value: anAmount value: aCreditCard.!
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 22:54:05' prior: 50904412!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotalOf: aCart.
	self debitTotal: total from: aCreditCard .
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 22:54:33'!
debit: anAmount from: aCreditCard 

	^merchantProcessorDebit value: anAmount value: aCreditCard ! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 22:54:51'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 22:54:51'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 22:54:52'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 22:54:52'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 22:54:52'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 22:54:52'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 22:55:06'!
ERROR!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/16/2021 22:56:19'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard anExpiredCreditCard merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 22:56:19' prior: 50904293 overrides: 16927572!
setUp

	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	
	merchantProcessor _  [ :anAmount :aCreditCard | ]

! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 22:56:19' prior: 50904342!
test06

	|aCart aCashier salesBook  debitCreditCard total |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | | debitAmout | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	total := aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
					
	"self assert: debitCreditCard = aValidCreditCard."
	self assert: debitCreditCard equals: total.
	
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 22:56:19' prior: 50904462!
debit: anAmount from: aCreditCard 

	^merchantProcessor value: anAmount value: aCreditCard ! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 22:58:23' prior: 50904515!
test06

	|aCart aCashier salesBook  debitCreditCard total |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | | debitAmout | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook throught: self. 
		
					
	"self assert: debitCreditCard = aValidCreditCard."
	self assert: debitCreditCard equals: total.
	
	
	
	! !
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 23:00:02' prior: 50904449!
checkOut: aCart with: aCreditCard on: aDate regiteringOn: aSalesBook	
	
	|total|
	
	self assertIsValidCart: aCart .
	self assertIsValidCard: aCreditCard on: aDate.
	
	total _ self calculateTotalOf: aCart.
	self debitTotal: total from: aCreditCard .
	self registerTotalAmount: total in: 	aSalesBook .
	
	^total.
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:01:06' prior: 50904541!
test06

	|aCart aCashier salesBook  debitCreditCard total |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | | debitAmout | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	Cashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	"self assert: debitCreditCard = aValidCreditCard."
	self assert: debitCreditCard equals: total.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:01:15' prior: 50904574!
test06

	|aCart aCashier salesBook  debitCreditCard total |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | | debitAmout | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	"self assert: debitCreditCard = aValidCreditCard."
	self assert: debitCreditCard equals: total.
	
	
	
	! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:01:42' prior: 50898802!
initializeWith: aMerchantProcessor
	
	^self new initializeWith: aMerchantProcessor.! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'sgs 6/16/2021 23:02:01'!
Object subclass: #Cashier
	instanceVariableNames: 'salesBook merchantProcessorDebit merchantProcessor_'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'initialization' stamp: 'sgs 6/16/2021 23:01:58' prior: 50898790!
initializeWith: aMerchantProcessor
	
	
	merchantProcessor_ aSalesBook.
! !
!Cashier methodsFor: 'initialization' stamp: 'sgs 6/16/2021 23:02:18' prior: 50904628!
initializeWith: aMerchantProcessor
	
	
	merchantProcessor_ _ aMerchantProcessor.
! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'sgs 6/16/2021 23:02:26'!
Object subclass: #Cashier
	instanceVariableNames: 'salesBook merchantProcessorDebit merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:02:26' prior: 50904634!
initializeWith: aMerchantProcessor
	
	
	merchantProcessor _ aMerchantProcessor.
! !

Object subclass: #Cashier
	instanceVariableNames: 'salesBook  merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'sgs 6/16/2021 23:02:36'!
Object subclass: #Cashier
	instanceVariableNames: 'salesBook merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'checkOut' stamp: 'sgs 6/16/2021 23:02:49' prior: 50904437!
debitTotal: anAmount from: aCreditCard 

	^merchantProcessor debit: anAmount from: aCreditCard.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:02:57'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:02:57'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:02:57'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:02:57'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:02:57'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:02:57'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:02:57'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:03:03'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:04:18'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:04:18'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:04:19'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:04:19'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:04:19'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:04:19'!
FAILURE!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:04:21'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:04:48'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:05:41'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:06:16'!
FAILURE!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:06:52' prior: 50904594!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	"self assert: debitCreditCard = aValidCreditCard."
	self assert: debitAmout equals: total.
	
	
	
	! !

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:06:59'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:06:59'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:06:59'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:06:59'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:06:59'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:06:59'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:06:59'!
PASSED!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:07:41' prior: 50903798!
test02CheakOutWithOneItemInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier initializeWith:  self.

	salesBook _ OrderedCollection  new.
	
	
	
	totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:07:44' prior: 50904788!
test02CheakOutWithOneItemInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ self createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier initializeWith:  self.

	salesBook _ OrderedCollection  new.

	totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 100.
	
	
	! !

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:07:45'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:07:45'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:07:45'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:07:45'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:07:45'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:07:45'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:07:45'!
PASSED!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:08:03' prior: 50903783!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier initializeWith:  self.
	
	salesBook _ OrderedCollection new.
	
	totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 400.
	
	
	! !

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:08:04'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:08:04'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:08:04'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:08:04'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:08:04'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:08:04'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:08:04'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:08:04'!
ERROR!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:08:15' prior: 50904235!
test05CheckoutRegistersASales

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	aCashier _ Cashier initializeWith:  self.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:08:16'!
PASSED!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:08:28' prior: 50904748!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	self assert: debitCreditCard = aValidCreditCard.
	self assert: debitAmout equals: total.
	
	
	
	! !

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:08:29'!
PASSED!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:08:39' prior: 50904916!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	self assert: debitCreditCard equals: aValidCreditCard.
	self assert: debitAmout equals: total.
	
	
	
	! !

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:08:41'!
PASSED!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:08:57' prior: 50904956!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	self assert: debitCreditCard equals: aValidCreditCard.
	self assert: debitAmout equals: total.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:09:05' prior: 50904996!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: aValidCreditCard.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:14:58'!
test07

	|aCart aCashier salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		self error: Cashier creditCardHasNoCreditErrorMessage ].
	aCashier _ Cashier initializeWith:  self.
				
	self 
		should: [	 aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]	
		
	}
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:16:16' prior: 50905035!
test07

	|aCart aCashier salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	merchantProcessor := [ :anAmount :aCreditCard | 
		self error: Cashier creditCardHasNoCreditErrorMessage ].
	aCashier _ Cashier initializeWith:  self.
				
	self 
		should: [	 aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]	
		
	
	
	! !
!Cashier class methodsFor: 'nil' stamp: 'sgs 6/16/2021 23:17:10'!
creditCardHasNoCreditErrorMessage
	
	 ^'Payment cannot be made'! !

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:17:53'!
PASSED!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/16/2021 23:22:29'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard anExpiredCreditCard MerchantProcessorSimulator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:22:29' prior: 50904535!
debit: anAmount from: aCreditCard 

	^MerchantProcessorSimulator value: anAmount value: aCreditCard ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:22:29' prior: 50904499 overrides: 16927572!
setUp

	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	
	MerchantProcessorSimulator _  [ :anAmount :aCreditCard | ]

! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:22:29' prior: 50905057!
test07

	|aCart aCashier salesBook  |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		self error: Cashier creditCardHasNoCreditErrorMessage ].
	aCashier _ Cashier initializeWith:  self.
				
	self 
		should: [	 aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]	
		
	
	
	! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:22:29' prior: 50905016!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ self createCart.
	aCart add: 4 of: validBook.

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier checkOut: aCart with: aValidCreditCard on: today regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: aValidCreditCard.
	
	
	
	! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:22:57'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:23:11'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:23:11'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:23:11'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:23:11'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:23:11'!
ERROR!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:23:11'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:23:11'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:23:11'!
ERROR!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:23:14'!
ERROR!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:23:47'!
ERROR!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:23:47'!
ERROR!
!CartTest methodsFor: 'support' stamp: 'sgs 6/16/2021 23:24:44' prior: 50898632!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: 'validBook' -> 100; yourself .! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:24:51'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:24:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:24:59'!
PASSED!

Object subclass: #testObjects
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #testObjectsTusLibros
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #testObjectsTusLibros
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #TestObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TestObject category: 'TusLibros' stamp: 'sgs 6/16/2021 23:29:13'!
Object subclass: #TestObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TestObject methodsFor: 'nil' stamp: 'sgs 6/16/2021 23:29:38'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog.! !
!TestObject methodsFor: 'nil' stamp: 'sgs 6/16/2021 23:29:46'!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: 'validBook' -> 100; yourself .! !
!TestObject methodsFor: 'nil' stamp: 'sgs 6/16/2021 23:30:01'!
itemNotSellByTheStore
	
	^'invalidBook'! !
!TestObject methodsFor: 'nil' stamp: 'sgs 6/16/2021 23:30:13'!
itemSellByTheStore
	
	^ 'validBook'! !

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/16/2021 23:31:35'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'today validBook aValidCreditCard anExpiredCreditCard MerchantProcessorSimulator testObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'setUp' stamp: 'sgs 6/16/2021 23:31:33' prior: 50905102 overrides: 16927572!
setUp
	testObjects := TestObject new.
	
	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	
	MerchantProcessorSimulator _  [ :anAmount :aCreditCard | ]

! !
!CashierTest methodsFor: 'setUp' stamp: 'sgs 6/16/2021 23:31:39' prior: 50905345 overrides: 16927572!
setUp
	testObjects _ TestObject new.
	
	 today _ DateAndTime now .
	
	validBook _ 'validBook'.
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	
	MerchantProcessorSimulator _  [ :anAmount :aCreditCard | ]

! !
!CashierTest methodsFor: 'setUp' stamp: 'sgs 6/16/2021 23:31:47' prior: 50905363 overrides: 16927572!
setUp
	testObjects _ TestObject new.
	
	 today _ DateAndTime now .
	
	
	aValidCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).

	anExpiredCreditCard _ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	
	MerchantProcessorSimulator _  [ :anAmount :aCreditCard | ]

! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:32:44'!
aValidCreditCard 
	
	| today |
	^ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:33:10'!
today
	
	| today |
	^ today.! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:33:23' prior: 50905397!
aValidCreditCard 
	
	| atoday |
	^ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: atoday monthIndex year: atoday yearNumber + 1).! !

!classDefinition: #TestObject category: 'TusLibros' stamp: 'sgs 6/16/2021 23:34:13'!
Object subclass: #TestObject
	instanceVariableNames: 'tooday'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:34:11' prior: 50905405!
today
	^ tooday.! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:34:33' prior: 50905409!
aValidCreditCard 
	
	
	^ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: tooday monthIndex year: tooday yearNumber + 1).! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:35:08'!
anExpiredCreditCard 

	^CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: tooday monthIndex year: tooday yearNumber - 1).
	! !
!CashierTest methodsFor: 'setUp' stamp: 'sgs 6/16/2021 23:35:24' prior: 50905381 overrides: 16927572!
setUp

	testObjects _ TestObject new.	
	MerchantProcessorSimulator _  [ :anAmount :aCreditCard | ]

! !

!methodRemoval: CashierTest #itemSellByTheStore stamp: 'sgs 6/16/2021 23:35:37'!
itemSellByTheStore
	
	^ 'validBook'!

!methodRemoval: CashierTest #defaultCatalog stamp: 'sgs 6/16/2021 23:35:42'!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: 'validBook' -> 100; yourself .!

!methodRemoval: CashierTest #createCart stamp: 'sgs 6/16/2021 23:35:47'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:36:04' prior: 50903834!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ self testObjects createCart.
	aCashier _ Cashier new.
	
	salesBook _ OrderedCollection  new.

	
	 self
		
		should: [	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:36:22' prior: 50905464!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ testObjects createCart.
	aCashier _ Cashier new.
	
	salesBook _ OrderedCollection  new.

	
	 self
		
		should: [	aCashier checkOut:aCart with: aValidCreditCard on: today regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:36:49' prior: 50905480!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ testObjects createCart.
	aCashier _ Cashier new.
	
	salesBook _ OrderedCollection  new.

	
	 self
		
		should: [	aCashier 
				checkOut:aCart 
				with: aValidCreditCard 
				on: today 
				regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !

TestCase subclass: #CashierTest
	instanceVariableNames: 'MerchantProcessorSimulator testObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'sgs 6/16/2021 23:37:02'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'MerchantProcessorSimulator testObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:37:15' prior: 50905496!
test01CheakOutWithEmptyCart
	|aCart aCashier salesBook |
	
	aCart _ testObjects createCart.
	aCashier _ Cashier new.
	
	salesBook _ OrderedCollection  new.

	
	 self
		
		should: [	aCashier 
				checkOut:aCart 
				with: testObjects aValidCreditCard 
				on: testObjects today 
				regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithEmptyCart.].! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:37:42' prior: 50904803!
test02CheakOutWithOneItemInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ testObjects createCart.
	aCart add: 'validBook'.

	aCashier _ Cashier initializeWith:  self.

	salesBook _ OrderedCollection  new.

	totalTransaction _	aCashier 
					checkOut:aCart 
					with:testObjects aValidCreditCard 
					on: testObjects today 
					regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 100.
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:38:34' prior: 50904839!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects validBook.

	aCashier _ Cashier initializeWith:  self.
	
	salesBook _ OrderedCollection new.
	
	totalTransaction _	aCashier
					checkOut:aCart 
					with: testObjects aValidCreditCard 
					on:  testObjects today 
					regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:38:51' prior: 50905559!
test03CheakOutWithManyItemsInTheCart
	|aCart aCashier totalTransaction salesBook |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects itemSellByTheStore.

	aCashier _ Cashier initializeWith:  self.
	
	salesBook _ OrderedCollection new.
	
	totalTransaction _	aCashier
					checkOut:aCart 
					with: testObjects aValidCreditCard 
					on:  testObjects today 
					regiteringOn: salesBook.
	
	self assert: totalTransaction equals: 400.
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:40:08' prior: 50904071!
test04CanNotCheckoutWithAnExpiredCreditCart

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects itemSellByTheStore.

	aCashier _ Cashier new.
	salesBook _  OrderedCollection new.
	
	 self 
		should: [totalTransaction _	aCashier 
								checkOut:aCart 
								with:testObjects anExpiredCreditCard 
								on: testObjects today 
								regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = aCashier canNotCheakOutWithAnExpiredCreditCard. 
			self assert: salesBook isEmpty.].
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:40:43' prior: 50904878!
test05CheckoutRegistersASales

	|aCart aCashier totalTransaction salesBook  |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects itemSellByTheStore .

	aCashier _ Cashier initializeWith:  self.
	salesBook _  OrderedCollection new.
	
	 totalTransaction _	aCashier 
					checkOut:aCart 
					with: testObjects aValidCreditCard 
					on: testObjects today 
					regiteringOn: salesBook. 
		
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: totalTransaction .
	
	
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:41:39' prior: 50905140!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:testObjects aValidCreditCard 
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: testObjects aValidCreditCard.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:41:47' prior: 50905635!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:testObjects aValidCreditCard 
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: testObjects aValidCreditCard.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:42:39' prior: 50905118!
test07

	|aCart aCashier salesBook  |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		self error: Cashier creditCardHasNoCreditErrorMessage ].
	aCashier _ Cashier initializeWith:  self.
				
	self 
		should: [	 aCashier 
				checkOut: aCart 
				with: testObjects aValidCreditCard 
				on: testObjects today 
				regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoCreditErrorMessage.
			self assert: salesBook isEmpty ]	
		
	
	
	! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:43:09'!
creditCardHasNoDebitErrorMessage
	
	 ^'Payment cannot be made'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:43:09' prior: 50905680!
test07

	|aCart aCashier salesBook  |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		self error: Cashier creditCardHasNoDebitErrorMessage ].
	aCashier _ Cashier initializeWith:  self.
				
	self 
		should: [	 aCashier 
				checkOut: aCart 
				with: testObjects aValidCreditCard 
				on: testObjects today 
				regiteringOn: salesBook. ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = Cashier creditCardHasNoDebitErrorMessage.
			self assert: salesBook isEmpty ]	
		
	
	
	! !

!methodRemoval: Cashier class #creditCardHasNoCreditErrorMessage stamp: 'sgs 6/16/2021 23:43:09'!
creditCardHasNoCreditErrorMessage
	
	 ^'Payment cannot be made'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'sgs 6/16/2021 23:43:55'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjects'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'nil' stamp: 'sgs 6/16/2021 23:43:53' overrides: 16927572!
setUp

	testObjects _ TestObject new.	
	
! !

!methodRemoval: CartTest #createCart stamp: 'sgs 6/16/2021 23:44:05'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog!

!methodRemoval: CartTest #defaultCatalog stamp: 'sgs 6/16/2021 23:44:09'!
defaultCatalog
	
	|aDictionary|
	aDictionary _ Dictionary new.
	
	^ aDictionary add: 'validBook' -> 100; yourself .!

!methodRemoval: CartTest #itemNotSellByTheStore stamp: 'sgs 6/16/2021 23:44:15'!
itemNotSellByTheStore
	
	^'invalidBook'!

!methodRemoval: CartTest #itemSellByTheStore stamp: 'sgs 6/16/2021 23:44:25'!
itemSellByTheStore
	
	^ 'validBook'!
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:44:58' prior: 50898551!
test01NewCartsAreCreatedEmpty

	self assert: testObjects createCart isEmpty! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:04' prior: 50905768!
test01NewCartsAreCreatedEmpty

	self assert: (testObjects createCart) isEmpty! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:18' prior: 50898556!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := testObjects createCart.
	
	self 
		should: [ cart add: testObjects itemNotSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:23' prior: 50898569!
test03AfterAddingAnItemTheCartIsNotEmptyAnymore

	| cart |
	
	cart := testObjects createCart.
	
	cart add: testObjects itemSellByTheStore.
	self deny: cart isEmpty ! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:29' prior: 50898577!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := testObjects createCart.
	
	self 
		should: [cart add: 0 of: testObjects itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:35' prior: 50898590!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := testObjects createCart.
	
	self 
		should: [cart add: 2 of: testObjects itemNotSellByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:43' prior: 50898603!
test06CartRemembersAddedItems

	| cart |
	
	cart := testObjects createCart.
	
	cart add: testObjects itemSellByTheStore.
	self assert: (cart includes: testObjects itemSellByTheStore)! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:45:52' prior: 50898611!
test07CartDoesNotHoldNotAddedItems

	| cart |
	
	cart := testObjects createCart.
	
	self deny: (cart includes: testObjects itemSellByTheStore)! !
!CartTest methodsFor: 'tests' stamp: 'sgs 6/16/2021 23:46:04' prior: 50898618!
test08CartRemembersTheNumberOfAddedItems

	| cart |
	
	cart := testObjects createCart.
	
	cart add: 2 of: testObjects itemSellByTheStore.
	self assert: (cart occurrencesOf: testObjects itemSellByTheStore) = 2! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:46:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:46:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:46:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:46:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:46:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:46:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:46:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:46:10'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:46:10'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:46:59'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:46:59'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:46:59'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:46:59'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:46:59'!
ERROR!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:46:59'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:46:59'!
ERROR!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:47:00'!
ERROR!

!classDefinition: #TestObject category: 'TusLibros' stamp: 'sgs 6/16/2021 23:47:35'!
Object subclass: #TestObject
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:47:35' prior: 50905436!
anExpiredCreditCard 

	^CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber - 1).
	! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:47:35' prior: 50905424!
today
	^ today.! !
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:47:35' prior: 50905428!
aValidCreditCard 
	
	
	^ CreditCard numbered: 010101010101 owner:  'Jill' expiredOn:(Month month: today monthIndex year: today yearNumber + 1).! !

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:47:53'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:47:53'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:48:48'!
ERROR!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:48:48'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:49:44'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:49:44'!
ERROR!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:49:44'!
ERROR!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:49:44'!
ERROR!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:49:44'!
ERROR!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:49:44'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:49:45'!
ERROR!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:49:45'!
ERROR!
!TestObject methodsFor: 'as yet unclassified' stamp: 'sgs 6/16/2021 23:50:12' overrides: 16896425!
initialize

	today := DateAndTime now! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:50:15'!
FAILURE!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:50:15'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:50:15'!
FAILURE!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:50:59' prior: 50905657!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:testObjects aValidCreditCard 
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard = testObjects aValidCreditCard.
	
	
	
	! !

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:51:00'!
FAILURE!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:51:12' prior: 50906081!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:testObjects aValidCreditCard 
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: testObjects aValidCreditCard.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:51:34' prior: 50906106!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:testObjects aValidCreditCard 
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: aCart.
	
	
	! !

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:51:36'!
FAILURE!
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:52:06' prior: 50906129!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.

	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:testObjects aValidCreditCard 
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: testObjects aValidCreditCard.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:53:48' prior: 50906153!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout aCard |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.
	aCard _ testObjects aValidCreditCard .
	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:aCard
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: testObjects aValidCreditCard.
	
	
	
	! !
!CashierTest methodsFor: 'test' stamp: 'sgs 6/16/2021 23:53:59' prior: 50906176!
test06

	|aCart aCashier salesBook  debitCreditCard total debitAmout aCard |
	
	aCart _ testObjects createCart.
	aCart add: 4 of: testObjects  itemSellByTheStore .

	
	salesBook _  OrderedCollection new.
	aCard _ testObjects aValidCreditCard .
	MerchantProcessorSimulator := [ :anAmount :aCreditCard | 
		debitAmout := anAmount.
		debitCreditCard := aCreditCard ].
	
	aCashier _ Cashier initializeWith:  self.
	total := aCashier 
			checkOut: aCart 
			with:aCard
			on: testObjects today 
			regiteringOn: salesBook.
		
					
	self assert: debitAmout equals: total.
	self assert: debitCreditCard equals: aCard
	
	
	
	! !

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:54:02'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:54:13'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:54:13'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:54:14'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CashierTest #test01CheakOutWithEmptyCart stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CashierTest #test02CheakOutWithOneItemInTheCart stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CashierTest #test03CheakOutWithManyItemsInTheCart stamp: 'sgs 6/16/2021 23:57:13'!
PASSED!

!testRun: #CashierTest #test04CanNotCheckoutWithAnExpiredCreditCart stamp: 'sgs 6/16/2021 23:57:14'!
PASSED!

!testRun: #CashierTest #test05CheckoutRegistersASales stamp: 'sgs 6/16/2021 23:57:14'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'sgs 6/16/2021 23:57:14'!
PASSED!

!testRun: #CashierTest #test07 stamp: 'sgs 6/16/2021 23:57:14'!
PASSED!

----SNAPSHOT----(16 June 2021 23:57:19) CuisUniversity-4532.image priorSource: 18324002!