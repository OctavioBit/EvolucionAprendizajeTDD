----STARTUP---- (7 June 2021 20:17:38) as /Users/edgardo.mosqueira/Desktop/ISW/CuisUniversity/CuisUniversity-4532.image!


Object subclass: #NameOfSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #NameOfSubclass category: 'TusLibros' stamp: 'ERMC 6/7/2021 20:18:17'!
Object subclass: #NameOfSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #XXXTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #XXXTests category: 'TusLibros' stamp: 'ERMC 6/7/2021 20:18:36'!
Object subclass: #XXXTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #NameOfSubclass stamp: 'ERMC 6/7/2021 20:18:39'!
Object subclass: #NameOfSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XXXTests methodsFor: 'nil' stamp: 'ERMC 6/7/2021 20:29:28'!
test01CreateAnEmptyCart! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/7/2021 20:30:21'!
test02CreateAValidCartAndAddBooks! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/7/2021 20:30:48'!
test03CanAskForABookToACart! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/7/2021 20:32:40'!
test01CreateAnEmptyCartWithAnIDClient! !

!methodRemoval: XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/7/2021 20:32:43'!
test01CreateAnEmptyCart!

----QUIT----(7 June 2021 22:05:05) CuisUniversity-4532.image priorSource: 18215575!

----STARTUP---- (8 June 2021 18:33:48) as /Users/edgardo.mosqueira/Desktop/ISW/CuisUniversity/CuisUniversity-4532.image!

!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:37:51'!
test01CreateAnEmptyCart! !

!methodRemoval: XXXTests #test01CreateAnEmptyCartWithAnIDClient stamp: 'ERMC 6/8/2021 18:37:51'!
test01CreateAnEmptyCartWithAnIDClient!

!classDefinition: #Cart category: 'TusLibros' stamp: 'ERMC 6/8/2021 18:40:04'!
Object subclass: #Cart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:39:59' prior: 50900947!
test01CreateAnEmptyCart
	
	| cart |
	cart _ Cart new.
	self assert: cart isEmpty.! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:40:07' prior: 50900962!
test01CreateAnEmptyCart
	
	| cart |
	cart _ Cart new.
	
	self assert: cart isEmpty.! !

TestCase subclass: #XXXTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #XXXTests category: 'TusLibros' stamp: 'ERMC 6/8/2021 18:40:19'!
TestCase subclass: #XXXTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 18:40:31'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:40:55'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:41:02' prior: 50900987!
isEmpty
	
	^true.! !

!testRun: #XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 18:41:04'!
PASSED!

!testRun: #XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 18:41:04'!
PASSED!

!testRun: #XXXTests #test02CreateAValidCartAndAddBooks stamp: 'ERMC 6/8/2021 18:41:04'!
PASSED!

!testRun: #XXXTests #test03CanAskForABookToACart stamp: 'ERMC 6/8/2021 18:41:04'!
PASSED!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:41:31'!
test02CreateACartAnAddABook! !

!methodRemoval: XXXTests #test02CreateAValidCartAndAddBooks stamp: 'ERMC 6/8/2021 18:41:31'!
test02CreateAValidCartAndAddBooks!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:45:01' prior: 50901006!
test02CreateACartAnAddABook

	| aBook cart |
	cart _ Cart new.
	aBook _ 'The Lord Of The Rings'.
	cart add: aBook.
	
	self assert: (cart hasABook: aBook)! !

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 18:45:03'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:45:07'!
add: aString 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'ERMC 6/8/2021 18:45:33'!
Object subclass: #Cart
	instanceVariableNames: 'contents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:45:32' prior: 50901024!
add: aBook

	contents add: aBook 
	! !

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 18:45:34'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:46:09' overrides: 16896425!
initialize
	
	contents _ OrderedCollection new.
	! !

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 18:46:14'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:46:17'!
hasABook: aString 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:46:40' prior: 50901049!
hasABook: aBook
	
	contents includes: aBook 
		
	! !

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 18:46:41'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:46:55' prior: 50901054!
hasABook: aBook
	
	^contents includes: aBook 
		
	! !

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 18:46:55'!
PASSED!

!testRun: #XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 18:46:55'!
PASSED!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 18:46:55'!
PASSED!

!testRun: #XXXTests #test03CanAskForABookToACart stamp: 'ERMC 6/8/2021 18:46:55'!
PASSED!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:47:15'!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	! !

!methodRemoval: XXXTests #test03CanAskForABookToACart stamp: 'ERMC 6/8/2021 18:47:24'!
test03CanAskForABookToACart!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:49:56' prior: 50901078!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	cart _ Cart new.
	catalog _ self createCatalog. 
	lordOfTheRing _ 'Revolution'.
	cart add: aBook.
	
	self assert: (cart hasABook: aBook)! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:50:07' prior: 50901087!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	cart _ Cart new.
	catalog _ self createCatalog. 
	lordOfTheRing _ 'Revolution'.
	cart add: lordOfTheRing .
	
	self assert: (cart hasABook: aBook)! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:50:14' prior: 50901097!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	cart _ Cart new.
	catalog _ self createCatalog. 
	lordOfTheRing _ 'Revolution'.
	cart add: lordOfTheRing .
	
	self assert: (cart hasABook: lordOfTheRing)! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:50:36' prior: 50901108!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	cart _ Cart new.
	catalog _ self createCatalog. 
	aBook _ 'Revolution'.
	lordOfTheRing _ 'Revolution'.
	cart add: lordOfTheRing .
	
	self assert: (cart hasABook: lordOfTheRing)! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:56:15' prior: 50901119!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	cart _ Cart new.
	catalog _ self createCatalog. 
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing.
	
	
	self should: [cart add: aBook ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError equals: Cart class canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart hasABook: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:57:52' prior: 50901131!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	cart _ Cart new.
	catalog _ self createCatalog. 
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing.
	
	
	self should: [cart add: aBook ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart class canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart hasABook: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:59:06' prior: 50901151!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	catalog _ self createCatalog. 
	cart _ Cart with: catalog.
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing.
	
	
	self should: [cart add: aBook ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart class canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart hasABook: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 18:59:09'!
ERROR!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 18:59:15'!
createCatalog
	self shouldBeImplemented.! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:00:01' prior: 50901194!
createCatalog
	
	| catalog |
	catalog _ OrderedCollection new.
	
	catalog add: 'The Lord Of The Rings'.! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:00:09' prior: 50901199!
createCatalog
	
	| catalog |
	catalog _ OrderedCollection new.
	
	catalog add: 'The Lord Of The Rings'.
	
	^catalog ! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:00:10'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:00:14'!
with: anOrderedCollection 
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:00:33' prior: 50901216!
with: aCatalog
	
	^self new initializeWith: aCatalog! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:00:34'!
ERROR!

!classDefinition: #Cart category: 'TusLibros' stamp: 'ERMC 6/8/2021 19:00:38'!
Object subclass: #Cart
	instanceVariableNames: 'contents catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'ERMC 6/8/2021 19:00:38'!
initializeWith: aCatalog 
	self shouldBeImplemented.
	catalog := aCatalog.! !
!Cart methodsFor: 'initialization' stamp: 'ERMC 6/8/2021 19:00:53' prior: 50901235!
initializeWith: aCatalog 

	catalog _ aCatalog.
	contents _ OrderedCollection new.! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:00:54'!
FAILURE!

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:01:24'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:02:47' prior: 50901035!
add: aBook
	
	(catalog includes: aBook) ifFalse: [^self error: self class canNotAddABookThatIsNotInTheCatalogErrorDescription].
	contents add: aBook 
	! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:02:58'!
ERROR!
!Cart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:03:03'!
canNotAddABookThatIsNotInTheCatalogErrorDescription
	self shouldBeImplemented.! !
!Cart class methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:03:24' prior: 50901265!
canNotAddABookThatIsNotInTheCatalogErrorDescription
	
	^'Can not add a book that is not in the Catalog'! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:03:25'!
ERROR!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:03:41' prior: 50901171!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	catalog _ self createCatalog. 
	cart _ Cart with: catalog.
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing.
	
	
	self should: [cart add: aBook ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart hasABook: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:03:42'!
PASSED!

!testRun: #XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 19:03:42'!
PASSED!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:03:42'!
ERROR!

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:03:42'!
PASSED!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:03:42'!
ERROR!

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:03:55'!
PASSED!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:05:13'!
ERROR!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:05:13'!
ERROR!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:06:40'!
ERROR!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:20:33' prior: 50901014!
test02CreateACartAnAddABook

	| aBook cart |
	cart _ Cart with: self createCatalog.
	aBook _ 'The Lord Of The Rings'.
	cart add: aBook.
	
	self assert: (cart hasABook: aBook)! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:20:43' prior: 50901328!
test02CreateACartAnAddABook

	| aBook cart |
	cart _ Cart with: self createCatalog.
	aBook _ 'The Lord Of The Rings'.
	
	cart add: aBook.
	
	self assert: (cart hasABook: aBook)! !

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:20:45'!
PASSED!

!testRun: #XXXTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 19:20:45'!
PASSED!

!testRun: #XXXTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 19:20:45'!
PASSED!

!testRun: #XXXTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 19:20:45'!
PASSED!
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:48:05'!
test04WhenABookIsAddedIsSavedWithQuantity
	
	| aBook cart catalog lordOfTheRing |

	cart _ Cart with: self createCatalog.
	
	aBook _ 'Harry Potter'.
	cart add: aBook withQuantity: 5.
	
	self assert: (cart cantOf: aBook) equals: 5.
	
	
	! !
!XXXTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:48:24' prior: 50901357!
test04WhenABookIsAddedIsSavedWithQuantity
	
	| aBook cart |

	cart _ Cart with: self createCatalog.
	
	aBook _ 'Harry Potter'.
	cart add: aBook withQuantity: 5.
	
	self assert: (cart cantOf: aBook) equals: 5.
	
	
	! !

!testRun: #XXXTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:48:36'!
ERROR!

!classRenamed: #XXXTests as: #CartTests stamp: 'ERMC 6/8/2021 19:48:52'!
Smalltalk renameClassNamed: #XXXTests as: #CartTests!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:48:56'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:48:56'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:49:00'!
add: aString withQuantity: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:49:22' prior: 50901042 overrides: 16896425!
initialize
	
	contents _ Dictionary new.
	! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:49:37' prior: 50901391!
add: aBook withQuantity: aSmallInteger 
	
	.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:55:39' prior: 50901402!
add: aBook withQuantity: aSmallInteger 
	
	contents add: aBook->'hello2'.! !

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:55:42'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:56:21' prior: 50901407!
add: aBook withQuantity: aBookQuantity
	
	contents add: aBook->aBookQuantity.! !

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:56:22'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:56:25'!
cantOf: aString 
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 19:58:43' prior: 50901425!
cantOf: aBook
	
	contents keyAtValue: aBook ifAbsent: [^false.]
	
	! !

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:58:45'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:59:01'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:59:01'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:59:38'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 19:59:38'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:00:36'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:00:36'!
ERROR!

!methodRemoval: Cart #initialize stamp: 'ERMC 6/8/2021 20:01:14'!
initialize
	
	contents _ Dictionary new.
	!
!Cart methodsFor: 'initialization' stamp: 'ERMC 6/8/2021 20:01:25' prior: 50901241!
initializeWith: aCatalog 

	catalog _ aCatalog.
	contents _ Dictionary new.! !

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:01:29'!
FAILURE!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:01:29'!
FAILURE!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:03:35'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:04:08' prior: 50901430!
cantOf: aBook
	
	contents at: aBook ifAbsent: [^false.]
	
	! !

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:04:10'!
FAILURE!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:05:02' prior: 50901206!
createCatalog
	
	| catalog |
	catalog _ OrderedCollection new.
	
	catalog add: 'The Lord Of The Rings' .
	catalog add: 'Harry Potter'.
	
	^catalog ! !

self value.!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:05:42'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:06:12' prior: 50901478!
cantOf: aBook
	
	^contents at: aBook ifAbsent: [^false.]
	
	! !

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:06:13'!
PASSED!

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:06:13'!
PASSED!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:06:13'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:06:13'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:06:13'!
PASSED!

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:06:18'!
PASSED!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:06:22'!
ERROR!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:06:22'!
ERROR!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:06:27'!
ERROR!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:08:06' prior: 50901337!
test02CreateACartAnAddABook

	| aBook cart |
	cart _ Cart with: self createCatalog.
	aBook _ 'The Lord Of The Rings'.
	
	cart add: aBook withQuantity: 1.
	
	self assert: (cart hasABook: aBook).
	self deny: cart isEmpty.! !

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:08:07'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:08:53' prior: 50901062!
hasABook: aBook
	
	^contents includesKey: aBook 
		
	! !

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:08:54'!
FAILURE!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:09:33' prior: 50901531!
test02CreateACartAnAddABook

	| aBook cart |
	cart _ Cart with: self createCatalog.
	aBook _ 'The Lord Of The Rings'.
	
	cart add: aBook withQuantity: 1.
	
	self assert: (cart hasABook: aBook).
	self deny: (cart isEmpty).! !

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:09:34'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:09:49' prior: 50900991!
isEmpty
	
	^ contents isEmpty ! !

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:09:55'!
PASSED!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:09:56'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:09:56'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:10:02'!
ERROR!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:10:14' prior: 50901281!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	catalog _ self createCatalog. 
	cart _ Cart with: catalog.
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing.
	
	
	self should: [cart add: aBook withQuantity: 1 ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart hasABook: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:10:15'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:10:36' prior: 50901416!
add: aBook withQuantity: aBookQuantity
	
	(catalog includesKey: aBook) ifFalse: [^self error: self class canNotAddABookThatIsNotInTheCatalogErrorDescription].
	contents add: aBook->aBookQuantity.! !

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:10:42'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:10:42'!
ERROR!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:10:59' prior: 50901582!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	catalog _ self createCatalog. 
	cart _ Cart with: catalog.
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing withQuantity: 1.
	
	
	self should: [cart add: aBook withQuantity: 1 ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart hasABook: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:11:01'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:11:09'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:11:45' prior: 50901606!
add: aBook withQuantity: aBookQuantity
	
	(catalog includesKey: aBook) ifFalse: [^self error: self class canNotAddABookThatIsNotInTheCatalogErrorDescription].
	contents add: aBook->aBookQuantity.! !

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:11:48'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:11:52'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:11:52'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:11:56'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:11:56'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:12:14'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:12:27' prior: 50901650!
add: aBook withQuantity: aBookQuantity
	
	(catalog includes: aBook) ifFalse: [^self error: self class canNotAddABookThatIsNotInTheCatalogErrorDescription].
	contents add: aBook->aBookQuantity.! !

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:12:28'!
PASSED!

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:12:33'!
ERROR!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:12:33'!
PASSED!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:12:33'!
PASSED!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:12:33'!
PASSED!

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:12:33'!
ERROR!

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:13:07'!
ERROR!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:13:26' prior: 50900968!
test01CreateAnEmptyCart
	
	| cart |
	cart _ Cart with: self createCatalog.
	
	self assert: cart isEmpty.! !

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:13:28'!
PASSED!

!testRun: #CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:13:32'!
PASSED!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:13:32'!
PASSED!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:13:32'!
PASSED!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:13:32'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:15:59'!
test05CanAskForTheContentOfTheCart
	
	| aBook cart |

	cart _ Cart with: self createCatalog.
	
	aBook _ 'Harry Potter'.
	cart add: aBook withQuantity: 1.
	
	self assert: (cart has: aBook)
	
	
	! !

!testRun: #CartTests #test05CanAskForTheContentOfTheCart stamp: 'ERMC 6/8/2021 20:16:03'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:16:21'!
has: aBook
	
	^contents includesKey: aBook 
		
	! !

!methodRemoval: Cart #hasABook: stamp: 'ERMC 6/8/2021 20:16:21'!
hasABook: aBook
	
	^contents includesKey: aBook 
		
	!

!testRun: #CartTests #test05CanAskForTheContentOfTheCart stamp: 'ERMC 6/8/2021 20:16:34'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:17:25'!
test01CreateAnEmptyCartWithCatalog
	
	| cart |
	cart _ Cart with: self createCatalog.
	
	self assert: cart isEmpty.! !

!methodRemoval: CartTests #test01CreateAnEmptyCart stamp: 'ERMC 6/8/2021 20:17:25'!
test01CreateAnEmptyCart
	
	| cart |
	cart _ Cart with: self createCatalog.
	
	self assert: cart isEmpty.!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:18:03' prior: 50901731!
test05CanAskForTheContentOfTheCart
	
	| aBook cart |

	cart _ Cart with: self createCatalog.
	
	aBook _ 'Harry Potter'.
	cart add: aBook withQuantity: 2.
	
	self assert: (cart has: aBook)
	
	
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:18:10' prior: 50901767!
test05CanAskForTheContentOfTheCart
	
	| aBook cart |

	cart _ Cart with: self createCatalog.
	
	aBook _ 'Harry Potter'.
	cart add: aBook withQuantity: 1.
	
	self assert: (cart has: aBook)
	
	
	! !

!testRun: #CartTests #test01CreateAnEmptyCartWithCatalog stamp: 'ERMC 6/8/2021 20:18:13'!
PASSED!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:18:13'!
ERROR!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:18:13'!
ERROR!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:18:13'!
PASSED!

!testRun: #CartTests #test05CanAskForTheContentOfTheCart stamp: 'ERMC 6/8/2021 20:18:13'!
PASSED!

!testRun: #CartTests #test01CreateAnEmptyCartWithCatalog stamp: 'ERMC 6/8/2021 20:18:32'!
PASSED!
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:18:42' prior: 50901552!
test02CreateACartAnAddABook

	| aBook cart |
	cart _ Cart with: self createCatalog.
	aBook _ 'The Lord Of The Rings'.
	
	cart add: aBook withQuantity: 1.
	
	self assert: (cart has: aBook).
	self deny: (cart isEmpty).! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:18:50' prior: 50901622!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	catalog _ self createCatalog. 
	cart _ Cart with: catalog.
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing withQuantity: 1.
	
	
	self should: [cart add: aBook withQuantity: 1 ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart has: lordOfTheRing).
						self deny: (cart hasABook: aBook).]
	
	! !
!CartTests methodsFor: 'as yet unclassified' stamp: 'ERMC 6/8/2021 20:18:53' prior: 50901815!
test03CanNotAddABookThatIsNotOnTheCatalog
	
	| aBook cart catalog lordOfTheRing |
	
	catalog _ self createCatalog. 
	cart _ Cart with: catalog.
	
	aBook _ 'Revolution'.
	lordOfTheRing _ 'The Lord Of The Rings'.
	cart add: lordOfTheRing withQuantity: 1.
	
	
	self should: [cart add: aBook withQuantity: 1 ]
		 raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | self assert: anError messageText equals: Cart canNotAddABookThatIsNotInTheCatalogErrorDescription.
						self assert: (cart has: lordOfTheRing).
						self deny: (cart has: aBook).]
	
	! !

!testRun: #CartTests #test01CreateAnEmptyCartWithCatalog stamp: 'ERMC 6/8/2021 20:18:59'!
PASSED!

!testRun: #CartTests #test02CreateACartAnAddABook stamp: 'ERMC 6/8/2021 20:18:59'!
PASSED!

!testRun: #CartTests #test03CanNotAddABookThatIsNotOnTheCatalog stamp: 'ERMC 6/8/2021 20:18:59'!
PASSED!

!testRun: #CartTests #test04WhenABookIsAddedIsSavedWithQuantity stamp: 'ERMC 6/8/2021 20:18:59'!
PASSED!

!testRun: #CartTests #test05CanAskForTheContentOfTheCart stamp: 'ERMC 6/8/2021 20:18:59'!
PASSED!