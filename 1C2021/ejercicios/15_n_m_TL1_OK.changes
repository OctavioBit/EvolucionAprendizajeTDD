
----STARTUP---- (9 June 2021 18:04:22) as /Users/urichami/Facu/ing1/inge1-1c-2021/Cuis/CuisUniversity-4532.image!


Object subclass: #ShoppingCart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'UC 6/9/2021 18:05:18'!
Object subclass: #ShoppingCart
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #ShoppingCartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #ShoppingCartTest category: 'TusLibros' stamp: 'UC 6/9/2021 18:05:39'!
TestCase subclass: #ShoppingCartTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCartTest methodsFor: 'nil' stamp: 'UC 6/9/2021 18:06:35'!
test01anEmptyCartIsEmpty
	self assert: ShoppingCart new isEmpty. ! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:06:40'!
ERROR!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:06:40'!
ERROR!
!ShoppingCart methodsFor: 'testing' stamp: 'UC 6/9/2021 18:07:07'!
isEmpty
	self shouldBeImplemented.! !
!ShoppingCart methodsFor: 'testing' stamp: 'UC 6/9/2021 18:07:12' prior: 50868548!
isEmpty
	^true! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:07:13'!
PASSED!

!classDefinition: #Book category: 'TusLibros' stamp: 'UC 6/9/2021 18:10:09'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:10:18'!
test02aCartWithOneBookIsNotEmpty
	| cart |
	cart := ShoppingCart new.
	cart addBook: (Book withISBN: '978-3-16-148410-0'). 
	self assert: cart isEmpty not. ! !

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:10:26'!
ERROR!
!Book class methodsFor: 'instance creation' stamp: 'UC 6/9/2021 18:10:32'!
withISBN: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithISBN: aString ! !
!Book class methodsFor: 'instance creation' stamp: 'UC 6/9/2021 18:10:47' prior: 50868576!
withISBN: anISBNCode 
	^self new initializeWithISBN: anISBNCode ! !

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:10:53'!
ERROR!

!classDefinition: #Book category: 'TusLibros' stamp: 'UC 6/9/2021 18:11:11'!
Object subclass: #Book
	instanceVariableNames: 'iSBNCode'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Book methodsFor: 'initialization' stamp: 'UC 6/9/2021 18:11:11'!
initializeWithISBN: anISBNCode 
	self shouldBeImplemented.
	iSBNCode := anISBNCode.! !

!classDefinition: #Book category: 'TusLibros' stamp: 'UC 6/9/2021 18:11:37'!
Object subclass: #Book
	instanceVariableNames: 'iSBNCode isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Book methodsFor: 'initialization' stamp: 'UC 6/9/2021 18:11:36' prior: 50868598!
initializeWithISBN: anISBNCode 
	isbn = anISBNCode.! !

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:11:39'!
ERROR!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:11:59'!
addBook: aBook 
	self shouldBeImplemented.! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'UC 6/9/2021 18:12:25'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:12:24' prior: 50868618!
addBook: aBook 
	books add: aBook.! !

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:12:27'!
ERROR!
!ShoppingCart methodsFor: 'nil' stamp: 'UC 6/9/2021 18:12:49' overrides: 16896425!
initialize
	books := OrderedCollection new.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:13:22' prior: 50868565!
test02aCartWithOneBookIsNotEmpty
	| cart |
	cart := ShoppingCart new.
	cart add: 1 of: (Book withISBN: '978-3-16-148410-0'). 
	self assert: cart isEmpty not. ! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:14:32'!
add: anAmountOfBooks of: aBook 
	books add: aBook.! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:14:38'!
PASSED!

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:14:38'!
FAILURE!

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:14:38'!
FAILURE!
!ShoppingCart methodsFor: 'testing' stamp: 'UC 6/9/2021 18:15:04' prior: 50868552!
isEmpty
	^books isEmpty! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:15:41'!
PASSED!

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:15:41'!
PASSED!

!methodRemoval: ShoppingCart #addBook: stamp: 'UC 6/9/2021 18:23:15'!
addBook: aBook 
	books add: aBook.!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:31:32'!
test03ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert cart list includes: book1.
	self assert cart list includes: book2.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:31:41' prior: 50868677!
test03ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:31:43'!
ERROR!
!ShoppingCart methodsFor: 'accessing' stamp: 'UC 6/9/2021 18:31:51'!
list
	self shouldBeImplemented.! !
!ShoppingCart methodsFor: 'accessing' stamp: 'UC 6/9/2021 18:31:55' prior: 50868709!
list
	^books! !

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:32:00'!
FAILURE!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:32:24' prior: 50868650!
add: anAmountOfBooks of: aBook 
	anAmountOfBooks timesRepeat: [books add: aBook].! !

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:32:26'!
PASSED!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:32:26'!
PASSED!

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:32:26'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:32:26'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:32:29'!
PASSED!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:32:34'!
PASSED!

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:32:34'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:32:34'!
PASSED!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:53:14'!
test04
	| cart book1 |
	book1 := Book withISBN: '978-3-16-148410-0'.
	cart := ShoppingCart withCatalogue: Set new.
	
	self should:  [cart add: 1 of: book1]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogueError equals: error messageText  ].
	! !

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:53:22'!
ERROR!

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:53:22'!
ERROR!
!ShoppingCart class methodsFor: 'instance creation' stamp: 'UC 6/9/2021 18:53:30'!
withCatalogue: aSet 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithCatalogue: aSet ! !

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:54:03'!
ERROR!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:56:18' prior: 50868751!
test04
	| cart book1 |
	book1 := Book withISBN: '978-3-16-148410-0'.
	cart := ShoppingCart new.
	
	self should:  [cart add: 1 of: book1]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogueError equals: error messageText  ].
	! !

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:56:55'!
FAILURE!

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:56:55'!
FAILURE!

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:57:03'!
PASSED!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:57:20' prior: 50868720!
add: anAmountOfBooks of: aBook 
	self error: self class.
	anAmountOfBooks timesRepeat: [books add: aBook].! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:57:31' prior: 50868798!
add: anAmountOfBooks of: aBook 
	self error: self class bookDoesNotBelongToCatalogueError.
	anAmountOfBooks timesRepeat: [books add: aBook].! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 18:57:34'!
PASSED!

!testRun: #ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 18:57:34'!
ERROR!

!testRun: #ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 18:57:34'!
ERROR!

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:57:34'!
ERROR!

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:57:41'!
ERROR!
!ShoppingCart class methodsFor: 'error descriptions' stamp: 'UC 6/9/2021 18:57:55'!
bookDoesNotBelongToCatalogueError
	self shouldBeImplemented.! !
!ShoppingCart class methodsFor: 'error descriptions' stamp: 'UC 6/9/2021 18:58:12' prior: 50868827!
bookDoesNotBelongToCatalogueError
	^'Book does not belong to catalogue'! !

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:58:14'!
FAILURE!

!testRun: #ShoppingCartTest #test04 stamp: 'UC 6/9/2021 18:58:17'!
PASSED!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:58:54' prior: 50868642!
test02aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. ! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'UC 6/9/2021 18:59:31'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'books catalogue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:59:29'!
addToCatalogue: aBook
	catalogue add: aBook.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 18:59:39' prior: 50868637 overrides: 16896425!
initialize
	books := OrderedCollection new.
	catalogue := Set new.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:00:53'!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart book1 |
	book1 := Book withISBN: '978-3-16-148410-0'.
	cart := ShoppingCart new.
	
	self should:  [cart add: 1 of: book1]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogueError equals: error messageText  ].
	! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:00:58'!
test03aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. ! !

!methodRemoval: ShoppingCartTest #test02aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:00:58'!
test02aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:01:05'!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !

!methodRemoval: ShoppingCartTest #test03ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:01:05'!
test03ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.!

!methodRemoval: ShoppingCartTest #test04 stamp: 'UC 6/9/2021 19:01:09'!
test04
	| cart book1 |
	book1 := Book withISBN: '978-3-16-148410-0'.
	cart := ShoppingCart new.
	
	self should:  [cart add: 1 of: book1]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogueError equals: error messageText  ].
	!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:01:17'!
xtest03aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. ! !

!methodRemoval: ShoppingCartTest #test03aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:01:17'!
test03aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:01:20'!
xtest04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !

!methodRemoval: ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:01:20'!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:01:24'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:01:24'!
PASSED!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:01:29'!
test03aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. ! !

!methodRemoval: ShoppingCartTest #xtest03aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:01:29'!
xtest03aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:01:31'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:01:31'!
PASSED!

!testRun: #ShoppingCartTest #test03aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:01:31'!
ERROR!

!testRun: #ShoppingCartTest #test03aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:01:31'!
ERROR!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:02:08' prior: 50868805!
add: anAmountOfBooks of: aBook 
	catalogue isEmpty ifTrue: [self error: self class bookDoesNotBelongToCatalogueError].
	anAmountOfBooks timesRepeat: [books add: aBook].! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:02:20'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:02:20'!
PASSED!

!testRun: #ShoppingCartTest #test03aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:02:20'!
PASSED!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:02:32'!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !

!methodRemoval: ShoppingCartTest #xtest04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:02:32'!
xtest04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:03:41' prior: 50869049!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart addToCatalogue: book1.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:04:13'!
test03ACartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. ! !

!methodRemoval: ShoppingCartTest #test03aCartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:04:15'!
test03aCartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalogue: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:05:24' prior: 50868872!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart aCataloguedBook aNotCataloguedBook |
	aCataloguedBook := Book withISBN: '978-3-16-148410-0'.
	aNotCataloguedBook :=  Book withISBN: '978-3-16-148410-1'.
	cart := ShoppingCart new.
	cart addToCatalogue: aCataloguedBook.
	
	self should:  [cart add: 1 of: aNotCataloguedBook]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogueError equals: error messageText  ].
	! !

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:05:32'!
FAILURE!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:05:32'!
FAILURE!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:05:54' prior: 50869031!
add: anAmountOfBooks of: aBook 
	(catalogue includes: aBook) ifTrue: [self error: self class bookDoesNotBelongToCatalogueError].
	anAmountOfBooks timesRepeat: [books add: aBook].! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:05:57'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:05:57'!
FAILURE!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:05:57'!
ERROR!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:05:57'!
ERROR!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:06:04'!
ERROR!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:06:14'!
PASSED!
!Book methodsFor: 'nil' stamp: 'UC 6/9/2021 19:06:56' overrides: 16881029!
= anotherBook
	^isbn = anotherBook isbn.! !
!Book methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:07:06'!
isbn
	^isbn! !

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:07:46'!
FAILURE!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:07:46'!
FAILURE!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:09:18'!
FAILURE!
!Book methodsFor: 'initialization' stamp: 'UC 6/9/2021 19:10:00' prior: 50868610!
initializeWithISBN: anISBNCode 
	isbn := anISBNCode.! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:10:04'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:10:04'!
FAILURE!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:10:04'!
ERROR!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:10:05'!
ERROR!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:10:10'!
FAILURE!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:11:04'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:11:04'!
FAILURE!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:11:04'!
ERROR!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:11:04'!
ERROR!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:11:06'!
ERROR!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:11:09'!
FAILURE!

Object subclass: #Book
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Book category: 'TusLibros' stamp: 'UC 6/9/2021 19:12:41'!
Object subclass: #Book
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:13:14' prior: 50869139!
add: anAmountOfBooks of: aBook 
	(catalogue includes: aBook) not ifTrue: [self error: self class bookDoesNotBelongToCatalogueError].
	anAmountOfBooks timesRepeat: [books add: aBook].! !

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:13:15'!
PASSED!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:13:19'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:13:19'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:13:19'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:13:19'!
ERROR!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:13:19'!
ERROR!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:29:15' prior: 50868537!
test01anEmptyCartIsEmpty
	self assert: self createShoppingCart isEmpty. ! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:31:14'!
createShoppingCart
	| catalogue |
	catalogue := OrderedCollection with: self cataloguedItem.
	ShoppingCart withCatalogue: catalogue.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:33:08' prior: 50869274!
createShoppingCart
	| catalogue |
	catalogue := OrderedCollection with: self catalogueItem.
	ShoppingCart withCatalogue: catalogue.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:35:01' prior: 50869282!
createShoppingCart
	| catalog |
	catalog := OrderedCollection with: self catalogItem.
	ShoppingCart withCatalogue: catalog.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:35:21'!
catalogItem.
	^''! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:35:34' prior: 50869297!
catalogItem.
	^'978-3-16-148410-0'! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:36:17'!
notInCatalogItem.
	^'000-0-00-000000-0'! !
!ShoppingCart class methodsFor: 'instance creation' stamp: 'UC 6/9/2021 19:36:37'!
withCatalog: aSet 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithCatalogue: aSet ! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:36:37' prior: 50869290!
createShoppingCart
	| catalog |
	catalog := OrderedCollection with: self catalogItem.
	ShoppingCart withCatalog: catalog.! !

!methodRemoval: ShoppingCart class #withCatalogue: stamp: 'UC 6/9/2021 19:36:37'!
withCatalogue: aSet 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithCatalogue: aSet !
!ShoppingCart class methodsFor: 'instance creation' stamp: 'UC 6/9/2021 19:36:58' prior: 50869309!
withCatalog: aCatalog 
	^self new initializeWithCatalog: aCatalog ! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:13'!
initializeWithCatalog: aCatalog
	books := OrderedCollection new.
	catalogue := aCatalog.! !

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'UC 6/9/2021 19:37:19'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'items catalogue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:19' prior: 50868867 overrides: 16896425!
initialize
	items := OrderedCollection new.
	catalogue := Set new.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:19' prior: 50869338!
initializeWithCatalog: aCatalog
	items := OrderedCollection new.
	catalogue := aCatalog.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:19' prior: 50868664!
isEmpty
	^items isEmpty! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:19' prior: 50868713!
list
	^items! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:19' prior: 50869239!
add: anAmountOfBooks of: aBook 
	(catalogue includes: aBook) not ifTrue: [self error: self class bookDoesNotBelongToCatalogueError].
	anAmountOfBooks timesRepeat: [items add: aBook].! !

!methodRemoval: ShoppingCart #initialize stamp: 'UC 6/9/2021 19:37:27'!
initialize
	items := OrderedCollection new.
	catalogue := Set new.!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:37'!
addToCatalog: aBook
	catalogue add: aBook.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:37' prior: 50869078!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart new.
	book1 := Book withISBN: '978-3-16-148410-0'.
	book2 := Book withISBN: '978-3-16-148410-1'.
	cart addToCatalog: book1.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:37' prior: 50869113!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart aCataloguedBook aNotCataloguedBook |
	aCataloguedBook := Book withISBN: '978-3-16-148410-0'.
	aNotCataloguedBook :=  Book withISBN: '978-3-16-148410-1'.
	cart := ShoppingCart new.
	cart addToCatalog: aCataloguedBook.
	
	self should:  [cart add: 1 of: aNotCataloguedBook]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogueError equals: error messageText  ].
	! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:37' prior: 50869093!
test03ACartWithOneBookIsNotEmpty
	| cart book1 |
	cart := ShoppingCart new.
	book1 := (Book withISBN: '978-3-16-148410-0').
	cart addToCatalog: book1.
	cart add: 1 of: book1. 
	self assert: cart isEmpty not. ! !

!methodRemoval: ShoppingCart #addToCatalogue: stamp: 'UC 6/9/2021 19:37:37'!
addToCatalogue: aBook
	catalogue add: aBook.!

!classDefinition: #ShoppingCart category: 'TusLibros' stamp: 'UC 6/9/2021 19:37:42'!
Object subclass: #ShoppingCart
	instanceVariableNames: 'items catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:42' prior: 50869358!
initializeWithCatalog: aCatalog
	items := OrderedCollection new.
	catalog := aCatalog.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:42' prior: 50869385!
addToCatalog: aBook
	catalog add: aBook.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:42' prior: 50869372!
add: anAmountOfBooks of: aBook 
	(catalog includes: aBook) not ifTrue: [self error: self class bookDoesNotBelongToCatalogueError].
	anAmountOfBooks timesRepeat: [items add: aBook].! !
!ShoppingCart class methodsFor: 'error descriptions' stamp: 'UC 6/9/2021 19:37:52'!
bookDoesNotBelongToCatalogError
	^'Book does not belong to catalogue'! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:52' prior: 50869405!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart aCataloguedBook aNotCataloguedBook |
	aCataloguedBook := Book withISBN: '978-3-16-148410-0'.
	aNotCataloguedBook :=  Book withISBN: '978-3-16-148410-1'.
	cart := ShoppingCart new.
	cart addToCatalog: aCataloguedBook.
	
	self should:  [cart add: 1 of: aNotCataloguedBook]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogError equals: error messageText  ].
	! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:37:52' prior: 50869455!
add: anAmountOfBooks of: aBook 
	(catalog includes: aBook) not ifTrue: [self error: self class bookDoesNotBelongToCatalogError].
	anAmountOfBooks timesRepeat: [items add: aBook].! !

!methodRemoval: ShoppingCart class #bookDoesNotBelongToCatalogueError stamp: 'UC 6/9/2021 19:37:52'!
bookDoesNotBelongToCatalogueError
	^'Book does not belong to catalogue'!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:39:28' prior: 50869470!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: 1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart bookDoesNotBelongToCatalogError equals: error messageText  ].
	! !
!ShoppingCart class methodsFor: 'error descriptions' stamp: 'UC 6/9/2021 19:39:51' prior: 50869464!
bookDoesNotBelongToCatalogError
	^'Item does not belong to catalogue'! !
!ShoppingCart class methodsFor: 'error descriptions' stamp: 'UC 6/9/2021 19:39:57'!
itemDoesNotBelongToCatalogError
	^'Item does not belong to catalogue'! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:39:57' prior: 50869488!
add: anAmountOfBooks of: aBook 
	(catalog includes: aBook) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	anAmountOfBooks timesRepeat: [items add: aBook].! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:39:57' prior: 50869502!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: 1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart itemDoesNotBelongToCatalogError equals: error messageText  ].
	! !

!methodRemoval: ShoppingCart class #bookDoesNotBelongToCatalogError stamp: 'UC 6/9/2021 19:39:57'!
bookDoesNotBelongToCatalogError
	^'Item does not belong to catalogue'!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:40:09' prior: 50869526!
add: anAmountOfItems of: aBook 
	(catalog includes: aBook) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	anAmountOfItems timesRepeat: [items add: aBook].! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:40:14' prior: 50869553!
add: anAmountOfItems of: anItem 
	(catalog includes: anItem) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	anAmountOfItems timesRepeat: [items add: anItem].! !

!methodRemoval: ShoppingCart #addToCatalog: stamp: 'UC 6/9/2021 19:40:29'!
addToCatalog: aBook
	catalog add: aBook.!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:41:09' prior: 50869423!
test03ACartWithOneBookIsNotEmpty
	| cart |
	cart := self createShoppingCart.
	cart add: 1 of: self catalogItem. 
	self assert: cart isEmpty not. ! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:43:55' prior: 50869390!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	cart := ShoppingCart withCatalogue: (OrderedCollection new).
	
	cart addToCatalog: book1.
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:46:46' prior: 50869583!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	book1 := '1'.
	book2 := '2'.
	cart := ShoppingCart withCatalog: (OrderedCollection with: book1 with: book2).
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart list size.
	self assert: cart list includes: book1.
	self assert: cart list includes: book2.! !

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:46:49'!
PASSED!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:46:52'!
ERROR!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:46:52'!
FAILURE!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:46:52'!
ERROR!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:46:52'!
PASSED!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:47:00'!
ERROR!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:47:27'!
ERROR!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:47:27'!
ERROR!
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:47:47' prior: 50869318!
createShoppingCart
	| catalog |
	catalog := OrderedCollection with: self catalogItem.
	^ShoppingCart withCatalog: catalog.
	! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:47:49'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:47:49'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:47:49'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:47:49'!
PASSED!

!classRemoval: #Book stamp: 'UC 6/9/2021 19:48:05'!
Object subclass: #Book
	instanceVariableNames: 'isbn'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!ShoppingCart methodsFor: 'accessing' stamp: 'UC 6/9/2021 19:48:38'!
items
	^items! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:48:38' prior: 50869596!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	book1 := '1'.
	book2 := '2'.
	cart := ShoppingCart withCatalog: (OrderedCollection with: book1 with: book2).
	cart add: 3 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart items size.
	self assert: cart items includes: book1.
	self assert: cart items includes: book2.! !

!methodRemoval: ShoppingCart #list stamp: 'UC 6/9/2021 19:48:38'!
list
	^items!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:54:57' prior: 50869666!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	book1 := '1'.
	book2 := '2'.
	cart := ShoppingCart withCatalog: (OrderedCollection with: book1 with: book2).
	cart add: 1 of: book1.
	cart add: 2 of: book2. 
	self assert: 5 equals: cart items size.
	self assert: book1 equals: (cart items at: 1).
	self assert: book2 equals: (cart items at: 2).
	self assert: book2 equals: (cart items at: 3).! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:55:00'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:55:00'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:55:00'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:55:00'!
FAILURE!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:55:00'!
FAILURE!

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:55:09'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:55:09'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:55:09'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:55:09'!
FAILURE!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:55:09'!
FAILURE!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:55:13' prior: 50869683!
test04ACartWithManyBooksListsAllOfThem
	| cart book1 book2 |
	book1 := '1'.
	book2 := '2'.
	cart := ShoppingCart withCatalog: (OrderedCollection with: book1 with: book2).
	cart add: 1 of: book1.
	cart add: 2 of: book2. 
	self assert: 3 equals: cart items size.
	self assert: book1 equals: (cart items at: 1).
	self assert: book2 equals: (cart items at: 2).
	self assert: book2 equals: (cart items at: 3).! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 19:55:15'!
PASSED!

!testRun: #ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:55:15'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 19:55:15'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 19:55:15'!
PASSED!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:57:11'!
test02AddANotPositiveAmountOfItemsTimesRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: -1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].
	self should:  [cart add: 0 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].	! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:57:23'!
test05AddANotPositiveAmountOfItemsTimesRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: -1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].
	self should:  [cart add: 0 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].	! !

!methodRemoval: ShoppingCartTest #test02AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 19:57:23'!
test02AddANotPositiveAmountOfItemsTimesRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: -1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].
	self should:  [cart add: 0 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].	!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 19:57:31'!
test02AddAnItemThatDoesNotBelongToCatalogueRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: 1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart itemDoesNotBelongToCatalogError equals: error messageText  ].
	! !

!methodRemoval: ShoppingCartTest #test02AddABookThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 19:57:31'!
test02AddABookThatDoesNotBelongToCatalogueRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: 1 of: self notInCatalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart itemDoesNotBelongToCatalogError equals: error messageText  ].
	!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 19:57:42'!
ERROR!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 19:57:42'!
ERROR!
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:58:04'!
cannotAddANotPositiveAmountOfItemsError
	self shouldBeImplemented.! !
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 19:58:50' prior: 50869849!
cannotAddANotPositiveAmountOfItemsError
	^'The amount of items that is added must be >= 1'.! !

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 19:59:11'!
FAILURE!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 19:59:30'!
FAILURE!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:00:37' prior: 50869562!
add: anAmountOfItems of: anItem 
	(catalog includes: anItem) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	(anAmountOfItems < 1) ifTrue: [self error: self class cannotAddANotPositiveAmountOfItemsError].
	anAmountOfItems timesRepeat: [items add: anItem].! !

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 20:00:39'!
FAILURE!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 20:00:41'!
FAILURE!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 20:01:14'!
FAILURE!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:01:51' prior: 50869779!
test05AddANotPositiveAmountOfItemsTimesRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: -1 of: self catalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].
	self should:  [cart add: 0 of: self catalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ].	! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 20:01:56'!
PASSED!

!testRun: #ShoppingCartTest #test02AddAnItemThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 20:01:56'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 20:01:56'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 20:01:56'!
PASSED!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 20:01:56'!
PASSED!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:03:20'!
test06
	| cart |
	cart := self createShoppingCart.
	cart add: 1.5 of: self catalogItem.
	"self should:  [ ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ]"	! !

!testRun: #ShoppingCartTest #test06 stamp: 'UC 6/9/2021 20:03:23'!
ERROR!

!testRun: #ShoppingCartTest #test06 stamp: 'UC 6/9/2021 20:03:23'!
ERROR!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:04:59' prior: 50869927!
test06
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ]	! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:05:31'!
test06AddANotIntegerAmountOfItemsRaisesError
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotIntegerAmountOfItemsError equals: error messageText  ]	! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:05:43'!
test07AddANotIntegerAmountOfItemsRaisesError
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotIntegerAmountOfItemsError equals: error messageText  ]	! !

!methodRemoval: ShoppingCartTest #test06AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:05:43'!
test06AddANotIntegerAmountOfItemsRaisesError
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotIntegerAmountOfItemsError equals: error messageText  ]	!

!methodRemoval: ShoppingCartTest #test06 stamp: 'UC 6/9/2021 20:05:48'!
test06
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotPositiveAmountOfItemsError equals: error messageText  ]	!
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:05:52'!
test06AddANotIntegerAmountOfItemsRaisesError
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotIntegerAmountOfItemsError equals: error messageText  ]	! !

!methodRemoval: ShoppingCartTest #test07AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:05:52'!
test07AddANotIntegerAmountOfItemsRaisesError
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart cannotAddANotIntegerAmountOfItemsError equals: error messageText  ]	!

!testRun: #ShoppingCartTest #test06AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:05:57'!
ERROR!

!testRun: #ShoppingCartTest #test06AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:05:57'!
ERROR!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:07:41' prior: 50869869!
add: anAmountOfItems of: anItem 
	(catalog includes: anItem) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	(anAmountOfItems < 1 and: anAmountOfItems isInteger) ifTrue: [self error: self class cannotAddANotPositiveAmountOfItemsError].
	anAmountOfItems timesRepeat: [items add: anItem].! !
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:07:59'!
invalidAmountOfItemsError
	^'The amount of items that is added must be >= 1'.! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:07:59' prior: 50870031!
add: anAmountOfItems of: anItem 
	(catalog includes: anItem) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	(anAmountOfItems < 1 and: anAmountOfItems isInteger) ifTrue: [self error: self class invalidAmountOfItemsError].
	anAmountOfItems timesRepeat: [items add: anItem].! !
!ShoppingCartTest methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:07:59' prior: 50869892!
test05AddANotPositiveAmountOfItemsTimesRaisesError
	| cart |
	cart := self createShoppingCart.
	
	self should:  [cart add: -1 of: self catalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart invalidAmountOfItemsError equals: error messageText  ].
	self should:  [cart add: 0 of: self catalogItem ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart invalidAmountOfItemsError equals: error messageText  ].	! !

!methodRemoval: ShoppingCart class #cannotAddANotPositiveAmountOfItemsError stamp: 'UC 6/9/2021 20:07:59'!
cannotAddANotPositiveAmountOfItemsError
	^'The amount of items that is added must be >= 1'.!
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:08:57' prior: 50870044!
invalidAmountOfItemsError
	^'The amount of items that is added must be an integer >= 1'.! !
!ShoppingCart class methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:09:09' prior: 50870087!
invalidAmountOfItemsError
	^'The amount of items that is added must be an integer greater than 0'.! !
!ShoppingCartTest methodsFor: 'tests' stamp: 'UC 6/9/2021 20:09:31' prior: 50869999!
test06AddANotIntegerAmountOfItemsRaisesError
	| cart |
	cart := self createShoppingCart.
	self should:  [ cart add: 1.5 of: self catalogItem. ]
		raise: Error
		withExceptionDo: [:error | self assert: ShoppingCart invalidAmountOfItemsError equals: error messageText  ]	! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 20:09:34'!
PASSED!

!testRun: #ShoppingCartTest #test02AddAnItemThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 20:09:34'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 20:09:34'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 20:09:34'!
PASSED!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 20:09:34'!
PASSED!

!testRun: #ShoppingCartTest #test06AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:09:34'!
FAILURE!

!testRun: #ShoppingCartTest #test06AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:09:34'!
FAILURE!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:09:56' prior: 50870050!
add: anAmountOfItems of: anItem 
	(catalog includes: anItem) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError].
	(anAmountOfItems < 1 or: anAmountOfItems isInteger not) ifTrue: [self error: self class invalidAmountOfItemsError].
	anAmountOfItems timesRepeat: [items add: anItem].! !

!testRun: #ShoppingCartTest #test01anEmptyCartIsEmpty stamp: 'UC 6/9/2021 20:09:59'!
PASSED!

!testRun: #ShoppingCartTest #test02AddAnItemThatDoesNotBelongToCatalogueRaisesError stamp: 'UC 6/9/2021 20:09:59'!
PASSED!

!testRun: #ShoppingCartTest #test03ACartWithOneBookIsNotEmpty stamp: 'UC 6/9/2021 20:09:59'!
PASSED!

!testRun: #ShoppingCartTest #test04ACartWithManyBooksListsAllOfThem stamp: 'UC 6/9/2021 20:09:59'!
PASSED!

!testRun: #ShoppingCartTest #test05AddANotPositiveAmountOfItemsTimesRaisesError stamp: 'UC 6/9/2021 20:09:59'!
PASSED!

!testRun: #ShoppingCartTest #test06AddANotIntegerAmountOfItemsRaisesError stamp: 'UC 6/9/2021 20:09:59'!
PASSED!
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:10:51'!
assertCatalogIncludes: anItem

	^ (catalog includes: anItem) not ifTrue: [self error: self class itemDoesNotBelongToCatalogError]! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:10:51' prior: 50870136!
add: anAmountOfItems of: anItem 
	self assertCatalogIncludes: anItem.
	(anAmountOfItems < 1 or: anAmountOfItems isInteger not) ifTrue: [self error: self class invalidAmountOfItemsError].
	anAmountOfItems timesRepeat: [items add: anItem].! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:12:41'!
assertAmountIsValid: anAmountOfItems

	^ (anAmountOfItems < 1 or: anAmountOfItems isInteger not) ifTrue: [self error: self class invalidAmountOfItemsError]! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:12:41' prior: 50870177!
add: anAmountOfItems of: anItem 
	self assertCatalogIncludes: anItem.
	self assertAmountIsValid: anAmountOfItems.
	anAmountOfItems timesRepeat: [items add: anItem].! !
!ShoppingCart methodsFor: 'as yet unclassified' stamp: 'UC 6/9/2021 20:13:29' prior: 50870195!
add: anAmount of: anItem 
	self assertCatalogIncludes: anItem.
	self assertAmountIsValid: anAmount.
	anAmount timesRepeat: [items add: anItem].! !